{"version":3,"sources":["../webpack/bootstrap","../node_modules/localforage/dist/localforage.js","Workers/cache.worker.js","../node_modules/webpack/buildin/global.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","e","u","require","a","f","Error","code","length","1","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","task","push","this","self","window","2","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","reject","resolve","getThen","obj","then","apply","arguments","thenable","onError","onSuccess","result","tryCatch","status","out","constructor","error","reason","all","iterable","toString","values","Array","resolved","allResolver","outValue","race","response","3","4","_typeof","iterator","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","parts","properties","Blob","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_checkBlobSupport","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","navigator","userAgent","match","matchedEdge","parseInt","_checkBlobSupportWithoutCaching","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","forages","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_binStringToArrayBuffer","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","createTransaction","retries","undefined","tx","forage","_tryReconnect","asyncStorage","_driver","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","_support","isSafari","openDatabase","test","platform","hasFetch","fetch","indexOf","IDBKeyRange","isIndexedDBValid","iterate","req","openCursor","iterationNumber","cursor","getItem","setItem","blobSupport","reader","FileReader","onloadend","base64","btoa","target","readAsBinaryString","store","removeItem","clear","count","advanced","advance","keys","dropInstance","currentConfig","config","dbPromise","deleteObjectStore","_forage2","deleteDatabase","onblocked","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","buffer","bytes","bufferToString","base64String","substring","localforageSerializer","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","executeSql","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","_setItem","retriesLeft","originalValue","serializer","sqlError","QUOTA_ERR","webSQLStorage","dbInfoPromise","description","size","item","storeNames","getAllStoreNames","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","localStorage","checkIfLocalStorageThrows","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","includes","array","searchElement","x","y","isNaN","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","localforage_js","LocalForage","driverTypeKey","instance","Constructor","_classCallCheck","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","oldDriverSetDone","currentDriverIndex","driverPromiseLoop","initDriver","supports","libraryMethodsAndProperties","createInstance","addEventListener","async","handlerKey","command","cache","loadCache","saveCache","g","Function"],"mappings":"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","file":"e5c3ed0d8cef4c0f5250.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.7.3\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback retuns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable */\nimport localforage from 'localforage';\n\nself.addEventListener('message', async ({ data }) => {\n    const { handlerKey, key, command, cache } = data;\n    switch (command) {\n        case 'load': {\n            await loadCache(handlerKey, key);\n            break;\n        }\n        case 'save': {\n            await saveCache(handlerKey, key, cache);\n            break;\n        }\n    }\n});\n\nasync function loadCache(handlerKey, key) {\n    const store = localforage.createInstance({ name: 'telegram' });\n    const cache = await store.getItem(key);\n\n    postMessage({ handlerKey, cache });\n}\n\nasync function saveCache(handlerKey, key, cache) {\n    const store = localforage.createInstance({ name: 'telegram' });\n    store.setItem(key, cache);\n\n    postMessage({ handlerKey });\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}