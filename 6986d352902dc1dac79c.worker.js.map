{"version":3,"sources":["../webpack/bootstrap","../node_modules/localforage/dist/localforage.js","Workers/cache.worker.js","../node_modules/webpack/buildin/global.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","e","u","require","f","Error","code","length","1","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","task","push","this","self","window","2","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","reject","resolve","getThen","obj","then","apply","arguments","thenable","onError","onSuccess","result","tryCatch","status","out","constructor","error","reason","all","iterable","toString","values","Array","resolved","allResolver","outValue","race","response","3","4","_typeof","iterator","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","parts","properties","Blob","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_checkBlobSupport","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","navigator","userAgent","match","matchedEdge","parseInt","_checkBlobSupportWithoutCaching","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","forages","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_binStringToArrayBuffer","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","createTransaction","retries","undefined","tx","forage","_tryReconnect","asyncStorage","_driver","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","_support","isSafari","openDatabase","test","platform","hasFetch","fetch","indexOf","IDBKeyRange","isIndexedDBValid","iterate","req","openCursor","iterationNumber","cursor","getItem","setItem","blobSupport","reader","FileReader","onloadend","base64","btoa","target","readAsBinaryString","store","removeItem","clear","count","advanced","advance","keys","dropInstance","currentConfig","config","dbPromise","deleteObjectStore","_forage2","deleteDatabase","onblocked","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","buffer","bytes","bufferToString","base64String","substring","localforageSerializer","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","executeSql","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","_setItem","retriesLeft","originalValue","serializer","sqlError","QUOTA_ERR","webSQLStorage","dbInfoPromise","description","size","item","storeNames","getAllStoreNames","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","localStorage","checkIfLocalStorageThrows","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","includes","array","searchElement","x","y","isNaN","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","localforage_js","LocalForage","driverTypeKey","instance","Constructor","_classCallCheck","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","oldDriverSetDone","currentDriverIndex","driverPromiseLoop","initDriver","supports","libraryMethodsAndProperties","createInstance","addEventListener","async","handlerKey","command","cache","loadCache","saveCache","g","Function"],"mappings":"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","file":"6986d352902dc1dac79c.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.7.3\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function (f) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n\n    g.localforage = f();\n  }\n})(function () {\n  var define, module, exports;\n  return function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = typeof require == \"function\" && require;\n          if (!u && a) return a(o, !0);\n          if (i) return i(o, !0);\n          var f = new Error(\"Cannot find module '\" + o + \"'\");\n          throw f.code = \"MODULE_NOT_FOUND\", f;\n        }\n\n        var l = n[o] = {\n          exports: {}\n        };\n        t[o][0].call(l.exports, function (e) {\n          var n = t[o][1][e];\n          return s(n ? n : e);\n        }, l, l.exports, e, t, n, r);\n      }\n\n      return n[o].exports;\n    }\n\n    var i = typeof require == \"function\" && require;\n\n    for (var o = 0; o < r.length; o++) {\n      s(r[o]);\n    }\n\n    return s;\n  }({\n    1: [function (_dereq_, module, exports) {\n      (function (global) {\n        'use strict';\n\n        var Mutation = global.MutationObserver || global.WebKitMutationObserver;\n        var scheduleDrain;\n        {\n          if (Mutation) {\n            var called = 0;\n            var observer = new Mutation(nextTick);\n            var element = global.document.createTextNode('');\n            observer.observe(element, {\n              characterData: true\n            });\n\n            scheduleDrain = function scheduleDrain() {\n              element.data = called = ++called % 2;\n            };\n          } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n            var channel = new global.MessageChannel();\n            channel.port1.onmessage = nextTick;\n\n            scheduleDrain = function scheduleDrain() {\n              channel.port2.postMessage(0);\n            };\n          } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n            scheduleDrain = function scheduleDrain() {\n              // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n              // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n              var scriptEl = global.document.createElement('script');\n\n              scriptEl.onreadystatechange = function () {\n                nextTick();\n                scriptEl.onreadystatechange = null;\n                scriptEl.parentNode.removeChild(scriptEl);\n                scriptEl = null;\n              };\n\n              global.document.documentElement.appendChild(scriptEl);\n            };\n          } else {\n            scheduleDrain = function scheduleDrain() {\n              setTimeout(nextTick, 0);\n            };\n          }\n        }\n        var draining;\n        var queue = []; //named nextTick for less confusing stack traces\n\n        function nextTick() {\n          draining = true;\n          var i, oldQueue;\n          var len = queue.length;\n\n          while (len) {\n            oldQueue = queue;\n            queue = [];\n            i = -1;\n\n            while (++i < len) {\n              oldQueue[i]();\n            }\n\n            len = queue.length;\n          }\n\n          draining = false;\n        }\n\n        module.exports = immediate;\n\n        function immediate(task) {\n          if (queue.push(task) === 1 && !draining) {\n            scheduleDrain();\n          }\n        }\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {}],\n    2: [function (_dereq_, module, exports) {\n      'use strict';\n\n      var immediate = _dereq_(1);\n      /* istanbul ignore next */\n\n\n      function INTERNAL() {}\n\n      var handlers = {};\n      var REJECTED = ['REJECTED'];\n      var FULFILLED = ['FULFILLED'];\n      var PENDING = ['PENDING'];\n      module.exports = Promise;\n\n      function Promise(resolver) {\n        if (typeof resolver !== 'function') {\n          throw new TypeError('resolver must be a function');\n        }\n\n        this.state = PENDING;\n        this.queue = [];\n        this.outcome = void 0;\n\n        if (resolver !== INTERNAL) {\n          safelyResolveThenable(this, resolver);\n        }\n      }\n\n      Promise.prototype[\"catch\"] = function (onRejected) {\n        return this.then(null, onRejected);\n      };\n\n      Promise.prototype.then = function (onFulfilled, onRejected) {\n        if (typeof onFulfilled !== 'function' && this.state === FULFILLED || typeof onRejected !== 'function' && this.state === REJECTED) {\n          return this;\n        }\n\n        var promise = new this.constructor(INTERNAL);\n\n        if (this.state !== PENDING) {\n          var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n          unwrap(promise, resolver, this.outcome);\n        } else {\n          this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n        }\n\n        return promise;\n      };\n\n      function QueueItem(promise, onFulfilled, onRejected) {\n        this.promise = promise;\n\n        if (typeof onFulfilled === 'function') {\n          this.onFulfilled = onFulfilled;\n          this.callFulfilled = this.otherCallFulfilled;\n        }\n\n        if (typeof onRejected === 'function') {\n          this.onRejected = onRejected;\n          this.callRejected = this.otherCallRejected;\n        }\n      }\n\n      QueueItem.prototype.callFulfilled = function (value) {\n        handlers.resolve(this.promise, value);\n      };\n\n      QueueItem.prototype.otherCallFulfilled = function (value) {\n        unwrap(this.promise, this.onFulfilled, value);\n      };\n\n      QueueItem.prototype.callRejected = function (value) {\n        handlers.reject(this.promise, value);\n      };\n\n      QueueItem.prototype.otherCallRejected = function (value) {\n        unwrap(this.promise, this.onRejected, value);\n      };\n\n      function unwrap(promise, func, value) {\n        immediate(function () {\n          var returnValue;\n\n          try {\n            returnValue = func(value);\n          } catch (e) {\n            return handlers.reject(promise, e);\n          }\n\n          if (returnValue === promise) {\n            handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n          } else {\n            handlers.resolve(promise, returnValue);\n          }\n        });\n      }\n\n      handlers.resolve = function (self, value) {\n        var result = tryCatch(getThen, value);\n\n        if (result.status === 'error') {\n          return handlers.reject(self, result.value);\n        }\n\n        var thenable = result.value;\n\n        if (thenable) {\n          safelyResolveThenable(self, thenable);\n        } else {\n          self.state = FULFILLED;\n          self.outcome = value;\n          var i = -1;\n          var len = self.queue.length;\n\n          while (++i < len) {\n            self.queue[i].callFulfilled(value);\n          }\n        }\n\n        return self;\n      };\n\n      handlers.reject = function (self, error) {\n        self.state = REJECTED;\n        self.outcome = error;\n        var i = -1;\n        var len = self.queue.length;\n\n        while (++i < len) {\n          self.queue[i].callRejected(error);\n        }\n\n        return self;\n      };\n\n      function getThen(obj) {\n        // Make sure we only access the accessor once as required by the spec\n        var then = obj && obj.then;\n\n        if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n          return function appyThen() {\n            then.apply(obj, arguments);\n          };\n        }\n      }\n\n      function safelyResolveThenable(self, thenable) {\n        // Either fulfill, reject or reject with error\n        var called = false;\n\n        function onError(value) {\n          if (called) {\n            return;\n          }\n\n          called = true;\n          handlers.reject(self, value);\n        }\n\n        function onSuccess(value) {\n          if (called) {\n            return;\n          }\n\n          called = true;\n          handlers.resolve(self, value);\n        }\n\n        function tryToUnwrap() {\n          thenable(onSuccess, onError);\n        }\n\n        var result = tryCatch(tryToUnwrap);\n\n        if (result.status === 'error') {\n          onError(result.value);\n        }\n      }\n\n      function tryCatch(func, value) {\n        var out = {};\n\n        try {\n          out.value = func(value);\n          out.status = 'success';\n        } catch (e) {\n          out.status = 'error';\n          out.value = e;\n        }\n\n        return out;\n      }\n\n      Promise.resolve = resolve;\n\n      function resolve(value) {\n        if (value instanceof this) {\n          return value;\n        }\n\n        return handlers.resolve(new this(INTERNAL), value);\n      }\n\n      Promise.reject = reject;\n\n      function reject(reason) {\n        var promise = new this(INTERNAL);\n        return handlers.reject(promise, reason);\n      }\n\n      Promise.all = all;\n\n      function all(iterable) {\n        var self = this;\n\n        if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n          return this.reject(new TypeError('must be an array'));\n        }\n\n        var len = iterable.length;\n        var called = false;\n\n        if (!len) {\n          return this.resolve([]);\n        }\n\n        var values = new Array(len);\n        var resolved = 0;\n        var i = -1;\n        var promise = new this(INTERNAL);\n\n        while (++i < len) {\n          allResolver(iterable[i], i);\n        }\n\n        return promise;\n\n        function allResolver(value, i) {\n          self.resolve(value).then(resolveFromAll, function (error) {\n            if (!called) {\n              called = true;\n              handlers.reject(promise, error);\n            }\n          });\n\n          function resolveFromAll(outValue) {\n            values[i] = outValue;\n\n            if (++resolved === len && !called) {\n              called = true;\n              handlers.resolve(promise, values);\n            }\n          }\n        }\n      }\n\n      Promise.race = race;\n\n      function race(iterable) {\n        var self = this;\n\n        if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n          return this.reject(new TypeError('must be an array'));\n        }\n\n        var len = iterable.length;\n        var called = false;\n\n        if (!len) {\n          return this.resolve([]);\n        }\n\n        var i = -1;\n        var promise = new this(INTERNAL);\n\n        while (++i < len) {\n          resolver(iterable[i]);\n        }\n\n        return promise;\n\n        function resolver(value) {\n          self.resolve(value).then(function (response) {\n            if (!called) {\n              called = true;\n              handlers.resolve(promise, response);\n            }\n          }, function (error) {\n            if (!called) {\n              called = true;\n              handlers.reject(promise, error);\n            }\n          });\n        }\n      }\n    }, {\n      \"1\": 1\n    }],\n    3: [function (_dereq_, module, exports) {\n      (function (global) {\n        'use strict';\n\n        if (typeof global.Promise !== 'function') {\n          global.Promise = _dereq_(2);\n        }\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {\n      \"2\": 2\n    }],\n    4: [function (_dereq_, module, exports) {\n      'use strict';\n\n      var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n      } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function getIDB() {\n        /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n        try {\n          if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n          }\n\n          if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n          }\n\n          if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n          }\n\n          if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n          }\n\n          if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n          }\n        } catch (e) {\n          return;\n        }\n      }\n\n      var idb = getIDB();\n\n      function isIndexedDBValid() {\n        try {\n          // Initialize IndexedDB; fall back to vendor-prefixed versions\n          // if needed.\n          if (!idb) {\n            return false;\n          } // We mimic PouchDB here;\n          //\n          // We test for openDatabase because IE Mobile identifies itself\n          // as Safari. Oh the lulz...\n\n\n          var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n          var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1; // Safari <10.1 does not meet our requirements for IDB support (#5572)\n          // since Safari 10.1 shipped with fetch, we can use that to detect it\n\n          return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' && // some outdated implementations of IDB that appear on Samsung\n          // and HTC Android devices <4.4 are missing IDBKeyRange\n          // See: https://github.com/mozilla/localForage/issues/128\n          // See: https://github.com/mozilla/localForage/issues/272\n          typeof IDBKeyRange !== 'undefined';\n        } catch (e) {\n          return false;\n        }\n      } // Abstracts constructing a Blob object, so it also works in older\n      // browsers that don't support the native Blob constructor. (i.e.\n      // old QtWebKit versions, at least).\n      // Abstracts constructing a Blob object, so it also works in older\n      // browsers that don't support the native Blob constructor. (i.e.\n      // old QtWebKit versions, at least).\n\n\n      function createBlob(parts, properties) {\n        /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n        parts = parts || [];\n        properties = properties || {};\n\n        try {\n          return new Blob(parts, properties);\n        } catch (e) {\n          if (e.name !== 'TypeError') {\n            throw e;\n          }\n\n          var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n          var builder = new Builder();\n\n          for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n          }\n\n          return builder.getBlob(properties.type);\n        }\n      } // This is CommonJS because lie is an external dependency, so Rollup\n      // can just ignore it.\n\n\n      if (typeof Promise === 'undefined') {\n        // In the \"nopromises\" build this will just throw if you don't have\n        // a global promise object, but it would throw anyway later.\n        _dereq_(3);\n      }\n\n      var Promise$1 = Promise;\n\n      function executeCallback(promise, callback) {\n        if (callback) {\n          promise.then(function (result) {\n            callback(null, result);\n          }, function (error) {\n            callback(error);\n          });\n        }\n      }\n\n      function executeTwoCallbacks(promise, callback, errorCallback) {\n        if (typeof callback === 'function') {\n          promise.then(callback);\n        }\n\n        if (typeof errorCallback === 'function') {\n          promise[\"catch\"](errorCallback);\n        }\n      }\n\n      function normalizeKey(key) {\n        // Cast the key to a string, as that's all we can set as a key.\n        if (typeof key !== 'string') {\n          console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        return key;\n      }\n\n      function getCallback() {\n        if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n          return arguments[arguments.length - 1];\n        }\n      } // Some code originally from async_storage.js in\n      // [Gaia](https://github.com/mozilla-b2g/gaia).\n\n\n      var DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\n      var supportsBlobs = void 0;\n      var dbContexts = {};\n      var toString = Object.prototype.toString; // Transaction Modes\n\n      var READ_ONLY = 'readonly';\n      var READ_WRITE = 'readwrite'; // Transform a binary string to an array buffer, because otherwise\n      // weird stuff happens when you try to work with the binary string directly.\n      // It is known.\n      // From http://stackoverflow.com/questions/14967647/ (continues on next line)\n      // encode-decode-image-with-base64-breaks-image (2013-04-21)\n\n      function _binStringToArrayBuffer(bin) {\n        var length = bin.length;\n        var buf = new ArrayBuffer(length);\n        var arr = new Uint8Array(buf);\n\n        for (var i = 0; i < length; i++) {\n          arr[i] = bin.charCodeAt(i);\n        }\n\n        return buf;\n      } //\n      // Blobs are not supported in all versions of IndexedDB, notably\n      // Chrome <37 and Android <5. In those versions, storing a blob will throw.\n      //\n      // Various other blob bugs exist in Chrome v37-42 (inclusive).\n      // Detecting them is expensive and confusing to users, and Chrome 37-42\n      // is at very low usage worldwide, so we do a hacky userAgent check instead.\n      //\n      // content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n      // 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n      // FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n      //\n      // Code borrowed from PouchDB. See:\n      // https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n      //\n\n\n      function _checkBlobSupportWithoutCaching(idb) {\n        return new Promise$1(function (resolve) {\n          var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n          var blob = createBlob(['']);\n          txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n          txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n          };\n\n          txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//); // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n          };\n        })[\"catch\"](function () {\n          return false; // error, so assume unsupported\n        });\n      }\n\n      function _checkBlobSupport(idb) {\n        if (typeof supportsBlobs === 'boolean') {\n          return Promise$1.resolve(supportsBlobs);\n        }\n\n        return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n          supportsBlobs = value;\n          return supportsBlobs;\n        });\n      }\n\n      function _deferReadiness(dbInfo) {\n        var dbContext = dbContexts[dbInfo.name]; // Create a deferred object representing the current database operation.\n\n        var deferredOperation = {};\n        deferredOperation.promise = new Promise$1(function (resolve, reject) {\n          deferredOperation.resolve = resolve;\n          deferredOperation.reject = reject;\n        }); // Enqueue the deferred operation.\n\n        dbContext.deferredOperations.push(deferredOperation); // Chain its promise to the database readiness.\n\n        if (!dbContext.dbReady) {\n          dbContext.dbReady = deferredOperation.promise;\n        } else {\n          dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n          });\n        }\n      }\n\n      function _advanceReadiness(dbInfo) {\n        var dbContext = dbContexts[dbInfo.name]; // Dequeue a deferred operation.\n\n        var deferredOperation = dbContext.deferredOperations.pop(); // Resolve its promise (which is part of the database readiness\n        // chain of promises).\n\n        if (deferredOperation) {\n          deferredOperation.resolve();\n          return deferredOperation.promise;\n        }\n      }\n\n      function _rejectReadiness(dbInfo, err) {\n        var dbContext = dbContexts[dbInfo.name]; // Dequeue a deferred operation.\n\n        var deferredOperation = dbContext.deferredOperations.pop(); // Reject its promise (which is part of the database readiness\n        // chain of promises).\n\n        if (deferredOperation) {\n          deferredOperation.reject(err);\n          return deferredOperation.promise;\n        }\n      }\n\n      function _getConnection(dbInfo, upgradeNeeded) {\n        return new Promise$1(function (resolve, reject) {\n          dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n          if (dbInfo.db) {\n            if (upgradeNeeded) {\n              _deferReadiness(dbInfo);\n\n              dbInfo.db.close();\n            } else {\n              return resolve(dbInfo.db);\n            }\n          }\n\n          var dbArgs = [dbInfo.name];\n\n          if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n          }\n\n          var openreq = idb.open.apply(idb, dbArgs);\n\n          if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n              var db = openreq.result;\n\n              try {\n                db.createObjectStore(dbInfo.storeName);\n\n                if (e.oldVersion <= 1) {\n                  // Added when support for blob shims was added\n                  db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                }\n              } catch (ex) {\n                if (ex.name === 'ConstraintError') {\n                  console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                } else {\n                  throw ex;\n                }\n              }\n            };\n          }\n\n          openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n          };\n\n          openreq.onsuccess = function () {\n            resolve(openreq.result);\n\n            _advanceReadiness(dbInfo);\n          };\n        });\n      }\n\n      function _getOriginalConnection(dbInfo) {\n        return _getConnection(dbInfo, false);\n      }\n\n      function _getUpgradedConnection(dbInfo) {\n        return _getConnection(dbInfo, true);\n      }\n\n      function _isUpgradeNeeded(dbInfo, defaultVersion) {\n        if (!dbInfo.db) {\n          return true;\n        }\n\n        var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n        var isDowngrade = dbInfo.version < dbInfo.db.version;\n        var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n        if (isDowngrade) {\n          // If the version is not the default one\n          // then warn for impossible downgrade.\n          if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n          } // Align the versions to prevent errors.\n\n\n          dbInfo.version = dbInfo.db.version;\n        }\n\n        if (isUpgrade || isNewStore) {\n          // If the store is new then increment the version (if needed).\n          // This will trigger an \"upgradeneeded\" event which is required\n          // for creating a store.\n          if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n\n            if (incVersion > dbInfo.version) {\n              dbInfo.version = incVersion;\n            }\n          }\n\n          return true;\n        }\n\n        return false;\n      } // encode a blob for indexeddb engines that don't support blobs\n\n\n      function _encodeBlob(blob) {\n        return new Promise$1(function (resolve, reject) {\n          var reader = new FileReader();\n          reader.onerror = reject;\n\n          reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n              __local_forage_encoded_blob: true,\n              data: base64,\n              type: blob.type\n            });\n          };\n\n          reader.readAsBinaryString(blob);\n        });\n      } // decode an encoded blob\n\n\n      function _decodeBlob(encodedBlob) {\n        var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n\n        return createBlob([arrayBuff], {\n          type: encodedBlob.type\n        });\n      } // is this one of our fancy encoded blobs?\n\n\n      function _isEncodedBlob(value) {\n        return value && value.__local_forage_encoded_blob;\n      } // Specialize the default `ready()` function by making it dependent\n      // on the current database operations. Thus, the driver will be actually\n      // ready when it's been initialized (default) *and* there are no pending\n      // operations on the database (initiated by some other instances).\n\n\n      function _fullyReady(callback) {\n        var self = this;\n\n        var promise = self._initReady().then(function () {\n          var dbContext = dbContexts[self._dbInfo.name];\n\n          if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n          }\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n      } // Try to establish a new db connection to replace the\n      // current one which is broken (i.e. experiencing\n      // InvalidStateError while creating a transaction).\n\n\n      function _tryReconnect(dbInfo) {\n        _deferReadiness(dbInfo);\n\n        var dbContext = dbContexts[dbInfo.name];\n        var forages = dbContext.forages;\n\n        for (var i = 0; i < forages.length; i++) {\n          var forage = forages[i];\n\n          if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n\n            forage._dbInfo.db = null;\n          }\n        }\n\n        dbInfo.db = null;\n        return _getOriginalConnection(dbInfo).then(function (db) {\n          dbInfo.db = db;\n\n          if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n          }\n\n          return db;\n        }).then(function (db) {\n          // store the latest db reference\n          // in case the db was upgraded\n          dbInfo.db = dbContext.db = db;\n\n          for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n          }\n        })[\"catch\"](function (err) {\n          _rejectReadiness(dbInfo, err);\n\n          throw err;\n        });\n      } // FF doesn't like Promises (micro-tasks) and IDDB store operations,\n      // so we have to do it with callbacks\n\n\n      function createTransaction(dbInfo, mode, callback, retries) {\n        if (retries === undefined) {\n          retries = 1;\n        }\n\n        try {\n          var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n          callback(null, tx);\n        } catch (err) {\n          if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n              if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                // increase the db version, to create the new ObjectStore\n                if (dbInfo.db) {\n                  dbInfo.version = dbInfo.db.version + 1;\n                } // Reopen the database for upgrading.\n\n\n                return _getUpgradedConnection(dbInfo);\n              }\n            }).then(function () {\n              return _tryReconnect(dbInfo).then(function () {\n                createTransaction(dbInfo, mode, callback, retries - 1);\n              });\n            })[\"catch\"](callback);\n          }\n\n          callback(err);\n        }\n      }\n\n      function createDbContext() {\n        return {\n          // Running localForages sharing a database.\n          forages: [],\n          // Shared database.\n          db: null,\n          // Database readiness (promise).\n          dbReady: null,\n          // Deferred operations on the database.\n          deferredOperations: []\n        };\n      } // Open the IndexedDB database (automatically creates one if one didn't\n      // previously exist), using any options set in the config.\n\n\n      function _initStorage(options) {\n        var self = this;\n        var dbInfo = {\n          db: null\n        };\n\n        if (options) {\n          for (var i in options) {\n            dbInfo[i] = options[i];\n          }\n        } // Get the current context of the database;\n\n\n        var dbContext = dbContexts[dbInfo.name]; // ...or create a new context.\n\n        if (!dbContext) {\n          dbContext = createDbContext(); // Register the new context in the global container.\n\n          dbContexts[dbInfo.name] = dbContext;\n        } // Register itself as a running localForage in the current context.\n\n\n        dbContext.forages.push(self); // Replace the default `ready()` function with the specialized one.\n\n        if (!self._initReady) {\n          self._initReady = self.ready;\n          self.ready = _fullyReady;\n        } // Create an array of initialization states of the related localForages.\n\n\n        var initPromises = [];\n\n        function ignoreErrors() {\n          // Don't handle errors here,\n          // just makes sure related localForages aren't pending.\n          return Promise$1.resolve();\n        }\n\n        for (var j = 0; j < dbContext.forages.length; j++) {\n          var forage = dbContext.forages[j];\n\n          if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n          }\n        } // Take a snapshot of the related localForages.\n\n\n        var forages = dbContext.forages.slice(0); // Initialize the connection process only when\n        // all the related localForages aren't pending.\n\n        return Promise$1.all(initPromises).then(function () {\n          dbInfo.db = dbContext.db; // Get the connection or open a new one without upgrade.\n\n          return _getOriginalConnection(dbInfo);\n        }).then(function (db) {\n          dbInfo.db = db;\n\n          if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n          }\n\n          return db;\n        }).then(function (db) {\n          dbInfo.db = dbContext.db = db;\n          self._dbInfo = dbInfo; // Share the final connection amongst related localForages.\n\n          for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n\n            if (forage !== self) {\n              // Self is already up-to-date.\n              forage._dbInfo.db = dbInfo.db;\n              forage._dbInfo.version = dbInfo.version;\n            }\n          }\n        });\n      }\n\n      function getItem(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.get(key);\n\n                req.onsuccess = function () {\n                  var value = req.result;\n\n                  if (value === undefined) {\n                    value = null;\n                  }\n\n                  if (_isEncodedBlob(value)) {\n                    value = _decodeBlob(value);\n                  }\n\n                  resolve(value);\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Iterate over all items stored in database.\n\n\n      function iterate(iterator, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.openCursor();\n                var iterationNumber = 1;\n\n                req.onsuccess = function () {\n                  var cursor = req.result;\n\n                  if (cursor) {\n                    var value = cursor.value;\n\n                    if (_isEncodedBlob(value)) {\n                      value = _decodeBlob(value);\n                    }\n\n                    var result = iterator(value, cursor.key, iterationNumber++); // when the iterator callback retuns any\n                    // (non-`undefined`) value, then we stop\n                    // the iteration immediately\n\n                    if (result !== void 0) {\n                      resolve(result);\n                    } else {\n                      cursor[\"continue\"]();\n                    }\n                  } else {\n                    resolve();\n                  }\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function setItem(key, value, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          var dbInfo;\n          self.ready().then(function () {\n            dbInfo = self._dbInfo;\n\n            if (toString.call(value) === '[object Blob]') {\n              return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                if (blobSupport) {\n                  return value;\n                }\n\n                return _encodeBlob(value);\n              });\n            }\n\n            return value;\n          }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName); // The reason we don't _save_ null is because IE 10 does\n                // not support saving the `null` type in IndexedDB. How\n                // ironic, given the bug below!\n                // See: https://github.com/mozilla/localForage/issues/161\n\n                if (value === null) {\n                  value = undefined;\n                }\n\n                var req = store.put(value, key);\n\n                transaction.oncomplete = function () {\n                  // Cast to undefined so the value passed to\n                  // callback/promise is the same as what one would get out\n                  // of `getItem()` later. This leads to some weirdness\n                  // (setItem('foo', undefined) will return `null`), but\n                  // it's not my fault localStorage is our baseline and that\n                  // it's weird.\n                  if (value === undefined) {\n                    value = null;\n                  }\n\n                  resolve(value);\n                };\n\n                transaction.onabort = transaction.onerror = function () {\n                  var err = req.error ? req.error : req.transaction.error;\n                  reject(err);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function removeItem(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName); // We use a Grunt task to make this safe for IE and some\n                // versions of Android (including those used by Cordova).\n                // Normally IE won't like `.delete()` and will insist on\n                // using `['delete']()`, but we have a build step that\n                // fixes this for us now.\n\n                var req = store[\"delete\"](key);\n\n                transaction.oncomplete = function () {\n                  resolve();\n                };\n\n                transaction.onerror = function () {\n                  reject(req.error);\n                }; // The request will be also be aborted if we've exceeded our storage\n                // space.\n\n\n                transaction.onabort = function () {\n                  var err = req.error ? req.error : req.transaction.error;\n                  reject(err);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function clear(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.clear();\n\n                transaction.oncomplete = function () {\n                  resolve();\n                };\n\n                transaction.onabort = transaction.onerror = function () {\n                  var err = req.error ? req.error : req.transaction.error;\n                  reject(err);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function length(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.count();\n\n                req.onsuccess = function () {\n                  resolve(req.result);\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function key(n, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          if (n < 0) {\n            resolve(null);\n            return;\n          }\n\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var advanced = false;\n                var req = store.openCursor();\n\n                req.onsuccess = function () {\n                  var cursor = req.result;\n\n                  if (!cursor) {\n                    // this means there weren't enough keys\n                    resolve(null);\n                    return;\n                  }\n\n                  if (n === 0) {\n                    // We have the first key, return it if that's what they\n                    // wanted.\n                    resolve(cursor.key);\n                  } else {\n                    if (!advanced) {\n                      // Otherwise, ask the cursor to skip ahead n\n                      // records.\n                      advanced = true;\n                      cursor.advance(n);\n                    } else {\n                      // When we get here, we've got the nth key.\n                      resolve(cursor.key);\n                    }\n                  }\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function keys(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.openCursor();\n                var keys = [];\n\n                req.onsuccess = function () {\n                  var cursor = req.result;\n\n                  if (!cursor) {\n                    resolve(keys);\n                    return;\n                  }\n\n                  keys.push(cursor.key);\n                  cursor[\"continue\"]();\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function dropInstance(options, callback) {\n        callback = getCallback.apply(this, arguments);\n        var currentConfig = this.config();\n        options = typeof options !== 'function' && options || {};\n\n        if (!options.name) {\n          options.name = options.name || currentConfig.name;\n          options.storeName = options.storeName || currentConfig.storeName;\n        }\n\n        var self = this;\n        var promise;\n\n        if (!options.name) {\n          promise = Promise$1.reject('Invalid arguments');\n        } else {\n          var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n          var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n\n            for (var i = 0; i < forages.length; i++) {\n              forages[i]._dbInfo.db = db;\n            }\n\n            return db;\n          });\n\n          if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n              _deferReadiness(options);\n\n              var dbContext = dbContexts[options.name];\n              var forages = dbContext.forages;\n              db.close();\n\n              for (var i = 0; i < forages.length; i++) {\n                var forage = forages[i];\n                forage._dbInfo.db = null;\n              }\n\n              var dropDBPromise = new Promise$1(function (resolve, reject) {\n                var req = idb.deleteDatabase(options.name);\n\n                req.onerror = req.onblocked = function (err) {\n                  var db = req.result;\n\n                  if (db) {\n                    db.close();\n                  }\n\n                  reject(err);\n                };\n\n                req.onsuccess = function () {\n                  var db = req.result;\n\n                  if (db) {\n                    db.close();\n                  }\n\n                  resolve(db);\n                };\n              });\n              return dropDBPromise.then(function (db) {\n                dbContext.db = db;\n\n                for (var i = 0; i < forages.length; i++) {\n                  var _forage = forages[i];\n\n                  _advanceReadiness(_forage._dbInfo);\n                }\n              })[\"catch\"](function (err) {\n                (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                throw err;\n              });\n            });\n          } else {\n            promise = dbPromise.then(function (db) {\n              if (!db.objectStoreNames.contains(options.storeName)) {\n                return;\n              }\n\n              var newVersion = db.version + 1;\n\n              _deferReadiness(options);\n\n              var dbContext = dbContexts[options.name];\n              var forages = dbContext.forages;\n              db.close();\n\n              for (var i = 0; i < forages.length; i++) {\n                var forage = forages[i];\n                forage._dbInfo.db = null;\n                forage._dbInfo.version = newVersion;\n              }\n\n              var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                var req = idb.open(options.name, newVersion);\n\n                req.onerror = function (err) {\n                  var db = req.result;\n                  db.close();\n                  reject(err);\n                };\n\n                req.onupgradeneeded = function () {\n                  var db = req.result;\n                  db.deleteObjectStore(options.storeName);\n                };\n\n                req.onsuccess = function () {\n                  var db = req.result;\n                  db.close();\n                  resolve(db);\n                };\n              });\n              return dropObjectPromise.then(function (db) {\n                dbContext.db = db;\n\n                for (var j = 0; j < forages.length; j++) {\n                  var _forage2 = forages[j];\n                  _forage2._dbInfo.db = db;\n\n                  _advanceReadiness(_forage2._dbInfo);\n                }\n              })[\"catch\"](function (err) {\n                (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                throw err;\n              });\n            });\n          }\n        }\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      var asyncStorage = {\n        _driver: 'asyncStorage',\n        _initStorage: _initStorage,\n        _support: isIndexedDBValid(),\n        iterate: iterate,\n        getItem: getItem,\n        setItem: setItem,\n        removeItem: removeItem,\n        clear: clear,\n        length: length,\n        key: key,\n        keys: keys,\n        dropInstance: dropInstance\n      };\n\n      function isWebSQLValid() {\n        return typeof openDatabase === 'function';\n      } // Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n      // it to Base64, so this is how we store it to prevent very strange errors with less\n      // verbose ways of binary <-> string data storage.\n\n\n      var BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n      var BLOB_TYPE_PREFIX = '~~local_forage_type~';\n      var BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n      var SERIALIZED_MARKER = '__lfsc__:';\n      var SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length; // OMG the serializations!\n\n      var TYPE_ARRAYBUFFER = 'arbf';\n      var TYPE_BLOB = 'blob';\n      var TYPE_INT8ARRAY = 'si08';\n      var TYPE_UINT8ARRAY = 'ui08';\n      var TYPE_UINT8CLAMPEDARRAY = 'uic8';\n      var TYPE_INT16ARRAY = 'si16';\n      var TYPE_INT32ARRAY = 'si32';\n      var TYPE_UINT16ARRAY = 'ur16';\n      var TYPE_UINT32ARRAY = 'ui32';\n      var TYPE_FLOAT32ARRAY = 'fl32';\n      var TYPE_FLOAT64ARRAY = 'fl64';\n      var TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n      var toString$1 = Object.prototype.toString;\n\n      function stringToBuffer(serializedString) {\n        // Fill the string into a ArrayBuffer.\n        var bufferLength = serializedString.length * 0.75;\n        var len = serializedString.length;\n        var i;\n        var p = 0;\n        var encoded1, encoded2, encoded3, encoded4;\n\n        if (serializedString[serializedString.length - 1] === '=') {\n          bufferLength--;\n\n          if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n          }\n        }\n\n        var buffer = new ArrayBuffer(bufferLength);\n        var bytes = new Uint8Array(buffer);\n\n        for (i = 0; i < len; i += 4) {\n          encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n          encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n          encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n          encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n          /*jslint bitwise: true */\n\n          bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n          bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n          bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n        }\n\n        return buffer;\n      } // Converts a buffer to a string to store, serialized, in the backend\n      // storage library.\n\n\n      function bufferToString(buffer) {\n        // base64-arraybuffer\n        var bytes = new Uint8Array(buffer);\n        var base64String = '';\n        var i;\n\n        for (i = 0; i < bytes.length; i += 3) {\n          /*jslint bitwise: true */\n          base64String += BASE_CHARS[bytes[i] >> 2];\n          base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n          base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n          base64String += BASE_CHARS[bytes[i + 2] & 63];\n        }\n\n        if (bytes.length % 3 === 2) {\n          base64String = base64String.substring(0, base64String.length - 1) + '=';\n        } else if (bytes.length % 3 === 1) {\n          base64String = base64String.substring(0, base64String.length - 2) + '==';\n        }\n\n        return base64String;\n      } // Serialize a value, afterwards executing a callback (which usually\n      // instructs the `setItem()` callback/promise to be executed). This is how\n      // we store binary data with localStorage.\n\n\n      function serialize(value, callback) {\n        var valueType = '';\n\n        if (value) {\n          valueType = toString$1.call(value);\n        } // Cannot use `value instanceof ArrayBuffer` or such here, as these\n        // checks fail when running the tests using casper.js...\n        //\n        // TODO: See why those tests fail and use a better solution.\n\n\n        if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n          // Convert binary arrays to a string and prefix the string with\n          // a special marker.\n          var buffer;\n          var marker = SERIALIZED_MARKER;\n\n          if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n          } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n              marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n              marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n              marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n              marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n              marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n              marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n              marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n              marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n              marker += TYPE_FLOAT64ARRAY;\n            } else {\n              callback(new Error('Failed to get type for BinaryArray'));\n            }\n          }\n\n          callback(marker + bufferToString(buffer));\n        } else if (valueType === '[object Blob]') {\n          // Conver the blob to a binaryArray and then to a string.\n          var fileReader = new FileReader();\n\n          fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n          };\n\n          fileReader.readAsArrayBuffer(value);\n        } else {\n          try {\n            callback(JSON.stringify(value));\n          } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n            callback(null, e);\n          }\n        }\n      } // Deserialize data we've inserted into a value column/field. We place\n      // special markers into our strings to mark them as encoded; this isn't\n      // as nice as a meta field, but it's the only sane thing we can do whilst\n      // keeping localStorage support intact.\n      //\n      // Oftentimes this will just deserialize JSON content, but if we have a\n      // special marker (SERIALIZED_MARKER, defined above), we will extract\n      // some kind of arraybuffer/binary data/typed array out of the string.\n\n\n      function deserialize(value) {\n        // If we haven't marked this string as being specially serialized (i.e.\n        // something other than serialized JSON), we can just return it and be\n        // done with it.\n        if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n          return JSON.parse(value);\n        } // The following code deals with deserializing some kind of Blob or\n        // TypedArray. First we separate out the type of data we're dealing\n        // with from the data itself.\n\n\n        var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n        var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n        var blobType; // Backwards-compatible blob type serialization strategy.\n        // DBs created with older versions of localForage will simply not have the blob type.\n\n        if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n          var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n          blobType = matcher[1];\n          serializedString = serializedString.substring(matcher[0].length);\n        }\n\n        var buffer = stringToBuffer(serializedString); // Return the right type based on the code/type set during\n        // serialization.\n\n        switch (type) {\n          case TYPE_ARRAYBUFFER:\n            return buffer;\n\n          case TYPE_BLOB:\n            return createBlob([buffer], {\n              type: blobType\n            });\n\n          case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n\n          case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n\n          case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n\n          case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n\n          case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n\n          case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n\n          case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n\n          case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n\n          case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n\n          default:\n            throw new Error('Unkown type: ' + type);\n        }\n      }\n\n      var localforageSerializer = {\n        serialize: serialize,\n        deserialize: deserialize,\n        stringToBuffer: stringToBuffer,\n        bufferToString: bufferToString\n      };\n      /*\n       * Includes code from:\n       *\n       * base64-arraybuffer\n       * https://github.com/niklasvh/base64-arraybuffer\n       *\n       * Copyright (c) 2012 Niklas von Hertzen\n       * Licensed under the MIT license.\n       */\n\n      function createDbTable(t, dbInfo, callback, errorCallback) {\n        t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n      } // Open the WebSQL database (automatically creates one if one didn't\n      // previously exist), using any options set in the config.\n\n\n      function _initStorage$1(options) {\n        var self = this;\n        var dbInfo = {\n          db: null\n        };\n\n        if (options) {\n          for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n          }\n        }\n\n        var dbInfoPromise = new Promise$1(function (resolve, reject) {\n          // Open the database; the openDatabase API will automatically\n          // create it for us if it doesn't exist.\n          try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n          } catch (e) {\n            return reject(e);\n          } // Create our key/value table if it doesn't exist.\n\n\n          dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n              self._dbInfo = dbInfo;\n              resolve();\n            }, function (t, error) {\n              reject(error);\n            });\n          }, reject);\n        });\n        dbInfo.serializer = localforageSerializer;\n        return dbInfoPromise;\n      }\n\n      function tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n        t.executeSql(sqlStatement, args, callback, function (t, error) {\n          if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n              if (!results.rows.length) {\n                // if the table is missing (was deleted)\n                // re-create it table and retry\n                createDbTable(t, dbInfo, function () {\n                  t.executeSql(sqlStatement, args, callback, errorCallback);\n                }, errorCallback);\n              } else {\n                errorCallback(t, error);\n              }\n            }, errorCallback);\n          } else {\n            errorCallback(t, error);\n          }\n        }, errorCallback);\n      }\n\n      function getItem$1(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                var result = results.rows.length ? results.rows.item(0).value : null; // Check to see if this is serialized content we need to\n                // unpack.\n\n                if (result) {\n                  result = dbInfo.serializer.deserialize(result);\n                }\n\n                resolve(result);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function iterate$1(iterator, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                var rows = results.rows;\n                var length = rows.length;\n\n                for (var i = 0; i < length; i++) {\n                  var item = rows.item(i);\n                  var result = item.value; // Check to see if this is serialized content\n                  // we need to unpack.\n\n                  if (result) {\n                    result = dbInfo.serializer.deserialize(result);\n                  }\n\n                  result = iterator(result, item.key, i + 1); // void(0) prevents problems with redefinition\n                  // of `undefined`.\n\n                  if (result !== void 0) {\n                    resolve(result);\n                    return;\n                  }\n                }\n\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function _setItem(key, value, callback, retriesLeft) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n              value = null;\n            } // Save the original value to pass to the callback.\n\n\n            var originalValue = value;\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n              if (error) {\n                reject(error);\n              } else {\n                dbInfo.db.transaction(function (t) {\n                  tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                    resolve(originalValue);\n                  }, function (t, error) {\n                    reject(error);\n                  });\n                }, function (sqlError) {\n                  // The transaction failed; check\n                  // to see if it's a quota error.\n                  if (sqlError.code === sqlError.QUOTA_ERR) {\n                    // We reject the callback outright for now, but\n                    // it's worth trying to re-run the transaction.\n                    // Even if the user accepts the prompt to use\n                    // more storage on Safari, this error will\n                    // be called.\n                    //\n                    // Try to re-run the transaction.\n                    if (retriesLeft > 0) {\n                      resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                      return;\n                    }\n\n                    reject(sqlError);\n                  }\n                });\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function setItem$1(key, value, callback) {\n        return _setItem.apply(this, [key, value, callback, 1]);\n      }\n\n      function removeItem$1(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Deletes every item in the table.\n      // TODO: Find out if this resets the AUTO_INCREMENT number.\n\n\n      function clear$1(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Does a simple `COUNT(key)` to get the number of items stored in\n      // localForage.\n\n\n      function length$1(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              // Ahhh, SQL makes this one soooooo easy.\n              tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                var result = results.rows.item(0).c;\n                resolve(result);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Return the key located at key index X; essentially gets the key from a\n      // `WHERE id = ?`. This is the most efficient way I can think to implement\n      // this rarely-used (in my experience) part of the API, but it can seem\n      // inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n      // the ID of each key will change every time it's updated. Perhaps a stored\n      // procedure for the `setItem()` SQL would solve this problem?\n      // TODO: Don't change ID on `setItem()`.\n\n\n      function key$1(n, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                var result = results.rows.length ? results.rows.item(0).key : null;\n                resolve(result);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function keys$1(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                var keys = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                  keys.push(results.rows.item(i).key);\n                }\n\n                resolve(keys);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // https://www.w3.org/TR/webdatabase/#databases\n      // > There is no way to enumerate or delete the databases available for an origin from this API.\n\n\n      function getAllStoreNames(db) {\n        return new Promise$1(function (resolve, reject) {\n          db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n              var storeNames = [];\n\n              for (var i = 0; i < results.rows.length; i++) {\n                storeNames.push(results.rows.item(i).name);\n              }\n\n              resolve({\n                db: db,\n                storeNames: storeNames\n              });\n            }, function (t, error) {\n              reject(error);\n            });\n          }, function (sqlError) {\n            reject(sqlError);\n          });\n        });\n      }\n\n      function dropInstance$1(options, callback) {\n        callback = getCallback.apply(this, arguments);\n        var currentConfig = this.config();\n        options = typeof options !== 'function' && options || {};\n\n        if (!options.name) {\n          options.name = options.name || currentConfig.name;\n          options.storeName = options.storeName || currentConfig.storeName;\n        }\n\n        var self = this;\n        var promise;\n\n        if (!options.name) {\n          promise = Promise$1.reject('Invalid arguments');\n        } else {\n          promise = new Promise$1(function (resolve) {\n            var db;\n\n            if (options.name === currentConfig.name) {\n              // use the db reference of the current instance\n              db = self._dbInfo.db;\n            } else {\n              db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n              // drop all database tables\n              resolve(getAllStoreNames(db));\n            } else {\n              resolve({\n                db: db,\n                storeNames: [options.storeName]\n              });\n            }\n          }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n              operationInfo.db.transaction(function (t) {\n                function dropTable(storeName) {\n                  return new Promise$1(function (resolve, reject) {\n                    t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                      resolve();\n                    }, function (t, error) {\n                      reject(error);\n                    });\n                  });\n                }\n\n                var operations = [];\n\n                for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                  operations.push(dropTable(operationInfo.storeNames[i]));\n                }\n\n                Promise$1.all(operations).then(function () {\n                  resolve();\n                })[\"catch\"](function (e) {\n                  reject(e);\n                });\n              }, function (sqlError) {\n                reject(sqlError);\n              });\n            });\n          });\n        }\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      var webSQLStorage = {\n        _driver: 'webSQLStorage',\n        _initStorage: _initStorage$1,\n        _support: isWebSQLValid(),\n        iterate: iterate$1,\n        getItem: getItem$1,\n        setItem: setItem$1,\n        removeItem: removeItem$1,\n        clear: clear$1,\n        length: length$1,\n        key: key$1,\n        keys: keys$1,\n        dropInstance: dropInstance$1\n      };\n\n      function isLocalStorageValid() {\n        try {\n          return typeof localStorage !== 'undefined' && 'setItem' in localStorage && // in IE8 typeof localStorage.setItem === 'object'\n          !!localStorage.setItem;\n        } catch (e) {\n          return false;\n        }\n      }\n\n      function _getKeyPrefix(options, defaultConfig) {\n        var keyPrefix = options.name + '/';\n\n        if (options.storeName !== defaultConfig.storeName) {\n          keyPrefix += options.storeName + '/';\n        }\n\n        return keyPrefix;\n      } // Check if localStorage throws when saving an item\n\n\n      function checkIfLocalStorageThrows() {\n        var localStorageTestKey = '_localforage_support_test';\n\n        try {\n          localStorage.setItem(localStorageTestKey, true);\n          localStorage.removeItem(localStorageTestKey);\n          return false;\n        } catch (e) {\n          return true;\n        }\n      } // Check if localStorage is usable and allows to save an item\n      // This method checks if localStorage is usable in Safari Private Browsing\n      // mode, or in any other case where the available quota for localStorage\n      // is 0 and there wasn't any saved items yet.\n\n\n      function _isLocalStorageUsable() {\n        return !checkIfLocalStorageThrows() || localStorage.length > 0;\n      } // Config the localStorage backend, using options set in the config.\n\n\n      function _initStorage$2(options) {\n        var self = this;\n        var dbInfo = {};\n\n        if (options) {\n          for (var i in options) {\n            dbInfo[i] = options[i];\n          }\n        }\n\n        dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n        if (!_isLocalStorageUsable()) {\n          return Promise$1.reject();\n        }\n\n        self._dbInfo = dbInfo;\n        dbInfo.serializer = localforageSerializer;\n        return Promise$1.resolve();\n      } // Remove all keys from the datastore, effectively destroying all data in\n      // the app's key/value store!\n\n\n      function clear$2(callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var keyPrefix = self._dbInfo.keyPrefix;\n\n          for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n              localStorage.removeItem(key);\n            }\n          }\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Retrieve an item from the store. Unlike the original async_storage\n      // library in Gaia, we don't modify return values at all. If a key's value\n      // is `undefined`, we pass that value to the callback function.\n\n\n      function getItem$2(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var result = localStorage.getItem(dbInfo.keyPrefix + key); // If a result was found, parse it from the serialized\n          // string into a JS object. If result isn't truthy, the key\n          // is likely undefined and we'll pass it straight to the\n          // callback.\n\n          if (result) {\n            result = dbInfo.serializer.deserialize(result);\n          }\n\n          return result;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Iterate over all items in the store.\n\n\n      function iterate$2(iterator, callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var keyPrefix = dbInfo.keyPrefix;\n          var keyPrefixLength = keyPrefix.length;\n          var length = localStorage.length; // We use a dedicated iterator instead of the `i` variable below\n          // so other keys we fetch in localStorage aren't counted in\n          // the `iterationNumber` argument passed to the `iterate()`\n          // callback.\n          //\n          // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n\n          var iterationNumber = 1;\n\n          for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) !== 0) {\n              continue;\n            }\n\n            var value = localStorage.getItem(key); // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n\n            if (value) {\n              value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n              return value;\n            }\n          }\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Same as localStorage's key() method, except takes a callback.\n\n\n      function key$2(n, callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var result;\n\n          try {\n            result = localStorage.key(n);\n          } catch (error) {\n            result = null;\n          } // Remove the prefix from the key, if a key is found.\n\n\n          if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n          }\n\n          return result;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function keys$2(callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var length = localStorage.length;\n          var keys = [];\n\n          for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n              keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n          }\n\n          return keys;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Supply the number of keys in the datastore to the callback function.\n\n\n      function length$2(callback) {\n        var self = this;\n        var promise = self.keys().then(function (keys) {\n          return keys.length;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Remove an item from the store, nice and simple.\n\n\n      function removeItem$2(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          localStorage.removeItem(dbInfo.keyPrefix + key);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Set a key's value and run an optional callback once the value is set.\n      // Unlike Gaia's implementation, the callback function is passed the value,\n      // in case you want to operate on that value only after you're sure it\n      // saved, or something like that.\n\n\n      function setItem$2(key, value, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = self.ready().then(function () {\n          // Convert undefined values to null.\n          // https://github.com/mozilla/localForage/pull/42\n          if (value === undefined) {\n            value = null;\n          } // Save the original value to pass to the callback.\n\n\n          var originalValue = value;\n          return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n              if (error) {\n                reject(error);\n              } else {\n                try {\n                  localStorage.setItem(dbInfo.keyPrefix + key, value);\n                  resolve(originalValue);\n                } catch (e) {\n                  // localStorage capacity exceeded.\n                  // TODO: Make this a specific error/event.\n                  if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                    reject(e);\n                  }\n\n                  reject(e);\n                }\n              }\n            });\n          });\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function dropInstance$2(options, callback) {\n        callback = getCallback.apply(this, arguments);\n        options = typeof options !== 'function' && options || {};\n\n        if (!options.name) {\n          var currentConfig = this.config();\n          options.name = options.name || currentConfig.name;\n          options.storeName = options.storeName || currentConfig.storeName;\n        }\n\n        var self = this;\n        var promise;\n\n        if (!options.name) {\n          promise = Promise$1.reject('Invalid arguments');\n        } else {\n          promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n              resolve(options.name + '/');\n            } else {\n              resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n          }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n              var key = localStorage.key(i);\n\n              if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n              }\n            }\n          });\n        }\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      var localStorageWrapper = {\n        _driver: 'localStorageWrapper',\n        _initStorage: _initStorage$2,\n        _support: isLocalStorageValid(),\n        iterate: iterate$2,\n        getItem: getItem$2,\n        setItem: setItem$2,\n        removeItem: removeItem$2,\n        clear: clear$2,\n        length: length$2,\n        key: key$2,\n        keys: keys$2,\n        dropInstance: dropInstance$2\n      };\n\n      var sameValue = function sameValue(x, y) {\n        return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n      };\n\n      var includes = function includes(array, searchElement) {\n        var len = array.length;\n        var i = 0;\n\n        while (i < len) {\n          if (sameValue(array[i], searchElement)) {\n            return true;\n          }\n\n          i++;\n        }\n\n        return false;\n      };\n\n      var isArray = Array.isArray || function (arg) {\n        return Object.prototype.toString.call(arg) === '[object Array]';\n      }; // Drivers are stored here when `defineDriver()` is called.\n      // They are shared across all instances of localForage.\n\n\n      var DefinedDrivers = {};\n      var DriverSupport = {};\n      var DefaultDrivers = {\n        INDEXEDDB: asyncStorage,\n        WEBSQL: webSQLStorage,\n        LOCALSTORAGE: localStorageWrapper\n      };\n      var DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n      var OptionalDriverMethods = ['dropInstance'];\n      var LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n      var DefaultConfig = {\n        description: '',\n        driver: DefaultDriverOrder.slice(),\n        name: 'localforage',\n        // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n        // we can use without a prompt.\n        size: 4980736,\n        storeName: 'keyvaluepairs',\n        version: 1.0\n      };\n\n      function callWhenReady(localForageInstance, libraryMethod) {\n        localForageInstance[libraryMethod] = function () {\n          var _args = arguments;\n          return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n          });\n        };\n      }\n\n      function extend() {\n        for (var i = 1; i < arguments.length; i++) {\n          var arg = arguments[i];\n\n          if (arg) {\n            for (var _key in arg) {\n              if (arg.hasOwnProperty(_key)) {\n                if (isArray(arg[_key])) {\n                  arguments[0][_key] = arg[_key].slice();\n                } else {\n                  arguments[0][_key] = arg[_key];\n                }\n              }\n            }\n          }\n        }\n\n        return arguments[0];\n      }\n\n      var LocalForage = function () {\n        function LocalForage(options) {\n          _classCallCheck(this, LocalForage);\n\n          for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n              var driver = DefaultDrivers[driverTypeKey];\n              var driverName = driver._driver;\n              this[driverTypeKey] = driverName;\n\n              if (!DefinedDrivers[driverName]) {\n                // we don't need to wait for the promise,\n                // since the default drivers can be defined\n                // in a blocking manner\n                this.defineDriver(driver);\n              }\n            }\n          }\n\n          this._defaultConfig = extend({}, DefaultConfig);\n          this._config = extend({}, this._defaultConfig, options);\n          this._driverSet = null;\n          this._initDriver = null;\n          this._ready = false;\n          this._dbInfo = null;\n\n          this._wrapLibraryMethodsWithReady();\n\n          this.setDriver(this._config.driver)[\"catch\"](function () {});\n        } // Set any config values for localForage; can be called anytime before\n        // the first API call (e.g. `getItem`, `setItem`).\n        // We loop through options so we don't overwrite existing config\n        // values.\n\n\n        LocalForage.prototype.config = function config(options) {\n          // If the options argument is an object, we use it to set values.\n          // Otherwise, we return either a specified config value or all\n          // config values.\n          if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n              return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n              if (i === 'storeName') {\n                options[i] = options[i].replace(/\\W/g, '_');\n              }\n\n              if (i === 'version' && typeof options[i] !== 'number') {\n                return new Error('Database version must be a number.');\n              }\n\n              this._config[i] = options[i];\n            } // after all config options are set and\n            // the driver option is used, try setting it\n\n\n            if ('driver' in options && options.driver) {\n              return this.setDriver(this._config.driver);\n            }\n\n            return true;\n          } else if (typeof options === 'string') {\n            return this._config[options];\n          } else {\n            return this._config;\n          }\n        }; // Used to define a custom driver, shared across all instances of\n        // localForage.\n\n\n        LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n          var promise = new Promise$1(function (resolve, reject) {\n            try {\n              var driverName = driverObject._driver;\n              var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver'); // A driver name should be defined and not overlap with the\n              // library-defined, default drivers.\n\n              if (!driverObject._driver) {\n                reject(complianceError);\n                return;\n              }\n\n              var driverMethods = LibraryMethods.concat('_initStorage');\n\n              for (var i = 0, len = driverMethods.length; i < len; i++) {\n                var driverMethodName = driverMethods[i]; // when the property is there,\n                // it should be a method even when optional\n\n                var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n\n                if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                  reject(complianceError);\n                  return;\n                }\n              }\n\n              var configureMissingMethods = function configureMissingMethods() {\n                var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                  return function () {\n                    var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                    var promise = Promise$1.reject(error);\n                    executeCallback(promise, arguments[arguments.length - 1]);\n                    return promise;\n                  };\n                };\n\n                for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                  var optionalDriverMethod = OptionalDriverMethods[_i];\n\n                  if (!driverObject[optionalDriverMethod]) {\n                    driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                  }\n                }\n              };\n\n              configureMissingMethods();\n\n              var setDriverSupport = function setDriverSupport(support) {\n                if (DefinedDrivers[driverName]) {\n                  console.info('Redefining LocalForage driver: ' + driverName);\n                }\n\n                DefinedDrivers[driverName] = driverObject;\n                DriverSupport[driverName] = support; // don't use a then, so that we can define\n                // drivers that have simple _support methods\n                // in a blocking manner\n\n                resolve();\n              };\n\n              if ('_support' in driverObject) {\n                if (driverObject._support && typeof driverObject._support === 'function') {\n                  driverObject._support().then(setDriverSupport, reject);\n                } else {\n                  setDriverSupport(!!driverObject._support);\n                }\n              } else {\n                setDriverSupport(true);\n              }\n            } catch (e) {\n              reject(e);\n            }\n          });\n          executeTwoCallbacks(promise, callback, errorCallback);\n          return promise;\n        };\n\n        LocalForage.prototype.driver = function driver() {\n          return this._driver || null;\n        };\n\n        LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n          var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n          executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n          return getDriverPromise;\n        };\n\n        LocalForage.prototype.getSerializer = function getSerializer(callback) {\n          var serializerPromise = Promise$1.resolve(localforageSerializer);\n          executeTwoCallbacks(serializerPromise, callback);\n          return serializerPromise;\n        };\n\n        LocalForage.prototype.ready = function ready(callback) {\n          var self = this;\n\n          var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n              self._ready = self._initDriver();\n            }\n\n            return self._ready;\n          });\n\n          executeTwoCallbacks(promise, callback, callback);\n          return promise;\n        };\n\n        LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n          var self = this;\n\n          if (!isArray(drivers)) {\n            drivers = [drivers];\n          }\n\n          var supportedDrivers = this._getSupportedDrivers(drivers);\n\n          function setDriverToConfig() {\n            self._config.driver = self.driver();\n          }\n\n          function extendSelfWithDriver(driver) {\n            self._extend(driver);\n\n            setDriverToConfig();\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n          }\n\n          function initDriver(supportedDrivers) {\n            return function () {\n              var currentDriverIndex = 0;\n\n              function driverPromiseLoop() {\n                while (currentDriverIndex < supportedDrivers.length) {\n                  var driverName = supportedDrivers[currentDriverIndex];\n                  currentDriverIndex++;\n                  self._dbInfo = null;\n                  self._ready = null;\n                  return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                }\n\n                setDriverToConfig();\n                var error = new Error('No available storage method found.');\n                self._driverSet = Promise$1.reject(error);\n                return self._driverSet;\n              }\n\n              return driverPromiseLoop();\n            };\n          } // There might be a driver initialization in progress\n          // so wait for it to finish in order to avoid a possible\n          // race condition to set _dbInfo\n\n\n          var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n          }) : Promise$1.resolve();\n          this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n            return self.getDriver(driverName).then(function (driver) {\n              self._driver = driver._driver;\n              setDriverToConfig();\n\n              self._wrapLibraryMethodsWithReady();\n\n              self._initDriver = initDriver(supportedDrivers);\n            });\n          })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n          });\n          executeTwoCallbacks(this._driverSet, callback, errorCallback);\n          return this._driverSet;\n        };\n\n        LocalForage.prototype.supports = function supports(driverName) {\n          return !!DriverSupport[driverName];\n        };\n\n        LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n          extend(this, libraryMethodsAndProperties);\n        };\n\n        LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n          var supportedDrivers = [];\n\n          for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n\n            if (this.supports(driverName)) {\n              supportedDrivers.push(driverName);\n            }\n          }\n\n          return supportedDrivers;\n        };\n\n        LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n          // Add a stub for each driver API method that delays the call to the\n          // corresponding driver method until localForage is ready. These stubs\n          // will be replaced by the driver methods as soon as the driver is\n          // loaded, so there is no performance impact.\n          for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n          }\n        };\n\n        LocalForage.prototype.createInstance = function createInstance(options) {\n          return new LocalForage(options);\n        };\n\n        return LocalForage;\n      }(); // The actual localForage object that we expose as a module or via a\n      // global. It's extended by pulling in one of our other libraries.\n\n\n      var localforage_js = new LocalForage();\n      module.exports = localforage_js;\n    }, {\n      \"3\": 3\n    }]\n  }, {}, [4])(4);\n});","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/* eslint-disable */\r\nimport localforage from 'localforage';\r\n\r\nself.addEventListener('message', async ({ data }) => {\r\n    const { handlerKey, key, command, cache } = data;\r\n    switch (command) {\r\n        case 'load': {\r\n            await loadCache(handlerKey, key);\r\n            break;\r\n        }\r\n        case 'save': {\r\n            await saveCache(handlerKey, key, cache);\r\n            break;\r\n        }\r\n    }\r\n});\r\n\r\nasync function loadCache(handlerKey, key) {\r\n    const store = localforage.createInstance({ name: 'telegram' });\r\n    const cache = await store.getItem(key);\r\n\r\n    postMessage({ handlerKey, cache });\r\n}\r\n\r\nasync function saveCache(handlerKey, key, cache) {\r\n    const store = localforage.createInstance({ name: 'telegram' });\r\n    store.setItem(key, cache);\r\n\r\n    postMessage({ handlerKey });\r\n}\r\n","var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;"],"sourceRoot":""}