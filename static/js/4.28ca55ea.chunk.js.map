{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Channel.js","Utils/Supergroup.js","Components/Additional/MentionLink.js","Utils/Message.js","Components/Message/Media/Call.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Venue.js","Utils/Media.js","Assets/Icons/Close.js","Stores/PlayerStore.js","Utils/User.js","Components/Viewer/FileProgress.js","Workers/Helpers.js","Workers/BlobInflator.js","Components/Message/Media/Sticker.js","Stores/StickerStore.js","Stores/BasicGroupStore.js","Components/Tile/UserTile.js","Components/Message/Media/Photo.js","Utils/Date.js","Components/Additional/SafeLink.js","Stores/InstantViewStore.js","Assets/Icons/Download.js","Components/Message/MessageAuthor.js","Components/Tile/User.js","Components/Message/Media/Animation.js","Assets/Icons/PlayArrow.js","Utils/Currency.js","Utils/ServiceMessage.js","Utils/Url.js","Components/Message/Media/Audio.js","Assets/Icons/Pause.js","Components/Tile/DocumentTile.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Location.js","Components/Message/Media/Video.js","Components/Message/Media/MediaStatus.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/DeletedAccount.js","Actions/Poll.js","Components/Tile/UserStatus.js","Stores/PollStore.js","Utils/Poll.js","Utils/Punycode.js","Components/Message/Media/VideoNote.js","Components/Tile/VoiceNoteTile.js","Assets/Icons/Smile.js","Components/Message/Media/FireworksControl.js","Assets/Icons/Check.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Tile/UserPlaceholder.js","Components/Popup/PollOptionResult.js","Components/Popup/PollOptionResults.js","Components/Popup/PollResultsDialog.js","Components/Message/Media/Poll.js","Assets/Icons/Document.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VoiceNote.js","Workers/pako.worker.js","Notifications.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Actions/Chat.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/Archive.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Additional/KeyboardManager.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/Main.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Done.js","Assets/Icons/Send.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Assets/Icons/Share.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["FileStore","EventEmitter","constructor","super","reset","this","callbacks","db","urls","WeakMap","dataUrls","Map","items","blobItems","locationItems","downloads","uploads","onUpdate","update","a","onUpdateAuthorizationState","set","file","onUpdateFile","emit","onClientUpdate","addTdLibListener","TdLibController","on","removeTdLibListener","off","authorization_state","initDB","handleDownloads","handleUploads","arr","id","local","idb_key","has","is_downloading_completed","get","delete","store","getStore","forEach","item","handleAnimation","handleAudio","handleChat","handleDocument","handleGame","handleLocation","handleMessage","handlePageBlockMap","handlePhoto","handleSticker","handleVideo","handleVideoNote","handleVoiceNote","handleUser","console","error","remote","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","audio","photo","document","game","location","sticker","web_page","video","video_note","voice_note","venue","obj","chatId","chat_id","messageId","thumbnail","source","updateAnimationThumbnailBlob","THUMBNAIL_PRIORITY","updateAnimationBlob","album_cover_thumbnail","updateAudioThumbnailBlob","updateAudioBlob","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","pageBlockMap","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","i","sizes","length","photoSize","updatePhotoBlob","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","deleteLocalFile","fileId","getBlob","setBlob","blob","deleteBlob","setLocationFile","getDataUrl","setDataUrl","dataUrl","deleteDataUrl","getBlobUrl","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","callback","initiatingDB","push","openDB","catch","log","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","getReadWriteStore","faultCallback","send","file_id","response","data","then","priority","some","x","cancelGetRemoteFile","filter","only_if_pending","uploadFile","cancelUploadFile","message_ids","revoke","userId","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","PRELOAD_AUDIO_SIZE","loadAnimationContent","PRELOAD_ANIMATION_SIZE","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","PRELOAD_DOCUMENT_SIZE","loadGameContent","width","height","zoom","LOCATION_ZOOM","scale","LOCATION_SCALE","loadLocationContent","LOCATION_WIDTH","LOCATION_HEIGHT","loadBigPhotoContent","getSize","PHOTO_BIG_SIZE","displaySize","PHOTO_SIZE","getPhotoSize","loadPhotoThumbnailContent","thumbSize","getPhotoThumbnailSize","loadStickerContent","PRELOAD_STICKER_SIZE","loadVideoContent","PRELOAD_VIDEO_SIZE","loadVideoNoteContent","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","keys","saveMedia","media","file_name","saveOrDownload","saveAnimation","saveDocument","savePhoto","saveVideo","fileName","mime","Blob","type","saveData","can_be_downloaded","getViewerThumbnail","getViewerFile","getMediaPreviewFile","getMediaFile","cancelLoadMediaViewerContent","loadMediaViewerContent","useSizeLimit","cancelPreloadMediaViewerContent","index","history","preloadMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","small","big","getChatUserId","getProfilePhoto","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","loadChatPhotoContent","loadChatsContent","loadDraftContent","draft_message","loadRecentStickersContent","recent","loadStickersContent","stickers","loadStickerSetContent","stickerSet","loadBackgroundsContent","backgrounds","background","loadBackgroundContent","full","is_animated","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","loadInstantViewContent","instantView","page_blocks","pageBlock","loadPageBlockContent","b","caption","author","loadRichTextContent","text","credit","cover","header","poster_photo","author_photo","footer","kicker","loadPageBlockMapContent","IV_PHOTO_SIZE","articles","subheader","subtitle","cells","row","title","t","texts","getAnimationData","fileReader","FileReader","onload","event","JSON","parse","target","onabort","readAsText","canUnpinMessage","pinned_message_id","isChatArchived","chat_list","canSetChatChatList","is_sponsored","isMeChat","SERVICE_NOTIFICATIONS_USER_ID","draftEquals","draft1","draft2","inputMessageText1","input_message_text","replyToMessageId1","inputMessageText2","formattedText1","formattedText2","text1","entities1","entities","text2","entities2","offset","every","entitiesEquals","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","next","value","action","getPrivateChatTypingString","firstUser","secondUser","first_name","second_name","getGroupChatTypingString","getMessageSenderFullName","k","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","key","getContent","showChatUnreadMentionCount","unread_mention_count","showChatUnreadCount","is_marked_as_unread","unread_count","isChatUnread","isChatMuted","notification_settings","use_default_mute_for","mute_for","settings","NotificationStore","isChannelChat","getScopeNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","is_member","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getChannelStatus","getSupergroupStatus","getChatSubtitle","showSavedMessages","chatTypingString","getChatLetters","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","formatPhoneNumber","phone_number","getChatBio","description","bio","isPrivateChat","isGroupChat","isChatMember","getChatTitle","isDeletedPrivateChat","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendMediaMessages","globalPermissions","permissions","can_send_media_messages","getChatShortTitle","canClearHistory","Boolean","canDeleteChat","canSendPolls","can_send_polls","canSendMessages","can_send_messages","getChatDraft","getChatDraftReplyToMessageId","replyToMessageId","canPinMessages","can_pin_messages","isChatVerified","is_verified","isChatSecret","MentionLink","React","Component","props","handleClick","stopPropagation","preventDefault","popup","openUser","setState","openChat","handleClose","handleDialogClick","state","prevUserId","prevUsername","render","children","onClick","Dialog","transitionDuration","onClose","aria-labelledby","DialogTitle","DialogContent","classes","root","DialogContentText","DialogActions","Button","defaultProps","withTranslation","isMetaBubble","isMessageUnread","last_read_inbox_message_id","last_read_outbox_message_id","is_outgoing","isMe","getTitle","substring","start","end","searchCurrentChat","AppStore","searchChat","getFormattedText","formattedText","deleteLineBreakAfterPre","entity","textBefore","textBeforeLength","substr","entityKey","entityText","command","rel","SafeLink","textAfter","getText","meta","concat","getWebPage","d","getDateHint","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getSenderUserId","filterDuplicateMessages","reduce","accumulator","current","filterMessages","ttl","getServiceMessageContent","poll","question","emoji","isMediaContent","longitude","latitude","isVideoMessage","isLottieMessage","endsWith","isAnimationMessage","isContentOpened","is_listened","is_viewed","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","message_id","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","openVideo","openVideoNote","openVoiceNote","openMedia","openChatPhoto","openContact","openGame","isDeletedMessage","getReplyMinithumbnail","minithumbnail","getReplyPhotoSize","getEmojiMatches","textContent","m","lastIndex","emojiMatches","re","emojiRegex","exec","messageComparatorDesc","left","right","checkInclusion","checkIntersection","startIndex","endIndex","checkEntity","removeOffsetAfter","countToRemove","e","addOffsetAfter","countToAdd","removeEntities","entityStart","entityEnd","splice","addTextNode","nodes","node","createTextNode","getNodes","sort","prevEntity","innerText","dataset","getDecodedUrl","getEntities","replace","join","isPre","DOMParser","parseFromString","finalText","childNodes","nodeName","indexOf","language","lastChar","firstChar","c","checkString","checkChar","prevChar","canMessageBeEdited","can_be_edited","showMessageForward","isTextMessage","isMessagePinned","canMessageBeUnvoted","is_closed","options","is_chosen","is_being_chosen","canMessageBeClosed","canMessageBeForwarded","can_be_forwarded","canMessageBeDeleted","can_be_deleted_only_for_self","can_be_deleted_for_all_users","getMessageStyle","fitSize","getFitSize","PHOTO_DISPLAY_SIZE","Call","duration","callTitle","getCallTitle","durationString","getDurationString","Math","floor","className","classNames","IconButton","color","aria-label","fontSize","Contact","last_name","fullName","number","UserTile","firstName","lastName","Game","Animation","fitPhotoSize","Photo","Venue","venueTitle","address","Location","discard_reason","isEditedMedia","isValidAnimatedSticker","sending_state","isBlurredThumbnail","blurredSize","THUMBNAIL_BLURRED_SIZE_90","max","performer","trimmedTitle","trim","trimmedPerformer","getAudioShortTitle","getAudioSubtitle","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","setIndex","findIndex","stickerIndex","prevRows","ceil","toRowColumn","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","getInputMediaThumbnail","getInputMediaCaption","getInputMediaContent","live_period","added_sticker_file_ids","supports_streaming","waveform","getMedia","hasTitle","hasCaption","inlineMeta","Audio","duraton","discardReason","Document","Poll","Sticker","StickerSourceEnum","MESSAGE","Video","VideoNote","VoiceNote","getMediaDocumentFromFile","getRandomInt","name","mime_type","expected_size","getMediaPhotoFromFile","startsWith","readImageSize","has_stickers","createSvgIcon","RepeatEnum","Object","freeze","NONE","REPEAT","REPEAT_ONE","PlayerStore","playlist","time","videoStream","close","getPlaylist","volume","savePlayerSettings","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","currentTime","timestamp","stream","useRepeatShuffle","nextIndex","currentPlaylist","totalCount","query","from_message_id","limit","total_count","loadPlayerSettings","player","localStorage","getItem","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","setItem","stringify","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","isUserBlocked","is_blocked","getUserLetters","firstNameSymbol","getFirstLetter","lastNameSymbol","getUserStatusOrder","expires","PROFILE_PHOTO_SMALL_SIZE","PROFILE_PHOTO_BIG_SIZE","getProfilePhotoDateHint","userProfilePhoto","added_date","isDeletedUser","FileProgress","currentFile","nextFile","fileEquals","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","shouldComponentUpdate","nextProps","nextState","icon","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","componentDidMount","mount","componentWillUnmount","file1","file2","local1","remote1","local2","remote2","can_be_deleted","download_offset","downloaded_prefix_size","path","cancelButton","zIndex","completeIcon","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","circle","variant","thickness","randomString","random","toString","slice","worker","PakoWorker","handlers","inflateBlob","postMessage","onmessage","msg","Lottie","lazy","HINTS","PICKER_HEADER","PICKER","PREVIEW","STICKER_SET","UNKNOWN","onClientUpdateInstantViewContent","openIV","InstantViewStore","getCurrent","startStopAnimation","onClientUpdateDialogChatId","dialogChatId","ApplicationStore","onClientUpdateMediaViewerContent","openMediaViewer","mediaViewerContent","onClientUpdateProfileMediaViewerContent","openProfileMediaViewer","profileMediaViewerContent","onClientUpdateStickerPreview","stickerPreview","onClientUpdateMessagesInView","inView","onClientUpdateStickerSet","openedStickerSet","onClientUpdateFocusWindow","focused","windowFocused","onClientUpdateStickerBlob","loadContent","forceUpdate","onClientUpdateStickerThumbnailBlob","autoplay","play","isAnimated","animationData","handleMouseEnter","handleAnimationMouseEnter","entered","lottieRef","loopCount","handleAnimationLoopComplete","handleAnimationMouseOut","createRef","hasFocus","StickerStore","animationDate","hasError","componentDidCatch","errorInfo","nextContext","blur","componentDidUpdate","prevProps","prevState","snapshot","pause","paused","preview","src","isBlurred","draggable","alt","Suspense","fallback","ref","loop","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","eventListeners","eventName","onMouseOut","stickerStyle","onMouseEnter","STICKER_DISPLAY_SIZE","hint","sticker_set_ids","is_installed","assign","foundStickers","setAnimationData","fullInfoItems","basic_group","setFullInfo","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","loaded","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","handleLoad","fistName","dialog","pointer","tileLoaded","tileColor","abs","onLoad","onClientUpdatePhotoBlob","thumbnailSize","prevPhoto","showProgress","miniSrc","thumbSrc","photoStyle","hasSrc","PHOTO_THUMBNAIL_SIZE","token","timezone","timezoneClip","mask","utc","gmt","arguments","kindOf","test","undefined","isNaN","TypeError","maskSlice","String","masks","_","D","y","H","M","s","L","o","getTimezoneOffset","W","getWeek","N","getDayOfWeek","flags","dd","pad","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","round","timeNames","tt","T","TT","Z","match","S","val","len","targetThursday","getFullYear","getMonth","firstThursday","ds","getHours","weekDiff","dow","Array","isArray","call","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","confirm","handleDone","newWindow","opener","handleSafeClick","isTelegramLink","messageLinkInfo","displayText","mail","prevUrl","prevDisplayText","safe","isUrlSafe","decodedUrl","getHref","lowerCaseUrl","viewerContent","prevInstantView","hasPrev","MessageAuthor","openUserCommand","openChatCommand","User","showStatus","startStopPlayer","videoRef","ivInView","openIVMedia","onClientUpdateInstantViewViewerContent","onClientUpdateBlocksInView","blocks","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","setPlayerParams","animationStyle","isGif","poster","muted","autoPlay","playsInline","iv","transform","currency","list","symbol","getPow","includes","getString","totalAmount","amount","pow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","Currency","total_amount","getMessageAuthor","pinnedMessage","pinnedContent","maxLength","domain_name","regExpRTLO","hasRTLOSymbol","decodedHref","decodeURI","domain","punycode","ToUnicode","regExpDomainExplicit","RegExp","regExpDomain","regExpProtocol","validateUrl","trimmed","domainMatch","protocolMatch","isGoodProtocol","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","audioTitle","audioSubtitle","DocumentTile","onClientUpdateDocumentThumbnailBlob","AudioAction","timeString","getTimeString","onClientUpdateMediaTime","playerDuration","Infinity","currentTimeString","audioDuration","theme","isDownloadingActive","isUploadingActive","sizeString","onClientUpdateLocationBlob","locationStyle","onClientUpdateVideoThumbnailBlob","videoStyle","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","STICKER_PREVIEW_DISPLAY_SIZE","stroke","strokeWidth","strokeLinejoin","fill","cx","cy","r","setPollAnswer","optionIds","option_ids","cancelPollAnswer","stopPoll","reply_markup","UserStatus","onUpdateUserStatus","isAccent","PollStore","allow_multiple_answers","is_anonymous","isAnonymous","allowMultipleAnswers","newType","correct_option_id","option","source1","source2","getInputMessagePoll","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","POLL_OPTION_LENGTH","hasPollData","utf16","decode","input","extra","output","charCodeAt","RangeError","encode","fromCharCode","maxint","encode_digit","flag","adapt","delta","numpoints","firsttime","preserveCase","n","out","bias","basic","j","ic","oldi","w","digit","cp","case_flags","input_length","lastIndexOf","toUpperCase","q","ijv","bcp","Error","ToASCII","domain_array","circleStyle","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","getTracks","track","stop","onCanPlay","VoiceNoteTile","Particle","fireworks","colorType","side","typeSize","xFinished","finishedStart","rotation","moveX","moveY","draw","ctx","fillStyle","beginPath","arc","PI","save","translate","rotate","radius","tl","tr","br","bl","defaultRadius","moveTo","lineTo","quadraticCurveTo","closePath","roundRect","restore","dt","moveCoef","dp","wasNegative","speedCoef","fallingDownCount","getMeasuredHeight","min","Fireworks","context","particlesCount","fallParticlesCount","particles","canvas","clientHeight","getMeasuredWidth","clientWidth","createParticle","fall","particle","colors","xOffset","yOffset","started","startedFall","lastUpdateTime","startFall","newTime","clearRect","p","requestAnimationFrame","FireworksComponent","onResize","canvasRef","parentNode","attachToParent","detachFromParent","addEventListener","removeEventListener","getContext","position","top","pointerEvents","PollRadio","chosen","beingChosen","hidden","onChange","Radio","colorPrimary","disabled","TouchRippleProps","child","checked","checkedIcon","CircularProgress","PollPercentage","updateAnimation","stopAnimation","handle","onAnimationFrame","cancelAnimationFrame","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","animated","prevPropsValue","closed","PollOption","getTitleString","canBeSelected","onVote","maxVoterCount","isCorrect","voter_count","vote_percentage","isMultiChoosen","Close","Check","LinearProgress","bar","UserPlaceholder","titleWidth","sin","contentWidth","cos","marginLeft","PollOptionResult","ListItem","button","PollOptionResults","handleShowMore","newOffset","newCount","POLL_RESULTS_SLICE_LENGTH","updateVoters","handleCollapse","POLL_RESULTS_FIRST_SLICE_LENGTH","POLL_RESULTS_LEAVE_LENGTH","voters","loadMore","optionId","option_id","user_ids","offset2","isQuiz","results","voterCount","showMoreButton","showMoreCount","showMore","fullWidth","showCollapse","PollResultsDialog","onClientUpdateClosePollResults","handleContextMenu","container","paper","onContextMenu","getTotalVoterCountString","handleSubmit","viewResults","handleVote","handleOpenResults","viewResultsPoll","handleCloseResults","fireworksRef","getOptionType","getOptionIsCorrect","total_voter_count","recent_voter_user_ids","isSelected","showViewResults","showButton","buttonEnabled","recentVoters","marginRight","textPrimary","fillRule","mixBlendMode","opacity","DocumentAction","Download","thumb","viewBox","data-name","data-ext","VoiceNoteSlider","getValue","PLAYER_PROGRESS_TIMEOUT_MS","Slider","module","exports","Worker","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","OnlineStatus","online","borderSize","padding","ChatTile","onFastUpdatingComplete","showOnline","DeletedAccount","ForwardTargetChat","selected","shortTitle","copy","element","all","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","select","execCommand","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","currentPackId","OptionStore","suggestedPackId","latinInput","getLatinInput","ForwardDialog","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","savedMessagesPromise","force","chats","savedMessages","chatIds","chat_ids","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","input_message_content","disable_web_page_preview","clear_draft","from_chat_id","as_album","handleChangeSelection","innerHTML","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","hasSearchText","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","focus","searchResultsMap","filteredResults","foundChats","aria-describedby","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","autoFocus","enhance","compose","withSnackbar","isVerified","DialogStatus","updateSubtitle","find","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","onUpdateSupergroup","prevChatId","externalSubtitle","Chat","onTileSelect","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","setChatChatList","chatList","toggleChatIsPinned","isPinned","is_pinned","toggleChatIsMarkedAsUnread","isMarkedAsUnread","toggleChatNotificationSettings","isMuted","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","getChatCounters","photoCounter","return_local","videoCounter","documentCounter","audioCounter","urlCounter","voiceAndVideoNoteCounter","Notifications","onUpdateChatNotificationSettings","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","ListItemIcon","ListItemText","primary","Typography","noWrap","ListItemSecondaryAction","Switch","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isGroup","isBlocked","isMember","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","inset","ChatDetails","loadChatContents","handleUsernameHint","telegramUrlOption","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","getSnapshotBeforeUpdate","scrollHeight","offsetHeight","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","member","wordWrap","Divider","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList","MenuItem","SharedDocument","contextMenu","handleOpenContextMenu","clientX","clientY","handleCloseContextMenu","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","SpeedDialIcon","openIcon","SharedMediaBase","getListClassName","getSearchListClassName","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","isValidContent","insertByOrder","onUpdateNewMessage","isValidMessage","onUpdateDeleteMessages","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","finally","incompleteResults","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","hasSearch","getItemTemplate","getHeader","searchMessages","onScroll","SharedAudios","propTypes","PropTypes","isRequired","func","bool","SharedDocuments","SharedLink","isValidEntityType","getTitleFromUrl","hostname","webPage","display_url","typeUrl","SharedLinks","SharedMedia","handleChange","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","label","minWidth","SharedPhoto","backgroundImage","backgroundSize","SharedPhotos","SharedVideo","SharedVideos","SharedVoiceNote","dateString","toLocaleDateString","month","year","hour","minute","hour12","SharedVoiceNotes","ChatInfo","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","setCounters","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","Archive","openArchive","onClientUpdateClearHistory","clearHistory","contentControl","draft","senderName","x1","y1","x2","y2","strokeLinecap","DialogBadge","showUnreadMentionCount","showUnreadCount","Pin","Status","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","unread","prevMessageId","Pending","Sent","Succeeded","DialogMeta","previousChatId","contextMenuId","canPinChats","canTogglePin","canToggleArchive","handleMute","pinnedSumMaxOption","isSecret","pinnedSum","handlePin","handleArchive","getViewInfoTitle","handleViewInfo","handleRead","forceRead","force_read","viewMessages","isLastPinned","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","getListRenderIds","getListRef","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","DialogListItem","DialogsList","onClientUpdateLeaveChat","hiddenChats","authorizationState","loadFirstSlice","isAuthorizationReady","saveCache","onSaveCache","onUpdateChatOrder","order","newChatIds","reorderChats","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","orderCompare","isDifferentOrder","oldChatIds","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","scrollToTop","dialogs","lastPinnedId","innerListRef","KeyboardHandler","manager","handler","add","remove","TopChat","PureComponent","onDelete","Delete","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderFullName","tile","SectionHeader","multiline","Search","concatSearchResults","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","recentlyFound","trimmedText","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","searchOrLoadContent","KeyboardManager","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","MainMenuButton","handleMenuOpen","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewGroup","handleContacts","handleArchived","handleSaved","handleSettings","handleHelp","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Saved","Help","aria-owns","aria-haspopup","SearchInput","nativeEvent","stopImmediatePropagation","handleInput","inputRef","onFocus","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","setInitQuery","searchInput","ANIMATION_DURATION_100MS","SidebarPage","Slide","direction","mountOnEnter","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","main","palette","FormControl","FormLabel","RadioGroup","FormControlLabel","control","withTheme","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","Edit","Data","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","firstNameRef","lastNameRef","bioRef","userFullInfo","setName","setBio","setUsername","newFirstName","newLastName","newBio","usernameLabel","TextField","defaultValue","Wallpaper","wallpaper","backgroundPosition","ChatBackground","selectedId","wallpapers","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","LocalizationStore","language_packs","tabIndex","inputProps","secondary","native_name","handleMuteFor","property","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","isEnabled","showPreview","Checkbox","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","role","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","handleCloseSettings","load","removeItem","clear","CacheStore","cache","contacts","CacheManager","saveChatsInternal","loadCache","files","parseCache","archiveChats","basicGroups","supergroups","OutputTypingManager","updateChatChatList","getCache","archiveChatIds","fileMap","userMap","basicGroupMap","supergroupMap","entries","saveChats","readAsDataURL","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","userIds","localeCompare","throttle","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","getArchiveTitle","archive","chatsOrder","Dialogs","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","onUpdateChatChatList","prevShowArchive","archiveList","listCurrent","onClientUpdateContacts","openContacts","onClientUpdateSettings","openSettings","meChatId","onClientUpdateArchive","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsHeaderRef","visible","handleSaveCache","handleCloseArchive","handleCloseContacts","mainItems","archiveItems","mainChatIds","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","focusNode","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","optionTextRef","remainLength","hasSelection","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","data-length","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleConfirmationDone","onSend","inputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textInputRef","textError","urlError","onDone","handleCancel","onCancel","textRef","urlRef","prevOpen","flexDirection","margin","autoComplete","ReplyTile","isVideoNote","Reply","onGetMessageResult","handleOpen","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","onEdit","editFile","editMedia","sendAsPhoto","editMessageAction","altKey","ctrlKey","metaKey","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","handleSendAsPhoto","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","onEnter","accept","lastAction","setTyping","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","setEditMessage","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateStickerSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateReply","setInputFocus","beforeEditText","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","getDraftMessage","inputContent","editedMessage","editMessageText","editMessageCaption","attachPhotoRef","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","cachedMessage","handleSendingMessage","handleSendPoll","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setHints","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","sendFile","sendAsFile","performance","cancel","isMediaEditing","multiple","Done","Send","FooterCommand","onCommand","Footer","handleJoin","handleDeleteAndExit","remove_from_chat_list","NotificationTimer","handleTimer","expire","timerId","clearInterval","setMilliseconds","getMilliseconds","setInterval","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","getLeaveChatTitle","handleUnpin","deleteChat","leaveChatTitle","unpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","isAccentSubtitle","HeaderChat","HeaderCommand","selectedItems","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","code","deletedMessage","getClientData","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","onMouseLeave","visibility","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","onClientUpdateMediaPlaylist","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHintStr","dateStr","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","handleUnvote","copyLink","handleReply","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","canCopyLink","canBeUnvoted","canBeClosed","canBeReplied","canBePinned","canBeEdited","hasSelectedMessage","openInstantView","force_full","setInstantViewContent","WebPage","displaySmallSize","displayExtraSmallSize","site_name","smallPhoto","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","shook","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","showForward","showReply","suppressTitle","withBubble","onMouseOver","onAnimationEnd","Placeholder","onClientUpdateCacheLoaded","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","getSticker","mouseDownStickerId","handleMouseUp","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","scrollDownButtonRef","historyEquals","previousChat","MAX_VALUE","highlightMessage","viewAction","cancelLoadMessageContents","getMessagePhoto","getMessageSticker","oldMessageId","showMessageTitle","prevMessage","isFirst","MESSAGE_SPLIT_MAX_TIME_S","showMessageDate","prevDate","nextMessage","nextShowTitle","ShareStickerSetButton","getStickersLink","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","IVContext","createContext","withIV","IVComponent","Consumer","RichText","richText","email_address","emailAddress","getRichText","object","Anchor","Caption","hasText","isEmptyText","hastCredit","block","need_autoplay","IV_PHOTO_DISPLAY_SIZE","AuthorDate","publishDate","hasAuthor","hasDate","dateTime","toISOString","Blockquote","pageBlocks","getPageBlock","Cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","getElementById","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","componentWillReceiveProps","frameBorder","Embedded","html","prevHtml","setIframeSource","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","authorPhoto","ErrorHandler","componentStack","Kicker","data-before","Paragraph","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","publish_date","Subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","ChatLink","needAutoplay","isLooped","openInstantViewMedia","setInstantViewViewerContent","is_open","posterPhoto","is_full_width","allow_scrolling","is_bordered","is_striped","is_header","is_looped","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","dir","MediaCaption","InstantViewMediaViewerContent","onClientUpdateMediaThumbnailBlob","prevMedia","speed","isPlaying","thumbnailBlob","videoWidth","videoHeight","handleContentClick","onVolumeChange","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","hasNextMedia","handleSave","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewUrl","hash","scrollToHash","handleBack","hasScroll","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","scrollIntoView","Provider","alignItems","transition","MediaInfo","dateHint","tileControl","MediaViewerContent","updateAnimationData","changeSpeed","isVideo","isAnimation","isLottie","MediaViewer","deleteConfirmationOpened","currentMessageId","firstSliceLoaded","inserted","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","MEDIA_SLICE_LIMIT","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","ProfileMediaViewerContent","ProfileMediaInfo","ProfileMediaViewer","currentIndex","inputFile","chatPhoto","prevFileId","currentFileId","inHistory","MainPage","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.28ca55ea.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\nconst useDownloadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.dataUrls = new Map();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateSendFiles': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n\n        const { authorization_state } = update;\n        if (!authorization_state) return;\n\n        switch (authorization_state['@type']) {\n            case 'authorizationStateWaitTdlibParameters': {\n                await this.initDB();\n                break;\n            }\n            case 'authorizationStateClosed': {\n                this.reset();\n                break;\n            }\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'animation': {\n                    this.handleAnimation(store, item, file, arr, null);\n                    break;\n                }\n                case 'audio': {\n                    this.handleAudio(store, item, file, arr, null);\n                    break;\n                }\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'document': {\n                    this.handleDocument(store, item, file, arr, null);\n                    break;\n                }\n                case 'game': {\n                    this.handleGame(store, item, file, arr, null);\n                    break;\n                }\n                case 'location': {\n                    this.handleLocation(store, item, file, arr, null);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'pageBlockMap': {\n                    this.handlePageBlockMap(store, item, file, arr, null);\n                    break;\n                }\n                case 'photo': {\n                    this.handlePhoto(store, item, file, arr, null);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'video': {\n                    this.handleVideo(store, item, file, arr, null);\n                    break;\n                }\n                case 'videoNote': {\n                    this.handleVideoNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'voiceNote': {\n                    this.handleVoiceNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || animation)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || animation)\n                );\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || audio)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || audio)\n                );\n            }\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || document)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || document)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || location)\n                );\n            }\n        }\n    };\n\n    handlePageBlockMap = (store, pageBlockMap, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const { location } = pageBlockMap;\n        const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || pageBlockMap)\n                );\n            }\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(chatId, messageId, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || photo)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || voiceNote)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || video)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || video)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            // console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            // console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        // console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        // console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            // console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        if (useReadFile) {\n            file = this.get(file.id) || file;\n            if (file && file.local && !file.local.is_downloading_completed) {\n                faultCallback();\n                return;\n            }\n\n            (async file => {\n                // console.log('[fs] readFile file_id=' + file.id);\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n\n                // console.log(`[fs] readFile result file_id=${file.id}`, file, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getDataUrl = id => {\n        if (!id) {\n            return null;\n        }\n\n        if (this.dataUrls.has(id)) {\n            return this.dataUrls.get(id);\n        }\n\n        return null;\n    };\n\n    setDataUrl = (id, dataUrl) => {\n        this.dataUrls.set(id, dataUrl);\n    };\n\n    deleteDataUrl = id => {\n        this.dataUrls.delete(id);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    IV_LOCATION_HEIGHT,\n    IV_LOCATION_WIDTH,\n    IV_PHOTO_SIZE,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return '';\n\n    let size = file.size;\n    if (!size) return '';\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || audio);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || audio)\n    );\n\n    return true;\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || animation);\n            }\n        }\n    );\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || animation)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || document);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || document)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadPageBlockMapContent(store, pageBlockMap, message) {\n    if (!pageBlockMap) return;\n\n    const { location } = pageBlockMap;\n    const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: IV_LOCATION_WIDTH,\n            height: IV_LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || pageBlockMap)\n    );\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || location)\n    );\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message, displaySize = PHOTO_SIZE) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes, displaySize);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const thumbSize = getPhotoThumbnailSize(photo.sizes);\n    if (!thumbSize) return false;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (photoSize === thumbSize) return;\n\n    let { photo: file } = thumbSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || video);\n            }\n        }\n    );\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || video)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || videoNote);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || videoNote)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || voiceNote);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nexport function saveMedia(media, message) {\n    if (!media) return;\n\n    switch (media['@type']) {\n        case 'animation': {\n            saveAnimation(media, message);\n            break;\n        }\n        case 'document': {\n            saveDocument(media, message);\n            break;\n        }\n        case 'photo': {\n            savePhoto(media, message);\n            break;\n        }\n        case 'video': {\n            saveVideo(media, message);\n            break;\n        }\n    }\n}\n\nfunction saveAnimation(animation, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!animation) return;\n\n    const { animation: file, file_name } = animation;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || animation, () =>\n        FileStore.updateAnimationBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveDocument(document, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!document) return;\n\n    const { document: file, file_name } = document;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || document, () =>\n        FileStore.updateDocumentBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveVideo(video, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!video) return;\n\n    const { video: file, file_name } = video;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || video, () =>\n        FileStore.updateVideoBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction savePhoto(photo, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!photo) return;\n\n    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    const { photo: file } = photoSize;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, fileId + '.jpg', message || photo, () => FileStore.updatePhotoBlob(chatId, messageId, fileId));\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nfunction getViewerThumbnail(media) {\n    if (!media) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'document': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'photo': {\n            return getViewerFile(media, PHOTO_SIZE);\n        }\n        case 'video': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getViewerFile(media, size) {\n    if (!size) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            return [media.width, media.height, media.animation];\n        }\n        case 'photo': {\n            const photoSize = getSize(media.sizes, size);\n            if (photoSize) {\n                return [photoSize.width, photoSize.height, photoSize.photo];\n            }\n            break;\n        }\n        case 'document': {\n            return [50, 50, document.document];\n        }\n        case 'video': {\n            return [media.width, media.height, media.video];\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                return [animation.width, animation.height, animation.animation];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    return [animation.width, animation.height, animation.animation];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        return [photoSize.width, photoSize.height, photoSize.photo];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    return [video.width, video.height, video.video];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                return [video.width, video.height, video.video];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    // preview\n                    /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\n                    if (previewPid) {\n                        let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\n                        if (!preview.blob){\n                            FileStore.getLocalFile(store, preview, null,\n                                () => MessageStore.updateMessagePhoto(message.id),\n                                () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\n                                'load_contents_preview_',\n                                message.id);\n\n                        }\n                    }*/\n\n                    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n                    if (!photoSize) break;\n\n                    const { photo: file } = photoSize;\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) return;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    if (video.thumbnail) {\n                        const { photo: file } = video.thumbnail;\n                        const blob = file.blob || FileStore.getBlob(file.id);\n                        if (blob) break;\n\n                        FileStore.cancelGetRemoteFile(file.id);\n                    }\n\n                    const { video: file } = video;\n                    if (!file) break;\n\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) break;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { video } = web_page;\n\n                        if (video) {\n                            if (video.thumbnail) {\n                                const { photo: file } = video.thumbnail;\n                                const blob = file.blob || FileStore.getBlob(file.id);\n                                if (blob) break;\n\n                                FileStore.cancelGetRemoteFile(file.id);\n                            }\n\n                            const { video: file } = video;\n                            if (!file) break;\n\n                            const blob = file.blob || FileStore.getBlob(file.id);\n                            if (blob) break;\n\n                            FileStore.cancelGetRemoteFile(file.id);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const dataUrl = FileStore.getDataUrl(id);\n    if (dataUrl) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    loadChatPhotoContent(store, photo, chat.id);\n}\n\nfunction loadChatPhotoContent(store, photo, chatId) {\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nexport function loadRecentStickersContent(store, recent) {\n    if (!recent) return;\n\n    const { stickers } = recent;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nexport function loadBackgroundsContent(store, backgrounds) {\n    if (!backgrounds) return;\n\n    backgrounds.forEach(background => {\n        loadBackgroundContent(store, background, false);\n    });\n}\n\nexport function loadBackgroundContent(store, background, full = false) {\n    if (!background) return;\n\n    switch (background.type['@type']) {\n        case 'backgroundTypeFill': {\n            break;\n        }\n        case 'backgroundTypePattern': {\n            const { document } = background;\n            if (document) {\n                loadDocumentThumbnailContent(store, document, null);\n                if (full) loadDocumentContent(store, document, null, false);\n            }\n            break;\n        }\n        case 'backgroundTypeWallpaper': {\n            const { document } = background;\n            if (document) {\n                loadDocumentThumbnailContent(store, document, null);\n                if (full) loadDocumentContent(store, document, null, false);\n            }\n            break;\n        }\n    }\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n        if (sticker.is_animated) {\n            loadStickerContent(store, sticker, null);\n        }\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const dataUrl = file && FileStore.getDataUrl(file.id);\n    if (dataUrl) return dataUrl;\n\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nfunction loadInstantViewContent(instantView) {\n    if (!instantView) return;\n\n    const { page_blocks } = instantView;\n    if (!page_blocks) return;\n\n    const store = FileStore.getStore();\n\n    page_blocks.forEach(pageBlock => loadPageBlockContent(store, pageBlock));\n}\n\nfunction loadPageBlockContent(store, b) {\n    if (!b) return;\n\n    switch (b['@type']) {\n        case 'pageBlockAnchor': {\n            break;\n        }\n        case 'pageBlockAnimation': {\n            const { animation, caption } = b;\n\n            loadAnimationThumbnailContent(store, animation, null);\n            loadAnimationContent(store, animation, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAudio': {\n            const { audio, caption } = b;\n\n            loadAudioThumbnailContent(store, audio, null);\n            loadAudioContent(store, audio, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            const { author } = b;\n\n            loadRichTextContent(store, author);\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockCaption': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockChatLink': {\n            const { photo } = b;\n\n            loadChatPhotoContent(store, photo, 0);\n            break;\n        }\n        case 'pageBlockCollage': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockCover': {\n            const { cover } = b;\n\n            loadPageBlockContent(store, cover);\n            break;\n        }\n        case 'pageBlockDetails': {\n            const { header, page_blocks } = b;\n\n            loadPageBlockContent(store, header);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockDivider': {\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            const { poster_photo, caption } = b;\n\n            loadPhotoContent(store, poster_photo, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            const { author_photo, page_blocks, caption } = b;\n\n            loadPhotoContent(store, author_photo, null);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockFooter': {\n            const { footer } = b;\n\n            loadRichTextContent(store, footer);\n            break;\n        }\n        case 'pageBlockHeader': {\n            const { header } = b;\n\n            loadRichTextContent(store, header);\n            break;\n        }\n        case 'pageBlockKicker': {\n            const { kicker } = b;\n\n            loadRichTextContent(store, kicker);\n            break;\n        }\n        case 'pageBlockList': {\n            const { items } = b;\n\n            items.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockListItem': {\n            const { page_blocks } = b;\n\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockMap': {\n            const { caption } = b;\n\n            loadPageBlockMapContent(store, b, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockParagraph': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPhoto': {\n            const { photo, caption } = b;\n\n            loadPhotoContent(store, photo, null, IV_PHOTO_SIZE);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            const { header, articles } = b;\n\n            loadRichTextContent(store, header);\n            articles.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockRelatedArticle': {\n            const { photo } = b;\n\n            loadPhotoContent(store, photo, null);\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockSubheader': {\n            const { subheader } = b;\n\n            loadRichTextContent(store, subheader);\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            const { subtitle } = b;\n\n            loadRichTextContent(store, subtitle);\n            break;\n        }\n        case 'pageBlockTable': {\n            const { caption, cells } = b;\n\n            loadRichTextContent(store, caption);\n            cells.forEach(row => row.forEach(x => loadPageBlockContent(store, x)));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockTableCell': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockTitle': {\n            const { title } = b;\n\n            loadRichTextContent(store, title);\n            break;\n        }\n        case 'pageBlockVideo': {\n            const { video, caption } = b;\n\n            loadVideoThumbnailContent(store, video, null);\n            loadVideoContent(store, video, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n    }\n}\n\nfunction loadRichTextContent(store, t) {\n    if (!t) return;\n\n    switch (t['@type']) {\n        case 'richTextAnchor': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextBold': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextEmailAddress': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextFixed': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextIcon': {\n            const { document } = t;\n\n            loadDocumentThumbnailContent(store, document, null);\n            loadDocumentContent(store, document, null, false);\n            break;\n        }\n        case 'richTextItalic': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextMarked': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPlain': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTexts': {\n            const { texts } = t;\n\n            texts.forEach(x => loadRichTextContent(store, x));\n            break;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSubscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSuperscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUnderline': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUrl': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n    }\n}\n\nfunction getAnimationData(file) {\n    return new Promise(resolve => {\n        if (!file) {\n            resolve(null);\n            return;\n        }\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) {\n            resolve(null);\n            return;\n        }\n\n        const fileReader = new FileReader();\n        fileReader.onload = event => resolve(JSON.parse(event.target.result));\n        fileReader.onerror = () => resolve(null);\n        fileReader.onabort = () => resolve(null);\n        fileReader.readAsText(blob);\n    });\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadChatContent,\n    loadChatsContent,\n    loadDraftContent,\n    loadInstantViewContent,\n    loadStickerContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    loadStickerThumbnailContent,\n    loadUserContent,\n    loadUsersContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension,\n    getViewerFile,\n    getViewerThumbnail,\n    getAnimationData\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from '../Utils/Date';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport { formatPhoneNumber } from './Phone';\nimport { getChannelStatus } from './Channel';\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport ChatStore from '../Stores/ChatStore';\nimport NotificationStore from '../Stores/NotificationStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function canUnpinMessage(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { pinned_message_id } = chat;\n\n    return pinned_message_id > 0;\n}\n\nexport function isChatArchived(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { chat_list } = chat;\n    if (!chat_list) return false;\n\n    return chat_list['@type'] === 'chatListArchive';\n}\n\nexport function canSetChatChatList(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_sponsored, chat_list } = chat;\n    if (is_sponsored) return false;\n    if (!chat_list) return false;\n\n    if (chat_list['@type'] === 'chatListMain') {\n        if (isMeChat(chatId) || chatId === SERVICE_NOTIFICATIONS_USER_ID) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function draftEquals(draft1, draft2) {\n    if (!draft1 && !draft2) return true;\n    if (draft1 && !draft2) return false;\n    if (draft2 && !draft1) return false;\n\n    const { input_message_text: inputMessageText1, reply_to_message_id: replyToMessageId1 } = draft1;\n    const { input_message_text: inputMessageText2, reply_to_message_id: replyToMessageId2 } = draft2;\n\n    if (replyToMessageId1 !== replyToMessageId2) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== inputMessageText2['@type']) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== 'inputMessageText') {\n        return true;\n    }\n\n    const { text: formattedText1 } = inputMessageText1;\n    const { text: formattedText2 } = inputMessageText2;\n\n    if (!formattedText1 && !formattedText2) return true;\n    if (formattedText1 && !formattedText2) return false;\n    if (formattedText2 && !formattedText1) return false;\n\n    const { text: text1, entities: entities1 } = formattedText1;\n    const { text: text2, entities: entities2 } = formattedText2;\n\n    if (text1 !== text2) {\n        return false;\n    }\n\n    return entitiesEquals(entities1, entities2);\n}\n\nfunction entitiesEquals(entities1, entities2) {\n    if (!entities1 && !entities2) return true;\n    if (entities1 && !entities2) return false;\n    if (entities2 && !entities1) return false;\n\n    if (entities1.length !== entities2.length) {\n        return false;\n    }\n\n    const map = new Map();\n    entities1.forEach(x => {\n        map.set(`${x.type['@type']}_${x.offset}_${x.length}`, x);\n    });\n\n    return entities2.every(x => map.has(`${x.type['@type']}_${x.offset}_${x.length}`));\n}\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    return getUserFullName(message.sender_user_id, null, t);\n}\n\nfunction getMessageSenderName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id, t);\n}\n\nfunction getLastMessageSenderName(chat, t = k => k) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message, t);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction showChatUnreadMessageIcon(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, last_message, last_read_outbox_message_id } = chat;\n    if (!last_message) return false;\n\n    const { is_outgoing } = last_message;\n\n    return (\n        is_outgoing && last_message.id > last_read_outbox_message_id && !is_marked_as_unread && !showChatDraft(chatId)\n    );\n}\n\nfunction showChatUnreadMentionCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { unread_mention_count } = chat;\n\n    return unread_mention_count > 0;\n}\n\nfunction showChatUnreadCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return (\n        unread_count > 1 ||\n        (unread_count === 1 && unread_mention_count === 0) ||\n        (is_marked_as_unread && unread_count === 0 && unread_mention_count === 0)\n    );\n}\n\nfunction isChatUnread(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return is_marked_as_unread || unread_count > 0;\n}\n\nfunction isChatMuted(chatId) {\n    return getChatMuteFor(chatId) > 0;\n}\n\nfunction getChatMuteFor(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return 0;\n\n    const { use_default_mute_for, mute_for } = notification_settings;\n\n    if (use_default_mute_for) {\n        const settings = getScopeNotificationSettings(chatId);\n\n        return settings ? settings.mute_for : false;\n    }\n\n    return mute_for;\n}\n\nexport function getScopeNotificationSettings(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return NotificationStore.settings.get('notificationSettingsScopePrivateChats');\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            let settings = null;\n            if (isChannelChat(chatId)) {\n                settings = NotificationStore.settings.get('notificationSettingsScopeChannelChats');\n            } else {\n                settings = NotificationStore.settings.get('notificationSettingsScopeGroupChats');\n            }\n            return settings;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return supergroup.is_channel\n                    ? getChannelStatus(supergroup, chatId)\n                    : getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat, t) {\n    if (!chat) return null;\n\n    let title = chat.title || t('HiddenName');\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return formatPhoneNumber(user.phone_number);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return supergroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return basicGroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nexport function isDeletedPrivateChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            const user = UserStore.get(chat.type.user_id);\n\n            return user && user.type['@type'] === 'userTypeDeleted';\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nasync function getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypePrivate': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeSecret': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeBasicGroup': {\n            return await TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: type.basic_group_id\n            });\n        }\n        case 'chatTypeSupergroup': {\n            return await TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: type.supergroup_id\n            });\n        }\n    }\n\n    return null;\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendMediaMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_media_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_media_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_media_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_media_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_media_messages && is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false, t = k => k) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id, t);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPolls(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_polls } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_polls;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_polls;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_polls && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_polls && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_polls && is_member && permissions && permissions.can_send_polls;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_messages && is_member && permissions && permissions.can_send_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    return replyToMessageId;\n}\n\nfunction canPinMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_pin_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return false;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_pin_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return can_pin_messages || status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_pin_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_pin_messages && is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction isChatVerified(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n\n            return user && user.is_verified;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n\n            return supergroup && supergroup.is_verified;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatSecret(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate': {\n            return false;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    showChatUnreadMessageIcon,\n    showChatUnreadMentionCount,\n    showChatUnreadCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatUnread,\n    isChatMember,\n    isChatVerified,\n    isChatSecret,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canPinMessages,\n    canSendMediaMessages,\n    canSendMessages,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (\n        status &&\n        (status['@type'] === 'chatMemberStatusBanned' ||\n            status['@type'] === 'chatMemberStatusLeft' ||\n            (status['@type'] === 'chatMemberStatusCreator' && !status.is_member))\n    ) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getChannelStatus(supergroup, chatId) {\n    if (!supergroup) return '';\n\n    let { status, is_channel, member_count: count } = supergroup;\n    if (!is_channel) return '';\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return 'channel is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 subscribers';\n    if (count === 1) return '1 subscriber';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} subscribers, ${onlineCount} online`;\n    }\n\n    return `${count} subscribers`;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { openChat, openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MentionLink.css';\nimport { isGroupChat } from '../../Utils/Chat';\n\nclass MentionLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, username } = props;\n\n        if (state.prevUserId !== userId || state.prevUsername !== username) {\n            return {\n                prevUserId: userId,\n                prevUsername: username,\n                error: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = async event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { userId, username, popup } = this.props;\n        if (userId) {\n            openUser(userId, popup);\n        } else if (username) {\n            const chat = await TdLibController.send({\n                '@type': 'searchPublicChat',\n                username\n            }).catch(() => {\n                this.setState({ error: true });\n            });\n\n            if (chat) {\n                if (isGroupChat(chat.id)) {\n                    openChat(chat.id, null, false);\n                } else {\n                    openChat(chat.id, null, popup);\n                }\n            }\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ error: false });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { children, t, title, username } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <a title={title} onClick={this.handleClick}>\n                    {children}\n                </a>\n                {error && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleClose}\n                        onClick={this.handleDialogClick}\n                        aria-labelledby='confirm-dialog-title'>\n                        <DialogTitle id='confirm-dialog-title'>{t('Error')}</DialogTitle>\n                        <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                            <DialogContentText>{`Can't find username ${username}.`}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose}>{t('Ok')}</Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nMentionLink.propTypes = {\n    userId: PropTypes.number,\n    username: PropTypes.string,\n    title: PropTypes.string,\n    popup: PropTypes.bool\n};\n\nMentionLink.defaultProps = {\n    popup: true\n};\n\nexport default withTranslation()(MentionLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport emojiRegex from 'emoji-regex';\nimport MentionLink from '../Components/Additional/MentionLink';\nimport Poll from '../Components/Message/Media/Poll';\nimport SafeLink from '../Components/Additional/SafeLink';\nimport dateFormat from '../Utils/Date';\nimport { searchChat, setMediaViewerContent } from '../Actions/Client';\nimport { getChatTitle, isMeChat } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getFitSize, getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getDecodedUrl } from './Url';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport {\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_SIZE\n} from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function isMetaBubble(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { content } = message;\n    if (!content) {\n        return false;\n    }\n\n    const { caption } = content;\n    if (caption && caption.text && caption.text.length > 0) {\n        return false;\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageLocation': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageSticker': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageVideoNote': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isMessageUnread(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) {\n        return false;\n    }\n\n    const { last_read_inbox_message_id, last_read_outbox_message_id } = chat;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { id, is_outgoing } = message;\n    const isMe = isMeChat(chatId);\n    if (is_outgoing && isMe) {\n        return false;\n    }\n\n    return is_outgoing ? id > last_read_outbox_message_id : id > last_read_inbox_message_id;\n}\n\nfunction getAuthor(message, t = k => k) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(forward_info.sender_user_id, null, t);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message, t);\n}\n\nfunction getTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(sender_user_id, null, t);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction searchCurrentChat(event, text) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    const { chatId } = AppStore;\n\n    searchChat(chatId, text);\n}\n\nfunction getFormattedText(formattedText, t = k => k) {\n    if (formattedText['@type'] !== 'formattedText') return null;\n\n    const { text, entities } = formattedText;\n    if (!text) return null;\n    if (!entities) return text;\n\n    let deleteLineBreakAfterPre = false;\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const { offset, length, type } = entity;\n\n        // skip nested entities\n        if (index > offset) {\n            continue;\n        }\n\n        let textBefore = substring(text, index, offset);\n        const textBeforeLength = textBefore.length;\n        if (textBefore) {\n            if (deleteLineBreakAfterPre && textBefore.length > 0 && textBefore[0] === '\\n') {\n                textBefore = textBefore.substr(1);\n                deleteLineBreakAfterPre = false;\n            }\n            if (textBefore) {\n                result.push(textBefore);\n            }\n        }\n\n        const entityKey = offset;\n        let entityText = substring(text, offset, offset + length);\n        if (deleteLineBreakAfterPre && entityText.length > 0 && entityText[0] === '\\n') {\n            entityText = entityText.substr(1);\n            deleteLineBreakAfterPre = false;\n        }\n\n        switch (type['@type']) {\n            case 'textEntityTypeBold': {\n                result.push(<strong key={entityKey}>{entityText}</strong>);\n                break;\n            }\n            case 'textEntityTypeBotCommand': {\n                const command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a key={entityKey} onClick={stopPropagation} href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCode': {\n                result.push(<code key={entityKey}>{entityText}</code>);\n                break;\n            }\n            case 'textEntityTypeEmailAddress': {\n                result.push(\n                    <a\n                        key={entityKey}\n                        href={`mailto:${entityText}`}\n                        onClick={stopPropagation}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeHashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeItalic': {\n                result.push(<em key={entityKey}>{entityText}</em>);\n                break;\n            }\n            case 'textEntityTypeMentionName': {\n                result.push(\n                    <MentionLink key={entityKey} userId={type.user_id} title={getUserFullName(type.user_id, null, t)}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypeMention': {\n                result.push(\n                    <MentionLink key={entityKey} username={entityText}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypePhoneNumber': {\n                result.push(\n                    <a key={entityKey} href={`tel:${entityText}`} onClick={stopPropagation}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypePre': {\n                result.push(<pre key={entityKey}>{entityText}</pre>);\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypePreCode': {\n                result.push(\n                    <pre key={entityKey}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                const url = type.url ? type.url : entityText;\n\n                result.push(\n                    <SafeLink key={entityKey} url={url}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            case 'textEntityTypeUrl': {\n                result.push(\n                    <SafeLink key={entityKey} url={entityText}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += textBeforeLength + entity.length;\n    }\n\n    if (index < text.length) {\n        let textAfter = text.substring(index);\n        if (deleteLineBreakAfterPre && textAfter.length > 0 && textAfter[0] === '\\n') {\n            textAfter = textAfter.substr(1);\n        }\n        if (textAfter) {\n            result.push(textAfter);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message, meta, t = k => k) {\n    if (!message) return null;\n\n    let result = [];\n\n    const { content } = message;\n    if (!content) return [...result, meta];\n\n    const { text, caption } = content;\n\n    if (text && text['@type'] === 'formattedText' && text.text) {\n        result = getFormattedText(text, t);\n    } else if (caption && caption['@type'] === 'formattedText' && caption.text) {\n        const formattedText = getFormattedText(caption, t);\n        if (formattedText) {\n            result = result.concat(formattedText);\n        }\n    }\n\n    return result && result.length > 0 ? [...result, meta] : [];\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n\n    return dateFormat(d, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n    return dateFormat(d, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            return getUserFullName(sender_user_id, null, t);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterDuplicateMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction filterMessages(messages) {\n    return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document && document.file_name) {\n                return document.file_name + caption;\n            }\n\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(\n    location,\n    width = LOCATION_WIDTH,\n    height = LOCATION_HEIGHT,\n    zoom = LOCATION_ZOOM,\n    scale = LOCATION_SCALE\n) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${width},${height}&scale=${scale}&zoom=${zoom}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message, t);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        // download file at loadMediaViewerContent instead\n        // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.user_id, true);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                // openDocument(audio, message, fileCancel);\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nexport function getReplyMinithumbnail(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { minithumbnail } = animation;\n            return minithumbnail || null;\n        }\n        case 'messageAudio': {\n            return null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { minithumbnail } = document;\n            return minithumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { minithumbnail } = animation;\n                if (minithumbnail) {\n                    return minithumbnail;\n                }\n            }\n\n            if (photo) {\n                return photo.minithumbnail || null;\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageSticker': {\n            return null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return photo.minithumbnail || null;\n                }\n                if (animation) {\n                    const { minithumbnail } = animation;\n                    return minithumbnail || null;\n                }\n                if (audio) {\n                    return null;\n                }\n                if (document) {\n                    const { minithumbnail } = document;\n                    return minithumbnail || null;\n                }\n                if (sticker) {\n                    return null;\n                }\n                if (video) {\n                    const { minithumbnail } = video;\n                    return minithumbnail || null;\n                }\n                if (video_note) {\n                    const { minithumbnail } = video_note;\n                    return minithumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { minithumbnail } = video;\n            return minithumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { minithumbnail } = video_note;\n            return minithumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getEmojiMatches(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return 0;\n\n    const { content } = message;\n    if (!content) return 0;\n    if (content['@type'] !== 'messageText') return 0;\n\n    const { text: textContent } = content;\n    if (!textContent) return;\n    if (textContent['@type'] !== 'formattedText') return 0;\n\n    const { text, entities } = textContent;\n    if (!text) return 0;\n    if (entities && entities.length > 0) return 0;\n\n    let lastIndex = 0;\n    let emojiMatches = 0;\n    let m;\n    const re = emojiRegex();\n    do {\n        m = re.exec(text);\n\n        if (m) {\n            emojiMatches += 1;\n            // none-emoji symbol between prev and current emojis or before first\n            if (lastIndex !== m.index) {\n                emojiMatches = 0;\n                break;\n            }\n            // more than 3 emojis in a row\n            if (emojiMatches > 3) {\n                emojiMatches = 0;\n                break;\n            }\n            lastIndex = re.lastIndex;\n        }\n        // none-emoji symbol at the end\n        if (!m && lastIndex !== text.length) {\n            emojiMatches = 0;\n            break;\n        }\n    } while (m);\n\n    return emojiMatches;\n}\n\nfunction messageComparatorDesc(left, right) {\n    return left.id - right.id;\n}\n\nfunction checkInclusion(index, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (index >= entities[i].offset && index < entities[i].offset + entities[i].length) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkIntersection(startIndex, endIndex, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (startIndex <= entities[i].offset && entities[i].offset + entities[i].length - 1 <= endIndex) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkEntity(startIndex, endIndex, entities) {\n    return (\n        !checkInclusion(startIndex, entities) &&\n        !checkInclusion(endIndex, entities) &&\n        !checkIntersection(startIndex, endIndex, entities)\n    );\n}\n\nfunction removeOffsetAfter(start, countToRemove, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset -= countToRemove;\n        }\n    });\n}\n\nfunction addOffsetAfter(start, countToAdd, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset += countToAdd;\n        }\n    });\n}\n\nfunction removeEntities(startIndex, endIndex, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const entityStart = entity.offset;\n        const entityEnd = entity.offset + entity.length - 1;\n        if (\n            (startIndex <= entityStart && entityStart <= endIndex) ||\n            (startIndex <= entityEnd && entityEnd <= endIndex) ||\n            (entityStart < startIndex && endIndex > entityEnd)\n        ) {\n            entities.splice(i--, 1);\n        }\n    }\n}\n\nfunction addTextNode(offset, length, text, nodes) {\n    const node = document.createTextNode(text.substr(offset, length));\n    nodes.push(node);\n}\n\nexport function getNodes(text, entities, t = k => k) {\n    if (!text) return [];\n\n    entities = (entities || []).sort((a, b) => {\n        if (a.offset - b.offset !== 0) {\n            return a.offset - b.offset;\n        }\n\n        return b.length - a.length;\n    });\n\n    let nodes = [];\n    let offset = 0;\n    let prevEntity = null;\n    entities.forEach(x => {\n        if (x.offset - offset > 0) {\n            addTextNode(offset, x.offset - offset, text, nodes);\n            offset = x.offset;\n        }\n\n        if (!(prevEntity && checkInclusion(x.offset, [prevEntity]))) {\n            switch (x.type['@type']) {\n                case 'textEntityTypeBold': {\n                    const node = document.createElement('b');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeBotCommand': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCode': {\n                    const node = document.createTextNode('`' + text.substr(x.offset, x.length) + '`');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeEmailAddress': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeHashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeItalic': {\n                    const node = document.createElement('i');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeMention': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeMentionName': {\n                    try {\n                        const { user_id } = x.type;\n                        const user = UserStore.get(user_id);\n                        if (user) {\n                            const node = document.createElement('a');\n                            // node.href = getDecodedUrl(url, false);\n                            node.title = getUserFullName(user_id, null, t);\n                            // node.target = '_blank';\n                            // node.rel = 'noopener noreferrer';\n                            node.dataset.userId = user_id;\n                            node.innerText = text.substr(x.offset, x.length);\n                            nodes.push(node);\n                        } else {\n                            addTextNode(x.offset, x.length, text, nodes);\n                        }\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypePhoneNumber': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypePre': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypePreCode': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeTextUrl': {\n                    try {\n                        const { url } = x.type;\n\n                        const node = document.createElement('a');\n                        node.href = getDecodedUrl(url, false);\n                        node.title = getDecodedUrl(url, false);\n                        node.target = '_blank';\n                        node.rel = 'noopener noreferrer';\n                        node.innerText = text.substr(x.offset, x.length);\n                        nodes.push(node);\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypeUrl': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                default: {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n            }\n\n            prevEntity = x;\n            offset += x.length;\n        }\n    });\n\n    if (offset < text.length) {\n        addTextNode(offset, text.length - offset, text, nodes);\n    }\n\n    return nodes;\n}\n\n// based on code from official Android Telegram client\n// https://github.com/DrKLO/Telegram/blob/28eb8dfd0ef959fd5ad7d5d22f1d32879707c0a0/TMessagesProj/src/main/java/org/telegram/messenger/MediaDataController.java#L3782\nexport function getEntities(text) {\n    const entities = [];\n    if (!text) return { text, entities };\n\n    text = text.replace(/<div><br><\\/div>/gi, '<br>');\n    text = text.replace(/<div>/gi, '<br>');\n    text = text.replace(/<\\/div>/gi, '');\n\n    text = text.split('<br>').join('\\n');\n\n    // console.log(`[ge] start text=${text}`);\n\n    let index = -1; // first index of end tag\n    let lastIndex = 0; // first index after end tag\n    let start = -1; // first index of start tag\n    let isPre = false;\n    const mono = '`';\n    const pre = '```';\n    const bold = '**';\n    const italic = '__';\n\n    // 0 looking for html entities\n    const result = new DOMParser().parseFromString(text, 'text/html');\n    let offset = 0;\n    let length = 0;\n    let finalText = '';\n    result.body.childNodes.forEach(node => {\n        const { textContent, nodeName } = node;\n\n        length = textContent.length;\n        finalText += textContent;\n\n        if (!checkEntity(offset, offset + length - 1, entities)) {\n            return;\n        }\n\n        switch (nodeName) {\n            case '#text': {\n                offset += length;\n                break;\n            }\n            case 'A': {\n                if (node.dataset.userId) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeMentionName', user_id: node.dataset.userId },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                } else if (node.href) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeTextUrl', url: node.href },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                }\n                offset += length;\n                break;\n            }\n            case 'B':\n            case 'STRONG': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeBold' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'BR': {\n                break;\n            }\n            case 'CODE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeCode' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'I':\n            case 'EM': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeItalic' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'PRE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypePre' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            default: {\n                offset += length;\n                break;\n            }\n        }\n    });\n    text = finalText;\n    // console.log(`[ge] HTML nodes text=${text}`, entities);\n\n    // 1 looking for ``` and ` in order to find mono and pre entities\n    while ((index = text.indexOf(isPre ? pre : mono, lastIndex)) !== -1) {\n        if (start === -1) {\n            // find start tag\n            isPre = text.length - index > 2 && text[index + 1] === mono && text[index + 2] === mono;\n            start = index;\n            lastIndex = index + (isPre ? 3 : 1);\n        } else {\n            // find end tag\n            for (let i = index + (isPre ? 3 : 1); i < text.length; i++) {\n                if (text[i] === mono) {\n                    index++;\n                } else {\n                    break;\n                }\n            }\n\n            lastIndex = index + (isPre ? 3 : 1);\n            if (isPre) {\n                // add pre tag\n\n                let textBefore = text.substring(0, start);\n                let textContent = text.substring(start + 3, index);\n                let textAfter = text.substring(index + 3, text.length);\n\n                if (textContent.length > 0) {\n                    offset = start;\n                    length = index - start - 3;\n\n                    text = textBefore + textContent + textAfter;\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': 'textEntityTypePre' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 6);\n                    removeOffsetAfter(offset + length, 6, entities);\n                    entities.push(entity);\n                    lastIndex -= 6;\n\n                    // clean text before\n                    if (textBefore.length > 0) {\n                        const lastChar = textBefore[textBefore.length - 1];\n                        if (lastChar !== '\\n') {\n                            if (lastChar === ' ' || lastChar === '\\xA0') {\n                                textBefore = textBefore.substr(0, textBefore.length - 1) + '\\n';\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textBefore += '\\n';\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text after\n                    if (textAfter.length > 0) {\n                        const firstChar = textAfter[0];\n                        if (firstChar !== '\\n') {\n                            if (firstChar === ' ' || firstChar === '\\xA0') {\n                                textAfter = '\\n' + textAfter.substr(1);\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textAfter = '\\n' + textAfter;\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset + length - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text content\n                    if (textContent.length > 2) {\n                        if (textContent[0] === '\\n') {\n                            textContent = textContent.substring(1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n\n                    if (textContent.length > 2) {\n                        if (textContent[textContent.length - 1] === '\\n') {\n                            textContent = textContent.substring(0, textContent.length - 1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n                }\n            } else {\n                // add code tag\n                if (start + 1 !== index) {\n                    offset = start;\n                    length = index - start - 1;\n\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 1, index) +\n                        text.substring(index + 1, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeCode' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 2);\n                    removeOffsetAfter(offset + length, 2, entities);\n                    entities.push(entity);\n                    lastIndex -= 2;\n                }\n            }\n\n            start = -1;\n            isPre = false;\n        }\n    }\n\n    // 1.1 case when ``` is one ` mono symbol\n    if (start !== -1 && isPre) {\n        offset = start;\n        length = 1;\n\n        if (checkEntity(offset, offset + length + 2 - 1, entities)) {\n            text = text.substring(0, start) + text.substring(start + 2, text.length);\n\n            const entity = {\n                '@type': 'textEntity',\n                offset,\n                length,\n                type: { '@type': 'textEntityTypeCode' },\n                textContent: text.substring(offset, offset + length)\n            };\n            removeEntities(offset, offset + length - 1 + 2);\n            removeOffsetAfter(offset + length, 2, entities);\n            entities.push(entity);\n        }\n    }\n\n    // console.log(`[ge] pre and code text=${text}`, entities);\n    // 2 looking for bold, italic entities\n    for (let c = 0; c < 2; c++) {\n        lastIndex = 0;\n        start = -1;\n        const checkString = c === 0 ? bold : italic;\n        const checkChar = c === 0 ? '*' : '_';\n        while ((index = text.indexOf(checkString, lastIndex)) !== -1) {\n            if (start === -1) {\n                const prevChar = index === 0 ? ' ' : text[index - 1];\n                if (\n                    !checkInclusion(index, entities) &&\n                    (prevChar === ' ' || prevChar === '\\xA0' || prevChar === '\\n')\n                ) {\n                    start = index;\n                }\n                lastIndex = index + 2;\n            } else {\n                for (let a = index + 2; a < text.length; a++) {\n                    if (text[a] === checkChar) {\n                        index++;\n                    } else {\n                        break;\n                    }\n                }\n                lastIndex = index + 2;\n                if (checkInclusion(index, entities) || checkIntersection(start, index, entities)) {\n                    start = -1;\n                    continue;\n                }\n                if (start + 2 !== index) {\n                    offset = start;\n                    length = index - start - 2;\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 2, index) +\n                        text.substring(index + 2, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': c === 0 ? 'textEntityTypeBold' : 'textEntityTypeItalic' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeOffsetAfter(offset + length, 4, entities);\n                    entities.push(entity);\n                    lastIndex -= 4;\n                }\n                start = -1;\n            }\n        }\n    }\n    // console.log(`[ge] result text=${text}`, entities);\n\n    return { text, entities };\n}\n\nexport function canMessageBeEdited(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { can_be_edited } = message;\n\n    return can_be_edited;\n}\n\nexport function showMessageForward(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { forward_info, content } = message;\n\n    return forward_info && content && content['@type'] !== 'messageSticker' && content['@type'] !== 'messageAudio';\n}\n\nexport function isTextMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n\n    return content && content['@type'] === 'messageText';\n}\n\nexport function isMessagePinned(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    return chat.pinned_message_id === messageId;\n}\n\nexport function canMessageBeUnvoted(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    const { poll } = content;\n    if (!poll) return false;\n\n    const { type, is_closed, options } = poll;\n    if (!type) return false;\n    if (type['@type'] !== 'pollTypeRegular') return false;\n    if (is_closed) return false;\n\n    return options.some(x => x.is_chosen || x.is_being_chosen);\n}\n\nexport function canMessageBeClosed(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content, can_be_edited } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    return can_be_edited;\n}\n\nexport function canMessageBeForwarded(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n\n    return message && message.can_be_forwarded;\n}\n\nexport function canMessageBeDeleted(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n\n    return message && (message.can_be_deleted_only_for_self || message.can_be_deleted_for_all_users);\n}\n\nexport function getMessageStyle(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { width, height, thumbnail } = animation;\n\n            const size = { width, height } || thumbnail;\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const size = getSize(photo.sizes, PHOTO_SIZE);\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail, width, height } = video;\n\n            const size = { width, height } || thumbnail;\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n    }\n\n    return null;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterDuplicateMessages,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize,\n    getEmojiMatches,\n    messageComparatorDesc,\n    substring,\n    stopPropagation\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallIcon from '@material-ui/icons/Call';\nimport { getCallTitle } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport './Call.css';\n\nclass Call extends React.Component {\n    render() {\n        const { chatId, messageId, duration, openMedia, title, meta } = this.props;\n\n        const callTitle = getCallTitle(chatId, messageId);\n        const durationString = getDurationString(Math.floor(duration || 0));\n\n        return (\n            <div className={classNames('document', { 'media-title': title })}>\n                <IconButton color='primary' aria-label='Call'>\n                    <CallIcon fontSize='large' />\n                </IconButton>\n                <div className='document-content'>\n                    <div className='document-title'>{callTitle}</div>\n                    <div className='document-action'>\n                        {durationString}\n                        {meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCall.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nexport default Call;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from '../../Tile/UserTile';\nimport { formatPhoneNumber } from '../../../Utils/Phone';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, title, openMedia, meta, caption, t } = this.props;\n        if (!contact) return null;\n\n        const { user_id: id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id,\n            first_name,\n            last_name\n        };\n\n        const fullName = getUserFullName(id, user, t);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className={classNames('contact', { 'media-title': title })}>\n                <div className='contact-tile'>\n                    <UserTile userId={id} firstName={first_name} lastName={last_name} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>\n                        {number}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Contact);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport './Game.css';\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { game, t } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text, t);\n\n        return (\n            <div className='game'>\n                <div className='border' />\n                <div className='game-wrapper'>\n                    {title && <div className='game-title'>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia, meta, title, caption } = this.props;\n        if (!venue) return null;\n\n        const { title: venueTitle, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location\n                    type='venue'\n                    chatId={chatId}\n                    messageId={messageId}\n                    location={location}\n                    openMedia={openMedia}\n                    title={title}\n                    caption={caption}\n                />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{venueTitle}</div>\n                    </a>\n                    <div className='venue-subtitle'>\n                        {address}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Venue;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../Constants';\nimport MessageStore from '../Stores/MessageStore';\nimport Animation from '../Components/Message/Media/Animation';\nimport Audio from '../Components/Message/Media/Audio';\nimport Call from '../Components/Message/Media/Call';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker, { StickerSourceEnum } from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport React from 'react';\nimport { getRandomInt, readImageSize } from './Common';\nimport FileStore from '../Stores/FileStore';\n\nexport function getCallTitle(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content, is_outgoing } = message;\n    if (content['@type'] !== 'messageCall') return null;\n\n    const { discard_reason, duration } = content;\n    if (is_outgoing) {\n        return discard_reason['@type'] === 'callDiscardReasonMissed' ? 'Cancelled Call' : 'Outgoing Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonMissed') {\n        return 'Missed Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonDeclined') {\n        return 'Declined Call';\n    }\n\n    return 'Incoming Call';\n}\n\nexport function isEditedMedia(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageAudio': {\n            return true;\n        }\n        case 'messageDocument': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isValidAnimatedSticker(sticker, chatId, messageId) {\n    if (!sticker) return false;\n    if (!sticker.is_animated) return false;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (message) {\n        const { sending_state } = message;\n        if (sending_state && !sticker.set_id) return false;\n    }\n\n    return true;\n}\n\nexport function isBlurredThumbnail(thumbnail, blurredSize = THUMBNAIL_BLURRED_SIZE_90) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < blurredSize;\n}\n\nexport function getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nexport function getAudioShortTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer ? `${trimmedPerformer || 'Unknown Artist'}` : file_name;\n}\n\nexport function getAudioSubtitle(audio) {\n    if (!audio) return null;\n\n    const { title } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n\n    return trimmedTitle || 'Unknown Track';\n}\n\nexport function getStickers(sets) {\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\n\nexport function getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n    const result = [];\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\n    if (row === -1) return [];\n    if (column === -1) return [];\n\n    const prevPrevRow = row - 2;\n    const prevRow = row - 1;\n    const nextRow = row + 1;\n    const nextNextRow = row + 2;\n\n    const prevColumn = column - 1;\n    const nextColumn = column + 1;\n\n    let skipPrevRow = prevRow < 0;\n    let skipPrePrevRow = prevPrevRow < 0;\n    if (!skipPrevRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipPrevRow = true;\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n                skipPrePrevRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipPrevRow = true;\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n            skipPrePrevRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    if (prevColumn >= 0) {\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    if (nextColumn < stickersPerRow) {\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n    let skipNextRow = nextRow >= totalRows;\n    let skipNextNextRow = nextRow >= totalRows;\n    if (!skipNextRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipNextRow = true;\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n                skipNextNextRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipNextRow = true;\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n            skipNextNextRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    const items = getStickers(sets);\n    return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n    if (setIndex === -1) return [-1, -1];\n\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n    if (stickerIndex === -1) return [-1, -1];\n\n    let prevRows = 0;\n    for (let i = 0; i < setIndex; i++) {\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n    }\n\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n    let index = -1;\n    let totalRows = 0;\n    let setIndex = -1;\n    for (let i = 0; i < sets.length; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        totalRows += setRows;\n        if (totalRows > row) {\n            setIndex = i;\n            break;\n        }\n    }\n    if (setIndex === -1) return index;\n\n    let setRow = row;\n    let setColumn = column;\n    for (let i = 0; i < setIndex; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        setRow -= setRows;\n    }\n\n    index = stickersPerRow * setRow + setColumn;\n\n    if (index >= sets[setIndex].stickers.length) return -1;\n\n    for (let i = 0; i < setIndex; i++) {\n        index += sets[i].stickers.length;\n    }\n\n    return index;\n}\n\nfunction getInputMediaThumbnail(thumbnail) {\n    if (!thumbnail) return null;\n\n    const { photo, width, height } = thumbnail;\n    if (!photo) return null;\n\n    return {\n        '@type': 'inputThumbnail',\n        thumbnail: {\n            '@type': 'inputFileId',\n            id: photo.id\n        },\n        width,\n        height\n    };\n}\n\nfunction getInputMediaCaption(text) {\n    if (!text) return null;\n\n    return {\n        '@type': 'formattedText',\n        text: text,\n        entities: null\n    };\n}\n\nexport function getInputMediaContent(media, text) {\n    if (!media) return null;\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { animation: file, thumbnail, width, height, duration } = media;\n\n            return {\n                '@type': 'inputMessageAnimation',\n                animation: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'audio': {\n            const { audio: file, album_cover_thumbnail: thumbnail, title, performer, duration } = media;\n\n            return {\n                '@type': 'inputMessageAudio',\n                audio: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                album_cover_thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                title,\n                performer,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'contact': {\n            return {\n                '@type': 'inputMessageContact',\n                contact: media\n            };\n        }\n        case 'document': {\n            const { document: file, thumbnail } = media;\n\n            return {\n                '@type': 'inputMessageDocument',\n                document: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'game': {\n            return null;\n        }\n        case 'invoice': {\n            return null;\n        }\n        case 'location': {\n            return {\n                '@type': 'inputMessageLocation',\n                location: media,\n                live_period: 0\n            };\n        }\n        case 'photo': {\n            const { sizes } = media;\n            if (!sizes.length) return null;\n\n            const thumbnail = sizes[0];\n            const photo = sizes[sizes.length - 1];\n            if (!photo) return null;\n\n            const { photo: file, width, height } = photo;\n\n            return {\n                '@type': 'inputMessagePhoto',\n                photo: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                width,\n                height,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'poll': {\n            return null;\n        }\n        case 'sticker': {\n            const { sticker: file, thumbnail, width, height } = media;\n\n            return {\n                '@type': 'inputMessageSticker',\n                sticker: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'venue': {\n            return {\n                '@type': 'inputMessageVenue',\n                venue: media\n            };\n        }\n        case 'video': {\n            const { video: file, thumbnail, width, height, duration, supports_streaming } = media;\n\n            return {\n                '@type': 'inputMessageVideo',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                duration,\n                width,\n                height,\n                supports_streaming,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'videoNote': {\n            const { video: file, thumbnail, duration, length } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                length,\n                ttl: 0\n            };\n        }\n        case 'voiceNote': {\n            const { voice: file, duration, waveform } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                voice_note: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                duration,\n                waveform\n            };\n        }\n    }\n\n    return null;\n}\n\nexport function getMedia(message, openMedia, hasTitle = false, hasCaption = false, inlineMeta = null) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return (\n                <Animation\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    animation={content.animation}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageAudio':\n            return (\n                <Audio\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    audio={content.audio}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageCall':\n            return (\n                <Call\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    duraton={content.duration}\n                    discardReason={content.discard_reason}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageContact':\n            return (\n                <Contact\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    contact={content.contact}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageDocument':\n            return (\n                <Document\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    document={content.document}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return (\n                <Location\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    location={content.location}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePhoto':\n            return (\n                <Photo\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    photo={content.photo}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} meta={inlineMeta} />;\n        case 'messageSticker':\n            return (\n                <Sticker\n                    chatId={chat_id}\n                    messageId={id}\n                    sticker={content.sticker}\n                    source={StickerSourceEnum.MESSAGE}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return (\n                <Venue\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    venue={content.venue}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageVideo':\n            return (\n                <Video\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    video={content.video}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVideoNote':\n            return (\n                <VideoNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    videoNote={content.video_note}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVoiceNote':\n            return (\n                <VoiceNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    voiceNote={content.voice_note}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        default:\n            return [`[${content['@type']}]`, inlineMeta];\n    }\n}\n\nexport async function getMediaDocumentFromFile(file) {\n    if (!file) {\n        return null;\n    }\n\n    const fileId = -getRandomInt(1, 1000000);\n    FileStore.setBlob(fileId, file);\n\n    return {\n        '@type': 'messageDocument',\n        document: {\n            '@type': 'document',\n            file_name: file.name,\n            mime_type: file.type,\n            minithumbnail: null,\n            thumbnail: null,\n            document: {\n                '@type': 'file',\n                id: fileId,\n                size: file.size,\n                expected_size: file.expected_size,\n                local: {\n                    is_downloading_completed: true\n                }\n            }\n        }\n    };\n}\n\nexport async function getMediaPhotoFromFile(file) {\n    if (!file) {\n        return null;\n    }\n\n    if (file.type.startsWith('image')) {\n        const [width, height] = await readImageSize(file);\n\n        const fileId = -getRandomInt(1, 1000000);\n        FileStore.setBlob(fileId, file);\n\n        const photoSize = {\n            '@type': 'photoSize',\n            photo: {\n                '@type': 'file',\n                id: fileId,\n                size: file.size,\n                expected_size: file.expected_size,\n                local: {\n                    is_downloading_completed: true\n                }\n            },\n            width,\n            height\n        };\n\n        return {\n            '@type': 'messagePhoto',\n            photo: {\n                '@type': 'photo',\n                has_stickers: false,\n                minithumbnail: null,\n                sizes: [photoSize]\n            }\n        };\n    } else {\n        return null;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5.29289322,5.29289322 C5.68341751,4.90236893 6.31658249,4.90236893 6.70710678,5.29289322 L6.70710678,5.29289322 L12,10.585 L17.2928932,5.29289322 C17.6834175,4.90236893 18.3165825,4.90236893 18.7071068,5.29289322 C19.0976311,5.68341751 19.0976311,6.31658249 18.7071068,6.70710678 L13.415,12 L18.7071068,17.2928932 C19.0675907,17.6533772 19.0953203,18.2206082 18.7902954,18.6128994 L18.7071068,18.7071068 C18.3165825,19.0976311 17.6834175,19.0976311 17.2928932,18.7071068 L17.2928932,18.7071068 L12,13.415 L6.70710678,18.7071068 C6.31658249,19.0976311 5.68341751,19.0976311 5.29289322,18.7071068 C4.90236893,18.3165825 4.90236893,17.6834175 5.29289322,17.2928932 L10.585,12 L5.29289322,6.70710678 C4.93240926,6.34662282 4.90467972,5.77939176 5.20970461,5.38710056 Z' />,\n    'Close'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const { playbackRate, volume } = this.loadPlayerSettings();\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n        this.instantView = null;\n        this.pageBlock = null;\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    loadPlayerSettings() {\n        const player = localStorage.getItem('player') || {};\n\n        let { playbackRate, volume } = player;\n\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        return { playbackRate, volume };\n    }\n\n    savePlayerSettings() {\n        const { volume, playbackRate } = this;\n\n        localStorage.setItem('player', JSON.stringify({ volume, playbackRate }));\n    }\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.reset();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId, instantView, pageBlock } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (message) {\n                    this.message = message;\n                    this.emit(update['@type'], update);\n                    this.getPlaylist(chatId, messageId);\n\n                    return;\n                } else if (instantView && pageBlock) {\n                    this.instantView = instantView;\n                    this.pageBlock = pageBlock;\n                    this.emit(update['@type'], update);\n                }\n\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from '../Utils/Date';\nimport { getFirstLetter, getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(userId, user, t = k => k) {\n    user = UserStore.get(userId) || user;\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name && last_name) return `${first_name} ${last_name}`;\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId, t = k => k) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(userId, firstName, lastName, t) {\n    const user = UserStore.get(userId);\n    if (!user && !(firstName || lastName)) return null;\n\n    const title = getUserFullName(userId, null, t) || `${firstName} ${lastName}`.trim();\n    const letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    if (user) {\n        firstName = user.first_name;\n        lastName = user.last_name;\n    }\n\n    const firstNameSymbol = getFirstLetter(firstName) || firstName.charAt(0);\n    if (firstNameSymbol) return firstNameSymbol;\n\n    const lastNameSymbol = getFirstLetter(lastName) || lastName.charAt(0);\n    if (lastNameSymbol) return lastNameSymbol;\n\n    return '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(photo) {\n    if (!photo) return null;\n\n    const { id, sizes } = photo;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const { photo: small } = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const { photo: big } = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id,\n        small,\n        big\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport function isDeletedUser(userId) {\n    const user = UserStore.get(userId);\n\n    return user && user.type['@type'] === 'userTypeDeleted';\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    fileEquals(file1, file2) {\n        if (file1 === file2 && file1 === null) return true;\n        if (file1 !== null && file2 === null) return false;\n        if (file1 === null && file2 !== null) return false;\n\n        const { local: local1, remote: remote1 } = file1;\n        const { local: local2, remote: remote2 } = file2;\n\n        if (local1.can_be_deleted !== local2.can_be_deleted) return false;\n        if (local1.can_be_downloaded !== local2.can_be_downloaded) return false;\n        if (local1.download_offset !== local2.download_offset) return false;\n        if (local1.downloaded_prefix_size !== local2.downloaded_prefix_size) return false;\n        if (local1.downloaded_size !== local2.downloaded_size) return false;\n        if (local1.is_downloading_active !== local2.is_downloading_active) return false;\n        if (local1.is_downloading_completed !== local2.is_downloading_completed) return false;\n        if (local1.path !== local2.path) return false;\n\n        if (remote1.id !== remote2.id) return false;\n        if (remote1.is_uploading_active !== remote2.is_uploading_active) return false;\n        if (remote1.is_uploading_completed !== remote2.is_uploading_completed) return false;\n        if (remote1.uploaded_size !== remote2.uploaded_size) return false;\n\n        return true;\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            if (this.fileEquals(nextFile, currentFile)) {\n                // console.log('[fp] update equals', nextFile, currentFile);\n            } else {\n                // console.log('[fp] update', nextFile, currentFile);\n                this.setState({ file: nextFile, prevFile: currentFile });\n            }\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `[fp]] render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className={classNames('file-progress', 'file-progress-complete')} style={style}>\n                        {completeIcon}\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <CircularProgress\n                        className='file-progress-indicator'\n                        classes={{ circle: 'file-progress-circle' }}\n                        variant='static'\n                        value={progress}\n                        size={48}\n                        thickness={2}\n                    />\n                    {cancelButton && <CloseIcon />}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    {icon}\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function randomString() {\n    return (\n        '$' +\n        Math.random()\n            .toString(36)\n            .slice(2, 10)\n    );\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { randomString } from './Helpers';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport PakoWorker from './pako.worker';\n\nconst worker = new PakoWorker();\nconst handlers = new Map();\n\nworker.onmessage = event => {\n    const { data } = event;\n    if (!data) return;\n\n    const { key, error, result, msg } = data;\n\n    const { resolve, reject } = handlers.get(key);\n    handlers.delete(key);\n\n    if (!error) {\n        resolve(result);\n    } else {\n        reject(msg);\n    }\n};\n\nexport async function inflateBlob(blob) {\n    const key = randomString();\n    return new Promise((resolve, reject) => {\n        handlers.set(key, { resolve, reject });\n        worker.postMessage({ key, blob });\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// import Lottie from '../../Viewer/Lottie';\nimport { isBlurredThumbnail, isValidAnimatedSticker } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getBlob, getSrc } from '../../../Utils/File';\nimport { inflateBlob } from '../../../Workers/BlobInflator';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport StickerStore from '../../../Stores/StickerStore';\nimport './Sticker.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nexport const StickerSourceEnum = Object.freeze({\n    HINTS: 'HINTS',\n    MESSAGE: 'MESSAGE',\n    PICKER_HEADER: 'PICKER_HEADER',\n    PICKER: 'PICKER',\n    PREVIEW: 'PREVIEW',\n    STICKER_SET: 'STICKER_SET',\n    UNKNOWN: 'UNKNOWN'\n});\n\nclass Sticker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.stickerPreview = StickerStore.stickerPreview;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.state = {\n            animationDate: null,\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log('[Sticker] render error', error, errorInfo);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, sticker, blur, displaySize } = this.props;\n        const { animationData } = this.state;\n\n        if (animationData !== nextState.animationData) {\n            return true;\n        }\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (sticker !== nextProps.sticker) {\n            return true;\n        }\n\n        if (blur !== nextProps.blur) {\n            return true;\n        }\n\n        if (displaySize !== nextProps.displaySize) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.sticker !== this.props.sticker) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.on('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.on('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.off('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.off('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.off('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateDialogChatId = update => {\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerPreview = update => {\n        this.stickerPreview = update.sticker;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.openedStickerSet = stickerSet;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        const { chatId, messageId, sticker } = this.props;\n\n        const isAnimated = isValidAnimatedSticker(sticker, chatId, messageId);\n        if (!isAnimated) return;\n\n        this.windowFocused = focused;\n        this.startStopAnimation();\n    };\n\n    startStopAnimation() {\n        const { autoplay } = this.props;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (\n            this.windowFocused &&\n            !this.stickerPreview &&\n            !this.openMediaViewer &&\n            !this.openProfileMediaViewer &&\n            !this.openIV &&\n            !this.dialogChatId\n        ) {\n            if (this.entered) {\n                // console.log('[Sticker] play 1');\n                player.play();\n                this.pause = false;\n                return;\n            }\n\n            // console.log('[Sticker] startStopAnimation', this.openedStickerSet);\n            if (!this.openedStickerSet) {\n                if (this.paused) {\n                    // console.log('[Sticker] play 2');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n\n                if (autoplay && this.inView) {\n                    // console.log('[Sticker] play 3');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n            }\n        }\n\n        // console.log('[Sticker] pause');\n        this.paused = player.pause();\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker, is_animated } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            if (is_animated) {\n                this.loadContent();\n            } else {\n                this.forceUpdate();\n            }\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = async () => {\n        const { chatId, messageId, sticker: source, autoplay, play } = this.props;\n        const { is_animated, sticker } = source;\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        if (!is_animated) return;\n        if (!isAnimated) return;\n        if (!play) return;\n\n        const blob = getBlob(sticker);\n        if (!blob) return;\n\n        let animationData = null;\n        try {\n            // animationData = StickerStore.getAnimationData(blob);\n            // if (animationData) {\n            //     this.setState({ animationData });\n            //     return;\n            // }\n            const result = await inflateBlob(blob);\n            if (!result) return;\n\n            animationData = JSON.parse(result);\n            // StickerStore.setAnimationData(blob, animationData);\n        } catch (err) {\n            console.log('[Sticker] loadContent error', err);\n        }\n        if (!animationData) return;\n\n        if (autoplay) {\n            this.setState({ animationData });\n        } else {\n            this.animationData = animationData;\n        }\n    };\n\n    handleMouseEnter = event => {\n        const { animationData } = this;\n        // console.log('[Sticker] handleMouseEnter', animationData);\n        if (animationData) {\n            this.setState({ animationData }, () => {\n                this.handleAnimationMouseEnter();\n            });\n        }\n    };\n\n    handleAnimationMouseEnter = () => {\n        // console.log('[Sticker] handleAnimationMouseEnter 1');\n        if (this.props.autoplay) return;\n\n        this.entered = true;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        // console.log('[Sticker] handleAnimationMouseEnter 2');\n        this.loopCount = 0;\n        this.startStopAnimation();\n    };\n\n    handleAnimationLoopComplete = () => {\n        if (this.props.autoplay) return;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (!this.entered) this.loopCount += 1;\n        if (this.loopCount > 2) {\n            const { animationData } = this.state;\n            if (animationData) {\n                this.setState({ animationData: null });\n            }\n        }\n    };\n\n    handleAnimationMouseOut = () => {\n        this.entered = false;\n    };\n\n    render() {\n        const {\n            chatId,\n            messageId,\n            autoplay,\n            className,\n            displaySize,\n            blur,\n            sticker: source,\n            style,\n            openMedia,\n            preview\n        } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n        const { animationData, hasError } = this.state;\n\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        if (hasError) {\n            const style = {\n                width: displaySize,\n                height: displaySize\n            };\n\n            if (process.env.NODE_ENV !== 'production') {\n                style.background = '#ff000066';\n            }\n\n            return (\n                <div className={classNames('sticker', className)} style={style} onClick={openMedia}>\n                    <img\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                </div>\n            );\n        }\n\n        let content = null;\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (fitSize) {\n            content = isAnimated ? (\n                <>\n                    {animationData ? (\n                        <React.Suspense fallback={null}>\n                            <Lottie\n                                ref={this.lottieRef}\n                                options={{\n                                    autoplay: autoplay,\n                                    loop: true,\n                                    animationData,\n                                    renderer: 'svg',\n                                    rendererSettings: {\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                        clearCanvas: false,\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                        className: 'lottie-svg'\n                                    }\n                                }}\n                                eventListeners={[\n                                    {\n                                        eventName: 'loopComplete',\n                                        callback: this.handleAnimationLoopComplete\n                                    }\n                                ]}\n                                onMouseOut={this.handleAnimationMouseOut}\n                            />\n                        </React.Suspense>\n                    ) : (\n                        <img\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                            draggable={false}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                    )}\n                </>\n            ) : (\n                <>\n                    {src && !preview ? (\n                        <img className='sticker-image' draggable={false} src={src} alt='' />\n                    ) : (\n                        <img\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                            draggable={false}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                    )}\n                </>\n            );\n        }\n\n        const stickerStyle = {\n            width: fitSize ? fitSize.width : 0,\n            height: fitSize ? fitSize.height : 0,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('sticker', className)}\n                style={stickerStyle}\n                onClick={openMedia}\n                onMouseEnter={this.handleMouseEnter}>\n                {content}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    autoplay: PropTypes.bool,\n    play: PropTypes.bool,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number,\n    preview: PropTypes.bool,\n    source: PropTypes.string\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n\n    autoplay: true,\n    play: true,\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE,\n    preview: false,\n    source: StickerSourceEnum.UNKNOWN\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n        this.animationData = new WeakMap();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            case 'updateRecentStickers': {\n                this.emit('updateRecentStickers', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            case 'clientUpdateStickerPreview': {\n                this.emit('clientUpdateStickerPreview', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    getAnimationData(key) {\n        return this.animationData.get(key);\n    }\n\n    setAnimationData(key, data) {\n        this.animationData.set(key, data);\n    }\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo': {\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport { getUserLetters, isDeletedUser } from '../../Utils/User';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTile.css';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\n\nclass UserTile extends Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                user: UserStore.get(this.props.userId),\n                loaded: false\n            };\n        } else {\n            this.state = {\n                loaded: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        if (nextState.loaded !== this.state.loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId !== update.userId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n        const { chatId } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n        const { chat_id, photo } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n\n                if (photo) {\n                    const store = FileStore.getStore();\n                    loadChatContent(store, chat);\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId && !chat.photo) return;\n\n                this.forceUpdate();\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { className, userId, fistName, lastName, onSelect, small, dialog, poll, t } = this.props;\n        const { loaded } = this.state;\n\n        const user = UserStore.get(userId);\n        if (!user && !(fistName || lastName)) return null;\n\n        if (isDeletedUser(userId)) {\n            return (\n                <div\n                    className={classNames(\n                        className,\n                        'user-tile',\n                        'tile_color_0',\n                        { pointer: onSelect },\n                        { 'tile-dialog': dialog },\n                        { 'tile-small': small },\n                        { 'tile-poll': poll }\n                    )}\n                    onClick={this.handleSelect}>\n                    <div className='tile-photo'>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize='default' />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const letters = getUserLetters(userId, fistName, lastName, t);\n        const src = getSrc(user && user.profile_photo ? user.profile_photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    className,\n                    'user-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-poll': poll }\n                )}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n            </div>\n        );\n    }\n}\n\nUserTile.propTypes = {\n    userId: PropTypes.number.isRequired,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    onSelect: PropTypes.func,\n    small: PropTypes.bool\n};\n\nexport default withTranslation()(UserTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        if (photo !== state.prevPhoto) {\n            return {\n                prevPhoto: photo,\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo ? photo.minithumbnail : null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, openMedia, showProgress, title, caption, type, style } = this.props;\n        const { thumbSize, photoSize, minithumbnail } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = (!thumbSrc && miniSrc) || isBlurredThumbnail(thumbSize);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        // console.log('[photo] render', displaySize, fitPhotoSize);\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const hasSrc = Boolean(src || thumbSrc || miniSrc);\n\n        return (\n            <div\n                className={classNames(className, 'photo', {\n                    'photo-big': type === 'message',\n                    'photo-title': title,\n                    'photo-caption': caption,\n                    pointer: openMedia\n                })}\n                style={photoStyle}\n                onClick={openMedia}>\n                {hasSrc && (\n                    <img\n                        className={classNames('photo-image', {\n                            'media-blurred': !src && isBlurred,\n                            'media-mini-blurred': !src && !thumbSrc && isBlurred\n                        })}\n                        draggable={false}\n                        src={src || thumbSrc || miniSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\nconst dateFormat = (function() {\n    const token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n    const timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n    const timezoneClip = /[^-+\\dA-Z]/g;\n\n    // Regexes and supporting functions are cached through closure\n    return function(date, mask, utc, gmt) {\n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n            mask = date;\n            date = undefined;\n        }\n\n        date = date || new Date();\n\n        if (!(date instanceof Date)) {\n            date = new Date(date);\n        }\n\n        if (isNaN(date)) {\n            throw TypeError('Invalid date');\n        }\n\n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n\n        // Allow setting the utc/gmt argument via the mask\n        var maskSlice = mask.slice(0, 4);\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n            mask = mask.slice(4);\n            utc = true;\n            if (maskSlice === 'GMT:') {\n                gmt = true;\n            }\n        }\n\n        var _ = utc ? 'getUTC' : 'get';\n        var d = date[_ + 'Date']();\n        var D = date[_ + 'Day']();\n        var m = date[_ + 'Month']();\n        var y = date[_ + 'FullYear']();\n        var H = date[_ + 'Hours']();\n        var M = date[_ + 'Minutes']();\n        var s = date[_ + 'Seconds']();\n        var L = date[_ + 'Milliseconds']();\n        var o = utc ? 0 : date.getTimezoneOffset();\n        var W = getWeek(date);\n        var N = getDayOfWeek(date);\n        var flags = {\n            d: d,\n            dd: pad(d),\n            ddd: dateFormat.i18n.dayNames[D],\n            dddd: dateFormat.i18n.dayNames[D + 7],\n            m: m + 1,\n            mm: pad(m + 1),\n            mmm: dateFormat.i18n.monthNames[m],\n            mmmm: dateFormat.i18n.monthNames[m + 12],\n            yy: String(y).slice(2),\n            yyyy: y,\n            h: H % 12 || 12,\n            hh: pad(H % 12 || 12),\n            H: H,\n            HH: pad(H),\n            M: M,\n            MM: pad(M),\n            s: s,\n            ss: pad(s),\n            l: pad(L, 3),\n            L: pad(Math.round(L / 10)),\n            t: H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n            tt: H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n            T: H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n            TT: H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n            Z: gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n            o: (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + (Math.abs(o) % 60), 4),\n            S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (((d % 100) - (d % 10) != 10) * d) % 10],\n            W: W,\n            N: N\n        };\n\n        return mask.replace(token, function(match) {\n            if (match in flags) {\n                return flags[match];\n            }\n            return match.slice(1, match.length - 1);\n        });\n    };\n})();\n\ndateFormat.masks = {\n    default: 'ddd mmm dd yyyy HH:MM:ss',\n    shortDate: 'm/d/yy',\n    mediumDate: 'mmm d, yyyy',\n    longDate: 'mmmm d, yyyy',\n    fullDate: 'dddd, mmmm d, yyyy',\n    shortTime: 'h:MM TT',\n    mediumTime: 'h:MM:ss TT',\n    longTime: 'h:MM:ss TT Z',\n    isoDate: 'yyyy-mm-dd',\n    isoTime: 'HH:MM:ss',\n    isoDateTime: \"yyyy-mm-dd'T'HH:MM:sso\",\n    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",\n    expiresHeaderFormat: 'ddd, dd mmm yyyy HH:MM:ss Z'\n};\n\n// Internationalization strings\ndateFormat.i18n = {\n    dayNames: [\n        'Sun',\n        'Mon',\n        'Tue',\n        'Wed',\n        'Thu',\n        'Fri',\n        'Sat',\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ],\n    monthNames: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ],\n    timeNames: ['a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM']\n};\n\nfunction pad(val, len) {\n    val = String(val);\n    len = len || 2;\n    while (val.length < len) {\n        val = '0' + val;\n    }\n    return val;\n}\n\n/**\n * Get the ISO 8601 week number\n * Based on comments from\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getWeek(date) {\n    // Remove time components of date\n    var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n    // Change date to Thursday same week\n    targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n    // Take January 4th as it is always in week 1 (see ISO 8601)\n    var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n    // Change date to Thursday same week\n    firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n    // Check if daylight-saving-time-switch occurred and correct for it\n    var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n    targetThursday.setHours(targetThursday.getHours() - ds);\n\n    // Number of weeks between target Thursday and first Thursday\n    var weekDiff = (targetThursday - firstThursday) / (86400000 * 7);\n    return 1 + Math.floor(weekDiff);\n}\n\n/**\n * Get ISO-8601 numeric representation of the day of the week\n * 1 (for Monday) through 7 (for Sunday)\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getDayOfWeek(date) {\n    var dow = date.getDay();\n    if (dow === 0) {\n        dow = 7;\n    }\n    return dow;\n}\n\n/**\n * kind-of shortcut\n * @param  {*} val\n * @return {String}\n */\nfunction kindOf(val) {\n    if (val === null) {\n        return 'null';\n    }\n\n    if (val === undefined) {\n        return 'undefined';\n    }\n\n    if (typeof val !== 'object') {\n        return typeof val;\n    }\n\n    if (Array.isArray(val)) {\n        return 'array';\n    }\n\n    return {}.toString\n        .call(val)\n        .slice(8, -1)\n        .toLowerCase();\n}\n\nexport default dateFormat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { getDecodedUrl, getHref, isUrlSafe } from '../../Utils/Url';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './SafeLink.css';\nimport { openChat } from '../../Actions/Client';\n\nclass SafeLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displayText, mail, url } = props;\n\n        if (state.prevUrl !== url || state.prevDisplayText !== displayText) {\n            return {\n                prevUrl: url,\n                prevDisplayText: displayText,\n                safe: isUrlSafe(displayText, url),\n                decodedUrl: getDecodedUrl(url, mail),\n                href: getHref(url, mail),\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.setState({ confirm: true });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleDone = event => {\n        this.handleClose();\n\n        const { url, onClick } = this.props;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    isTelegramLink(url) {\n        if (!url) return false;\n\n        const lowerCaseUrl = url\n            .toLowerCase()\n            .replace('https://', '')\n            .replace('http://', '');\n\n        return lowerCaseUrl.startsWith('t.me') || lowerCaseUrl.startsWith('tg://');\n    }\n\n    handleSafeClick = async event => {\n        event.stopPropagation();\n\n        const { onClick, url: href } = this.props;\n\n        if (this.isTelegramLink(href)) {\n            event.preventDefault();\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: href\n                });\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                const { chat_id, message } = messageLinkInfo;\n                if (chat_id) {\n                    openChat(chat_id, message ? message.id : null);\n                    return;\n                }\n            } catch (error) {\n                console.log('[safeLink] messageLinkInfo error', error);\n            }\n\n            if (onClick) {\n                onClick(event);\n            }\n        }\n\n        if (onClick) {\n            event.preventDefault();\n            onClick(event);\n        }\n    };\n\n    render() {\n        const { className, children, t, url } = this.props;\n        const { confirm, decodedUrl, href, safe } = this.state;\n\n        if (!url) return null;\n        if (!decodedUrl) return null;\n\n        return (\n            <>\n                {safe ? (\n                    <a\n                        className={className}\n                        href={href}\n                        title={decodedUrl}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        onClick={this.handleSafeClick}>\n                        {children || url}\n                    </a>\n                ) : (\n                    <>\n                        <a className={className} title={decodedUrl} onClick={this.handleClick}>\n                            {children || url}\n                        </a>\n                        {confirm && (\n                            <Dialog\n                                transitionDuration={0}\n                                open={confirm}\n                                onClose={this.handleClose}\n                                onClick={this.handleDialogClick}\n                                aria-labelledby='confirm-dialog-title'>\n                                <DialogTitle id='confirm-dialog-title'>{t('Confirm')}</DialogTitle>\n                                <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                                    <DialogContentText>{`Open this link?\\n\\n${decodedUrl}`}</DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={this.handleClose}>{t('Cancel')}</Button>\n                                    <Button onClick={this.handleDone} color='primary'>\n                                        {t('Open')}\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n                        )}\n                    </>\n                )}\n            </>\n        );\n    }\n}\n\nSafeLink.propTypes = {\n    url: PropTypes.string.isRequired,\n    displayText: PropTypes.string,\n    mail: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SafeLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass InstantViewStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = [];\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateBlocksInView': {\n                this.emit('clientUpdateBlocksInView', update);\n                break;\n            }\n            case 'clientUpdateInstantViewContent': {\n                const { content } = update;\n\n                if (content) {\n                    this.items.push(content.instantView);\n                } else {\n                    this.items = [];\n                }\n\n                this.emit('clientUpdateInstantViewContent', update);\n\n                break;\n            }\n            case 'clientUpdateInstantViewUrl': {\n                this.emit('clientUpdateInstantViewUrl', update);\n                break;\n            }\n            case 'clientUpdateInstantViewViewerContent': {\n                const { content } = update;\n\n                this.viewerContent = content;\n\n                this.emit('clientUpdateInstantViewViewerContent', update);\n                break;\n            }\n            case 'clientUpdatePrevInstantView': {\n                if (this.items.length <= 1) return;\n\n                this.items.pop();\n                const prevInstantView = this.items.pop();\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateInstantViewContent',\n                    content: {\n                        instantView: prevInstantView\n                    }\n                });\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    hasPrev() {\n        return this.items.length > 1;\n    }\n\n    getCurrent() {\n        return this.items.length > 0 ? this.items[this.items.length - 1] : null;\n    }\n}\n\nconst store = new InstantViewStore();\nwindow.instantView = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5,19 L19,19 C19.5522847,19 20,19.4477153 20,20 C20,20.5128358 19.6139598,20.9355072 19.1166211,20.9932723 L19,21 L5,21 C4.44771525,21 4,20.5522847 4,20 C4,19.4871642 4.38604019,19.0644928 4.88337887,19.0067277 L5,19 L19,19 L5,19 Z M11.8833789,3.00672773 L12,3 C12.5128358,3 12.9355072,3.38604019 12.9932723,3.88337887 L13,4 L13,13.585 L16.2928932,10.2928932 C16.6533772,9.93240926 17.2206082,9.90467972 17.6128994,10.2097046 L17.7071068,10.2928932 C18.0675907,10.6533772 18.0953203,11.2206082 17.7902954,11.6128994 L17.7071068,11.7071068 L12.7071068,16.7071068 C12.3466228,17.0675907 11.7793918,17.0953203 11.3871006,16.7902954 L11.2928932,16.7071068 L6.29289322,11.7071068 C5.90236893,11.3165825 5.90236893,10.6834175 6.29289322,10.2928932 C6.65337718,9.93240926 7.22060824,9.90467972 7.61289944,10.2097046 L7.70710678,10.2928932 L11,13.585 L11,4 C11,3.48716416 11.3860402,3.06449284 11.8833789,3.00672773 L12,3 L11.8833789,3.00672773 Z' />,\n    'Download'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(userId, null, t);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from './UserTile';\nimport UserStatus from './UserStatus';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from './../../Stores/UserStore';\nimport './User.css';\n\nclass User extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: UserStore.get(props.userId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, t, showStatus } = this.props;\n\n        const fullName = getUserFullName(userId, null, t);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='user-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='user-title'>{fullName}</div>\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                <UserStatus userId={userId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showStatus: PropTypes.bool\n};\n\nUser.defaultProps = {\n    showStatus: true\n};\n\nexport default withTranslation()(User);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport AppStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.setPlayerParams();\n    }\n\n    setPlayerParams() {\n        this.windowFocused = window.hasFocus;\n\n        this.inView = false;\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.ivInView = false;\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.animation !== this.props.animation) {\n            this.setPlayerParams();\n        }\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.on('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.off('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (\n                this.windowFocused &&\n                ((this.inView && !this.openMediaViewer && !this.openProfileMediaViewer && !this.openIV) ||\n                    (this.ivInView && !this.openIVMedia))\n            ) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateInstantViewViewerContent = update => {\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateBlocksInView = update => {\n        const { pageBlock } = this.props;\n        if (!pageBlock) return;\n\n        this.ivInView = update.blocks.has(pageBlock);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate(() => {\n                this.startStopPlayer();\n            });\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        const animationStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n        const isGif = isGifMimeType(mime_type);\n\n        return (\n            <div\n                className={classNames('animation', {\n                    'animation-big': type === 'message',\n                    'animation-title': title,\n                    'media-title': title,\n                    'animation-caption': caption,\n                    pointer: openMedia\n                })}\n                style={animationStyle}\n                onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='animation-preview' src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-animation'\n                            src={src}\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={animationStyle.width}\n                            height={animationStyle.height}\n                        />\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                            })}\n                            src={thumbnailSrc || miniSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    pageBlock: PropTypes.object,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    iv: PropTypes.bool\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    iv: false\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-12.000000, -12.000000)'\n        d='M19.3717789,13.8876217 L33.8466511,23.2537154 C34.2588127,23.5204082 34.3767385,24.0707284 34.1100457,24.48289 C34.0418356,24.5883056 33.9520666,24.6780745 33.8466511,24.7462846 L19.3717789,34.1123783 C18.9596173,34.3790711 18.4092971,34.2611454 18.1426043,33.8489838 C18.0495218,33.705129 18,33.5374371 18,33.3660938 L18,14.6339062 C18,14.1429865 18.3979691,13.7450173 18.8888889,13.7450173 C19.0602323,13.7450173 19.2279241,13.7945391 19.3717789,13.8876217 Z'\n    />,\n    'PlayArrow'\n);\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport punycode from './Punycode';\n\nexport function getHref(url, mail) {\n    if (!url) return null;\n\n    if (mail) return url.startsWith('mailto:') ? url : 'mailto:' + url;\n\n    // if (url.startsWith('tg://')) return url;\n\n    return url.startsWith('http') ? url : 'http://' + url;\n}\n\nexport function isUrlSafe(displayText, url) {\n    if (displayText && displayText !== url) {\n        return false;\n    }\n\n    if (hasRTLOSymbol(url)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getDecodedUrl(url, mail) {\n    if (!url) return null;\n\n    const href = getHref(url, mail);\n\n    try {\n        let decodedHref = decodeURI(href);\n\n        const domain = decodedHref.match(/^https?:\\/\\/([^\\/:?#]+)(?:[\\/:?#]|$)/i)[1];\n        decodedHref = decodedHref.replace(domain, punycode.ToUnicode(domain));\n\n        return decodedHref;\n    } catch (error) {\n        console.log('SafeLink.getDecodedUrl error ', url, error);\n    }\n\n    return null;\n}\n\nconst regExpRTLO = /\\u202e/;\n\nexport function hasRTLOSymbol(url) {\n    if (!url) return false;\n\n    return regExpRTLO.test(url);\n}\n\nconst regExpDomainExplicit = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){0,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpDomain = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)?((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){1,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpProtocol = new RegExp('^([a-zA-Z]+):\\\\/\\\\/');\n\n// https://github.com/telegramdesktop/tdesktop/blob/4e80d54be130eca76129f2c4995fe685d1014442/Telegram/SourceFiles/base/qthelp_url.cpp#L105\nexport function validateUrl(value) {\n    // value = punycode.ToASCII(value);\n\n    const trimmed = value.trim();\n    if (!trimmed) {\n        return null;\n    }\n\n    const match = trimmed.match(regExpDomainExplicit);\n    if (!match) {\n        const domainMatch = trimmed.match(regExpDomain);\n        if (!domainMatch || domainMatch.index !== 0) {\n            return null;\n        }\n\n        return 'http://' + trimmed;\n    } else if (match.index !== 0) {\n        return null;\n    }\n\n    const protocolMatch = trimmed.match(regExpProtocol);\n    return protocolMatch && isGoodProtocol(protocolMatch[0]) ? trimmed : null;\n}\n\nfunction isGoodProtocol(value) {\n    return ['http', 'https', 'tg'].some(x => value.toLowerCase().indexOf(x) === 0);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../../Assets/Icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport { getAudioShortTitle, getAudioSubtitle, getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia, title, meta, caption } = this.props;\n        const { playing } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const audioTitle = getAudioShortTitle(audio);\n        const audioSubtitle = getAudioSubtitle(audio);\n\n        return (\n            <div className={classNames('audio', 'document', { 'media-title': title })}>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={audioTitle}>\n                            {audioTitle}\n                        </a>\n                    </div>\n                    <div className='audio-action'>{audioSubtitle}</div>\n                    <AudioAction\n                        chatId={chatId}\n                        messageId={messageId}\n                        duration={duration}\n                        file={file}\n                        meta={caption ? null : meta}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    audio: PropTypes.object,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-15.000000, -15.000000)'\n        d='M23,16 C23.5522847,16 24,16.4477153 24,17 L24,37 C24,37.5522847 23.5522847,38 23,38 L18,38 C17.4477153,38 17,37.5522847 17,37 L17,17 C17,16.4477153 17.4477153,16 18,16 L23,16 Z M36,16 C36.5522847,16 37,16.4477153 37,17 L37,37 C37,37.5522847 36.5522847,38 36,38 L31,38 C30.4477153,38 30,37.5522847 30,37 L30,17 C30,16.4477153 30.4477153,16 31,16 L36,16 Z'\n    />,\n    'Pause'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nclass DocumentTile extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { minithumbnail, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n        const { loaded } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbnailSrc && loaded;\n        const src = thumbnailSrc || miniSrc;\n\n        return (\n            <div\n                className={classNames('document-tile', { 'document-tile-image': !src }, { pointer: openMedia })}\n                onClick={openMedia}>\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={src}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={typeof completeIcon === 'function' ? completeIcon(src) : completeIcon}\n                    />\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {!tileLoaded && <div className='document-tile-background' />}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\n\nexport default DocumentTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                timeString: this.getTimeString(update.currentTime, playerDuration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: this.getTimeString(active ? currentTime : 0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString}/${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { title, meta } = this.props;\n        const { active, file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='audio-action'>\n                {!active && <span>{title}</span>}\n                {!isDownloadingCompleted && <span>{`${sizeString}, `}</span>}\n                <span>{timeString}</span>\n                {meta}\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n\n    title: PropTypes.string\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location, width, height, zoom, scale } = this.props;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { location, width, height, zoom, scale, type, style, title, caption } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        const locationStyle = {\n            width,\n            height,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('location', {\n                    'location-message': type === 'message',\n                    'location-venue': type === 'venue',\n                    'location-title': title,\n                    'location-caption': caption\n                })}\n                style={locationStyle}>\n                <a href={source} target='_blank' rel='noopener noreferrer' onClick={this.handleClick}>\n                    <div className='location-wrapper'>\n                        <img className='location-image' draggable={false} alt={source} src={src} />\n                        <div className='location-icon'>\n                            <RoomIcon fontSize='large' color='primary' />\n                        </div>\n                    </div>\n                </a>\n            </div>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    width: PropTypes.number,\n    height: PropTypes.number,\n    zoom: PropTypes.number,\n    scale: PropTypes.number\n};\n\nLocation.defaultProps = {\n    width: LOCATION_WIDTH,\n    height: LOCATION_HEIGHT,\n    zoom: LOCATION_ZOOM,\n    scale: LOCATION_SCALE\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const videoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <div\n                className={classNames('video', {\n                    'video-big': type === 'message',\n                    'video-title': title,\n                    'video-caption': caption,\n                    pointer: openMedia\n                })}\n                style={videoStyle}\n                onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', {\n                        'media-blurred': isBlurred,\n                        'media-mini-blurred': !thumbnailSrc && isBlurred\n                    })}\n                    src={thumbnailSrc || miniSrc}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(3.000000, 0.600000)'>\n        <path\n            d='M9,0 C13.9705627,-9.13077564e-16 18,4.02943725 18,9 L18,23 L18,23 L15,20 L12,23 L9,20 L6,23 L3,20 L0,23 L0,9 C-6.08718376e-16,4.02943725 4.02943725,9.13077564e-16 9,0 Z'\n            stroke='currentColor'\n            strokeWidth='1.5'\n            strokeLinejoin='round'\n            fill='none'\n        />\n        <circle cx='5' cy='9' r='2' />\n        <circle cx='13' cy='9' r='2' />\n    </g>,\n    'DeletedAccount'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatus.css';\n\nclass UserStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { status, isAccent } = this.state;\n\n        return (\n            <div className={classNames('user-content', 'dialog-content', { 'user-status-accent': isAccent })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default UserStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateClosePollResults': {\n                this.emit('clientUpdateClosePollResults', update);\n                break;\n            }\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    type: {\n                        '@type': 'pollTypeRegular',\n                        allow_multiple_answers: false\n                    },\n                    id: Date.now(),\n                    question: '',\n                    options: [],\n                    is_anonymous: true\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAnonymous': {\n                const { poll } = this;\n                const isAnonymous = poll && poll.is_anonymous;\n\n                this.assign(this.poll, { is_anonymous: !isAnonymous });\n\n                this.emit('clientUpdatePollChangeAnonymous', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAllowMultipleAnswers': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const allowMultipleAnswers = poll && poll.type.allow_multiple_answers;\n\n                    const newType = { ...type, allow_multiple_answers: !allowMultipleAnswers };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeAllowMultipleAnswers', update);\n                break;\n            }\n            case 'clientUpdatePollChangeType': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const newType = { '@type': 'pollTypeQuiz', correct_option_id: -1 };\n\n                    this.assign(this.poll, { type: newType });\n                } else {\n                    const newType = { '@type': 'pollTypeRegular', allow_multiple_answers: false };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeType', update);\n                break;\n            }\n            case 'clientUpdatePollChooseOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, {\n                    options: options.map(x => (x.id === id ? { ...x, is_chosen: true } : { ...x, is_chosen: false }))\n                });\n\n                this.emit('clientUpdatePollChooseOption', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options, type, is_anonymous } = this.poll;\n\n        if (type['@type'] === 'pollTypeQuiz') {\n            type.correct_option_id = options.findIndex(x => x.is_chosen);\n\n            if (type.correct_option_id === -1) {\n                return null;\n            }\n        }\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text),\n            is_anonymous,\n            type,\n            is_closed: false\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","//https://stackoverflow.com/questions/183485/converting-punycode-with-dash-character-to-unicode\n//Javascript Punycode converter derived from example in RFC3492.\n//This implementation is created by some@domain.name and released into public domain\nfunction Punycode() {\n    // This object converts to and from puny-code used in IDN\n    //\n    // punycode.ToASCII ( domain )\n    //\n    // Returns a puny coded representation of \"domain\".\n    // It only converts the part of the domain name that\n    // has non ASCII characters. I.e. it dosent matter if\n    // you call it with a domain that already is in ASCII.\n    //\n    // punycode.ToUnicode (domain)\n    //\n    // Converts a puny-coded domain name to unicode.\n    // It only converts the puny-coded parts of the domain name.\n    // I.e. it dosent matter if you call it on a string\n    // that already has been converted to unicode.\n    //\n    //\n    this.utf16 = {\n        // The utf16-class is necessary to convert from javascripts internal character representation to unicode and back.\n        decode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value,\n                extra;\n            while (i < len) {\n                value = input.charCodeAt(i++);\n                if ((value & 0xf800) === 0xd800) {\n                    extra = input.charCodeAt(i++);\n                    if ((value & 0xfc00) !== 0xd800 || (extra & 0xfc00) !== 0xdc00) {\n                        throw new RangeError('UTF-16(decode): Illegal UTF-16 sequence');\n                    }\n                    value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                }\n                output.push(value);\n            }\n            return output;\n        },\n        encode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value;\n            while (i < len) {\n                value = input[i++];\n                if ((value & 0xf800) === 0xd800) {\n                    throw new RangeError('UTF-16(encode): Illegal UTF-16 value');\n                }\n                if (value > 0xffff) {\n                    value -= 0x10000;\n                    output.push(String.fromCharCode(((value >>> 10) & 0x3ff) | 0xd800));\n                    value = 0xdc00 | (value & 0x3ff);\n                }\n                output.push(String.fromCharCode(value));\n            }\n            return output.join('');\n        }\n    };\n\n    //Default parameters\n    var initial_n = 0x80;\n    var initial_bias = 72;\n    var delimiter = '\\x2D';\n    var base = 36;\n    var damp = 700;\n    var tmin = 1;\n    var tmax = 26;\n    var skew = 38;\n    var maxint = 0x7fffffff;\n\n    // decode_digit(cp) returns the numeric value of a basic code\n    // point (for use in representing integers) in the range 0 to\n    // base-1, or base if cp is does not represent a value.\n\n    function decode_digit(cp) {\n        return cp - 48 < 10 ? cp - 22 : cp - 65 < 26 ? cp - 65 : cp - 97 < 26 ? cp - 97 : base;\n    }\n\n    // encode_digit(d,flag) returns the basic code point whose value\n    // (when used for representing integers) is d, which needs to be in\n    // the range 0 to base-1. The lowercase form is used unless flag is\n    // nonzero, in which case the uppercase form is used. The behavior\n    // is undefined if flag is nonzero and digit d has no uppercase form.\n\n    function encode_digit(d, flag) {\n        return d + 22 + 75 * (d < 26) - ((flag != 0) << 5);\n        //  0..25 map to ASCII a..z or A..Z\n        // 26..35 map to ASCII 0..9\n    }\n    //** Bias adaptation function **\n    function adapt(delta, numpoints, firsttime) {\n        var k;\n        delta = firsttime ? Math.floor(delta / damp) : delta >> 1;\n        delta += Math.floor(delta / numpoints);\n\n        for (k = 0; delta > ((base - tmin) * tmax) >> 1; k += base) {\n            delta = Math.floor(delta / (base - tmin));\n        }\n        return Math.floor(k + ((base - tmin + 1) * delta) / (delta + skew));\n    }\n\n    // encode_basic(bcp,flag) forces a basic code point to lowercase if flag is zero,\n    // uppercase if flag is nonzero, and returns the resulting code point.\n    // The code point is unchanged if it is caseless.\n    // The behavior is undefined if bcp is not a basic code point.\n\n    function encode_basic(bcp, flag) {\n        bcp -= (bcp - 97 < 26) << 5;\n        return bcp + ((!flag && bcp - 65 < 26) << 5);\n    }\n\n    // Main decode\n    this.decode = function(input, preserveCase) {\n        // Dont use utf16\n        var output = [];\n        var case_flags = [];\n        var input_length = input.length;\n\n        var n, out, i, bias, basic, j, ic, oldi, w, k, digit, t, len;\n\n        // Initialize the state:\n\n        n = initial_n;\n        i = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points: Let basic be the number of input code\n        // points before the last delimiter, or 0 if there is none, then\n        // copy the first basic code points to the output.\n\n        basic = input.lastIndexOf(delimiter);\n        if (basic < 0) basic = 0;\n\n        for (j = 0; j < basic; ++j) {\n            if (preserveCase) case_flags[output.length] = input.charCodeAt(j) - 65 < 26;\n            if (input.charCodeAt(j) >= 0x80) {\n                throw new RangeError('Illegal input >= 0x80');\n            }\n            output.push(input.charCodeAt(j));\n        }\n\n        // Main decoding loop: Start just after the last delimiter if any\n        // basic code points were copied; start at the beginning otherwise.\n\n        for (ic = basic > 0 ? basic + 1 : 0; ic < input_length; ) {\n            // ic is the index of the next character to be consumed,\n\n            // Decode a generalized variable-length integer into delta,\n            // which gets added to i. The overflow checking is easier\n            // if we increase i as we go, then subtract off its starting\n            // value at the end to obtain delta.\n            for (oldi = i, w = 1, k = base; ; k += base) {\n                if (ic >= input_length) {\n                    throw RangeError('punycode_bad_input(1)');\n                }\n                digit = decode_digit(input.charCodeAt(ic++));\n\n                if (digit >= base) {\n                    throw RangeError('punycode_bad_input(2)');\n                }\n                if (digit > Math.floor((maxint - i) / w)) {\n                    throw RangeError('punycode_overflow(1)');\n                }\n                i += digit * w;\n                t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                if (digit < t) {\n                    break;\n                }\n                if (w > Math.floor(maxint / (base - t))) {\n                    throw RangeError('punycode_overflow(2)');\n                }\n                w *= base - t;\n            }\n\n            out = output.length + 1;\n            bias = adapt(i - oldi, out, oldi === 0);\n\n            // i was supposed to wrap around from out to 0,\n            // incrementing n each time, so we'll fix that now:\n            if (Math.floor(i / out) > maxint - n) {\n                throw RangeError('punycode_overflow(3)');\n            }\n            n += Math.floor(i / out);\n            i %= out;\n\n            // Insert n at position i of the output:\n            // Case of last character determines uppercase flag:\n            if (preserveCase) {\n                case_flags.splice(i, 0, input.charCodeAt(ic - 1) - 65 < 26);\n            }\n\n            output.splice(i, 0, n);\n            i++;\n        }\n        if (preserveCase) {\n            for (i = 0, len = output.length; i < len; i++) {\n                if (case_flags[i]) {\n                    output[i] = String.fromCharCode(output[i])\n                        .toUpperCase()\n                        .charCodeAt(0);\n                }\n            }\n        }\n        return this.utf16.encode(output);\n    };\n\n    //** Main encode function **\n\n    this.encode = function(input, preserveCase) {\n        //** Bias adaptation function **\n\n        var n, delta, h, b, bias, j, m, q, k, t, ijv, case_flags;\n\n        if (preserveCase) {\n            // Preserve case, step1 of 2: Get a list of the unaltered string\n            case_flags = this.utf16.decode(input);\n        }\n        // Converts the input in UTF-16 to Unicode\n        input = this.utf16.decode(input.toLowerCase());\n\n        var input_length = input.length; // Cache the length\n\n        if (preserveCase) {\n            // Preserve case, step2 of 2: Modify the list to true/false\n            for (j = 0; j < input_length; j++) {\n                case_flags[j] = input[j] != case_flags[j];\n            }\n        }\n\n        var output = [];\n\n        // Initialize the state:\n        n = initial_n;\n        delta = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points:\n        for (j = 0; j < input_length; ++j) {\n            if (input[j] < 0x80) {\n                output.push(String.fromCharCode(case_flags ? encode_basic(input[j], case_flags[j]) : input[j]));\n            }\n        }\n\n        h = b = output.length;\n\n        // h is the number of code points that have been handled, b is the\n        // number of basic code points\n\n        if (b > 0) output.push(delimiter);\n\n        // Main encoding loop:\n        //\n        while (h < input_length) {\n            // All non-basic code points < n have been\n            // handled already. Find the next larger one:\n\n            for (m = maxint, j = 0; j < input_length; ++j) {\n                ijv = input[j];\n                if (ijv >= n && ijv < m) m = ijv;\n            }\n\n            // Increase delta enough to advance the decoder's\n            // <n,i> state to <m,0>, but guard against overflow:\n\n            if (m - n > Math.floor((maxint - delta) / (h + 1))) {\n                throw RangeError('punycode_overflow (1)');\n            }\n            delta += (m - n) * (h + 1);\n            n = m;\n\n            for (j = 0; j < input_length; ++j) {\n                ijv = input[j];\n\n                if (ijv < n) {\n                    if (++delta > maxint) return Error('punycode_overflow(2)');\n                }\n\n                if (ijv == n) {\n                    // Represent delta as a generalized variable-length integer:\n                    for (q = delta, k = base; ; k += base) {\n                        t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                        if (q < t) break;\n                        output.push(String.fromCharCode(encode_digit(t + ((q - t) % (base - t)), 0)));\n                        q = Math.floor((q - t) / (base - t));\n                    }\n                    output.push(String.fromCharCode(encode_digit(q, preserveCase && case_flags[j] ? 1 : 0)));\n                    bias = adapt(delta, h + 1, h == b);\n                    delta = 0;\n                    ++h;\n                }\n            }\n\n            ++delta;\n            ++n;\n        }\n        return output.join('');\n    };\n\n    this.ToASCII = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/[^A-Za-z0-9-]/) ? 'xn--' + punycode.encode(s) : s);\n        }\n        return out.join('.');\n    };\n    this.ToUnicode = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/^xn--/) ? punycode.decode(s.slice(4)) : s);\n        }\n        return out.join('.');\n    };\n}\n\nconst punycode = new Punycode();\nexport default punycode;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n        if (player.src !== src) {\n            player.src = src;\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (\n                this.inView &&\n                this.windowFocused &&\n                !this.openMediaViewer &&\n                !this.openProfileMediaViewer &&\n                !this.openIV\n            ) {\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { minithumbnail, thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = (progressTime / videoDuration) * 100;\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        />\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', {\n                                    'media-blurred': isBlurred,\n                                    'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                                })}\n                                style={style}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<DownloadIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport DocumentTile from './DocumentTile';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './VoiceNoteTile.css';\n\nclass VoiceNoteTile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { file, openMedia } = this.props;\n        const { playing } = this.state;\n\n        return (\n            <DocumentTile\n                thumbnail={null}\n                file={file}\n                openMedia={openMedia}\n                icon={<DownloadIcon />}\n                completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n            />\n        );\n    }\n}\n\nVoiceNoteTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNoteTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Draws a rounded rectangle using the current state of the canvas.\n * If you omit the last three params, it will draw a rectangle\n * outline with a 5 pixel border radius\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} [radius = 5] The corner radius; It can also be an object\n *                 to specify different radii for corners\n * @param {Number} [radius.tl = 0] Top left\n * @param {Number} [radius.tr = 0] Top right\n * @param {Number} [radius.br = 0] Bottom right\n * @param {Number} [radius.bl = 0] Bottom left\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\n */\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke) {\n    if (typeof stroke === 'undefined') {\n        stroke = true;\n    }\n    if (typeof radius === 'undefined') {\n        radius = 5;\n    }\n    if (typeof radius === 'number') {\n        radius = { tl: radius, tr: radius, br: radius, bl: radius };\n    } else {\n        var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\n        for (var side in defaultRadius) {\n            radius[side] = radius[side] || defaultRadius[side];\n        }\n    }\n    ctx.beginPath();\n    ctx.moveTo(x + radius.tl, y);\n    ctx.lineTo(x + width - radius.tr, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n    ctx.lineTo(x + width, y + height - radius.br);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n    ctx.lineTo(x + radius.bl, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n    ctx.lineTo(x, y + radius.tl);\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    if (stroke) {\n        ctx.stroke();\n    }\n}\n\nclass Particle {\n    constructor(fireworks) {\n        this.fireworks = fireworks;\n        this.type = 0;\n        this.colorType = 0;\n        this.side = 0;\n        this.typeSize = 4;\n        this.xFinished = false;\n        this.finishedStart = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.rotation = 0;\n        this.moveX = 0;\n        this.moveY = 0;\n    }\n\n    draw(ctx) {\n        ctx.fillStyle = this.colorType;\n\n        if (this.type === 0) {\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.typeSize, 0, Math.PI * 2, false);\n            ctx.fill();\n        } else {\n            ctx.save();\n            ctx.translate(this.x, this.y);\n            ctx.rotate((this.rotation * Math.PI) / 180);\n            roundRect(ctx, -this.typeSize, -2, this.typeSize * 2, 4, 2, true, false);\n            ctx.restore();\n        }\n    }\n\n    update(dt) {\n        const moveCoef = dt / 16.0;\n        this.x += this.moveX * moveCoef;\n        this.y += this.moveY * moveCoef;\n        if (this.xFinished !== 0) {\n            const dp = 0.5;\n            if (this.xFinished === 1) {\n                this.moveX += dp * moveCoef * 0.05;\n                if (this.moveX >= dp) {\n                    this.xFinished = 2;\n                }\n            } else {\n                this.moveX -= dp * moveCoef * 0.05;\n                if (this.moveX <= -dp) {\n                    this.xFinished = 1;\n                }\n            }\n        } else {\n            if (this.side === 0) {\n                if (this.moveX > 0) {\n                    this.moveX -= moveCoef * 0.05;\n                    if (this.moveX <= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            } else {\n                if (this.moveX < 0) {\n                    this.moveX += moveCoef * 0.05;\n                    if (this.moveX >= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            }\n        }\n        let yEdge = -0.5;\n        const wasNegative = this.moveY < yEdge;\n        if (this.moveY > yEdge) {\n            this.moveY += (1.0 / 3.0) * moveCoef * this.fireworks.speedCoef;\n        } else {\n            this.moveY += (1.0 / 3.0) * moveCoef;\n        }\n        if (wasNegative && this.moveY > yEdge) {\n            this.fireworks.fallingDownCount++;\n        }\n        if (this.type === 1) {\n            this.rotation += moveCoef * 10;\n            if (this.rotation > 360) {\n                this.rotation -= 360;\n            }\n        }\n\n        return this.y >= this.fireworks.getMeasuredHeight();\n    }\n}\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nclass Fireworks {\n    static colors = ['#E8BC2C', '#D0049E', '#02CBFE', '#5723FD', '#FE8C27', '#6CB859'];\n\n    constructor(context) {\n        this.context = context;\n        this.particlesCount = 60;\n        this.fallParticlesCount = 30;\n        this.particles = [];\n        this.speedCoef = 1.0;\n        this.fallingDownCount = 0;\n    }\n\n    getMeasuredHeight() {\n        return this.context.canvas.clientHeight;\n    }\n\n    getMeasuredWidth() {\n        return this.context.canvas.clientWidth;\n    }\n\n    createParticle(fall) {\n        const particle = new Particle(this);\n        particle.colorType = Fireworks.colors[getRandomInt(0, Fireworks.colors.length)];\n        particle.type = getRandomInt(0, 2);\n        particle.side = getRandomInt(0, 2);\n        particle.finishedStart = 1 + getRandomInt(0, 2);\n        if (particle.type === 0) {\n            particle.typeSize = 4 + Math.random() * 2;\n        } else {\n            particle.typeSize = 4 + Math.random() * 4;\n        }\n        if (fall) {\n            particle.y = -Math.random() * this.getMeasuredHeight() * 1.2;\n            particle.x = 5 + getRandomInt(0, this.getMeasuredWidth() - 10);\n            particle.xFinished = particle.finishedStart;\n        } else {\n            const xOffset = 4 + getRandomInt(0, 10);\n            const yOffset = this.getMeasuredHeight() / 4;\n            if (particle.side === 0) {\n                particle.x = -xOffset;\n            } else {\n                particle.x = this.getMeasuredWidth() + xOffset;\n            }\n            particle.rotation = Math.random() * 360;\n            particle.moveX = (particle.side === 0 ? 1 : -1) * (1.2 + Math.random() * 4);\n            particle.moveY = -(4 + Math.random() * 4);\n            particle.y = yOffset / 2 + getRandomInt(0, yOffset * 2);\n        }\n        // console.log(`particle side=${particle.side} x=${particle.x} y=${particle.y} moveX=${particle.moveX} moveY=${particle.moveY}`);\n        return particle;\n    }\n\n    start() {\n        if (this.started) {\n            return;\n        }\n\n        this.particles = [];\n        this.started = true;\n        this.startedFall = false;\n        this.fallingDownCount = 0;\n        this.speedCoef = 1.0;\n        this.lastUpdateTime = 0;\n        for (let a = 0; a < this.particlesCount; a++) {\n            this.particles.push(this.createParticle(false));\n        }\n\n        this.draw();\n    }\n\n    startFall() {\n        if (this.startedFall) {\n            return;\n        }\n        this.startedFall = true;\n        for (let a = 0; a < this.fallParticlesCount; a++) {\n            this.particles.push(this.createParticle(true));\n        }\n    }\n\n    draw() {\n        const newTime = Date.now();\n        let dt = newTime - this.lastUpdateTime;\n        this.lastUpdateTime = newTime;\n        if (dt > 18) {\n            dt = 16;\n        }\n        // console.log('draw dt', dt);\n        this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        for (let a = 0, N = this.particles.length; a < N; a++) {\n            const p = this.particles[a];\n            p.draw(this.context);\n            if (p.update(dt)) {\n                this.particles.splice(a, 1);\n                a--;\n                N--;\n            }\n        }\n        if (this.fallingDownCount >= this.particlesCount / 2 && this.speedCoef > 0.2) {\n            this.startFall();\n            this.speedCoef -= (dt / 16.0) * 0.15;\n            if (this.speedCoef < 0.2) {\n                this.speedCoef = 0.2;\n            }\n        }\n        if (this.particles.length) {\n            window.requestAnimationFrame(() => this.draw());\n        } else {\n            this.started = false;\n            this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        }\n    }\n}\n\nclass FireworksComponent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.canvasRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.attachToParent();\n    }\n\n    componentWillUnmount() {\n        this.detachFromParent();\n    }\n\n    attachToParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = parentNode;\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n        window.addEventListener('resize', this.onResize);\n    }\n\n    detachFromParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = null;\n        window.removeEventListener('resize', this.onResize);\n    }\n\n    onResize = () => {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n    };\n\n    start() {\n        const ctx = this.canvasRef.current.getContext('2d');\n\n        const fireworks = new Fireworks(ctx);\n        fireworks.start();\n    }\n\n    render() {\n        return (\n            <canvas\n                ref={this.canvasRef}\n                style={{\n                    zIndex: 2,\n                    position: 'absolute',\n                    left: 0,\n                    top: 0,\n                    width: '100%',\n                    height: '100%',\n                    pointerEvents: 'none'\n                }}\n            />\n        );\n    }\n}\n\nFireworksComponent.propTypes = {};\n\nexport default FireworksComponent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Check'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nclass PollRadio extends React.Component {\n    render() {\n        const { chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    color='primary'\n                    classes={{\n                        root: 'poll-radio-root',\n                        colorPrimary: 'message-control',\n                        disabled: 'message-control-disabled'\n                    }}\n                    TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? 'poll-radio-icon' : null }} />}\n                />\n                {beingChosen && (\n                    <CircularProgress\n                        size={20}\n                        thickness={4.4}\n                        classes={{ root: 'poll-radio-progress-root', colorPrimary: 'message-control' }}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool,\n    beingChosen: PropTypes.bool,\n    hidden: PropTypes.bool\n};\n\nexport default PollRadio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, theme, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (theme !== nextProps.theme) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className='poll-percentage'>\n                {/*{!closed && chosen ? (*/}\n                {/*    <a className='poll-percentage-action' onClick={onClick}>*/}\n                {/*        {animated + '%'}*/}\n                {/*    </a>*/}\n                {/*) : (*/}\n                {/*    <>{animated + '%'}</>*/}\n                {/*)}*/}\n                <>{animated + '%'}</>\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CheckIcon from '../../../Assets/Icons/Check';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport './PollOption.css';\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    render() {\n        const { option, onChange, canBeSelected, closed, maxVoterCount, t, type, isCorrect } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, isMultiChoosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage value={vote_percentage} chosen={is_chosen} closed={closed} />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen || isMultiChoosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        {(is_chosen || isCorrect) && (\n                            <div\n                                className={classNames(\n                                    'poll-option-mark',\n                                    { 'poll-option-mark-correct': type === 'correct' },\n                                    { 'poll-option-mark-incorrect': type === 'incorrect' }\n                                )}>\n                                {type === 'incorrect' ? (\n                                    <CloseIcon className='poll-option-mark-icon' />\n                                ) : (\n                                    <CheckIcon className='poll-option-mark-icon' />\n                                )}\n                            </div>\n                        )}\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <LinearProgress\n                    classes={{\n                        root: 'poll-option-progress-root',\n                        bar: classNames(\n                            'poll-option-progress-bar',\n                            { 'poll-option-progress-bar-correct': type === 'correct' },\n                            { 'poll-option-progress-bar-incorrect': type === 'incorrect' }\n                        )\n                    }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    type: PropTypes.oneOf(['regular', 'correct', 'incorrect']).isRequired,\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nexport default withTranslation()(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './UserPlaceholder.css';\nimport UserStatus from './UserStatus';\n\nclass UserPlaceholder extends React.Component {\n    render() {\n        const { index, showStatus } = this.props;\n\n        const titleWidth = `${20 + Math.sin(index) * 10}%`;\n        const contentWidth = `${30 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='user-placeholder'>\n                <div className='user-wrapper'>\n                    <div className='user-placeholder-tile' />\n                    <div className='user-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            <div className='dialog-placeholder-title' style={{ width: contentWidth, marginLeft: 8 }} />\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showStatus: PropTypes.bool\n};\n\nUserPlaceholder.defaultProps = {\n    showStatus: true\n};\n\nexport default UserPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../Tile/User';\nimport UserPlaceholder from '../Tile/UserPlaceholder';\nimport { openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResult.css';\n\nclass PollOptionResult extends React.Component {\n    onClick = () => {\n        const { userId } = this.props;\n        if (!userId) return;\n\n        openUser(userId, true);\n\n        setTimeout(() => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateClosePollResults'\n            });\n        }, 0);\n    };\n\n    render() {\n        const { index, userId } = this.props;\n\n        const content = userId ? (\n            <User userId={userId} showStatus={false} />\n        ) : (\n            <UserPlaceholder index={index} showStatus={false} />\n        );\n\n        return (\n            <ListItem button className='user-list-item' onClick={this.onClick}>\n                {content}\n            </ListItem>\n        );\n    }\n}\n\nPollOptionResult.propTypes = {\n    index: PropTypes.number.isRequired,\n    userId: PropTypes.number\n};\n\nexport default PollOptionResult;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport PollOptionResult from './PollOptionResult';\nimport { loadUsersContent } from '../../Utils/File';\nimport { POLL_RESULTS_FIRST_SLICE_LENGTH, POLL_RESULTS_LEAVE_LENGTH, POLL_RESULTS_SLICE_LENGTH } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResults.css';\n\nclass PollOptionResults extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.state = {\n            voters: [],\n            offset: 0,\n            count\n        };\n    }\n\n    async updateVoters(offset, count, loadMore) {\n        const { chatId, messageId, optionId, option } = this.props;\n        const { voters } = this.state;\n        if (count <= 0) return;\n\n        const limit = count - offset;\n        // console.log(`[poll] getPollVoters start option_id=${optionId} offset=${offset} limit=${limit}`);\n        const result = await TdLibController.send({\n            '@type': 'getPollVoters',\n            chat_id: chatId,\n            message_id: messageId,\n            option_id: optionId,\n            offset,\n            limit\n        });\n        // console.log(`[poll] getPollVoters end option_id=${optionId} offset=${offset} limit=${limit}`, result, result.user_ids.map(x => UserStore.get(x)));\n\n        if (this.props.option !== option) {\n            return;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, result.user_ids);\n\n        this.setState(\n            {\n                voters: [...voters, ...result.user_ids]\n            },\n            async () => {\n                if (result.user_ids.length < limit && loadMore) {\n                    const offset2 = offset + result.user_ids.length;\n\n                    this.updateVoters(offset2, count, false);\n                }\n            }\n        );\n    }\n\n    componentDidMount() {\n        const { offset, count } = this.state;\n\n        this.updateVoters(offset, count, true);\n    }\n\n    handleShowMore = () => {\n        const { option } = this.props;\n        const { count } = this.state;\n\n        const newOffset = count;\n        const newCount = Math.min(option.voter_count, count + POLL_RESULTS_SLICE_LENGTH);\n\n        this.setState(\n            {\n                offset: newOffset,\n                count: newCount\n            },\n            () => {\n                this.updateVoters(newOffset, newCount, true);\n            }\n        );\n    };\n\n    handleCollapse = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.setState({\n            voters: this.state.voters.slice(0, count),\n            offset: 0,\n            count\n        });\n    };\n\n    render() {\n        const { option, isQuiz, t } = this.props;\n        const { voters, count } = this.state;\n\n        const { text, voter_count, vote_percentage } = option;\n        if (voter_count === 0) {\n            return null;\n        }\n\n        const results = [];\n        for (let i = 0; i < count; i++) {\n            const userId = i < voters.length ? voters[i] : null;\n            results.push(<PollOptionResult key={`${i}_userId=${userId}`} index={i} userId={userId} />);\n        }\n\n        const voterCount = isQuiz\n            ? voter_count !== 1\n                ? `${voter_count} answers`\n                : `${voter_count} answer`\n            : voter_count !== 1\n            ? `${voter_count} votes`\n            : `${voter_count} vote`;\n\n        let showMoreButton = null;\n        const showMoreCount = voter_count - count;\n        if (showMoreCount > 0) {\n            const showMore = isQuiz\n                ? showMoreCount !== 1\n                    ? `${showMoreCount} answers`\n                    : `${showMoreCount} answer`\n                : showMoreCount !== 1\n                ? `${showMoreCount} votes`\n                : `${showMoreCount} vote`;\n\n            showMoreButton = (\n                <Button\n                    classes={{ root: 'poll-option-results-button' }}\n                    color='primary'\n                    fullWidth\n                    onClick={this.handleShowMore}>\n                    {t('ShowVotesOT').replace('%1$d', showMore)}\n                </Button>\n            );\n        }\n        const showCollapse =\n            count > POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH &&\n            voter_count > POLL_RESULTS_FIRST_SLICE_LENGTH;\n\n        return (\n            <>\n                <div className='poll-option-results-caption'>\n                    <div className='poll-option-results-answer'>{`${text} — ${vote_percentage}%`}</div>\n                    {showCollapse ? (\n                        <a onClick={this.handleCollapse}>{t('PollCollapse')}</a>\n                    ) : (\n                        <div className='poll-option-results-count'>{voterCount}</div>\n                    )}\n                </div>\n                {results}\n                {showMoreButton}\n            </>\n        );\n    }\n}\n\nPollOptionResults.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    optionId: PropTypes.number.isRequired,\n    option: PropTypes.object.isRequired,\n    isQuiz: PropTypes.bool.isRequired\n};\n\nexport default withTranslation()(PollOptionResults);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport PollOptionResults from './PollOptionResults';\nimport PollStore from '../../Stores/PollStore';\nimport './PollResultsDialog.css';\n\nclass PollResultsDialog extends React.Component {\n    componentDidMount() {\n        PollStore.on('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    onClientUpdateClosePollResults = update => {\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClose = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleContextMenu = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        if (!poll) return;\n\n        const { options, type, question } = poll;\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n\n        return (\n            <Dialog\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                transitionDuration={0}\n                open={true}\n                onClick={this.handleClick}\n                onContextMenu={this.handleContextMenu}\n                onClose={this.handleClose}\n                aria-labelledby='poll-results-title'>\n                <DialogTitle id='poll-results-title'>{isQuiz ? t('QuizAnswers') : t('PollResults')}</DialogTitle>\n                <DialogContent classes={{ root: 'poll-results-content' }}>\n                    <div className='poll-results-question'>{question}</div>\n                    {options.map((x, i) => (\n                        <PollOptionResults\n                            key={i}\n                            isQuiz={isQuiz}\n                            chatId={chatId}\n                            messageId={messageId}\n                            optionId={i}\n                            option={x}\n                        />\n                    ))}\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nPollResultsDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(PollResultsDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FireworksComponent from './FireworksControl';\nimport PollOption from './PollOption';\nimport UserTile from '../../Tile/UserTile';\nimport { setPollAnswer } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport TdLibController from './../../../Controllers/TdLibController';\nimport './Poll.css';\nimport PollResultsDialog from '../../Popup/PollResultsDialog';\n\nclass Poll extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.fireworksRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId, poll } = this.props;\n\n        if (poll && poll.type['@type'] === 'pollTypeQuiz') {\n            const { poll: prevPoll } = prevProps;\n            if (prevPoll.type.correct_option_id === -1 && poll.type.correct_option_id !== -1) {\n                const fireworks = this.fireworksRef.current;\n                if (!fireworks) return;\n\n                if (poll.options[poll.type.correct_option_id].is_chosen) {\n                    fireworks.start();\n                } else {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMessageShake',\n                        chatId,\n                        messageId\n                    });\n                }\n            }\n        }\n    }\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 answer';\n\n        return count + ' answers';\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (this.viewResults(poll)) {\n            return;\n        }\n\n        if (!type.allow_multiple_answers) {\n            return;\n        }\n\n        const optionIds = [];\n        poll.options.forEach((x, index) => {\n            if (x.isMultiChoosen) {\n                optionIds.push(index);\n            }\n        });\n\n        if (!optionIds.length) {\n            return;\n        }\n\n        setPollAnswer(chatId, messageId, optionIds);\n    };\n\n    handleVote = index => {\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (type['@type'] === 'pollTypeRegular' && type.allow_multiple_answers) {\n            poll.options[index].isMultiChoosen = !poll.options[index].isMultiChoosen;\n            this.forceUpdate();\n        } else {\n            setPollAnswer(chatId, messageId, [index]);\n        }\n    };\n\n    viewResults(poll) {\n        if (!poll) return false;\n\n        const { options, is_closed, is_anonymous } = poll;\n        if (is_anonymous) {\n            return false;\n        }\n\n        return is_closed || options.some(x => x.is_chosen);\n    }\n\n    getOptionType(index, poll) {\n        const types = ['regular', 'correct', 'incorrect'];\n        const defaultTypeId = 0;\n        const correctTypeId = 1;\n        const incorrectTypeId = 2;\n        if (!poll) return types[defaultTypeId];\n\n        const option = poll.options[index];\n        if (!option) return types[defaultTypeId];\n        if (!option.is_chosen) return types[defaultTypeId];\n\n        const { type } = poll;\n        if (!type) return types[defaultTypeId];\n        if (type['@type'] !== 'pollTypeQuiz') return types[defaultTypeId];\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return types[defaultTypeId];\n\n        return correct_option_id === index ? types[correctTypeId] : types[incorrectTypeId];\n    }\n\n    getOptionIsCorrect(index, poll) {\n        if (!poll) return false;\n\n        const option = poll.options[index];\n        if (!option) return false;\n\n        const { type } = poll;\n        if (!type) return false;\n        if (type['@type'] !== 'pollTypeQuiz') return false;\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return false;\n\n        return correct_option_id === index;\n    }\n\n    handleOpenResults = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { poll } = this.props;\n\n        this.setState({\n            viewResultsPoll: poll\n        });\n    };\n\n    handleCloseResults = () => {\n        this.setState({\n            viewResultsPoll: null\n        });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t, meta } = this.props;\n        const { viewResultsPoll } = this.state;\n        const { question, options, total_voter_count, type, is_closed, is_anonymous, recent_voter_user_ids } = poll;\n\n        let subtitle = t('FinalResults');\n        if (!is_closed) {\n            switch (type['@type']) {\n                case 'pollTypeRegular': {\n                    subtitle = is_anonymous ? t('AnonymousPoll') : t('PublicPoll');\n                    break;\n                }\n                case 'pollTypeQuiz': {\n                    subtitle = is_anonymous ? t('AnonymousQuizPoll') : t('QuizPoll');\n                    break;\n                }\n            }\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const isSelected = !is_closed && options.some(x => x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n        const showViewResults = this.viewResults(poll);\n        const showButton = (type.allow_multiple_answers && !isSelected) || showViewResults;\n        const buttonEnabled = showViewResults || options.some(x => x.isMultiChoosen);\n        let recentVoters = [];\n        if (recent_voter_user_ids) {\n            recentVoters = recent_voter_user_ids.map(id => <UserTile key={id} poll userId={id} />);\n        }\n\n        return (\n            <div className='poll'>\n                {isQuiz && <FireworksComponent ref={this.fireworksRef} />}\n                <div className='poll-question'>\n                    <div className='poll-question-title'>{question}</div>\n                    <div className='poll-question-subtitle'>\n                        <span style={{ marginRight: 6 }}>{subtitle}</span>\n                        {recentVoters}\n                    </div>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            type={this.getOptionType(index, poll)}\n                            isCorrect={this.getOptionIsCorrect(index, poll)}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                        />\n                    ))}\n                </div>\n                {showButton ? (\n                    <Button\n                        fullWidth\n                        color='primary'\n                        classes={{\n                            root: 'poll-button',\n                            textPrimary: 'message-control',\n                            disabled: 'message-control-disabled'\n                        }}\n                        TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                        disabled={!buttonEnabled}\n                        onClick={showViewResults ? this.handleOpenResults : this.handleSubmit}>\n                        {showViewResults ? t('PollViewResults') : t('PollSubmitVotes')}\n                    </Button>\n                ) : (\n                    <div className='poll-total-count'>\n                        {this.getTotalVoterCountString(total_voter_count, t)}\n                        {meta}\n                    </div>\n                )}\n                {Boolean(viewResultsPoll) && (\n                    <PollResultsDialog\n                        chatId={chatId}\n                        messageId={messageId}\n                        poll={viewResultsPoll}\n                        onClose={this.handleCloseResults}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fillRule='evenodd'>\n        <path d='M6,0 L33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,48 C54,51.3137085 51.3137085,54 48,54 L6,54 C2.6862915,54 4.05812251e-16,51.3137085 0,48 L0,6 C-4.05812251e-16,2.6862915 2.6862915,6.08718376e-16 6,0 Z' />\n        <path\n            d='M33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,22 C54,19.790861 52.209139,18 50,18 L40,18 C37.790861,18 36,16.209139 36,14 L36,4 C36,1.790861 34.209139,-3.88578059e-16 32,0 L33.5147186,0 Z'\n            fill='#000000'\n            style={{ mixBlendMode: 'normal' }}\n            opacity='0.15'\n        />\n    </g>,\n    'Document'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { meta } = this.props;\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n                {meta}\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport DocumentIcon from '../../../Assets/Icons/Document';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia, width, height, meta, title, caption } = this.props;\n        if (!document) return null;\n\n        const { minithumbnail, thumbnail, file_name } = document;\n        const file = document.document;\n\n        const style = width && height ? { width, height } : null;\n        const completeIconFunc = thumb =>\n            thumb ? null : (\n                <div className='document-tile-complete-icon'>\n                    <DocumentIcon className='document-tile-icon-fill' viewBox='0 0 54 54' />\n                    <div className='document-tile-file-ext'>{getExtension(file_name)}</div>\n                </div>\n            );\n\n        return (\n            <div className={classNames('document', { 'media-title': title })} style={style}>\n                <DocumentTile\n                    minithumbnail={minithumbnail}\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={completeIconFunc}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} meta={caption ? null : meta} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    width: PropTypes.number,\n    height: PropTypes.number\n};\n\nexport default Document;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNoteSlider.css';\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            const value = this.getValue(update.currentTime, playerDuration, active);\n\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                value\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            const value = this.getValue(active ? currentTime : 0, playerDuration, true);\n\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    render() {\n        const { value } = this.state;\n\n        return (\n            <div className='voice-note-slider'>\n                <Slider\n                    className='voice-note-slider-component'\n                    classes={{\n                        track: 'voice-note-slider-track',\n                        // thumbWrapper: 'voice-note-slider-thumb-wrapper',\n                        thumb: 'voice-note-slider-thumb'\n                    }}\n                    min={0}\n                    max={1}\n                    value={value}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired\n};\n\nexport default VoiceNoteSlider;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport AudioAction from './AudioAction';\nimport VoiceNoteTile from '../../Tile/VoiceNoteTile';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, title, meta, caption } = this.props;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <div className={classNames('voice-note', 'document', { 'media-title': title })}>\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNote;\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"39a7460230ed7519e442.worker.js\");\n};","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { loaded } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size, t } = this.props;\n        const { loaded } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_4', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat, t);\n        const src = getSrc(photo ? photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function copy(text) {\n    let element;\n\n    try {\n        element = document.createElement('textarea');\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.select();\n\n        const successful = document.execCommand('copy');\n        if (!successful) {\n            console.error('unable to copy using execCommand');\n        }\n    } catch {\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport TdLibController from '../Controllers/TdLibController';\nimport ChatStore from '../Stores/ChatStore';\nimport { isChatMuted } from '../Utils/Chat';\nimport { MUTED_VALUE_MAX, MUTED_VALUE_MIN } from '../Constants';\n\nexport async function getChat(chatId) {\n    const chat = TdLibController.send({\n        '@type': 'getChat',\n        chat_id: chatId\n    });\n    ChatStore.set(chat);\n\n    return chat;\n}\n\nexport function setChatChatList(chatId, chatList) {\n    TdLibController.send({\n        '@type': 'setChatChatList',\n        chat_id: chatId,\n        chat_list: chatList\n    });\n}\n\nexport function toggleChatIsPinned(chatId, isPinned) {\n    TdLibController.send({\n        '@type': 'toggleChatIsPinned',\n        chat_id: chatId,\n        is_pinned: isPinned\n    });\n}\n\nexport function toggleChatIsMarkedAsUnread(chatId, isMarkedAsUnread) {\n    TdLibController.send({\n        '@type': 'toggleChatIsMarkedAsUnread',\n        chat_id: chatId,\n        is_marked_as_unread: isMarkedAsUnread\n    });\n}\n\nexport function toggleChatNotificationSettings(chatId, isMuted) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return;\n\n    const isMutedPrev = isChatMuted(chatId);\n    if (isMutedPrev === isMuted) {\n        return;\n    }\n\n    const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n    const newNotificationSettings = {\n        ...chat.notification_settings,\n        use_default_mute_for: false,\n        mute_for: muteFor\n    };\n\n    TdLibController.send({\n        '@type': 'setChatNotificationSettings',\n        chat_id: chatId,\n        notification_settings: newNotificationSettings\n    });\n}\n\nexport async function getChatCounters(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const promises = [];\n\n    const photoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterPhoto' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(photoCounter);\n\n    const videoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVideo' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(videoCounter);\n\n    const documentCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterDocument' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(documentCounter);\n\n    const audioCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterAudio' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(audioCounter);\n\n    const urlCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterUrl' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(urlCounter);\n\n    const voiceAndVideoNoteCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVoiceNote' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(voiceAndVideoNoteCounter);\n\n    return await Promise.all(promises);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './MoreListItem.css';\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className='list-item' onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className='list-item' onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className='list-item' onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport { copy } from '../../Utils/Text';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div\n                    className='shared-photo'\n                    style={style}\n                    onClick={openMedia}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    <div\n                        className='shared-photo-content'\n                        style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div\n                    className='shared-photo'\n                    style={style}\n                    onClick={openMedia}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        // console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadContent(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        // console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport { openArchive } from '../../Actions/Client';\nimport './Archive.css';\n\nclass Archive extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { title, theme } = this.props;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.title !== title) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openArchive();\n        }\n    };\n\n    render() {\n        const { t, title } = this.props;\n\n        return (\n            <div\n                ref={this.dialog}\n                className='dialog'\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}>\n                <div className='dialog-wrapper'>\n                    <div className='chat-tile'>\n                        <div className='archive-tile-background tile-photo'>\n                            <div className='tile-saved-messages'>\n                                <ArchiveIcon fontSize='default' />\n                            </div>\n                        </div>\n                    </div>\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>\n                                <span className='dialog-title-span'>{t('ArchivedChats')}</span>\n                            </div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>{title}</div>\n                            {/*{unread_count > 0 && (*/}\n                            {/*    <div className={classNames('dialog-badge-muted', 'dialog-badge')}>*/}\n                            {/*        <span className='dialog-badge-text'>{unread_count}</span>*/}\n                            {/*    </div>*/}\n                            {/*)}*/}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nArchive.propTypes = {\n    title: PropTypes.string\n};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    showChatUnreadCount,\n    showChatUnreadMentionCount,\n    showChatUnreadMessageIcon\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatIsPinned', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_pinned, unread_count } = chat;\n\n        const showUnreadMessageIcon = false; //showChatUnreadMessageIcon(chatId);\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMessageIcon && <i className='dialog-badge-unread' />}\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {is_pinned && !showUnreadMessageIcon && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canSetChatChatList,\n    isChatArchived,\n    isChatMuted,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    setChatChatList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const chat = ChatStore.get(chatId);\n            const { is_pinned } = chat;\n            const canTogglePin = (await this.canPinChats(chatId)) || is_pinned;\n            const canToggleArchive = canSetChatChatList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: isChatArchived(chatId) ? { '@type': 'chatListArchive' } : { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && chat.is_pinned ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const { is_pinned } = chat;\n\n        if (!is_pinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, !is_pinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canSetChatChatList(chatId)) return;\n\n        setChatChatList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        if (hidden) return null;\n\n        const chat = ChatStore.get(chatId);\n        const { is_pinned } = chat;\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames(isSelected ? 'dialog-active' : 'dialog', { 'item-selected': isSelected })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {is_pinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={className}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Archive from '../Tile/Archive';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport { scrollTop } from '../../Utils/DOM';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (isAuthorizationReady(authorizationState)) {\n            await FileStore.initDB(() => this.onLoadNext(true));\n        }\n    };\n\n    saveCache = () => {\n        const { onSaveCache } = this.props;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatOrder = update => {\n        const { type } = this.props;\n        const { chats } = this.state;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id, order } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat || !chat.chat_list || chat.chat_list['@type'] !== type) {\n            return;\n        }\n\n        const newChatIds = [];\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            let chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                AppStore.changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (chats.length > 0) {\n                const existingChat = chats.find(x => x === chat_id);\n                if (!existingChat) {\n                    // const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\n                    // if (orderCompare(minChatOrder, chat.order) === 1) {\n                    //     console.log('[dl] onUpdate return 3', type);\n                    //     return;\n                    // }\n                    newChatIds.push(chat_id);\n                }\n            } else {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        // console.log('[dl] onUpdate reorderChats', type, chatIds, newChatIds);\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[update] GETCHATS start');\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': type },\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[update] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady' });\n            }\n        });\n        // TdLibController.send({\n        //     '@type': 'getChats',\n        //     offset_chat_id: offsetChatId,\n        //     offset_order: offsetOrder,\n        //     limit: CHAT_SLICE_LIMIT + 100\n        // });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { type, open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (type === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n            // <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n            //     {showArchive && offset === 0 && <Archive title={archiveTitle} />}\n            //     {dialogs}\n            // </div>\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport class KeyboardHandler {\n    constructor(onKeyDown) {\n        this.onKeyDown = onKeyDown;\n    }\n}\n\nclass KeyboardManager {\n    constructor() {\n        this.handlers = [];\n\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        const { handlers } = this;\n        if (!handlers.length) return;\n\n        const handler = handlers[handlers.length - 1];\n        if (handler) {\n            // event.preventDefault();\n            // event.stopPropagation();\n\n            const { onKeyDown } = handler;\n            if (onKeyDown) {\n                onKeyDown(event);\n            }\n        }\n    };\n\n    add(handler) {\n        // console.log('[sm] add', page);\n        this.handlers.push(handler);\n    }\n\n    remove(handler) {\n        // console.log('[sm] remove', page);\n        const index = this.handlers.indexOf(handler);\n        if (index === -1) return;\n\n        this.handlers.splice(index, 1);\n    }\n}\n\nconst manager = new KeyboardManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    render() {\n        const { t, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    <SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                event.stopPropagation();\n                event.target.blur();\n                onClose();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                <SearchIcon className='search-input-icon' />\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { ANIMATION_DURATION_100MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch, text } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            const searchInput = this.searchInputRef.current;\n            if (openSearch) {\n                setTimeout(() => {\n                    if (searchInput) {\n                        searchInput.focus();\n                    }\n                }, ANIMATION_DURATION_100MS);\n            } else {\n                searchInput.innerText = null;\n            }\n        }\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch } = this.props;\n\n        let content = null;\n        let showClose = false;\n        if (openSearch) {\n            showClose = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton showClose={showClose} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        event.target.blur();\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) onClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport PhotoIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Chat from '../../Tile/Chat';\nimport SidebarPage from '../SidebarPage';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        // console.log('[un] render', hasError, usernameLabel);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            showTitle={false}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={null}\n                        />\n                    </div>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            You can choose a username on Telegram. If you do, other people will be able to find you by\n                            this username and contact you without knowing your phone number. You can use a-z, 0-9 and\n                            underscores. Minimum length is 5 characters.\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div\n                    className='shared-photo-content'\n                    style={{\n                        backgroundImage: `url(${thumbSrc || miniSrc})`,\n                        backgroundSize: 'cover',\n                        backgroundPosition: '50%'\n                    }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                {isSelected && (\n                    <>\n                        <div className='wallpaper-selected' />\n                        <div className='wallpaper-selected-inner' />\n                    </>\n                )}\n                {document && document.document && <FileProgress file={document.document} cancelButton={false} />}\n            </div>\n        );\n    }\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    {wallpapers.map(x => (\n                        <Wallpaper\n                            key={x.id}\n                            wallpaper={x}\n                            isSelected={x.id === selectedId}\n                            onClick={this.handleClick}\n                        />\n                    ))}\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            autoFocus={false}\n                            className='settings-list-item'\n                            button\n                            onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem\n                            autoFocus={false}\n                            className='settings-list-item'\n                            button\n                            onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n            '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {users.user_ids.map(x => (\n                                    <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock} />\n                                ))}\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveChatsInternal = debounce(this.saveChatsInternal, 2000);\n    }\n\n    reset = () => {\n        this.chatIds = [];\n        this.cache = null;\n        this.contacts = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        CacheManager.remove('contacts');\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async loadCache() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        const [cache, files] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n        // console.log('[cm] getChats result', this.cache);\n        if (!this.cache) return null;\n\n        this.parseCache(this.cache);\n\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n\n        (files || []).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).forEach(x => {\n            delete x.OutputTypingManager;\n\n            ChatStore.set(x);\n            if (x.photo) {\n                if (x.photo.small) FileStore.set(x.photo.small);\n                if (x.photo.big) FileStore.set(x.photo.big);\n            }\n            if (x.chat_list) {\n                ChatStore.updateChatChatList(x.id, x.chat_list);\n            }\n            if (x.last_message) {\n                MessageStore.set(x.last_message);\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n        chats.concat(archiveChats).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    saveChats(chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.saveChatsInternal();\n    }\n\n    async saveChatsInternal() {\n        // console.log('[cm] saveChatsInternal', this.chatIds, this.archiveChatIds);\n        const cache = this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        if (onClose) onClose();\n    };\n\n    render() {\n        const { items, searchItems } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content'>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ChatStore from '../Stores/ChatStore';\nimport { orderCompare } from './Common';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                if (chat.order !== '0') chats.push(chat);\n                chatsOrder.push({ order: chat.order, id: chat.id, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(b.order, a.order));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        const { isChatDetailsVisible } = AppStore;\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            isChatDetailsVisible,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            isChatDetailsVisible,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.isChatDetailsVisible !== isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n\n        ChatStore.on('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n\n        ChatStore.off('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n\n    async loadCache() {\n        const cache = (await CacheStore.loadCache()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        CacheStore.saveChats(mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { chat_id } = update;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archive = ChatStore.chatList.get('chatListArchive');\n        if (archive && archive.has(chat_id)) {\n            this.setState({ archiveTitle: getArchiveTitle() });\n        }\n    };\n\n    onUpdateChatChatList = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            isChatDetailsVisible,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div\n                    className={classNames('dialogs', {\n                        'dialogs-third-column': isChatDetailsVisible\n                    })}>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <DialogsList\n                                type='chatListMain'\n                                ref={this.dialogListRef}\n                                cacheItems={mainCacheItems}\n                                items={mainItems}\n                                showArchive={showArchive}\n                                archiveTitle={archiveTitle}\n                                open={true}\n                                onSaveCache={this.handleSaveCache}\n                            />\n                            <CSSTransition\n                                classNames='search'\n                                timeout={200}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (AppStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => AppStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            const key = 'disallow_multiple_answers';\n            const message = t('PollQuizOneRightAnswer');\n            const action = null;\n\n            this.handleScheduledAction(key, message, action);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from './../../Utils/Url';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                };\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                };\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                          '@type': 'inputMessagePhoto',\n                          photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                          width,\n                          height,\n                          caption\n                      }\n                    : {\n                          '@type': 'inputMessageDocument',\n                          document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                          thumbnail: null,\n                          caption\n                      };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media = editMedia ? getMedia({ content: editMedia }) : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    {isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    {!isEditing && isPhoto && (\n                        <RadioGroup\n                            value={sendAsPhoto}\n                            onChange={this.handleSendAsPhoto}\n                            style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel\n                                value={true}\n                                control={<Radio color='primary' />}\n                                label={t('SendAsPhoto')}\n                            />\n                            <FormControlLabel\n                                value={false}\n                                control={<Radio color='primary' />}\n                                label={t('SendAsFile')}\n                            />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { PHOTO_SIZE } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\nimport { editMessage, replyMessage } from '../../Actions/Client';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n    }\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = () => {\n        const { chatId, editMessageId } = this.state;\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        editMessage(chatId, 0);\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile ? await getMediaPhotoFromFile(file) : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        };\n    }\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [newFile, ...rest] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [newFile, ...rest] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        // console.log('[k] handleKeyDown', altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey);\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleSubmit();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 27: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleCancel();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // arrow up\n            case 38: {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n\n        return (\n            <div className='inputbox-background'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className='inputbox-send-button'\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {editMessageId ? <DoneIcon /> : <SendIcon />}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : null;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : null;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        {t('Undo')}\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle,\n    isChannelChat,\n    isPrivateChat,\n    isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        AppStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                {!isChannelChat(chatId) &&\n                                    (count === 1\n                                        ? 'This will delete it for everyone in this chat'\n                                        : 'This will delete them for everyone in this chat')}\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                checked={revoke}\n                                                onChange={this.handleRevokeChange}\n                                                color='primary'\n                                            />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all'\n                                        }\n                                    />\n                                )}\n                            </>\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport {\n    canMessageBeClosed,\n    canMessageBeDeleted,\n    canMessageBeEdited,\n    canMessageBeForwarded,\n    canMessageBeUnvoted,\n    isMessagePinned\n} from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport {\n    clearSelection,\n    deleteMessages,\n    editMessage,\n    forwardMessages,\n    replyMessage,\n    selectMessage\n} from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose } = this.props;\n        const { copyLink } = this.state;\n\n        onClose(event);\n\n        if (!copyLink) return;\n        copy(copyLink);\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, canCopyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId);\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canCopyLink && <MenuItem onClick={this.handleCopyLink}>{t('CopyLink')}</MenuItem>}\n                        {canBeReplied && <MenuItem onClick={this.handleReply}>{t('Reply')}</MenuItem>}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>{isPinned ? t('Unpin') : t('Pin')}</MenuItem>\n                        )}\n                        {canBeSelected && <MenuItem onClick={this.handleSelect}>{t('Select')}</MenuItem>}\n                        {canBeForwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {canBeEdited && <MenuItem onClick={this.handleEdit}>{t('Edit')}</MenuItem>}\n                        {canBeDeleted && <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>}\n                        {canBeUnvoted && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                        {canBeClosed && <MenuItem onClick={this.handleConfirmStopPoll}>{t('StopPoll')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    canCopyLink: PropTypes.bool\n};\n\nexport default withTranslation()(MessageMenu);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { description, instant_view_version, site_name, title } = web_page;\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply, replyMessage, forwardMessages } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            canCopyLink: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const canCopyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                canCopyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const { emojiMatches, selected, highlighted, shook, canCopyLink, contextMenu, left, top } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'message-wrapper-shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    canCopyLink={canCopyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker } = this.state;\n\n        return stickerSet !== nextState.stickerSet || sticker !== nextState.sticker;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className='sticker-set-dialog'\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <Typography variant='h6' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className='sticker-set-dialog-share-button' />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogDetails.css';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n        const { isChatDetailsVisible } = AppStore;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.photo);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            };\n        }\n\n        return (\n            <div\n                className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}\n                style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.object\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getViewerFile, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Caption from '../InstantView/Blocks/Caption';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport SafeLink from '../Additional/SafeLink';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            let [width, height, file] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, thumbnailWidth, thumbnailHeight, thumbnail, isPlaying } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            src={src}\n                            onClick={this.handleContentClick}\n                            controls\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPlay'\n                                });\n                            }}\n                            onCanPlay={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    player.volume = PlayerStore.volume;\n                                }\n                            }}\n                            onPause={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPause'\n                                });\n                            }}\n                            onEnded={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerEnded'\n                                });\n                            }}\n                            onVolumeChange={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    TdLibController.clientUpdate({\n                                        '@type': 'clientUpdateMediaVolume',\n                                        volume: player.volume\n                                    });\n                                }\n                            }}\n                        />\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            className='media-viewer-content-video-player'\n                            src={src}\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        />\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { getViewerFile, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        this.setState({\n            index: nextIndex,\n            hasPreviousMedia: this.hasPreviousMedia(nextIndex, blocks),\n            hasNextMedia: this.hasNextMedia(nextIndex, blocks)\n        });\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        this.setState({\n            index: nextIndex,\n            hasPreviousMedia: this.hasPreviousMedia(nextIndex, blocks),\n            hasNextMedia: this.hasNextMedia(nextIndex, blocks)\n        });\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(instantView.url)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', instantView.url, instantView.url === prevProps.instantView.url);\n\n        const hash = new URL(instantView.url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.instantView.url !== instantView.url) {\n                if (instantView.url.indexOf('#') === instantView.url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { media } = this.state;\n\n            if (media) {\n                setInstantViewViewerContent(null);\n                return;\n            }\n\n            this.handleClose();\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { classes, instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getAnimationData, getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\n// const Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const { file } = this.state;\n        const animationData = await getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n            this.setState({\n                width,\n                height,\n                file,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            file,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = null;\n            // content = (\n            //     <Lottie\n            //         ref={this.lottieRef}\n            //         speed={speed}\n            //         options={defaultOptions}\n            //         height='auto'\n            //         width={400}\n            //         isStopped={false}\n            //         isPaused={false}\n            //     />\n            // );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}