{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Utils/Archive.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Done.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/RecordTimer.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Assets/Icons/Share.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Player/Steaming/MP4/MP4Source.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","this","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","OnlineStatus","onUpdateUserStatus","update","userId","user_id","user","UserStore","get","online","isUserOnline","getChatUserId","chatId","on","off","size","borderSize","style","width","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","onUpdateChatPhoto","chat_id","photo","store","FileStore","getStore","loadChatContent","onUpdateChatTitle","handleSelect","event","onSelect","stopPropagation","handleLoad","nextProps","nextState","ChatStore","showOnline","showSavedMessages","small","dialog","big","t","isDeletedPrivateChat","classNames","onClick","pointer","DeletedAccount","fontSize","isMeChat","chat","letters","getChatLetters","src","getSrc","tileLoaded","typeId","getChatTypeId","tileColor","Math","abs","onLoad","draggable","alt","isPrivateChat","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","text","a","navigator","clipboard","writeText","console","error","copyOld","element","successful","document","createElement","contentEditable","readOnly","value","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","Promise","map","x","catch","e","chats","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","handleClose","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","key","aria-label","color","Close","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","forEach","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerHTML","innerText","handleSearchKeyDown","keyCode","preventDefault","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","externalSubtitle","Chat","handleClick","onTileSelect","showStatus","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","ListItemIcon","ListItemText","primary","Typography","variant","noWrap","ListItemSecondaryAction","Switch","onChange","checked","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","clientUpdate","handleOpenChat","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","list","scrollHeight","offsetHeight","theme","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","users","member","items","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","getFormattedText","List","alignItems","wordWrap","Divider","inset","toUpperCase","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","messageId","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList","MenuItem","SharedDocument","contextMenu","left","handleOpenContextMenu","clientX","clientY","handleCloseContextMenu","onContextMenu","getMedia","openMedia","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","Boolean","SpeedDialIcon","icon","openIcon","SharedMediaBase","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","sender_user_id","from_message_id","offset","finally","messages","total_count","incompleteResults","setItems","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","func","bool","SharedDocuments","SharedLink","url","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","webPage","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedLinks","web_page","close","SharedMedia","handleChange","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","thumbnailSize","getSize","minithumbnail","miniSrc","data","thumbSrc","isBlurredThumbnail","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedPhotos","SharedVideo","onClientUpdateVideoThumbnailBlob","video","duration","isBlurred","THUMBNAIL_BLURRED_SIZE_90","getDurationString","SharedVideos","SharedVoiceNote","i18n","voiceNote","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","file","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","SharedVoiceNotes","voice_note","ChatInfo","onClientUpdatePageWidth","isSmallWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","currentChatId","classes","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","is_pinned","unread_count","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","r","Status","onUpdateMessageSend","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","last_message","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canSetChatChatList","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","setChatChatList","getViewInfoTitle","is_channel","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","hidden","isLastPinned","ApplicationStore","isSelected","getChatId","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","sin","contentWidth","cos","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","window","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","target","isVisibleItem","overScanCount","renderIdsList","nextContext","addEventListener","item","removeEventListener","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","min","scrollTo","DialogListItem","DialogsList","onClientUpdateLeaveChat","hiddenChats","onUpdateAuthorizationState","authorizationState","authorization_state","loadFirstSlice","isAuthorizationReady","initDB","saveCache","onSaveCache","onUpdateChatOrder","order","currentIndex","isChatMember","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","max","CHAT_SLICE_LIMIT","replace","offsetOrder","offsetChatId","log","shift","replaceChats","appendChats","newChats","Array","from","oldChatIds","Archive","innerListRef","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","blur","concatSearchResults","results","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","KeyboardHandler","searchOrLoadContent","KeyboardManager","add","remove","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","onClientUpdate","addTdLibListener","removeTdLibListener","saveChatsInternal","load","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","options","setDataUrl","OutputTypingManager","updateChatChatList","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","deleteDataUrl","EventEmitter","MainMenuButton","handleMenuOpen","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","nativeEvent","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","Edit","Data","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getBoldItalicEntities","formattedText","TextField","defaultValue","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","main","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","Radio","root","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","LocalizationStore","language_packs","tabIndex","inputProps","secondary","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","role","undefined","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","throttle","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","location","reload","Download","getArchiveTitle","archive","chatList","chatsOrder","NewChannel","defaultPhoto","defaultPhotoFile","titleRef","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","divRef","offsetLeft","offsetTop","offsetWidth","div","cssText","getUserShortName","AddParticipants","newArray","selectedItems","focusedItem","array","newMap","newFocusedItem","isDeleting","wrapPanel","wrapPanelRef","prevHeight","prevOffsetHeight","prevMap","itemsRef","prevCSSText","prevScrollTop","currentHeight","collapsed","requestAnimationFrame","scrollIntoView","animateItems","selectedItemsMap","publicItems","publicChats","handleSearchClose","handleBackspace","lastItem","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","transition","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","container","paper","onEnter","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","onUpdateChatChatList","prevShowArchive","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChatIds","saveChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","disabled","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","now","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onDone","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","onEdit","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","media","audio","performer","altKey","ctrlKey","metaKey","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","startTime","time","onClientUpdateRecordStop","clearTimeout","onClientUpdateRecordError","n","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EmojiPickerButton","lazy","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","recordingReady","recording","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","recorder","stop","handleCancelRecord","cancelled","mediaDevices","getUserMedia","stream","getAudioTracks","applyConstraints","channelCount","sampleRate","workerOptions","encoderWorkerFactory","Worker","OggOpusEncoderWasmPath","MediaRecorder","mimeType","audioBitsPerSecond","start","chunks","Blob","audioURL","Audio","oncanplay","trunc","waveform","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","Done","Suspense","fallback","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","isCreator","clientUpdateType","persist","getLeaveChatTitle","handleUnpin","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","unpinMessage","canUnpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","code","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","zIndex","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","floor","getTimeString","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","playlist","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","reverse","HeaderPlayer","player","videoRef","onClientUpdateMediaSeek","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","paused","play","onClientUpdateMediaBlob","video_note","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","mime_type","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","getMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","file_id","synchronous","isPinned","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","Share","FrameCheck","RemoveCheck","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","instantView","newWindow","opener","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Document","Animation","Video","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","shook","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","forward_info","isOutgoing","inlineMeta","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","getMessageStyle","withBubble","onMouseOver","onMouseOut","onAnimationEnd","isMetaBubble","Placeholder","onClientUpdateCacheLoaded","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","getSticker","mouseDownStickerId","handleMouseUp","dict","foundStickers","stickerIndex","data-sticker-id","autoplay","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","STICKER_SET","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","IVContext","createContext","withIV","IVComponent","Consumer","iv","RichText","richText","String","email_address","emailAddress","texts","getRichText","object","Anchor","Caption","credit","hasText","isEmptyText","hastCredit","block","need_autoplay","pageBlock","IV_PHOTO_DISPLAY_SIZE","AuthorDate","author","publishDate","hasAuthor","hasDate","rel","dateTime","toISOString","dateFormat","Blockquote","pageBlocks","getPageBlock","Cover","cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","getElementById","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevUrl","prevHtml","authorPhoto","ErrorHandler","errorInfo","componentStack","footer","Kicker","kicker","data-before","page_blocks","Paragraph","IV_PHOTO_SIZE","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","articles","publish_date","Subheader","subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","thumbnailSrc","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","cells","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","Location","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","ChatLink","needAutoplay","isLooped","openInstantViewMedia","fileCancel","is_downloading_active","remote","is_uploading_active","cancelUploadFile","download","updateAnimationBlob","setInstantViewViewerContent","updateAudioBlob","updateVideoBlob","is_open","posterPhoto","poster_photo","is_full_width","allow_scrolling","author_photo","zoom","is_bordered","is_striped","is_header","is_looped","every","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","blocks","dir","MediaCaption","InstantViewMediaViewerContent","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","videoWidth","videoHeight","scale","handleContentClick","onVolumeChange","loop","prevMedia","getViewerThumbnail","getViewerMinithumbnail","minithumbnailWidth","minithumbnailHeight","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","hash","scrollToHash","handleBack","hasScroll","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","Provider","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MP4Source","getBufferAsync","handleSourceBufferUpdateEnd","sourceBuffer","mediaSource","mp4file","updating","logSourceBufferRanges","pendingUpdates","buffer","sampleNum","isLast","LOG","releaseUsedSamples","appendBuffer","readyState","sourceBuffers","endOfStream","nextBufferStart","ready","bufferedTime","beforeMoovBufferSize","moovBufferSize","bufferSize","seekBufferSize","currentBufferSize","nbSamples","expectedSize","expected_size","seeking","init","videoDuration","MediaSource","mp4File","MP4Box","createFile","onMoovStart","onError","onReady","isFragmented","timescale","fragment_duration","tracks","addSourceBuffer","initSegs","initializeSegmentation","onupdateend","onSegment","is_last","nb_samples","timestampOffset","loadNextBuffer","track","codec","trackType","isTypeSupported","setSegmentOptions","buffered","seekInfo","seek","end","ranges","hasRange","nextBuffer","fileStart","byteLength","flush","MediaViewerContent","updateAnimationData","isLottieMessage","getAnimationData","animationData","getMediaFile","supportsStreaming","getMediaPreviewFile","getURL","handleSeeking","prevTimeout","handleSeeked","handlePlayerSeeked","timeUpdate","handleProgress","handleWaiting","lottieRef","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","onSeeking","onSeeked","onWaiting","onProgress","poster","fr","readAsArrayBuffer","filePart","getArrayBuffer","getMediaMiniPreview","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","inHistory","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/5.efc80db6.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { loaded } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size, t } = this.props;\n        const { loaded } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat, t);\n        const src = getSrc(photo ? photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatIsPinned', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_pinned, unread_count } = chat;\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {is_pinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canSetChatChatList,\n    isChatArchived,\n    isChatMuted,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    setChatChatList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const chat = ChatStore.get(chatId);\n            const { is_pinned } = chat;\n            const canTogglePin = (await this.canPinChats(chatId)) || is_pinned;\n            const canToggleArchive = canSetChatChatList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: isChatArchived(chatId) ? { '@type': 'chatListArchive' } : { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && chat.is_pinned ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const { is_pinned } = chat;\n\n        if (!is_pinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, !is_pinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canSetChatChatList(chatId)) return;\n\n        setChatChatList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        const { is_pinned } = chat;\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {is_pinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={className}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { isChatMember } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (isAuthorizationReady(authorizationState)) {\n            await FileStore.initDB(() => this.onLoadNext(true));\n        }\n    };\n\n    saveCache = () => {\n        const { onSaveCache } = this.props;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatOrder = update => {\n        const { type } = this.props;\n        const { chats } = this.state;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id, order } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        const { chat_list } = chat;\n        if (chat_list && chat_list['@type'] !== type) {\n            return;\n        }\n\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0' && isChatMember(chat.id)) {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[update] GETCHATS start');\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': type },\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[update] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady' });\n            }\n        });\n        // TdLibController.send({\n        //     '@type': 'getChats',\n        //     offset_chat_id: offsetChatId,\n        //     offset_order: offsetOrder,\n        //     limit: CHAT_SLICE_LIMIT + 100\n        // });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { type, open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (type === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n            // <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n            //     {showArchive && offset === 0 && <Archive title={archiveTitle} />}\n            //     {dialogs}\n            // </div>\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                if (modalManager.modals.length > 0) {\n                    return;\n                }\n\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveChatsInternal = debounce(this.saveChatsInternal, 2000);\n    }\n\n    reset = () => {\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async loadCache() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.chat_list) {\n                    ChatStore.updateChatChatList(x.id, x.chat_list);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async saveChats(chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n\n        this.saveChatsInternal();\n    }\n\n    async saveChatsInternal() {\n        // console.log('[cm] saveChatsInternal', this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.filter(x => Boolean(x)).forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                if (modalManager.modals.length > 0) {\n                    return;\n                }\n\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getBoldItalicEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getBoldItalicEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ChatStore from '../Stores/ChatStore';\nimport { orderCompare } from './Common';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                if (chat.order !== '0') chats.push(chat);\n                chatsOrder.push({ order: chat.order, id: chat.id, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(b.order, a.order));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        return {\n            left: this.divRef.current.offsetLeft,\n            top: this.divRef.current.offsetTop,\n            width: this.divRef.current.offsetWidth,\n            height: this.divRef.current.offsetHeight\n        }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('user-chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='user-chip-delete'>\n                    <CloseIcon className='user-chip-delete-icon'/>\n                </div>\n                <div className='user-chip-name'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            const currentHeight = wrapPanel.scrollHeight;\n            const currentOffsetHeight = wrapPanel.offsetHeight;\n\n            const expanded = currentHeight > prevHeight;\n            const collapsed = currentHeight < prevHeight;\n            // console.log('[wrap]', prevHeight, prevOffsetHeight, currentHeight, currentOffsetHeight, expanded, collapsed);\n\n            const maxHeight = 123;\n            if (expanded) {\n                if (prevHeight < maxHeight) {\n                    // console.log('[wrap] animate expand', Math.min(prevHeight, maxHeight), Math.min(currentHeight, maxHeight));\n                    wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                    // console.log('[wrap] animate expand', wrapPanel.style.cssText);\n                    requestAnimationFrame(() => {\n                        wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                        setTimeout(() => {\n                            // console.log('[wrap] scrollIntoView');\n                            this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                        }, 250);\n                        // console.log('[wrap] animate expand', wrapPanel.style.cssText);\n                    });\n                } else {\n                    // console.log('[wrap] expand', prevHeight, maxHeight);\n                    wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                    //wrapPanel.scrollTop = wrapPanel.scrollHeight;\n                    // console.log('[wrap] scrollIntoView');\n                    this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n                    // console.log('[wrap] expand', wrapPanel.style.cssText);\n                }\n            } else if (collapsed) {\n                if (currentHeight < maxHeight) {\n                    // console.log('[wrap] animate collapse', Math.min(prevHeight, maxHeight), Math.min(currentHeight, maxHeight));\n                    wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                    // console.log('[wrap] animate collapse', wrapPanel.style.cssText);\n                    requestAnimationFrame(() => {\n                        wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                        // console.log('[wrap] animate collapse', wrapPanel.style.cssText);\n                    });\n                } else {\n                    // console.log('[wrap] collapse', prevHeight, maxHeight, wrapPanel.scrollTop, prevScrollTop);\n                    wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                    wrapPanel.scrollTop = prevScrollTop;\n                    // console.log('[wrap] collapse', wrapPanel.style.cssText, wrapPanel.scrollTop);\n                }\n            } else {\n                if (isDeleting) {\n                    wrapPanel.style.cssText = prevCSSText;\n                    wrapPanel.scrollTop = prevScrollTop;\n                } else {\n                    // console.log('[wrap] scrollIntoView');\n                    this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n                }\n            }\n\n            this.animateItems(prevMap);\n        });\n    };\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n\n        ChatStore.on('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n\n        ChatStore.off('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.loadCache()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        CacheStore.saveChats(mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { chat_id } = update;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archive = ChatStore.chatList.get('chatListArchive');\n        if (archive && archive.has(chat_id)) {\n            this.setState({ archiveTitle: getArchiveTitle() });\n        }\n    };\n\n    onUpdateChatChatList = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <DialogsList\n                                type='chatListMain'\n                                ref={this.dialogListRef}\n                                cacheItems={mainCacheItems}\n                                items={mainItems}\n                                showArchive={showArchive}\n                                archiveTitle={archiveTitle}\n                                open={true}\n                                onSaveCache={this.handleSaveCache}\n                            />\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, metaKey, repeat, shiftKey } = event;\n\n        switch (keyCode) {\n            case 13: {\n                // enter+cmd or enter+ctrl\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\nimport RecordTimer from './RecordTimer';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport MenuIcon from '../../Assets/Icons/Menu';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recording: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const { chatId, newDraft, files, replyToMessageId, editMessageId, openEditMedia, openEditUrl, sendFile, recordingReady, recording } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recording !== recording) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n    }\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = () => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recording } = this.state;\n\n        if (recording) {\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, metaKey, repeat, shiftKey } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[keydown] input.handleKeyDown', key, keyCode, altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey);\n\n        switch (keyCode) {\n            // ctrl+alt+0 fix\n            case 48: {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n\n                break;\n            }\n            case 13: {\n                // enter+cmd or enter+ctrl\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 27: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 38: {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = () => {\n        if (this.recorder) {\n            this.recorder.stop();\n            // this.recorder = null;\n            return;\n        }\n    }\n\n    handleCancelRecord = () => {\n        if (this.recorder) {\n            this.recorder.cancelled = true;\n            this.recorder.stop();\n            // this.recorder = null;\n            return;\n        }\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        // console.log('start recording called');\n        navigator.mediaDevices.getUserMedia({ audio: true }).then(stream => {\n\n            const constraints = {\n                channelCount: 1,\n                sampleRate: 48000,\n            };\n\n            const track = stream.getAudioTracks()[0];\n            track.applyConstraints(constraints)\n\n            const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n            const workerOptions = {\n                encoderWorkerFactory: function () {\n                    return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n                },\n                OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n            };\n\n            this.recorder = new MediaRecorder(stream, options, workerOptions);\n            this.recorder.start(50);\n\n            const chunks = [];\n\n            this.recorder.addEventListener('dataavailable', (e) => {\n                // console.log('Recording stopped, data available', e.data);\n                chunks.push(e.data);\n            });\n            this.recorder.addEventListener('start', (e) => {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n                // console.log('start');\n                this.setState({ recording: true });\n            })\n            this.recorder.addEventListener('stop', (e) => {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n                this.setState({ recording: false });\n\n                const { cancelled } = this.recorder;\n                this.recorder = null;\n                if (cancelled) {\n\n                    return;\n                }\n\n                // console.log('stop');\n                const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n                const audioURL = window.URL.createObjectURL(blob);\n\n                const audio = new Audio(audioURL);\n                audio.oncanplay = () => {\n                    // console.log('recorder stopped', audioURL, audio.duration);\n\n                    const content = {\n                        '@type': 'inputMessageVoiceNote',\n                        voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                        duration: Math.trunc(audio.duration),\n                        waveform: '',\n                        caption: null\n                    };\n\n                    this.handleSendVoiceNote(content, blob);\n                };\n            });\n            this.recorder.addEventListener('error', (e) => {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n                this.setState({ recording: false });\n                // console.log('error', e);\n            });\n        });\n\n        // if (navigator.mediaDevices.getUserMedia) {\n        //     console.log('getUserMedia supported.');\n        //\n        //     let chunks = [];\n        //\n        //     const onSuccess = stream => {\n        //\n        //     };\n        //\n        //     const onError = error => {\n        //         console.log('The following error occured: ' + error);\n        //     };\n        //\n        //     const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        //\n        //     const constraints = {\n        //         channelCount: 1,\n        //         sampleRate: 48000,\n        //     };\n        //\n        //     const track = stream.getAudioTracks()[0];\n        //     track.applyConstraints(constraints)\n        //     // console.log('track', track);\n        //\n        //     // console.log('mediaRecorder', MediaRecorder.isTypeSupported('audio/ogg;codecs=opus'));\n        //\n        //     const mediaRecorder = new MediaRecorder(stream, { mimeType: 'audio/ogg;codecs=opus' });\n        //\n        //     console.log('mediaRecorder', mediaRecorder);\n        //\n        //     mediaRecorder.onstop = event => {\n        //         console.log(\"data available after MediaRecorder.stop() called.\");\n        //\n        //         const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n        //         chunks = [];\n        //         const audioURL = window.URL.createObjectURL(blob);\n        //\n        //         const audio = new Audio(audioURL);\n        //         audio.play();\n        //         console.log(\"recorder stopped\", audioURL, audio);\n        //\n        //         const content = {\n        //             '@type': 'inputMessageVoiceNote',\n        //             voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n        //             duration: 10,\n        //             waveform: '',\n        //             caption: null\n        //         };\n        //\n        //         this.handleSendVoiceNote(content, blob);\n        //     };\n        //\n        //     mediaRecorder.ondataavailable = e => {\n        //         console.log(\"recorder dataavailable\", e.data);\n        //         chunks.push(e.data);\n        //     };\n        //\n        //     mediaRecorder.start(100);\n        //\n        //     this.mediaRecorder = mediaRecorder;\n        // } else {\n        //     console.log('getUserMedia not supported on your browser!');\n        // }\n    }\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recording\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recording && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recording && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recording && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recording || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isCreator, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        let request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        if (isSupergroup(chatId) && isCreator(chatId)) {\n            request = {\n                '@type': 'setChatMemberStatus',\n                chat_id: chatId,\n                user_id: UserStore.getMyId(),\n                status: {\n                    '@type': 'chatMemberStatusCreator',\n                    is_member: false\n                }\n            };\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message),\n            mimeType: this.getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, value } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) return;\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = message => {\n        const { chat_id, id } = message;\n\n        const { src: prevSrc } = this.state;\n\n        const src = this.getMediaSrc(message);\n        const mimeType = this.getMediaMimeType(message);\n        const playing = Boolean(src);\n        const { playlist } = PlayerStore;\n\n        this.setState(\n            {\n                message,\n                playlist,\n                playing,\n                src,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                }\n                player.currentTime = this.startTime;\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        chatId: chat_id,\n                        messageId: id\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(PlayerStore.message);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaMimeType = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    return audio.mime_type;\n                }\n\n                if (voice_note) {\n                    return voice_note.mime_type;\n                }\n\n                if (video_note) {\n                    return 'video/mp4';\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        return web_page.audio.mime_type;\n                    }\n\n                    if (web_page.voice_note) {\n                        return web_page.voice_note.mime_type;\n                    }\n\n                    if (web_page.video_note) {\n                        return 'video/mp4';\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src, mimeType } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                >\n                    {source}\n                </video>\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = async event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { audio } = content;\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { id: file_id } = file;\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id,\n            priority: 1,\n            offset: 10 * 1024,\n            limit: 1024,\n            synchronous: true\n        });\n\n        const blob = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id,\n            offset: 10 * 1024,\n            count: 1024\n        });\n\n        console.log('[file] result', result, blob);\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId);\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\nimport { getEntities, getFormattedText, getText, getTwitterInstagramEntities } from '../../../Utils/Message';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply, replyMessage, forwardMessages\n} from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'message-wrapper-shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker } = this.state;\n\n        return stickerSet !== nextState.stickerSet || sticker !== nextState.sticker;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className='sticker-set-dialog'\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <Typography variant='h6' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className='sticker-set-dialog-share-button' />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.photo);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Caption from '../InstantView/Blocks/Caption';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport SafeLink from '../Additional/SafeLink';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            let [width, height, file, mimeType] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getViewerMinithumbnail(media);\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, src, mimeType, thumbnailWidth, thumbnailHeight, thumbnail, minithumbnail, isPlaying } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            controls\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPlay'\n                                });\n                            }}\n                            onCanPlay={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    player.volume = PlayerStore.volume;\n                                }\n                            }}\n                            onPause={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPause'\n                                });\n                            }}\n                            onEnded={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerEnded'\n                                });\n                            }}\n                            onVolumeChange={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    TdLibController.clientUpdate({\n                                        '@type': 'clientUpdateMediaVolume',\n                                        volume: player.volume\n                                    });\n                                }\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            if (modalManager.modals.length > 0) {\n                return;\n            }\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(instantView.url)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', instantView.url, instantView.url === prevProps.instantView.url);\n\n        const hash = new URL(instantView.url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.instantView.url !== instantView.url) {\n                if (instantView.url.indexOf('#') === instantView.url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            if (modalManager.modals.length > 0) {\n                return;\n            }\n\n            const { media } = this.state;\n\n            if (media) {\n                setInstantViewViewerContent(null);\n                return;\n            }\n\n            this.handleClose();\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { classes, instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport MP4Box from 'mp4box';\nimport { LOG, logSourceBufferRanges } from '../Utils/Common';\n\nexport default class MP4Source {\n    constructor(video, getBufferAsync) {\n        this.mp4file = null;\n        this.nextBufferStart = 0;\n        this.mediaSource = null;\n        this.ready = false;\n        this.bufferedTime = 40;\n\n        this.beforeMoovBufferSize = 32 * 1024;\n        this.moovBufferSize = 512 * 1024;\n        this.bufferSize = 1024 * 1024;\n        this.seekBufferSize = 1024 * 1024;\n\n        this.currentBufferSize = this.beforeMoovBufferSize;\n        this.nbSamples = 10;\n        this.video = video;\n        this.getBufferAsync = getBufferAsync;\n        this.expectedSize = this.video.video.expected_size;\n\n        this.seeking = false;\n        this.loading = false;\n        this.url = null;\n\n        this.init(video.duration);\n    }\n\n    init(videoDuration) {\n        const mediaSource = new MediaSource();\n        mediaSource.addEventListener('sourceopen', async () => {\n            LOG('[MediaSource] sourceopen start', this.mediaSource, this);\n\n            if (this.mediaSource.sourceBuffers.length > 0) return;\n\n            const mp4File = MP4Box.createFile();\n            mp4File.onMoovStart = () => {\n                LOG('[MP4Box] onMoovStart');\n                this.currentBufferSize = this.moovBufferSize;\n            };\n            mp4File.onError = error => {\n                LOG('[MP4Box] onError', error);\n            };\n            mp4File.onReady = info => {\n                LOG('[MP4Box] onReady', info);\n                this.ready = true;\n                this.currentBufferSize = this.bufferSize;\n                const { isFragmented, timescale, fragment_duration, duration } = info;\n\n                if (!fragment_duration && !duration) {\n                    this.mediaSource.duration = videoDuration;\n                    this.bufferedTime = videoDuration;\n                } else {\n                    this.mediaSource.duration = isFragmented\n                        ? fragment_duration / timescale\n                        : duration / timescale;\n                }\n\n                for (let i = 0; i < info.tracks.length; i++) {\n                    this.addSourceBuffer(mp4File, this.mediaSource, info.tracks[i]);\n                }\n\n                const initSegs = mp4File.initializeSegmentation();\n                LOG('[MP4Box] initializeSegmentation', initSegs);\n\n                for (let i = 0; i < initSegs.length; i++) {\n                    const { user: sourceBuffer } = initSegs[i];\n                    sourceBuffer.onupdateend = () => {\n                        sourceBuffer.initSegs = true;\n                        sourceBuffer.onupdateend = this.handleSourceBufferUpdateEnd;\n                    };\n                    sourceBuffer.appendBuffer(initSegs[i].buffer);\n                }\n\n                LOG('[MP4Box] start fragmentation');\n                mp4File.start();\n            };\n            mp4File.onSegment = (id, sourceBuffer, buffer, sampleNum, is_last) => {\n                const isLast = (sampleNum + this.nbSamples) > sourceBuffer.nb_samples;\n\n                LOG('[MP4Box] onSegment', id, buffer, `${sampleNum}/${sourceBuffer.nb_samples}`, isLast, sourceBuffer.timestampOffset);\n\n                if (mediaSource.readyState !== 'open') {\n                    return;\n                }\n\n                sourceBuffer.pendingUpdates.push({ id, buffer, sampleNum, isLast });\n                if (sourceBuffer.initSegs && !sourceBuffer.updating) {\n                    this.handleSourceBufferUpdateEnd({ target: sourceBuffer, mediaSource: this.mediaSource });\n                }\n            };\n\n            this.nextBufferStart = 0;\n            this.mp4file = mp4File;\n            LOG('[MediaSource] sourceopen end', this, this.mp4file);\n\n            this.loadNextBuffer();\n        });\n        mediaSource.addEventListener('sourceended', () => {\n            LOG('[MediaSource] sourceended', mediaSource.readyState);\n        });\n        mediaSource.addEventListener('sourceclose', () => {\n            LOG('[MediaSource] sourceclose', mediaSource.readyState);\n        });\n\n        this.mediaSource = mediaSource;\n    }\n\n    addSourceBuffer(file, source, track) {\n        if (!track) return null;\n\n        const { id, codec, type: trackType, nb_samples } = track;\n        const type = `video/mp4; codecs=\"${codec}\"`;\n        if (!MediaSource.isTypeSupported(type)) {\n            LOG('[addSourceBuffer] not supported', type);\n            return null;\n        }\n        // if (trackType !== 'video') {\n        //     LOG('[addSourceBuffer] skip', trackType);\n        //     return null;\n        // }\n\n        const sourceBuffer = source.addSourceBuffer(type);\n        sourceBuffer.id = id;\n        sourceBuffer.pendingUpdates = [];\n        sourceBuffer.nb_samples = nb_samples;\n        file.setSegmentOptions(id, sourceBuffer, { nbSamples: this.nbSamples });\n        LOG('[addSourceBuffer] add', id, codec, trackType);\n\n        return sourceBuffer;\n    }\n\n    handleSourceBufferUpdateEnd = event => {\n        const { target: sourceBuffer } = event;\n        const { mediaSource, mp4file } = this;\n\n        if (!sourceBuffer) return;\n        if (sourceBuffer.updating) return;\n\n        logSourceBufferRanges(sourceBuffer, 0, 0);\n\n        const { pendingUpdates } = sourceBuffer;\n        if (!pendingUpdates) return;\n        if (!pendingUpdates.length) {\n            if (sourceBuffer.isLast && mediaSource.readyState === 'open') {\n                LOG('[SourceBuffer] updateend endOfStream start', sourceBuffer.id);\n                if (Array.from(mediaSource.sourceBuffers).every(x => !x.pendingUpdates.length && !x.updating)) {\n                    mediaSource.endOfStream();\n                    LOG('[SourceBuffer] updateend endOfStream stop', sourceBuffer.id);\n                }\n            }\n            return;\n        }\n\n        const update = pendingUpdates.shift();\n        if (!update) return;\n\n        const { id, buffer, sampleNum, isLast } = update;\n\n        if (sampleNum) {\n            LOG('[SourceBuffer] updateend releaseUsedSamples', id, sampleNum);\n            mp4file.releaseUsedSamples(id, sampleNum);\n        }\n\n        LOG('[SourceBuffer] updateend end', sourceBuffer.id, sourceBuffer.pendingUpdates.length);\n        sourceBuffer.isLast = isLast;\n        sourceBuffer.appendBuffer(buffer);\n    };\n\n    getURL() {\n        this.url = this.url || URL.createObjectURL(this.mediaSource);\n\n        return this.url;\n    }\n\n    seek(currentTime, buffered) {\n        const seekInfo = this.mp4file.seek(currentTime, true);\n        this.nextBufferStart = seekInfo.offset;\n\n        let loadNextBuffer = buffered.length === 0;\n        for (let i = 0; i < buffered.length; i++) {\n            const start = buffered.start(i);\n            const end = buffered.end(i);\n\n            if (start <= currentTime && currentTime + this.bufferedTime > end) {\n                loadNextBuffer = true;\n                break;\n            }\n        }\n\n        LOG('[player] onSeeked', loadNextBuffer, currentTime, seekInfo, this.nextBufferStart);\n        if (loadNextBuffer) {\n            this.loadNextBuffer(true);\n        }\n    }\n\n    timeUpdate(currentTime, duration, buffered) {\n        const ranges = [];\n        for (let i = 0; i < buffered.length; i++) {\n            ranges.push({ start: buffered.start(i), end: buffered.end(i)})\n        }\n\n        let loadNextBuffer = buffered.length === 0;\n        let hasRange = false;\n        for (let i = 0; i < buffered.length; i++) {\n            const start = buffered.start(i);\n            const end = buffered.end(i);\n\n            if (start <= currentTime && currentTime <= end) {\n                hasRange = true;\n                if (end < duration && currentTime + this.bufferedTime > end) {\n                    loadNextBuffer = true;\n                    break;\n                }\n            }\n        }\n\n        if (!hasRange) {\n            loadNextBuffer = true;\n        }\n\n        LOG('[player] timeUpdate', loadNextBuffer, currentTime, duration, JSON.stringify(ranges));\n        if (loadNextBuffer) {\n            this.loadNextBuffer();\n        }\n    }\n\n    async loadNextBuffer(seek = false) {\n        const { nextBufferStart, loading, currentBufferSize, mp4file } = this;\n        LOG('[player] loadNextBuffer', nextBufferStart === undefined, loading, !mp4file);\n        if (!mp4file) return;\n        if (nextBufferStart === undefined) return;\n        if (loading) return;\n\n        this.loading = true;\n        let bufferSize = seek ? this.seekBufferSize : this.bufferSize;\n        if (nextBufferStart + bufferSize > this.expectedSize) {\n            bufferSize = this.expectedSize - nextBufferStart;\n        }\n        const nextBuffer = await this.getBufferAsync(nextBufferStart, nextBufferStart + bufferSize);\n        nextBuffer.fileStart = nextBufferStart;\n\n        LOG('[player] loadNextBuffer start', nextBuffer.byteLength, nextBufferStart);\n        if (nextBuffer.byteLength) {\n            this.nextBufferStart = mp4file.appendBuffer(nextBuffer);\n        } else {\n            this.nextBufferStart = undefined;\n        }\n        LOG('[player] loadNextBuffer stop', nextBuffer.byteLength, nextBufferStart, this.nextBufferStart);\n\n        if (nextBuffer.byteLength < currentBufferSize) {\n            LOG('[player] loadNextBuffer flush');\n            this.mp4file.flush();\n        }\n\n        this.loading = false;\n        if (!this.ready) {\n            LOG('[player] loadNextBuffer next');\n            this.loadNextBuffer();\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport MP4Source from '../Player/Steaming/MP4/MP4Source';\nimport { getAnimationData, getMediaFile, getMediaMiniPreview, getMediaPreviewFile, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\nimport { LOG } from '../Player/Steaming/Utils/Common';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.updateAnimationData();\n    }\n\n    static async getArrayBuffer(blob) {\n        return new Promise((resolve) => {\n            let fr = new FileReader();\n            fr.onload = () => {\n                resolve(fr.result);\n            };\n            fr.readAsArrayBuffer(blob);\n        })\n    }\n\n    static async getBufferAsync(fileId, start, end) {\n        const offset = start;\n        const limit = end - start;\n\n        // console.log('[GET_BUFFER] downloadFile');\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: 1,\n            offset,\n            limit,\n            synchronous: true\n        });\n\n        // console.log('[GET_BUFFER] readFilePart');\n\n        const filePart = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id: fileId,\n            offset,\n            count: limit\n        });\n\n        // console.log('[GET_BUFFER] getArrayBuffer');\n\n        const buffer = await MediaViewerContent.getArrayBuffer(filePart.data);\n\n        // console.log('[GET_BUFFER] result', result, buffer);\n\n        return buffer;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            if (thumbnail){\n                thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n            }\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getMediaMiniPreview(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    source = new MP4Source(video, (start, end) => MediaViewerContent.getBufferAsync(file.id, start, end));\n                    src = source.getURL();\n                }\n            }\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { src } = this.state;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const { file } = this.state;\n        const animationData = await getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    source = new MP4Source(video, (start, end) => MediaViewerContent.getBufferAsync(file.id, start, end));\n\n                    src = source.getURL();\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n    handleSeeking = () => {\n        const video = this.videoRef.current;\n\n        const { currentTime, buffered } = video;\n        LOG('[player] onSeeking', currentTime);\n\n        if (this.prevTimeout) {\n            clearTimeout(this.prevTimeout);\n            this.prevTimeout = null;\n        }\n\n        this.prevTimeout = setTimeout(() => {\n            LOG('[player] onSeeking timeout', currentTime === video.currentTime, currentTime, video.currentTime);\n            if (currentTime === video.currentTime) {\n                this.handleSeeked(currentTime, buffered);\n            }\n        }, 150);\n    }\n\n    handleSeeked = (time, buffered) => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        source.seek(time, buffered);\n    }\n\n    handlePlayerSeeked = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n\n        const { currentTime, buffered } = video;\n        LOG('[player] onPlayerSeeked', currentTime);\n\n        source.seek(currentTime, buffered);\n    };\n\n    handleTimeUpdate = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n        const { currentTime, duration, buffered } = video;\n        source.timeUpdate(currentTime, duration, buffered);\n    };\n\n    handleProgress = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n        const { currentTime, duration, buffered } = video;\n        source.timeUpdate(currentTime, duration, buffered);\n    };\n\n    handleWaiting = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n        const { currentTime, buffered } = video;\n        source.seek(currentTime, buffered);\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            // animationData,\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            minithumbnail,\n            thumbnail,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                        onSeeking={this.handleSeeking}\n                        onSeeked={this.handlePlayerSeeked}\n                        onTimeUpdate={this.handleTimeUpdate}\n                        onWaiting={this.handleWaiting}\n                        onProgress={this.handleProgress}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && !supportsStreaming &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            // const defaultOptions = {\n            //     loop: true,\n            //     autoplay: true,\n            //     //path: src,\n            //     animationData: animationData,\n            //     rendererSettings: {\n            //         preserveAspectRatio: 'xMidYMid slice'\n            //     }\n            // };\n            // const { speed } = this.state;\n            //\n            // content = null;\n            // content = (\n            //     <Lottie\n            //         ref={this.lottieRef}\n            //         speed={speed}\n            //         options={defaultOptions}\n            //         height='auto'\n            //         width={400}\n            //         isStopped={false}\n            //         isPaused={false}\n            //     />\n            // );\n        } else {\n            content = (\n                <>\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                    {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                </>\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {/*{ supportsStreaming && <a style={{ left: 0, top: 0, position: 'absolute' }} onClick={this.handleClick}>Load Buffer</a>}*/}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            if (modalManager.modals.length > 0) {\n                return;\n            }\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.keyCode === 27) {\n            if (modalManager.modals.length > 0) {\n                return;\n            }\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}