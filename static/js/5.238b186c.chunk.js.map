{"version":3,"sources":["Components/ColumnMiddle/StickerSet.js","Utils/Animatior.js","Components/ColumnMiddle/StickersPickerHeader.js","Components/ColumnMiddle/StickersPicker.js","Components/ColumnMiddle/EmojiPickerButton.js"],"names":["StickerSet","nextProps","nextState","nextContext","this","props","info","theme","classes","onSelect","onMouseDown","onMouseEnter","onDeleteClick","title","items","stickers","map","x","i","className","classNames","stickerSetItem","key","sticker","id","data-sticker-id","onClick","Sticker","autoplay","blur","displaySize","STICKER_SMALL_DISPLAY_SIZE","preview","source","StickerSourceEnum","PICKER","aria-label","root","iconRoot","size","fontSize","React","Component","withStyles","backgroundColor","palette","background","paper","color","text","primary","width","height","padding","boxSizing","type","borderRadius","margin","withTheme","Animator","duration","options","start","stopped","requestAnimationFrame","startAnim","timeStamp","end","draw","now","every","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","n","sin","PI","StickersPickerHeader","onClientUpdateStickerSetPosition","update","position","setState","scrollToPosition","state","animator","anchorRef","scroll","scrollRef","current","anchor","anchorNode","ReactDOM","scrollFrom","scrollLeft","scrollTo","anchorFrom","Number","style","left","replace","anchorTo","abs","sign","setTimeout","handleWheel","event","deltaX","deltaY","handleSelect","indexOf","createRef","StickerStore","on","removeListener","prevProps","prevState","snapshot","play","PICKER_HEADER","openMedia","borderColor","ref","onWheel","accentBackgroundDark","borderStyle","accentStyles","StickersPicker","onUpdateInstalledStickerSets","is_masks","sticker_set_ids","filterSets","onUpdateRecentStickers","reloadRecentContent","scrollTop","loadContent","recent","stickerSets","sets","a","TdLibController","send","is_attached","result","promises","push","set_id","Promise","all","slicedSets","slice","headerStickers","reduce","set","length","fullSets","setsLength","loadInViewContentOnScroll","loadInViewContent","loadInViewContentOnScrollEnd","inViewItems","item","itemsMap","get","node","topBorder","bottomBorder","offsetHeight","nodeTop","offsetTop","nodeBottom","clientHeight","store","FileStore","getStore","loadedSets","has","loadStickerSetContent","updatePosition","minDiff","scrollHeight","firstOffsetTop","pos","element","diff","clientUpdate","handleScroll","loadingChunk","loadChunk","finally","concat","loadPreviewContent","stickerId","getStickers","find","loadStickerContent","getNeighborStickersFromSets","handleMouseEnter","currentTarget","dataset","mouseDown","mouseDownStickerId","previewStickerId","onPreview","handleMouseDown","Date","timestamp","showPreview","cancelSend","document","addEventListener","handleMouseUp","preventDefault","stopPropagation","removeEventListener","handleStickerSelect","handleSelectSet","concatSets","handleDeleteRecent","handleDeleteStickerSet","is_installed","Map","debounce","throttle","off","t","clear","el","recentInfo","onScroll","Boolean","enhance","compose","withSaveRef","withTranslation","withRestoreRef","EmojiPickerButton","onClientUpdateChange","picker","handleButtonMouseEnter","buttonEnter","updatePicker","loadStickerSets","EMOJI_PICKER_TIMEOUT_MS","stickersPickerRef","loadRecentStickersContent","reverse","loadStickerThumbnailContent","handleButtonMouseLeave","tryClosePicker","paperEnter","handlePaperMouseEnter","handlePaperMouseLeave","open","handleEmojiClick","tab","handleStickersClick","stickersPicker","handleStickerSend","handleStickerPreview","emojiPickerRef","ApplicationStore","LocalizationStore","i18n","search","notfound","skintext","categories","people","nature","foods","activity","places","objects","symbols","flags","custom","showSkinTones","dark","native","isAppleDevice","overflowX","rel","href","iconButton","onMouseLeave","pickerRoot","pickerRootOpened","headerButton","StickerPreview","flex","zIndex","modal","shape","boxShadow","shadows","bottom","display"],"mappings":"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","file":"static/js/5.238b186c.chunk.js","sourcesContent":["/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\r\nimport './StickerSet.css';\r\n\r\nconst styles = theme => ({\r\n    title: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary\r\n    },\r\n    stickerSetItem: {\r\n        width: STICKER_SMALL_DISPLAY_SIZE,\r\n        height: STICKER_SMALL_DISPLAY_SIZE,\r\n        padding: 3,\r\n        boxSizing: 'border-box',\r\n        '&:hover': {\r\n            background: theme.palette.type === 'dark' ? '#303030' : '#f4f4f4',\r\n            borderRadius: 6\r\n        }\r\n    },\r\n    iconRoot: {\r\n        fontSize: 16,\r\n        padding: 4,\r\n        margin: '4px 8px 4px 4px'\r\n    }\r\n});\r\n\r\nclass StickerSet extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { info, theme } = this.props;\r\n\r\n        if (theme !== nextProps.theme) {\r\n            return true;\r\n        }\r\n\r\n        if (info !== nextProps.info) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { classes, info, onSelect, onMouseDown, onMouseEnter, onDeleteClick } = this.props;\r\n        if (!info) return null;\r\n\r\n        const { title, stickers } = info;\r\n\r\n        const items = stickers.map((x, i) => (\r\n            <div\r\n                className={classNames('sticker-set-item', classes.stickerSetItem)}\r\n                key={x.sticker.id}\r\n                data-sticker-id={x.sticker.id}\r\n                onClick={() => onSelect(x)}\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseDown={onMouseDown}>\r\n                <Sticker\r\n                    key={x.sticker.id}\r\n                    sticker={x}\r\n                    autoplay={false}\r\n                    blur={false}\r\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE - 6}\r\n                    preview\r\n                    source={StickerSourceEnum.PICKER}\r\n                />\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <div className='sticker-set'>\r\n                <div className={classNames('sticker-set-title', classes.title)}>\r\n                    <div className='sticker-set-title-wrapper'>\r\n                        <span>{title}</span>\r\n                    </div>\r\n                    {onDeleteClick && (\r\n                        <IconButton\r\n                            aria-label='delete'\r\n                            classes={{ root: classes.iconRoot }}\r\n                            size='small'\r\n                            onClick={onDeleteClick}>\r\n                            <ClearIcon fontSize='inherit' />\r\n                        </IconButton>\r\n                    )}\r\n                </div>\r\n                <div className='sticker-set-content'>{items}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStickerSet.propTypes = {\r\n    info: PropTypes.object.isRequired,\r\n    onSelect: PropTypes.func.isRequired,\r\n    onMouseDown: PropTypes.func.isRequired,\r\n    onDeleteClick: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(StickerSet);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nclass Animator {\r\n    constructor(duration, options = []) {\r\n        this.options = options;\r\n        this.duration = duration;\r\n    }\r\n\r\n    static outSine(n) {\r\n        return Math.sin((n * Math.PI) / 2);\r\n    }\r\n\r\n    start = () => {\r\n        this.stopped = false;\r\n        this.id = requestAnimationFrame(this.startAnim);\r\n    };\r\n\r\n    startAnim = timeStamp => {\r\n        const { start, duration } = this;\r\n\r\n        this.start = timeStamp;\r\n        this.end = start + duration;\r\n        this.draw(timeStamp);\r\n    };\r\n\r\n    draw = now => {\r\n        const { stopped, duration, start, options } = this;\r\n\r\n        if (now - start > duration && options.every(x => x.to === x.last)) {\r\n            this.stopped = true;\r\n        }\r\n\r\n        if (stopped) return;\r\n\r\n        const time = Math.min(now - start, duration);\r\n        const p = duration === 0 ? 1.0 : time / duration;\r\n        const val = Animator.outSine(p);\r\n\r\n        options.forEach(x => {\r\n            const { from, to, func } = x;\r\n            x.last = from + (to - from) * val;\r\n            func(x.last);\r\n        });\r\n\r\n        this.id = requestAnimationFrame(this.draw);\r\n    };\r\n\r\n    stop = () => {\r\n        this.stopped = true;\r\n        cancelAnimationFrame(this.id);\r\n    };\r\n}\r\n\r\nexport default Animator;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Animator from '../../Utils/Animatior';\r\nimport Sticker from './../Message/Media/Sticker';\r\nimport { accentStyles, borderStyle } from '../Theme';\r\nimport { ANIMATION_DURATION_200MS } from '../../Constants';\r\nimport { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport './StickersPickerHeader.css';\r\n\r\nconst styles = theme => ({\r\n    ...borderStyle(theme),\r\n    ...accentStyles(theme)\r\n});\r\n\r\nclass StickersPickerHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { position: 0 };\r\n\r\n        this.scrollRef = React.createRef();\r\n        this.anchorRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('clientUpdateStickerSetPosition', this.onClientUpdateStickerSetPosition);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.removeListener('clientUpdateStickerSetPosition', this.onClientUpdateStickerSetPosition);\r\n    }\r\n\r\n    onClientUpdateStickerSetPosition = update => {\r\n        const { position } = update;\r\n\r\n        this.setState({ position });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.position !== this.state.position) {\r\n            this.scrollToPosition();\r\n        }\r\n    }\r\n\r\n    scrollToPosition = () => {\r\n        const { position } = this.state;\r\n        const { animator, anchorRef, scrollRef } = this;\r\n\r\n        const scroll = scrollRef.current;\r\n        const anchor = anchorRef.current;\r\n        const anchorNode = ReactDOM.findDOMNode(anchor);\r\n\r\n        const scrollFrom = scroll.scrollLeft;\r\n        const scrollTo = position * 44 - 147;\r\n\r\n        const anchorFrom = Number(anchorNode.style.left.replace('px', ''));\r\n        const anchorTo = position * 44;\r\n\r\n        if (animator) {\r\n            animator.stop();\r\n        }\r\n\r\n        this.animator = new Animator(0, [\r\n            {\r\n                from: scrollFrom,\r\n                to: scrollTo,\r\n                func: left => (scroll.scrollLeft = left)\r\n            },\r\n            {\r\n                from:\r\n                    Math.abs(anchorTo - anchorFrom) > 338\r\n                        ? anchorTo - Math.sign(anchorTo - anchorFrom) * 338\r\n                        : anchorFrom,\r\n                to: anchorTo,\r\n                func: left => (anchorNode.style.left = left + 'px')\r\n            }\r\n        ]);\r\n\r\n        setTimeout(() => {\r\n            if (!this.animator) return;\r\n\r\n            this.animator.start();\r\n        }, 0);\r\n        // this.animator.start();\r\n    };\r\n\r\n    handleWheel = event => {\r\n        const { scrollRef } = this;\r\n\r\n        if (event.deltaX === 0) {\r\n            const scroll = scrollRef.current;\r\n\r\n            scroll.scrollLeft += event.deltaY;\r\n        }\r\n    };\r\n\r\n    handleSelect = sticker => {\r\n        const { stickers, onSelect } = this.props;\r\n\r\n        onSelect(stickers.indexOf(sticker));\r\n    };\r\n\r\n    render() {\r\n        const { classes, stickers } = this.props;\r\n\r\n        const items = stickers.map(x => (\r\n            <Sticker\r\n                key={x.sticker.id}\r\n                className='stickers-picker-header-sticker'\r\n                sticker={x}\r\n                play={false}\r\n                autoplay={false}\r\n                blur={false}\r\n                displaySize={32}\r\n                preview\r\n                source={StickerSourceEnum.PICKER_HEADER}\r\n                openMedia={() => this.handleSelect(x)}\r\n            />\r\n        ));\r\n\r\n        return (\r\n            <div className={classNames('stickers-picker-header', classes.borderColor)}>\r\n                <div ref={this.scrollRef} className='stickers-picker-header-scroll' onWheel={this.handleWheel}>\r\n                    <div className='stickers-picker-header-items'>{items}</div>\r\n                    <div\r\n                        ref={this.anchorRef}\r\n                        className={classNames('stickers-picker-header-anchor', classes.accentBackgroundDark)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStickersPickerHeader.propTypes = {\r\n    stickers: PropTypes.array.isRequired,\r\n    onSelect: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(StickersPickerHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'recompose';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport StickerSet from './StickerSet';\r\nimport StickersPickerHeader from './StickersPickerHeader';\r\nimport { debounce, throttle } from '../../Utils/Common';\r\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\r\nimport { getNeighborStickersFromSets, getStickers } from '../../Utils/Media';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickersPicker.css';\r\n\r\nclass StickersPicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.scrollRef = React.createRef();\r\n        this.itemsMap = new Map();\r\n        this.loadedSets = new Map();\r\n\r\n        this.state = {\r\n            recent: null,\r\n            stickerSets: null,\r\n            sets: [],\r\n            headerStickers: [],\r\n            position: 0\r\n        };\r\n\r\n        this.loadInViewContentOnScrollEnd = debounce(this.loadInViewContentOnScrollEnd, 100);\r\n        this.loadInViewContentOnScroll = throttle(this.loadInViewContentOnScroll, 2000);\r\n        this.updatePosition = throttle(this.updatePosition, 250);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { position, recent, stickerSets, sets, showPreview } = this.state;\r\n\r\n        if (nextState.recent !== recent) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.stickerSets !== stickerSets) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.sets !== sets) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.showPreview !== showPreview) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.position !== position) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('updateInstalledStickerSets', this.onUpdateInstalledStickerSets);\r\n        StickerStore.on('updateRecentStickers', this.onUpdateRecentStickers);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.off('updateInstalledStickerSets', this.onUpdateInstalledStickerSets);\r\n        StickerStore.off('updateRecentStickers', this.onUpdateRecentStickers);\r\n    }\r\n\r\n    onUpdateInstalledStickerSets = update => {\r\n        const { is_masks, sticker_set_ids } = update;\r\n        if (!is_masks) return;\r\n\r\n        this.filterSets();\r\n    };\r\n\r\n    onUpdateRecentStickers = update => {\r\n        this.reloadRecentContent();\r\n    };\r\n\r\n    filterSets(sticker_set_ids) {\r\n        const { sets, stickerSets } = this.state;\r\n    }\r\n\r\n    async reloadRecentContent() {\r\n        const recent = await TdLibController.send({\r\n            '@type': 'getRecentStickers',\r\n            is_attached: false\r\n        });\r\n\r\n        this.setState({\r\n            recent\r\n        });\r\n    }\r\n\r\n    scrollTop = () => {\r\n        this.scrollRef.current.scrollTop = 0;\r\n    };\r\n\r\n    loadContent = async (recent, stickerSets, sets) => {\r\n        // console.log('[sp] loadContent', recent, stickerSets, sets);\r\n\r\n        if (!recent) {\r\n            recent = await TdLibController.send({\r\n                '@type': 'getRecentStickers',\r\n                is_attached: false\r\n            });\r\n        }\r\n\r\n        if (!sets) {\r\n            const result = await TdLibController.send({\r\n                '@type': 'getInstalledStickerSets',\r\n                is_masks: false\r\n            });\r\n\r\n            const promises = [];\r\n            result.sets.forEach(x => {\r\n                promises.push(\r\n                    TdLibController.send({\r\n                        '@type': 'getStickerSet',\r\n                        set_id: x.id\r\n                    })\r\n                );\r\n            });\r\n\r\n            sets = await Promise.all(promises);\r\n        }\r\n\r\n        const slicedSets = sets.slice(0, 5);\r\n        const headerStickers = sets.reduce((preview, set) => {\r\n            if (set.stickers.length > 0) {\r\n                preview.push(set.stickers[0]);\r\n            }\r\n            return preview;\r\n        }, []);\r\n\r\n        this.setState({\r\n            recent,\r\n            stickerSets,\r\n            sets: slicedSets,\r\n            fullSets: sets,\r\n            headerStickers\r\n        });\r\n        this.setsLength = slicedSets.length;\r\n    };\r\n\r\n    loadInViewContentOnScroll = () => {\r\n        this.loadInViewContent();\r\n    };\r\n\r\n    loadInViewContentOnScrollEnd = () => {\r\n        this.loadInViewContent(400);\r\n    };\r\n\r\n    loadInViewContent = (padding = 0) => {\r\n        const scroll = this.scrollRef.current;\r\n\r\n        const { sets } = this.state;\r\n\r\n        const inViewItems = [];\r\n        sets.forEach(x => {\r\n            const item = this.itemsMap.get(x.id);\r\n            const node = ReactDOM.findDOMNode(item);\r\n            if (node) {\r\n                const topBorder = scroll.scrollTop - padding;\r\n                const bottomBorder = scroll.scrollTop + scroll.offsetHeight + padding;\r\n\r\n                const nodeTop = node.offsetTop;\r\n                const nodeBottom = node.offsetTop + node.clientHeight;\r\n\r\n                if (nodeTop >= topBorder && node.offsetTop <= bottomBorder) {\r\n                    inViewItems.push(x);\r\n                } else if (nodeBottom >= topBorder && nodeBottom <= bottomBorder) {\r\n                    inViewItems.push(x);\r\n                } else if (nodeTop <= topBorder && nodeBottom >= bottomBorder) {\r\n                    inViewItems.push(x);\r\n                }\r\n            }\r\n        });\r\n\r\n        inViewItems.forEach(x => {\r\n            const store = FileStore.getStore();\r\n            if (!this.loadedSets.has(x.id)) {\r\n                this.loadedSets.set(x.id, x.id);\r\n                loadStickerSetContent(store, x);\r\n            }\r\n        });\r\n    };\r\n\r\n    updatePosition = () => {\r\n        const scroll = this.scrollRef.current;\r\n\r\n        const { sets } = this.state;\r\n        let minDiff = scroll.scrollHeight;\r\n        let position = 0;\r\n        let firstOffsetTop = 0;\r\n        sets.forEach((x, pos) => {\r\n            const element = this.itemsMap.get(x.id);\r\n            if (element) {\r\n                const node = ReactDOM.findDOMNode(element);\r\n                if (node) {\r\n                    firstOffsetTop = pos === 0 ? node.offsetTop : firstOffsetTop;\r\n\r\n                    const offsetTop = node.offsetTop - firstOffsetTop;\r\n                    if (node && offsetTop <= scroll.scrollTop) {\r\n                        const diff = Math.abs(scroll.scrollTop - offsetTop);\r\n                        if (diff <= minDiff) {\r\n                            minDiff = diff;\r\n                            position = pos;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSetPosition',\r\n            position\r\n        });\r\n    };\r\n\r\n    handleScroll = async () => {\r\n        //this.loadInViewContentOnScroll();\r\n        this.loadInViewContentOnScrollEnd();\r\n        this.updatePosition();\r\n\r\n        const scroll = this.scrollRef.current;\r\n\r\n        if (this.loadingChunk) return;\r\n\r\n        let loadChunk = false;\r\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight - 400) {\r\n            loadChunk = true;\r\n        }\r\n\r\n        if (!loadChunk) {\r\n            return false;\r\n        }\r\n\r\n        const { sets, stickerSets } = this.state;\r\n        if (stickerSets.sets.length === sets.length) return;\r\n\r\n        this.loadingChunk = true;\r\n        const promises = [];\r\n        stickerSets.sets.slice(this.setsLength, this.setsLength + 5).forEach(x => {\r\n            promises.push(\r\n                TdLibController.send({\r\n                    '@type': 'getStickerSet',\r\n                    set_id: x.id\r\n                })\r\n            );\r\n        });\r\n\r\n        const result = await Promise.all(promises).finally(() => {\r\n            this.loadingChunk = false;\r\n        });\r\n\r\n        this.setsLength += result.length;\r\n        this.setState({ sets: sets.concat(result) });\r\n    };\r\n\r\n    loadPreviewContent = stickerId => {\r\n        const { recent, sets } = this.state;\r\n\r\n        const sticker = getStickers([recent].concat(sets)).find(x => x.sticker.id === stickerId);\r\n        if (!sticker) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadStickerContent(store, sticker, null);\r\n\r\n        const stickersPerRow = 5;\r\n        const preloadStickers = getNeighborStickersFromSets(sticker, sets, stickersPerRow);\r\n        preloadStickers.forEach(x => {\r\n            loadStickerContent(store, x, null);\r\n        });\r\n    };\r\n\r\n    handleMouseEnter = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        if (!stickerId) return;\r\n\r\n        if (!this.mouseDown) return;\r\n\r\n        if (this.mouseDownStickerId !== stickerId) {\r\n            this.mouseDownStickerId = null;\r\n        }\r\n        this.setState({ previewStickerId: stickerId });\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        const { onPreview } = this.props;\r\n        const { recent, sets } = this.state;\r\n\r\n        const sticker = getStickers([recent].concat(sets)).find(x => x.sticker.id === stickerId);\r\n        onPreview(sticker);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        if (!stickerId) return;\r\n\r\n        this.mouseDownStickerId = stickerId;\r\n        const now = Date.now();\r\n\r\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\r\n        setTimeout(() => {\r\n            const { timestamp } = this.state;\r\n            if (timestamp === now) {\r\n                this.setState({ showPreview: true, cancelSend: true }, () => {\r\n                    const { onPreview } = this.props;\r\n                    const { recent, sets } = this.state;\r\n\r\n                    const sticker = getStickers([recent].concat(sets)).find(x => x.sticker.id === stickerId);\r\n                    onPreview(sticker);\r\n                });\r\n            }\r\n        }, 500);\r\n\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        this.mouseDown = true;\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n\r\n    handleMouseUp = () => {\r\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\r\n\r\n        const { onPreview } = this.props;\r\n\r\n        onPreview(null);\r\n\r\n        this.mouseDown = false;\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    handleStickerSelect = sticker => {\r\n        const { onSelect } = this.props;\r\n        const { cancelSend } = this.state;\r\n\r\n        if (cancelSend) return;\r\n\r\n        onSelect(sticker);\r\n    };\r\n\r\n    handleSelectSet = async position => {\r\n        const { sets, stickerSets } = this.state;\r\n        const { scrollRef } = this;\r\n\r\n        if (position < sets.length) {\r\n            const element = this.itemsMap.get(sets[position].id);\r\n            if (element) {\r\n                const node = ReactDOM.findDOMNode(element);\r\n                if (node) {\r\n                    const scroll = scrollRef.current;\r\n                    scroll.scrollTop = node.offsetTop;\r\n                }\r\n            }\r\n        } else if (position < stickerSets.sets.length) {\r\n            if (this.loadingChunk) return;\r\n            if (stickerSets.sets.length === sets.length) return;\r\n\r\n            this.loadingChunk = true;\r\n            const promises = [];\r\n            stickerSets.sets.slice(this.setsLength, position + 1).forEach(x => {\r\n                promises.push(\r\n                    TdLibController.send({\r\n                        '@type': 'getStickerSet',\r\n                        set_id: x.id\r\n                    })\r\n                );\r\n            });\r\n\r\n            const result = await Promise.all(promises).finally(() => (this.loadingChunk = false));\r\n\r\n            this.setsLength += result.length;\r\n            let concatSets = sets.concat(result);\r\n            this.setState({ sets: concatSets }, () => {\r\n                if (position < concatSets.length) {\r\n                    this.handleSelectSet(position);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteRecent = () => {\r\n        TdLibController.send({\r\n            '@type': 'clearRecentStickers',\r\n            is_attached: false\r\n        });\r\n    };\r\n\r\n    handleDeleteStickerSet = id => {\r\n        TdLibController.send({\r\n            '@type': 'changeStickerSet',\r\n            set_id: id,\r\n            is_installed: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { recent, stickerSets, sets, headerStickers } = this.state;\r\n        // console.log('[sp] render', recent, stickerSets, sets);\r\n        // if (!stickerSets) return null;\r\n        //\r\n        // if (!sets) return null;\r\n        // if (!sets.length) return null;\r\n\r\n        this.itemsMap.clear();\r\n        const items = sets.map(x => (\r\n            <StickerSet\r\n                key={x.id}\r\n                ref={el => this.itemsMap.set(x.id, el)}\r\n                info={x}\r\n                onSelect={this.handleStickerSelect}\r\n                onMouseDown={this.handleMouseDown}\r\n                onMouseEnter={this.handleMouseEnter}\r\n            />\r\n        ));\r\n\r\n        const recentInfo =\r\n            recent && recent.stickers.length > 0\r\n                ? {\r\n                      stickers: recent.stickers,\r\n                      title: t('RecentStickers')\r\n                  }\r\n                : null;\r\n\r\n        return (\r\n            <div className='stickers-picker'>\r\n                <StickersPickerHeader onSelect={this.handleSelectSet} stickers={headerStickers} />\r\n                <div ref={this.scrollRef} className='stickers-picker-scroll' onScroll={this.handleScroll}>\r\n                    {Boolean(recentInfo) && (\r\n                        <StickerSet\r\n                            info={recentInfo}\r\n                            onSelect={this.handleStickerSelect}\r\n                            onMouseDown={this.handleMouseDown}\r\n                            onMouseEnter={this.handleMouseEnter}\r\n                            onDeleteClick={this.handleDeleteRecent}\r\n                        />\r\n                    )}\r\n                    {items}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStickersPicker.propTypes = {\r\n    onSelect: PropTypes.func.isRequired,\r\n    onPreview: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(StickersPicker);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport { compose } from 'recompose';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport { Picker as EmojiPicker } from 'emoji-mart';\r\nimport StickerPreview from './StickerPreview';\r\nimport StickersPicker from './StickersPicker';\r\nimport { isAppleDevice } from '../../Utils/Common';\r\nimport { loadStickerThumbnailContent, loadStickerSetContent, loadRecentStickersContent } from '../../Utils/File';\r\nimport { EMOJI_PICKER_TIMEOUT_MS } from '../../Constants';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './EmojiPickerButton.css';\r\n\r\nconst styles = theme => ({\r\n    iconButton: {\r\n        margin: '8px 0px'\r\n    },\r\n    headerButton: {\r\n        borderRadius: 0,\r\n        flex: '50%'\r\n    },\r\n    pickerRoot: {\r\n        zIndex: theme.zIndex.modal,\r\n        width: 338,\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        borderRadius: theme.shape.borderRadius,\r\n        boxShadow: theme.shadows[8],\r\n        position: 'absolute',\r\n        bottom: 80,\r\n        display: 'none'\r\n    },\r\n    pickerRootOpened: {\r\n        display: 'block'\r\n    }\r\n});\r\n\r\nclass EmojiPickerButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n            tab: 0\r\n        };\r\n\r\n        this.emojiPickerRef = React.createRef();\r\n        this.stickersPickerRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateChange);\r\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateChange);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateChange);\r\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateChange);\r\n    }\r\n\r\n    onClientUpdateChange = update => {\r\n        this.picker = null;\r\n    };\r\n\r\n    handleButtonMouseEnter = event => {\r\n        this.buttonEnter = true;\r\n        setTimeout(() => {\r\n            if (!this.buttonEnter) return;\r\n\r\n            this.updatePicker(true);\r\n            this.loadStickerSets();\r\n        }, EMOJI_PICKER_TIMEOUT_MS);\r\n    };\r\n\r\n    loadStickerSets = async () => {\r\n        if (this.sets) return;\r\n\r\n        this.recent = await TdLibController.send({\r\n            '@type': 'getRecentStickers',\r\n            is_attached: false\r\n        });\r\n\r\n        this.stickerSets = await TdLibController.send({\r\n            '@type': 'getInstalledStickerSets',\r\n            is_masks: false\r\n        });\r\n\r\n        const promises = [];\r\n        this.stickerSets.sets.forEach(x => {\r\n            promises.push(\r\n                TdLibController.send({\r\n                    '@type': 'getStickerSet',\r\n                    set_id: x.id\r\n                })\r\n            );\r\n        });\r\n\r\n        this.sets = await Promise.all(promises);\r\n\r\n        const node = this.stickersPickerRef.current;\r\n\r\n        const store = FileStore.getStore();\r\n        loadRecentStickersContent(store, this.recent);\r\n\r\n        const previewSets = this.sets.slice(0, 5).reverse();\r\n        previewSets.forEach(x => {\r\n            loadStickerSetContent(store, x);\r\n            node.loadedSets.set(x.id, x.id);\r\n        });\r\n\r\n        const previewStickers = this.sets.reduce((stickers, set) => {\r\n            if (set.stickers.length > 0) {\r\n                stickers.push(set.stickers[0]);\r\n            }\r\n            return stickers;\r\n        }, []);\r\n        previewStickers.forEach(x => {\r\n            loadStickerThumbnailContent(store, x);\r\n        });\r\n    };\r\n\r\n    handleButtonMouseLeave = () => {\r\n        this.buttonEnter = false;\r\n        setTimeout(() => {\r\n            this.tryClosePicker();\r\n        }, EMOJI_PICKER_TIMEOUT_MS);\r\n    };\r\n\r\n    tryClosePicker = () => {\r\n        const { sticker } = this.state;\r\n        if (this.paperEnter || this.buttonEnter || sticker) return;\r\n\r\n        this.updatePicker(false);\r\n    };\r\n\r\n    handlePaperMouseEnter = () => {\r\n        this.paperEnter = true;\r\n    };\r\n\r\n    handlePaperMouseLeave = () => {\r\n        // return;\r\n\r\n        this.paperEnter = false;\r\n        setTimeout(() => {\r\n            this.tryClosePicker();\r\n        }, EMOJI_PICKER_TIMEOUT_MS);\r\n    };\r\n\r\n    updatePicker = open => {\r\n        this.setState({ open });\r\n    };\r\n\r\n    handleEmojiClick = () => {\r\n        this.setState({ tab: 0 });\r\n    };\r\n\r\n    handleStickersClick = () => {\r\n        const stickersPicker = this.stickersPickerRef.current;\r\n        const { tab } = this.state;\r\n\r\n        stickersPicker.loadContent(this.recent, this.stickerSets, this.sets);\r\n\r\n        this.setState({ tab: 1 });\r\n        if (tab === 1) {\r\n            stickersPicker.scrollTop();\r\n        }\r\n    };\r\n\r\n    handleStickerSend = sticker => {\r\n        if (!sticker) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSend',\r\n            sticker\r\n        });\r\n\r\n        this.updatePicker(false);\r\n    };\r\n\r\n    handleStickerPreview = sticker => {\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n\r\n        if (!sticker) {\r\n            this.tryClosePicker();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { classes, theme, t } = this.props;\r\n        const { open, tab, sticker } = this.state;\r\n\r\n        if (open && !this.picker) {\r\n            const i18n = {\r\n                search: t('Search'),\r\n                notfound: t('NotEmojiFound'),\r\n                skintext: t('ChooseDefaultSkinTone'),\r\n                categories: {\r\n                    search: t('SearchResults'),\r\n                    recent: t('Recent'),\r\n                    people: t('SmileysPeople'),\r\n                    nature: t('AnimalsNature'),\r\n                    foods: t('FoodDrink'),\r\n                    activity: t('Activity'),\r\n                    places: t('TravelPlaces'),\r\n                    objects: t('Objects'),\r\n                    symbols: t('Symbols'),\r\n                    flags: t('Flags'),\r\n                    custom: t('Custom')\r\n                }\r\n            };\r\n\r\n            this.picker = (\r\n                <EmojiPicker\r\n                    ref={this.emojiPickerRef}\r\n                    set='apple'\r\n                    showPreview={false}\r\n                    showSkinTones={false}\r\n                    onSelect={this.props.onSelect}\r\n                    color={theme.palette.primary.dark}\r\n                    i18n={i18n}\r\n                    native={isAppleDevice()}\r\n                    style={{ width: 338, overflowX: 'hidden' }}\r\n                />\r\n            );\r\n\r\n            this.stickersPicker = (\r\n                <StickersPicker\r\n                    ref={this.stickersPickerRef}\r\n                    onSelect={this.handleStickerSend}\r\n                    onPreview={this.handleStickerPreview}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <link\r\n                    rel='stylesheet'\r\n                    type='text/css'\r\n                    href={theme.palette.type === 'dark' ? 'emoji-mart.dark.css' : 'emoji-mart.light.css'}\r\n                />\r\n                <IconButton\r\n                    className={classes.iconButton}\r\n                    aria-label='Emoticon'\r\n                    onMouseEnter={this.handleButtonMouseEnter}\r\n                    onMouseLeave={this.handleButtonMouseLeave}>\r\n                    <InsertEmoticonIcon />\r\n                </IconButton>\r\n                <div\r\n                    className={classNames(classes.pickerRoot, { [classes.pickerRootOpened]: open })}\r\n                    onMouseEnter={this.handlePaperMouseEnter}\r\n                    onMouseLeave={this.handlePaperMouseLeave}>\r\n                    <div className='emoji-picker-header'>\r\n                        <Button\r\n                            color={tab === 0 ? 'primary' : 'default'}\r\n                            className={classes.headerButton}\r\n                            onClick={this.handleEmojiClick}>\r\n                            {t('Emoji')}\r\n                        </Button>\r\n                        <Button\r\n                            color={tab === 1 ? 'primary' : 'default'}\r\n                            className={classes.headerButton}\r\n                            onClick={this.handleStickersClick}>\r\n                            {t('Stickers')}\r\n                        </Button>\r\n                    </div>\r\n                    <div className={classNames('emoji-picker-content', { 'emoji-picker-content-stickers': tab === 1 })}>\r\n                        {this.picker}\r\n                        {this.stickersPicker}\r\n                    </div>\r\n                    {Boolean(sticker) && <StickerPreview sticker={sticker} />}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withStyles(styles, { withTheme: true }),\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(EmojiPickerButton);\r\n"],"sourceRoot":""}