{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Notifications.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogStatus.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/SharedDocument.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Popup/CreatePollDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Assets/Bubbles.svg","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","this","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","ForwardTargetChat","classes","chatId","selected","onSelect","shortTitle","getChatShortTitle","classNames","onClick","ChatTile","border","markSelected","markUnselected","withStyles","theme","borderColor","palette","primary","main","boxShadow","background","paper","withTheme","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","get","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","a","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","user_id","UserStore","getMyId","force","Promise","all","map","x","catch","e","chats","savedMessages","chatIds","chat_ids","store","FileStore","getStore","loadChatsContent","messageIds","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","handleClose","clientUpdate","info","handleCopyLink","t","link","key","message","copy","handleScheduledAction","action","enqueueSnackbar","ApplicationStore","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","aria-label","color","close","removeScheduledAction","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","photoSize","media","text","getInnerText","messageRef","current","targetChats","forEach","targetChatId","getInputMediaContent","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","entities","disable_web_page_preview","clear_draft","size","width","height","thumbnail","added_sticker_file_ids","caption","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","console","log","forceUpdate","element","innerHTML","innerText","handleSearchKeyDown","event","keyCode","preventDefault","handleSearchKeyUp","searchRef","trim","latinText","cyrillicText","searchResults","concat","filter","canSendMessages","hasSearchText","searchText","handleSearchPaste","plainText","clipboardData","getData","document","execCommand","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","focus","createRef","foundChats","open","onClose","aria-labelledby","aria-describedby","dialog","ref","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","searchList","autoFocus","enhance","compose","padding","spacing","unit","dialogContent","display","position","borderStyle","withTranslation","withSnackbar","UserStatusControl","onUpdateUserStatus","update","userId","user","status","getUserStatus","isAccent","isUserOnline","prevUserId","nextProps","nextState","on","removeListener","userStatusSubtitle","userStatusAccentSubtitle","secondary","dark","UserControl","handleClick","fullName","getUserFullName","UserTile","DialogStatus","chat","ChatStore","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","showSavedMessages","defaultProps","ChatDetailsHeader","backButton","isPrivateChat","isChannelChat","leftIconButton","rightIconButton","margin","NotificationsControl","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","button","listItem","variant","noWrap","onChange","checked","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isUserBlocked","isGroup","isGroupChat","isBlocked","isMember","isChatMember","isChannel","in","timeout","unmountOnExit","component","disablePadding","inset","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","usernameLink","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","counters","list","scrollHeight","offsetHeight","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isMeChat","users","member","items","sort","y","getUserStatusOrder","style","whiteSpace","wordWrap","toUpperCase","withSaveRef","closeIconButton","nested","withRestoreRef","GroupsInCommonHeader","backIconButton","GroupsInCommon","handleSelect","getChatUserId","minHeight","SharedDocument","handleOpenMessage","handleCloseContextMenu","messageId","handleForward","forwardMessages","handleDelete","can_be_deleted_for_all_users","openDeleteDialog","canBeDeletedForAllUsers","revoke","handleContextMenu","stopPropagation","contextMenu","left","clientX","top","clientY","handleRevokeChange","handleCloseDelete","handleDeleteContinue","showOpenMessage","can_be_deleted_only_for_self","onContextMenu","getMedia","openMedia","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","root","menuListRoot","transitionDuration","control","label","minWidth","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","title","headerBackButton","Boolean","headerSearchButton","icon","openIcon","SharedMediaBase","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","query","sender_user_id","from_message_id","offset","finally","messages","total_count","incompleteResults","setItems","onLoadMigratedNext","handleScroll","listRef","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","sharedMediaList","sharedMediaSearchList","default","Error","getItemTemplate","searchMessages","getHeader","hasSearch","onScroll","SharedAudios","propTypes","PropTypes","number","isRequired","func","bool","getStyles","SharedDocuments","SharedLink","nextContext","url","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","error","webPage","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","mail","typeUrl","tileColor","Math","abs","charCodeAt","charAt","showProgress","accentStyles","SharedLinks","web_page","SharedMediaHeaderControl","SharedMedia","handleChange","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","SharedPhoto","onClientUpdatePhotoBlob","thumbSize","fileId","thumbnailSize","getSize","src","getSrc","thumbSrc","isBlurredThumbnail","sharedPhotoContent","backgroundImage","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","backgroundColor","SharedPhotos","flexWrap","justifyContent","alignItems","alignContent","SharedVideo","onClientUpdateVideoThumbnailBlob","video","duration","isBlurred","THUMBNAIL_BLURRED_SIZE_90","getDurationString","SharedVideos","SharedVoiceNote","i18n","voiceNote","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","file","voice","VoiceNoteTile","MessageAuthor","voiceNoteMeta","AudioAction","MediaStatus","SharedVoiceNotes","voice_note","ChatInfo","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","TopChat","showOnline","PureComponent","userStatusRoot","right","bottom","zIndex","RecentlyFoundChat","FoundPublicChat","previousChatId","selectedChatId","membersCount","getGroupChatMembersCount","subscribersString","foundPublicChatActive","verifiedIcon","foundPublicChatSubtitle","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","senderName","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","foundMessageActive","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","command","Search","concatSearchResults","results","arr","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","keys","topPromise","category","recentlyFoundPromise","handleRecentlyFound","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChats","globalMessages","messagesCaption","search","closeSearchIconButton","ThemePicker","target","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","formControl","focused","name","group","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","LanguagePicker","languages","LocalizationStore","language_packs","native_name","menuAnchorOrigin","MainMenuButton","onUpdateAuthorizationState","authorizationState","authorization_state","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleLogOut","onLogOut","handleCheckUpdates","fetch","WASM_FILE_NAME","WASM_FILE_HASH","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","getAuthorizationState","mainMenuControl","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","aria-owns","aria-haspopup","menuIconButton","innerRef","searchIconButton","DialogsHeader","handleDone","logOut","onSearchTextChange","AppStore","searchInput","childNodes","range","createRange","setStart","collapse","selection","window","getSelection","removeAllRanges","addRange","ANIMATION_DURATION_100MS","confirmLogoutDialog","dialogText","headerIconButton","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","location","reload","borderRadius","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","header","dialogsHeaderRef","setInitQuery","dialogsListRef","scrollToTop","visible","handleSearchTextChange","DialogsList","ChatInfoDialog","handleClientUpdateDialogChatId","dialogRoot","container","containerRoot","paperRoot","chatInfoRoot","modal","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","iconButton","disabled","canSendPhotos","canSendDocuments","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","option","onDelete","handleInput","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","replace","POLL_OPTION_MAX_LENGTH","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","fontSize","POLL_OPTION_HINT_LENGTH","align","counterRoot","userSelect","isValidPoll","poll","question","options","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","every","isValidOption","reset","onUpdate","onClientUpdate","now","assign","addTdLibListener","addListener","removeTdLibListener","setMaxListeners","Infinity","source1","source2","Object","EventEmitter","CreatePollDialog","handleClientUpdateNewPoll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","clear","canAddOption","hint","contentRoot","flexGrow","POLL_QUESTION_HINT_LENGTH","dividerRoot","listRoot","disableTypography","typographyRoot","ReplyTile","isVideoNote","hasVideoNote","draggable","alt","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getTitle","getReplyPhotoSize","accentBackgroundLight","accentColorMain","replyContentSubtitle","InputBoxHeader","replyIcon","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","InputBoxControl","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateStickerSend","item","newMessageRef","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","replyToMessageId","setInputFocus","getChatDraftReplyToMessageId","openPasteDialog","setDraft","draft","getChatDraft","nodes","getNodes","appendChild","textNode","findLastTextNode","nodeType","Node","TEXT_NODE","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getNewChatDraftMessage","getEntities","input_message_text","draftEquals","handleSubmit","attachPhotoRef","click","handleAttachPhotoComplete","files","Array","from","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","setTyping","handleClear","handleBold","handleItalic","handleUnderline","handleStrikeThrough","handleUrl","repeat","ctrlKey","metaKey","altKey","data","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","handlePasteContinue","handleClosePaste","blob","sending_state","is_downloading_completed","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","JSON","stringify","handleEmojiSelect","native","StickerStore","t0","performance","regex","emojiRegex","match","exec","t1","timestamp","stickers","off","Suspense","fallback","multiple","accept","FooterCommand","onCommand","NotificationsCommandControl","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","basicGroup","is_member","can_send_messages","is_channel","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","startTime","setMilliseconds","getMilliseconds","setInterval","toFixed","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","ClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","inProgress","getLeaveChatTitle","clearHistory","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","HeaderCommand","handleCancel","selectedItems","values","handleReply","next","count","canBeDeleted","canBeForwarded","canBeReplied","buttonLeft","buttonRight","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","onUpdateChatTitle","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","getConnectionState","isAccentSubtitle","isAccentChatSubtitle","getChatSubtitle","showProgressAnimation","HeaderProgress","headerStatusTitle","headerStatusAccentTitle","messageSearchIconButton","moreIconButton","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","undefined","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","slider","thumb","min","max","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","floor","getTimeString","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","playlist","onClientUpdateMediaPlaylist","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","player","videoRef","onClientUpdateMediaViewerContent","playingMediaViewer","mediaViewerContent","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","audio","video_note","onClientUpdateMediaClose","playing","paused","play","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","stream","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","DayMeta","onClientUpdateLanguage","dayMeta","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","arrow","forwardColor","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","marginBottom","marginLeft","marginRight","Meta","editDate","onDateClick","views","meta","MessageStatus","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","prevMessageId","stateClassName","messageStatusSucceeded","messageStatusFailed","messageStatusPending","light","unreadSeparator","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","instantView","newWindow","opener","WebPage","displaySmallSize","displayExtraSmallSize","site_name","animation","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Audio","Document","Animation","Video","smallPhoto","extraSmallPhoto","float","handleInstantViewClick","getWebPage","instant_view_version","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","instantViewButton","d","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","selectMessage","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","showUnreadSeparator","showTitle","edit_date","forward_info","getUnread","messageClassName","messageSelected","messageHighlighted","onMouseOver","onMouseOut","onAnimationEnd","messageSelectTick","messageAuthorColor","to","PinnedMessage","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","code","deletedMessage","canPinMessages","getClientData","unpinned_message_id","handleUnpin","pinnedMessage","pinnedMessageContentSubtitle","prevPropsChatId","_extends","arguments","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fill","_ref","svgRef","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","Placeholder","onClientUpdateCacheLoaded","cacheLoaded","dialogsReady","ScrollDownButton","scrollDownButton","disableRipple","divider","chatPhotoStyle","ServiceMessage","getServiceMessageContent","serviceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","getSticker","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","foundStickers","stickerIndex","data-sticker-id","autoplay","blur","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","initDB","defferedActions","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onClientUpdateClearHistory","history","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","is_outgoing","replaceMessage","handleScrollBehavior","viewMessages","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","children","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","last_message","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","pinnedMessageMargin","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","canSendFiles","handleScrollDownClick","lastReply","pop","separatorMessageId","throttle","historyEquals","previousChat","unread_count","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","prevDate","getFullYear","getMonth","m","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","STICKER_SET","dialogTitleRoot","disablePointerEvents","shareButtonRoot","flexDirection","flexShrink","pointerEvents","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","IVContext","createContext","withIV","IVComponent","Consumer","iv","RichText","richText","String","email_address","emailAddress","phone_number","texts","getRichText","object","Anchor","Caption","credit","hasText","isEmptyText","hastCredit","block","need_autoplay","pageBlock","IV_PHOTO_DISPLAY_SIZE","AuthorDate","author","publishDate","hasAuthor","hasDate","rel","dateTime","toISOString","dateFormat","Blockquote","pageBlocks","getPageBlock","Cover","cover","isOpen","Divider","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","frameBorder","iframeResizerOptions","prevUrl","prevHtml","authorPhoto","ErrorHandler","errorInfo","componentStack","footer","Kicker","kicker","data-before","List","page_blocks","Paragraph","Photo","IV_PHOTO_SIZE","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","articles","publish_date","Subheader","subheader","Subtitle","Title","Bold","EmailAddress","href","Fixed","Icon","onClientUpdateDocumentThumbnailBlob","onClientUpdateDocumentBlob","thumbnailSrc","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","cells","isBordered","isStriped","striped","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","Location","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","ChatLink","needAutoplay","isLooped","openInstantViewMedia","fileCancel","is_downloading_active","remote","is_uploading_active","cancelUploadFile","download","updateAnimationBlob","setInstantViewViewerContent","updateAudioBlob","updateVideoBlob","is_open","posterPhoto","poster_photo","is_full_width","allow_scrolling","author_photo","zoom","is_bordered","is_striped","is_header","is_looped","getInnerBlocks","innerBlocks","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","blocks","dir","MediaCaption","InstantViewMediaViewerContent","onClientUpdateMediaThumbnailBlob","isPlaying","getBlob","getBlobUrl","thumbnailBlob","videoWidth","videoHeight","scale","handleContentClick","onVolumeChange","loop","FileProgress","prevMedia","getViewerFile","getViewerThumbnail","speed","MediaViewerButton","grow","cx","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","forwardIconStyle","transform","InstantViewMediaViewer","hasPreviousMedia","hasNextMedia","handlePrevious","handleSave","saveMedia","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","hash","scrollToHash","handleBack","hasScroll","instantViewerRef","articleRef","mounted","behavior","hiddenElement","getElementById","details","finished","currentElement","parentNode","nodeName","scrollIntoView","scrollTo","Provider","instantViewer","leftButton","closeButton","prevInstantView","MediaViewerControl","getSenderUserId","dateHint","tileControl","Lottie","MediaViewerContent","updateAnimationData","isLottieMessage","getAnimationData","animationData","getMediaFile","getMediaPreviewFile","changeSpeed","lottieRef","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","defaultOptions","rendererSettings","preserveAspectRatio","isStopped","isPaused","MediaViewer","deleteConfirmationOpened","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","reduce","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateChatBlob","big","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","photos","currentIndex","preloadProfileMediaViewerContent","getProfilePhoto","getPhotoFromChat","saveOrDownload","updateChatPhotoBlob","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","loadProfileMediaViewerContent","inHistory","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","withLanguage"],"mappings":"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","file":"static/js/4.3211a35c.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, media, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !media && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (media) {\n                const content = getInputMediaContent(media, text);\n                if (content) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: content\n                    });\n                }\n\n                return;\n            }\n\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object,\n    media: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from './UserTile';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatus chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ctor', this.props.counters);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.componentDidMount');\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId: chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            classes,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n        console.log('ChatDetails.render counters', counters, migratedCounters);\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {isGroup && <MoreListItem chatId={chatId} />}\n                                {popup && !isGroup && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { getMedia, openMedia } from '../../../Utils/Message';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedDocument.css';\n\nconst styles = {\n    menuListRoot: {\n        minWidth: 150\n    }\n};\n\nclass SharedDocument extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, classes, messageId, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        return (\n            <div className='shared-document' onContextMenu={this.handleContextMenu}>\n                {getMedia(message, () => openMedia(chatId, messageId, true))}\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nconst styles = {\n    headerBackButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    headerSearchButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className={classes.headerBackButton} onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className={classes.headerSearchButton} onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    static getStyles(theme) {\n        return {\n            sharedMediaList: {},\n            sharedMediaSearchList: {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            }\n        };\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { classes, minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        console.log('SharedMediaBase.render', items, messages);\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', classes.sharedMediaList)}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', classes.sharedMediaSearchList)}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { accentStyles } from '../../Theme';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedLink.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass SharedLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        if (nextState.left !== left) {\n            return true;\n        }\n\n        if (nextState.top !== top) {\n            return true;\n        }\n\n        if (nextState.openDeleteDialog !== openDeleteDialog) {\n            return true;\n        }\n\n        if (nextState.revoke !== revoke) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            console.log('getTitleFromUrl', punycode);\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, classes, messageId, webPage, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url);\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\n\n        return (\n            <div className='shared-link' onContextMenu={this.handleContextMenu}>\n                <div className={classNames('shared-link-photo', tileColor)}>\n                    {title.charAt(0)}\n                    {photo && (\n                        <Photo\n                            displaySize={90}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                            showProgress={false}\n                            style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                        />\n                    )}\n                </div>\n                <div className='shared-link-content'>\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {content}\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedPhoto.css';\n\nconst styles = theme => ({\n    sharedPhotoContent: {\n        backgroundColor:\n            theme.palette.type === 'dark' ? theme.palette.background.paper : theme.palette.background.default\n    }\n});\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize)\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, classes, openMedia, style, showOpenMessage, t } = this.props;\n        const { thumbSize, photoSize, contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        if (!photoSize) return null;\n\n        const src = getSrc(photoSize.photo);\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbSize);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleContextMenu}>\n                <div\n                    className={classNames('shared-photo-content', classes.sharedPhotoContent)}\n                    style={{ backgroundImage: `url(${thumbSrc})` }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedPhoto);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nconst styles = theme => ({\n    sharedMediaList: {\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    },\n    sharedMediaSearchList: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    }\n});\n\nclass SharedPhotos extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { getDurationString, getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedVideo.css';\n\nconst styles = theme => ({\n    sharedPhotoContent: {\n        // backgroundColor: theme.palette.type === 'dark' ? theme.palette.background.paper : theme.palette.background.default\n    }\n});\n\nclass SharedVideo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, classes, openMedia, style, showOpenMessage, t } = this.props;\n        const { thumbnail, video, width, height, duration } = this.props.video;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleContextMenu}>\n                <div className='shared-video-wrapper'>\n                    <div\n                        className={classNames('shared-video-content', { 'media-blurred': isBlurred })}\n                        style={{ backgroundImage: `url(${thumbSrc})` }}\n                    />\n                    <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedVideo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nconst styles = theme => ({\n    sharedMediaList: {\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    },\n    sharedMediaSearchList: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    }\n});\n\nclass SharedVideos extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    voiceNoteMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, classes, i18n, messageId, voiceNote, openMedia, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        if (!voiceNote) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <div className='shared-voice-note' onContextMenu={this.handleContextMenu}>\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                <div className='voice-note-content'>\n                    <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                    <div className={classNames(classes.voiceNoteMeta, 'voice-note-meta')}>\n                        <AudioAction\n                            chatId={chatId}\n                            messageId={messageId}\n                            duration={duration}\n                            file={file}\n                            title={`${dateString}, `}\n                        />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { borderStyle } from '../Theme';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ChatInfo.ctor');\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadContent(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        console.log('ChatInfo.loadMigratedCounters');\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        console.log('ChatInfo.loadMigratedCounters chat', chat);\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTile chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: 0\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTile chatId={chatId} />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}>\n                    <ChatTile chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundMessageActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile = sender_user_id && chatSearch ? <UserTile userId={sender_user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.foundMessageActive]: selected },\n                        { 'accent-background': selected }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            )}\n                            <div className={classNames('dialog-meta', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: 0\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { ANIMATION_DURATION_100MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch, text } = this.props;\n\n        if (openSearch) {\n            const searchInput = this.searchInputRef.current;\n            if (openSearch !== prevProps.openSearch) {\n                setTimeout(() => {\n                    if (searchInput) {\n                        searchInput.focus();\n                    }\n                }, ANIMATION_DURATION_100MS);\n            }\n        }\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles),\n    withRestoreRef()\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsListRef.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    ref={this.dialogsHeaderRef}\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsListRef} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    replyContentSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className={classNames('reply-content-subtitle', classes.replyContentSubtitle)}>\n                            {content}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.primary.main\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport emojiRegex from 'emoji-regex';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { borderStyle } from '../Theme';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { PHOTO_SIZE } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.loadDraft();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, replyToMessageId } = this.state;\n\n        const draftMessage = this.getNewChatDraftMessage(chatId, replyToMessageId);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            const { text, entities } = draft;\n\n            try {\n                const nodes = getNodes(text, entities);\n                element.innerHTML = null;\n                nodes.forEach(x => {\n                    element.appendChild(x);\n                });\n            } catch (e) {\n                element.innerText = draft.text;\n            }\n\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n            if (!element) return;\n\n            const textNode = this.findLastTextNode(element);\n            if (textNode) {\n                const range = document.createRange();\n                range.setStart(textNode, textNode.length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n\n            element.focus();\n        }, 100);\n    };\n\n    findLastTextNode = element => {\n        if (element.nodeType === Node.TEXT_NODE) {\n            return element;\n        }\n\n        for (let i = element.childNodes.length - 1; i >= 0; i--) {\n            const textNode = this.findLastTextNode(element.childNodes[i]);\n            if (textNode) {\n                return textNode;\n            }\n        }\n\n        return null;\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { innerHTML } = this.newMessageRef.current;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage = {\n            '@type': 'draftMessage',\n            reply_to_message_id: replyToMessageId,\n            input_message_text: {\n                '@type': 'inputMessageText',\n                text: {\n                    '@type': 'formattedText',\n                    text,\n                    entities\n                },\n                disable_web_page_preview: true,\n                clear_draft: false\n            }\n        };\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = this.newMessageRef.current;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text,\n                entities\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n        document.execCommand('italic', false, null);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {};\n\n    handleKeyDown = event => {\n        if (event.key === 'Enter' && !event.shiftKey) {\n            event.preventDefault();\n            this.handleSubmit();\n            return;\n        }\n\n        if (event.repeat) return;\n\n        if ((event.ctrlKey || event.metaKey) && !event.shiftKey) {\n            if (!event.altKey) {\n                switch (event.keyCode) {\n                    case 66: {\n                        // cmd + b\n                        this.handleBold();\n                        event.preventDefault();\n                        event.stopPropagation();\n                        break;\n                    }\n                    case 73: {\n                        // cmd + i\n                        this.handleItalic();\n                        event.preventDefault();\n                        event.stopPropagation();\n                        break;\n                    }\n                    case 75: {\n                        // cmd + k\n                        this.handleUrl();\n                        event.preventDefault();\n                        event.stopPropagation();\n                        break;\n                    }\n                }\n            } else {\n                switch (event.keyCode) {\n                    case 192: {\n                        // alt + cmd + n\n                        this.handleClear();\n                        event.preventDefault();\n                        event.stopPropagation();\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        document.execCommand('insertText', false, emoji.native);\n        this.newMessageRef.current.focus();\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}\n                            />\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton\n                                color='primary'\n                                className={classes.iconButton}\n                                aria-label='Send'\n                                onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        forwardMessages(id, messageIds);\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { borderStyle } from '../Theme';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { searchChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusTitle: {\n        color: theme.palette.text.secondary\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', classes.headerStatusTitle, {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nconst styles = theme => ({\n    dayMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, date, i18n } = this.props;\n\n        return (\n            <div className={classNames('day-meta', classes.dayMeta)}>\n                {new Date(date * 1000).toLocaleDateString([i18n.language], { day: 'numeric', month: 'long' })}\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport { withTranslation } from 'react-i18next';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport './Meta.css';\n\nconst styles = theme => ({\n    meta: {\n        color: theme.palette.text.secondary,\n        '& a': {\n            color: theme.palette.text.secondary\n        }\n    }\n});\n\nclass Meta extends React.Component {\n    render() {\n        const { classes, date, editDate, onDateClick, t, views } = this.props;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', classes.meta)}>\n                <span>&nbsp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MessageStatus.css';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    messageStatusFailed: {\n        background: theme.palette.error.light\n    },\n    messageStatusPending: {\n        background: theme.palette.primary.light\n    },\n    messageStatusSucceeded: {\n        background: theme.palette.primary.light\n    }\n});\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            prevChatId: props.chatId,\n            prevMessageId: props.messageId,\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                sendingState: props.sendingState\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.removeListener('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { sendingState, unread } = this.state;\n\n        let stateClassName = classNames('message-status-succeeded', classes.messageStatusSucceeded);\n        if (sendingState) {\n            stateClassName =\n                sendingState['@type'] === 'messageSendingStateFailed'\n                    ? classNames('message-status-failed', classes.messageStatusFailed)\n                    : classNames('message-status-pending', classes.messageStatusPending);\n        }\n\n        return unread && <i className={classNames('message-status-icon', stateClassName)} />;\n    }\n}\n\nMessageStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object\n};\n\nexport default withStyles(styles, { withTheme: true })(MessageStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { accentStyles } from '../../Theme';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    instantViewButton: {\n        width: 260,\n        marginTop: 12\n    }\n});\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage = () => {\n        const { classes, chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { description, instant_view_version, site_name, title } = web_page;\n\n        const webPageContent = (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                onClick={this.handleInstantViewClick}\n                className={classNames(classes.instantViewButton, 'web-page-button')}>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getWebPage()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { getEmojiMatches, getText, getMedia, getUnread, getWebPage, openMedia } from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    messageSelectTick: {\n        background: theme.palette.primary.main,\n        color: 'white'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, emojiMatches } = this.state;\n\n        if (nextProps.theme !== theme) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    render() {\n        // console.log('[m] render', this.props.messageId);\n        const { t, classes, chatId, messageId, showUnreadSeparator, showTitle } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n\n        let tile = null;\n        if (showTitle) {\n            tile = sender_user_id ? (\n                <UserTile userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const messageClassName = classNames('message', classes.message, {\n            'message-selected': selected,\n            [classes.messageSelected]: selected,\n            [classes.messageHighlighted]: highlighted && !selected,\n            'message-short': !showTitle\n        });\n\n        const meta = <Meta date={date} editDate={edit_date} views={views} onDateClick={this.handleDateClick} />;\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <div className='message-left-padding'>\n                        {/*<div className='message-left-padding-wrapper'>*/}\n                        {/**/}\n                        {/*</div>*/}\n                        <CheckMarkIcon className={classNames('message-select-tick', classes.messageSelectTick)} />\n                        {this.unread && (\n                            <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                        )}\n                    </div>\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {showTitle && !forward_info && (\n                                <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            {showTitle && meta}\n                        </div>\n                        {Boolean(reply_to_message_id) && (\n                            <Reply chatId={chatId} messageId={reply_to_message_id} onClick={this.handleReplyClick} />\n                        )}\n                        {media}\n                        <div\n                            className={classNames('message-text', {\n                                'message-text-1emoji': emojiMatches === 1,\n                                'message-text-2emoji': emojiMatches === 2,\n                                'message-text-3emoji': emojiMatches === 3\n                            })}>\n                            {text}\n                        </div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                    {!showTitle && meta}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AppStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    pinnedMessageContentSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('pinned-message-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div\n                                className={classNames(\n                                    'pinned-message-content-subtitle',\n                                    classes.pinnedMessageContentSubtitle\n                                )}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M419.967,162.004c-21.894-21.728-52.521-37.201-86.24-43.57c-4.069-0.766-7.993,1.908-8.762,5.978 c-0.769,4.07,1.907,7.993,5.978,8.762C395.154,145.302,440,189.928,440,241.696c0,42.636-30.352,80.956-79.21,100.006 c-2.494,0.973-4.281,3.201-4.688,5.847c-2.964,19.25,1.082,38.841,10.969,55.161c-21.588-5.766-39.074-22.333-45.875-44.782 c-1.028-3.394-4.302-5.61-7.827-5.297c-5.297,0.46-10.636,0.694-15.869,0.694c-46.659,0-90.456-18-117.157-48.151 c-2.745-3.101-7.485-3.389-10.587-0.643c-3.101,2.746-3.389,7.486-0.643,10.587c29.504,33.316,77.5,53.207,128.387,53.207 c3.738,0,7.524-0.11,11.313-0.328c5.437,14.023,14.79,26.508,26.772,35.604c14.075,10.685,30.851,16.332,48.512,16.332 c3.027,0,5.757-1.82,6.922-4.614s0.536-6.014-1.594-8.165c-13.83-13.961-20.775-33.575-19.005-53.169 c24.22-10.168,44.756-25.233,59.594-43.76C446.36,289.816,455,266.12,455,241.696C455,212.727,442.559,184.425,419.967,162.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M315,161.696c0-34.155-16.61-66.156-46.771-90.109c-29.653-23.55-68.978-36.519-110.729-36.519 c-41.754,0-81.08,12.969-110.731,36.519C16.609,95.54,0,127.541,0,161.696c0,24.424,8.64,48.121,24.985,68.529 c14.838,18.526,35.375,33.592,59.594,43.76c1.77,19.594-5.175,39.208-19.005,53.169c-2.13,2.15-2.759,5.371-1.594,8.165 s3.896,4.614,6.922,4.614c17.662,0,34.437-5.647,48.512-16.332c11.982-9.095,21.335-21.581,26.772-35.604 c3.789,0.218,7.575,0.328,11.313,0.328c41.752,0,81.077-12.969,110.729-36.519C298.39,227.852,315,195.851,315,161.696z  M141.631,272.63c-3.536-0.309-6.799,1.902-7.827,5.297c-6.801,22.448-24.286,39.015-45.875,44.781 c9.887-16.319,13.933-35.911,10.969-55.161c-0.407-2.646-2.194-4.874-4.688-5.847C45.352,242.652,15,204.332,15,161.696 c0-61.552,63.925-111.628,142.5-111.628c78.575,0,142.5,50.076,142.5,111.628c0,61.552-63.925,111.628-142.5,111.628 C152.267,273.324,146.928,273.091,141.631,272.63z\"\n}));\n\nvar SvgBubbles = function SvgBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 455 455\",\n    style: {\n      enableBackground: \"new 0 0 455 455\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Bubbles.5b7ac6f8.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo' />\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nconst styles = theme => ({\n    scrollDownButton: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderColor: theme.palette.divider\n    }\n});\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { classes, onClick } = this.props;\n\n        return (\n            <div className={classNames('scroll-down-button', classes.scrollDownButton)}>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ScrollDownButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    },\n    serviceMessageContent: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, theme } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className={classNames('service-message-content', classes.serviceMessageContent)}>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className={classNames('stickers-hint', classes.borderColor, classes.root)}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { getChat } from '../../Actions/Chat';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, isAuthorizationReady } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: 0,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('MessagesList.shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('MessagesList.shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('MessagesList.shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('MessagesList.shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('MessagesList.shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('MessagesList.shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('MessagesList.shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('MessagesList.shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('MessagesList.shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('MessagesList.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateDialogsReady = async update => {\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper.props.children[1];\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= 0) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        let separatorMessageId = 0;\n        this.replace(separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        AppStore.setDragging(true);\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('MessagesList.render scrollDown', this.props.chatId, this.props.messageId, scrollDownVisible, history.length);\n\n        const isChannel = isChannelChat(chatId);\n\n        let prevShowDate = false;\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const date = new Date(x.date * 1000);\n                  const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n                  let showDate = false;\n                  if (\n                      i === 0 ||\n                      date.getFullYear() !== prevDate.getFullYear() ||\n                      date.getMonth() !== prevDate.getMonth() ||\n                      date.getDate() !== prevDate.getDate()\n                  ) {\n                      showDate = true;\n                  }\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle =\n                          prevShowDate ||\n                          isChannel ||\n                          i === 0 ||\n                          (prevMessage &&\n                              (isServiceMessage(prevMessage) ||\n                                  x.sender_user_id !== prevMessage.sender_user_id ||\n                                  x.date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S));\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  }\n\n                  // return m;\n\n                  return (\n                      <div key={`chat_id=${x.chat_id} message_id=${x.id}`}>\n                          {showDate && <DayMeta date={x.date} />}\n                          {m}\n                      </div>\n                  );\n              });\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <Placeholder />\n                {scrollDownVisible && <ScrollDownButton onClick={this.handleScrollDownClick} />}\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker } = this.state;\n\n        return stickerSet !== nextState.stickerSet || sticker !== nextState.sticker;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, sticker } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = AppStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport dateFormat from 'dateformat';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from 'react-iframe-resizer-super';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport dateFormat from 'dateformat';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Document from '../../Message/Media/Document';\nimport RichText from './RichText';\nimport ArrowDownwardIcon from '@material-ui/core/SvgIcon/SvgIcon';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.object\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getViewerFile, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Caption from '../InstantView/Blocks/Caption';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport SafeLink from '../Additional/SafeLink';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            let [width, height, file] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, thumbnailWidth, thumbnailHeight, thumbnail, isPlaying } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            src={src}\n                            onClick={this.handleContentClick}\n                            controls\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPlay'\n                                });\n                            }}\n                            onCanPlay={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    player.volume = PlayerStore.volume;\n                                }\n                            }}\n                            onPause={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPause'\n                                });\n                            }}\n                            onEnded={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerEnded'\n                                });\n                            }}\n                            onVolumeChange={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    TdLibController.clientUpdate({\n                                        '@type': 'clientUpdateMediaVolume',\n                                        volume: player.volume\n                                    });\n                                }\n                            }}\n                        />\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            className='media-viewer-content-video-player'\n                            src={src}\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        />\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { getViewerFile, saveMedia } from '../../Utils/File';\nimport { setInstantViewViewerContent } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nclass InstantViewMediaViewer extends React.Component {\n    state = {\n        index: -1,\n        hasPreviousMedia: false,\n        hasNextMedia: false,\n        blocks: []\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        this.setState({\n            index: nextIndex,\n            hasPreviousMedia: this.hasPreviousMedia(nextIndex, blocks),\n            hasNextMedia: this.hasNextMedia(nextIndex, blocks)\n        });\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        this.setState({\n            index: nextIndex,\n            hasPreviousMedia: this.hasPreviousMedia(nextIndex, blocks),\n            hasNextMedia: this.hasNextMedia(nextIndex, blocks)\n        });\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { media }\n        });\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\n\nconst styles = theme => ({\n    instantViewer: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    leftButton: {\n        color: theme.palette.text.secondary,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        bottom: 0\n    },\n    closeButton: {\n        color: theme.palette.text.secondary,\n        position: 'fixed',\n        top: 0,\n        right: 0\n    }\n});\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        InstantViewStore.removeListener('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.removeListener(\n            'clientUpdateInstantViewViewerContent',\n            this.onClientUpdateInstantViewViewerContent\n        );\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(instantView.url)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                element.scrollTop = Math.min(element.scrollTop, 100);\n                setTimeout(() => {\n                    element.scrollTo({\n                        top: 0,\n                        behavior: 'smooth'\n                    });\n                }, 50);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', instantView.url, instantView.url === prevProps.instantView.url);\n\n        const hash = new URL(instantView.url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.instantView.url !== instantView.url) {\n                if (instantView.url.indexOf('#') === instantView.url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { media } = this.state;\n\n            if (media) {\n                setInstantViewViewerContent(null);\n                return;\n            }\n\n            this.handleClose();\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { classes, instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div\n                    ref={this.instantViewerRef}\n                    className={classNames('instant-viewer', classes.instantViewer)}\n                    onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className={classes.leftButton}\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            {hasScroll ? (\n                                <ExpandLessIcon className='media-viewer-button-icon' fontSize='large' />\n                            ) : (\n                                <ChevronLeftIcon className='media-viewer-button-icon' fontSize='large' />\n                            )}\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className={classes.closeButton} onClick={this.handleClose}>\n                            <CloseIcon className='media-viewer-button-icon' fontSize='large' />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getAnimationData, getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const { file } = this.state;\n        const animationData = await getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            file,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        console.log('img.render ', src);\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.removeListener('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo\n        } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}