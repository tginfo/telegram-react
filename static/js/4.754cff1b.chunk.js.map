{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Utils/Animatior.js","Assets/Icons/Smile.js","Notifications.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Assets/Icons/Share.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Player/Steaming/MP4/MP4Source.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","this","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","Animator","duration","options","start","stopped","requestAnimationFrame","startAnim","timeStamp","end","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","n","sin","PI","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","OnlineStatus","onUpdateUserStatus","update","userId","user_id","user","UserStore","get","online","isUserOnline","getChatUserId","chatId","on","off","size","borderSize","style","width","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","onUpdateChatPhoto","chat_id","photo","store","FileStore","getStore","loadChatContent","onUpdateChatTitle","handleSelect","event","onSelect","stopPropagation","handleLoad","nextProps","nextState","ChatStore","showOnline","showSavedMessages","small","dialog","big","t","isDeletedPrivateChat","classNames","onClick","pointer","DeletedAccount","fontSize","isMeChat","chat","letters","getChatLetters","src","getSrc","tileLoaded","typeId","getChatTypeId","tileColor","abs","onLoad","draggable","alt","isPrivateChat","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","text","a","navigator","clipboard","writeText","console","error","copyOld","element","successful","document","createElement","contentEditable","readOnly","value","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","Promise","map","catch","e","chats","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","handleClose","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","key","aria-label","color","Close","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerHTML","innerText","handleSearchKeyDown","keyCode","preventDefault","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","externalSubtitle","Chat","handleClick","onTileSelect","showStatus","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","ListItemIcon","ListItemText","primary","Typography","variant","noWrap","ListItemSecondaryAction","Switch","onChange","checked","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","clientUpdate","handleOpenChat","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","list","scrollHeight","offsetHeight","theme","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","users","member","items","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","getFormattedText","List","alignItems","wordWrap","Divider","inset","toUpperCase","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","messageId","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList","MenuItem","SharedDocument","contextMenu","left","handleOpenContextMenu","clientX","clientY","handleCloseContextMenu","onContextMenu","getMedia","openMedia","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","Boolean","SpeedDialIcon","icon","openIcon","SharedMediaBase","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","sender_user_id","from_message_id","offset","finally","messages","total_count","incompleteResults","setItems","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLink","url","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","webPage","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedLinks","web_page","close","SharedMedia","handleChange","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","thumbnailSize","getSize","minithumbnail","miniSrc","data","thumbSrc","isBlurredThumbnail","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedPhotos","SharedVideo","onClientUpdateVideoThumbnailBlob","video","file","isBlurred","THUMBNAIL_BLURRED_SIZE_90","getDurationString","SharedVideos","SharedVoiceNote","i18n","voiceNote","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","SharedVoiceNotes","voice_note","ChatInfo","onClientUpdatePageWidth","isSmallWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","currentChatId","classes","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","reset","chatList","filters","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","window","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","r","Status","onUpdateMessageSend","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","last_message","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","getViewInfoTitle","is_channel","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","hidden","isLastPinned","ApplicationStore","isSelected","getChatId","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","target","isVisibleItem","overScanCount","renderIdsList","nextContext","addEventListener","item","removeEventListener","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","remove","saveInternal","load","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","nativeEvent","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","onClientUpdateCacheLoaded","cachedFilters","setSelection","onWindowResize","onUpdateChatFilters","FilterStore","chat_filter_id","handleMainClick","onClientUpdateChatList","handleFilterClick","handleWheel","deltaY","scrollLeft","filterRef","filtersRef","filterSelectionRef","throttle","transition","scroll","main","scrollWidth","filterSelection","transitionStyle","cssText","animator","clamp","offsetWidth","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","max","CHAT_SLICE_LIMIT","replace","offsetOrder","offsetChatId","log","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","blur","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","KeyboardHandler","searchOrLoadContent","KeyboardManager","add","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getBoldItalicEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","offsetLeft","offsetTop","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevScrollTop","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","scrollRef","marginTop","Lottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","json","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","anim","isPaused","goToAndPlay","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","animationData","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","secondary","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","root","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","LocalizationStore","language_packs","tabIndex","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","container","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChatIds","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","disabled","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","startTime","onClientUpdateRecordStop","clearTimeout","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","media","audio","performer","altKey","ctrlKey","metaKey","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","cancelled","recorder","stream","getAudioTracks","track","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","oncanplay","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","isCreator","clientUpdateType","persist","getLeaveChatTitle","handleUnpin","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","unpinMessage","canUnpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","code","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","zIndex","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","floor","getTimeString","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","playlist","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","reverse","HeaderPlayer","player","videoRef","paused","fadeOutVolume","pausedForRecord","fadeInVolume","onClientUpdateMediaSeek","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","play","onClientUpdateMediaBlob","video_note","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","mime_type","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","currentVolume","volumeInterval","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","getMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","file_id","synchronous","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","Share","FrameCheck","RemoveCheck","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","instantView","newWindow","opener","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Document","Animation","Video","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","forward_info","isOutgoing","inlineMeta","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","getMessageStyle","withBubble","onMouseOver","onMouseOut","onAnimationEnd","isMetaBubble","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","getSticker","mouseDownStickerId","handleMouseUp","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","STICKER_SET","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","IVContext","createContext","withIV","IVComponent","Consumer","iv","RichText","richText","String","email_address","emailAddress","texts","getRichText","object","Anchor","Caption","credit","hasText","isEmptyText","hastCredit","block","need_autoplay","pageBlock","IV_PHOTO_DISPLAY_SIZE","AuthorDate","author","publishDate","hasAuthor","hasDate","rel","dateTime","toISOString","dateFormat","Blockquote","pageBlocks","getPageBlock","Cover","cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","getElementById","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevUrl","prevHtml","authorPhoto","ErrorHandler","errorInfo","componentStack","footer","Kicker","kicker","data-before","page_blocks","Paragraph","IV_PHOTO_SIZE","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","articles","publish_date","Subheader","subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","thumbnailSrc","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","cells","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","Location","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","ChatLink","needAutoplay","isLooped","openInstantViewMedia","fileCancel","is_downloading_active","remote","is_uploading_active","cancelUploadFile","download","updateAnimationBlob","setInstantViewViewerContent","updateAudioBlob","updateVideoBlob","is_open","posterPhoto","poster_photo","is_full_width","allow_scrolling","author_photo","zoom","is_bordered","is_striped","is_header","is_looped","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","blocks","dir","MediaCaption","InstantViewMediaViewerContent","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","videoWidth","videoHeight","scale","handleContentClick","onVolumeChange","prevMedia","getViewerThumbnail","getViewerMinithumbnail","minithumbnailWidth","minithumbnailHeight","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","Provider","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MP4Source","getBufferAsync","handleSourceBufferUpdateEnd","sourceBuffer","mediaSource","mp4file","updating","logSourceBufferRanges","pendingUpdates","buffer","sampleNum","isLast","LOG","releaseUsedSamples","appendBuffer","readyState","sourceBuffers","endOfStream","nextBufferStart","ready","bufferedTime","beforeMoovBufferSize","moovBufferSize","bufferSize","seekBufferSize","currentBufferSize","nbSamples","expectedSize","expected_size","seeking","init","videoDuration","MediaSource","mp4File","MP4Box","createFile","onMoovStart","onError","onReady","isFragmented","timescale","fragment_duration","tracks","addSourceBuffer","initSegs","initializeSegmentation","onupdateend","onSegment","is_last","nb_samples","timestampOffset","loadNextBuffer","codec","trackType","isTypeSupported","setSegmentOptions","buffered","seekInfo","seek","ranges","hasRange","nextBuffer","fileStart","byteLength","flush","MediaViewerContent","updateAnimationData","isLottieMessage","getAnimationData","getMediaFile","supportsStreaming","getMediaPreviewFile","getURL","handleSeeking","prevTimeout","handleSeeked","handlePlayerSeeked","timeUpdate","handleProgress","handleWaiting","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","onSeeking","onSeeked","onWaiting","onProgress","poster","fr","readAsArrayBuffer","filePart","getArrayBuffer","getMediaMiniPreview","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","inHistory","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.754cff1b.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startAnim);\n    };\n\n    startAnim = timeStamp => {\n        const { start, duration } = this;\n\n        this.start = timeStamp;\n        this.end = start + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, start, options } = this;\n\n        if (now - start > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - start, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { loaded } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size, t } = this.props;\n        const { loaded } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat, t);\n        const src = getSrc(photo ? photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description.text}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} chatList={chatList} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, filters, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.filter(x => Boolean(x)).forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n\n        this.setSelection();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            this.setSelection(false);\n        });\n    };\n\n    onWindowResize = event => {\n        this.setSelection(false);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            this.setSelection(false);\n        });\n    };\n\n    setSelection(transition = true) {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main;\n                left += isSmallWidth ? 0 : 7;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                left += main.scrollWidth;\n            }\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter;\n                    left += isSmallWidth ? 0 : 7;\n                    break;\n                } else {\n                    left += filter.scrollWidth;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left}px; width: ${item.scrollWidth - 14}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    }\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        // console.log('[cm] filters.render', filters);\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                <div\n                    ref={r => this.filterRef.set('chatListMain', r)}\n                    className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                    onMouseDown={this.handleMainClick}\n                    title={isSmallWidth ? t('FilterAllChats') : null}>\n                    {isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}\n                </div>\n                {filters.map(x => (\n                    <div\n                        key={x.id}\n                        ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                        className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                        onMouseDown={e => this.handleFilterClick(e, x.id)}\n                        title={isSmallWidth ? x.title : null}>\n                        {isSmallWidth ? getFirstLetter(x.title) : x.title}\n                    </div>))}\n                <div ref={this.filterSelectionRef} className='filter-selection'/>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList } = this.state;\n        if (!chats) return;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats, chatList } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[p] GETCHATS start', offsetOrder, offsetChatId);\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[p] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext();\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                if (modalManager.modals.length > 0) {\n                    return;\n                }\n\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                if (modalManager.modals.length > 0) {\n                    return;\n                }\n\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getBoldItalicEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getBoldItalicEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider'/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_2.json')\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.json()));\n\n            this.setState(\n                {\n                    data\n                }\n            );\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.anim) return;\n        if (!lottie.anim.isPaused) return;\n\n        lottie.anim.goToAndPlay(0);\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        <React.Suspense fallback={null}>\n                            <Lottie\n                                ref={this.lottieRef}\n                                options={{\n                                    autoplay: true,\n                                    loop: false,\n                                    animationData: data,\n                                    renderer: 'svg',\n                                    rendererSettings: {\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                        clearCanvas: false,\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                    }\n                                }}\n                                onClick={this.handleAnimationClick}\n                            />\n                        </React.Suspense>\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        // ChatStore.on('updateChatChatList', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        // ChatStore.off('updateChatChatList', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        // console.log('[f] filters', filters);\n\n        const filtersMap = new Map();\n        for (let i = 0; i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        // console.log('[f] recommended', recommendedFilters);\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.json()));\n\n            this.setState(\n                {\n                    data\n                }\n            );\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.anim) return;\n        if (!lottie.anim.isPaused) return;\n\n        lottie.anim.goToAndPlay(0);\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        // console.log('[f] filters.render');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            <React.Suspense fallback={null}>\n                                <Lottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        autoplay: true,\n                                        loop: false,\n                                        animationData: data,\n                                        renderer: 'svg',\n                                        rendererSettings: {\n                                            preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                            clearCanvas: false,\n                                            progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                            hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                        }\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.saveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, metaKey, repeat, shiftKey } = event;\n\n        switch (keyCode) {\n            case 13: {\n                // enter+cmd or enter+ctrl\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, metaKey, repeat, shiftKey } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[keydown] input.handleKeyDown', key, keyCode, altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey);\n\n        switch (keyCode) {\n            // ctrl+alt+0 fix\n            case 48: {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n\n                break;\n            }\n            case 13: {\n                // enter+cmd or enter+ctrl\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 27: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 38: {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        console.log('[recorder] stop', this.recorder, cancelled);\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        console.log('[recorder] handleRecord', this.recorder);\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            console.log('[recorder] stream start', this.recorder);\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            console.log('[recorder] stream ready', this.recorder);\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n            console.log('[recorder] onstart', this.recorder);\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            console.log('[recorder] onstop', this.recorder, cancelled);\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        console.log('[recorder] start', this.recorder);\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isCreator, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        let request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        if (isSupergroup(chatId) && isCreator(chatId)) {\n            request = {\n                '@type': 'setChatMemberStatus',\n                chat_id: chatId,\n                user_id: UserStore.getMyId(),\n                status: {\n                    '@type': 'chatMemberStatusCreator',\n                    is_member: false\n                }\n            };\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message),\n            mimeType: this.getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, value } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) return;\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = message => {\n        const { chat_id, id } = message;\n\n        const { src: prevSrc } = this.state;\n\n        const src = this.getMediaSrc(message);\n        const mimeType = this.getMediaMimeType(message);\n        const playing = Boolean(src);\n        const { playlist } = PlayerStore;\n\n        this.setState(\n            {\n                message,\n                playlist,\n                playing,\n                src,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                }\n                player.currentTime = this.startTime;\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        chatId: chat_id,\n                        messageId: id\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(PlayerStore.message);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaMimeType = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    return audio.mime_type;\n                }\n\n                if (voice_note) {\n                    return voice_note.mime_type;\n                }\n\n                if (video_note) {\n                    return 'video/mp4';\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        return web_page.audio.mime_type;\n                    }\n\n                    if (web_page.voice_note) {\n                        return web_page.voice_note.mime_type;\n                    }\n\n                    if (web_page.video_note) {\n                        return 'video/mp4';\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src, mimeType } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                >\n                    {source}\n                </video>\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = async event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { audio } = content;\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { id: file_id } = file;\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id,\n            priority: 1,\n            offset: 10 * 1024,\n            limit: 1024,\n            synchronous: true\n        });\n\n        const blob = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id,\n            offset: 10 * 1024,\n            count: 1024\n        });\n\n        console.log('[file] result', result, blob);\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\nimport { getEntities, getFormattedText, getText, getTwitterInstagramEntities } from '../../../Utils/Message';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply, replyMessage, forwardMessages\n} from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n        // console.log('[p] messagesList.render');\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Caption from '../InstantView/Blocks/Caption';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport SafeLink from '../Additional/SafeLink';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            let [width, height, file, mimeType] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getViewerMinithumbnail(media);\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, src, mimeType, thumbnailWidth, thumbnailHeight, thumbnail, minithumbnail, isPlaying } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            controls\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPlay'\n                                });\n                            }}\n                            onCanPlay={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    player.volume = PlayerStore.volume;\n                                }\n                            }}\n                            onPause={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPause'\n                                });\n                            }}\n                            onEnded={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerEnded'\n                                });\n                            }}\n                            onVolumeChange={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    TdLibController.clientUpdate({\n                                        '@type': 'clientUpdateMediaVolume',\n                                        volume: player.volume\n                                    });\n                                }\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            if (modalManager.modals.length > 0) {\n                return;\n            }\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', url, url === prevProps.url);\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            if (modalManager.modals.length > 0) {\n                return;\n            }\n\n            const { media } = this.state;\n\n            if (media) {\n                setInstantViewViewerContent(null);\n                return;\n            }\n\n            this.handleClose();\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { classes, instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport MP4Box from 'mp4box';\nimport { LOG, logSourceBufferRanges } from '../Utils/Common';\n\nexport default class MP4Source {\n    constructor(video, getBufferAsync) {\n        this.mp4file = null;\n        this.nextBufferStart = 0;\n        this.mediaSource = null;\n        this.ready = false;\n        this.bufferedTime = 40;\n\n        this.beforeMoovBufferSize = 32 * 1024;\n        this.moovBufferSize = 512 * 1024;\n        this.bufferSize = 1024 * 1024;\n        this.seekBufferSize = 1024 * 1024;\n\n        this.currentBufferSize = this.beforeMoovBufferSize;\n        this.nbSamples = 10;\n        this.video = video;\n        this.getBufferAsync = getBufferAsync;\n        this.expectedSize = this.video.video.expected_size;\n\n        this.seeking = false;\n        this.loading = false;\n        this.url = null;\n\n        this.init(video.duration);\n    }\n\n    init(videoDuration) {\n        const mediaSource = new MediaSource();\n        mediaSource.addEventListener('sourceopen', async () => {\n            LOG('[MediaSource] sourceopen start', this.mediaSource, this);\n\n            if (this.mediaSource.sourceBuffers.length > 0) return;\n\n            const mp4File = MP4Box.createFile();\n            mp4File.onMoovStart = () => {\n                LOG('[MP4Box] onMoovStart');\n                this.currentBufferSize = this.moovBufferSize;\n            };\n            mp4File.onError = error => {\n                LOG('[MP4Box] onError', error);\n            };\n            mp4File.onReady = info => {\n                LOG('[MP4Box] onReady', info);\n                this.ready = true;\n                this.currentBufferSize = this.bufferSize;\n                const { isFragmented, timescale, fragment_duration, duration } = info;\n\n                if (!fragment_duration && !duration) {\n                    this.mediaSource.duration = videoDuration;\n                    this.bufferedTime = videoDuration;\n                } else {\n                    this.mediaSource.duration = isFragmented\n                        ? fragment_duration / timescale\n                        : duration / timescale;\n                }\n\n                for (let i = 0; i < info.tracks.length; i++) {\n                    this.addSourceBuffer(mp4File, this.mediaSource, info.tracks[i]);\n                }\n\n                const initSegs = mp4File.initializeSegmentation();\n                LOG('[MP4Box] initializeSegmentation', initSegs);\n\n                for (let i = 0; i < initSegs.length; i++) {\n                    const { user: sourceBuffer } = initSegs[i];\n                    sourceBuffer.onupdateend = () => {\n                        sourceBuffer.initSegs = true;\n                        sourceBuffer.onupdateend = this.handleSourceBufferUpdateEnd;\n                    };\n                    sourceBuffer.appendBuffer(initSegs[i].buffer);\n                }\n\n                LOG('[MP4Box] start fragmentation');\n                mp4File.start();\n            };\n            mp4File.onSegment = (id, sourceBuffer, buffer, sampleNum, is_last) => {\n                const isLast = (sampleNum + this.nbSamples) > sourceBuffer.nb_samples;\n\n                LOG('[MP4Box] onSegment', id, buffer, `${sampleNum}/${sourceBuffer.nb_samples}`, isLast, sourceBuffer.timestampOffset);\n\n                if (mediaSource.readyState !== 'open') {\n                    return;\n                }\n\n                sourceBuffer.pendingUpdates.push({ id, buffer, sampleNum, isLast });\n                if (sourceBuffer.initSegs && !sourceBuffer.updating) {\n                    this.handleSourceBufferUpdateEnd({ target: sourceBuffer, mediaSource: this.mediaSource });\n                }\n            };\n\n            this.nextBufferStart = 0;\n            this.mp4file = mp4File;\n            LOG('[MediaSource] sourceopen end', this, this.mp4file);\n\n            this.loadNextBuffer();\n        });\n        mediaSource.addEventListener('sourceended', () => {\n            LOG('[MediaSource] sourceended', mediaSource.readyState);\n        });\n        mediaSource.addEventListener('sourceclose', () => {\n            LOG('[MediaSource] sourceclose', mediaSource.readyState);\n        });\n\n        this.mediaSource = mediaSource;\n    }\n\n    addSourceBuffer(file, source, track) {\n        if (!track) return null;\n\n        const { id, codec, type: trackType, nb_samples } = track;\n        const type = `video/mp4; codecs=\"${codec}\"`;\n        if (!MediaSource.isTypeSupported(type)) {\n            LOG('[addSourceBuffer] not supported', type);\n            return null;\n        }\n        // if (trackType !== 'video') {\n        //     LOG('[addSourceBuffer] skip', trackType);\n        //     return null;\n        // }\n\n        const sourceBuffer = source.addSourceBuffer(type);\n        sourceBuffer.id = id;\n        sourceBuffer.pendingUpdates = [];\n        sourceBuffer.nb_samples = nb_samples;\n        file.setSegmentOptions(id, sourceBuffer, { nbSamples: this.nbSamples });\n        LOG('[addSourceBuffer] add', id, codec, trackType);\n\n        return sourceBuffer;\n    }\n\n    handleSourceBufferUpdateEnd = event => {\n        const { target: sourceBuffer } = event;\n        const { mediaSource, mp4file } = this;\n\n        if (!sourceBuffer) return;\n        if (sourceBuffer.updating) return;\n\n        logSourceBufferRanges(sourceBuffer, 0, 0);\n\n        const { pendingUpdates } = sourceBuffer;\n        if (!pendingUpdates) return;\n        if (!pendingUpdates.length) {\n            if (sourceBuffer.isLast && mediaSource.readyState === 'open') {\n                LOG('[SourceBuffer] updateend endOfStream start', sourceBuffer.id);\n                if (Array.from(mediaSource.sourceBuffers).every(x => !x.pendingUpdates.length && !x.updating)) {\n                    mediaSource.endOfStream();\n                    LOG('[SourceBuffer] updateend endOfStream stop', sourceBuffer.id);\n                }\n            }\n            return;\n        }\n\n        const update = pendingUpdates.shift();\n        if (!update) return;\n\n        const { id, buffer, sampleNum, isLast } = update;\n\n        if (sampleNum) {\n            LOG('[SourceBuffer] updateend releaseUsedSamples', id, sampleNum);\n            mp4file.releaseUsedSamples(id, sampleNum);\n        }\n\n        LOG('[SourceBuffer] updateend end', sourceBuffer.id, sourceBuffer.pendingUpdates.length);\n        sourceBuffer.isLast = isLast;\n        sourceBuffer.appendBuffer(buffer);\n    };\n\n    getURL() {\n        this.url = this.url || URL.createObjectURL(this.mediaSource);\n\n        return this.url;\n    }\n\n    seek(currentTime, buffered) {\n        const seekInfo = this.mp4file.seek(currentTime, true);\n        this.nextBufferStart = seekInfo.offset;\n\n        let loadNextBuffer = buffered.length === 0;\n        for (let i = 0; i < buffered.length; i++) {\n            const start = buffered.start(i);\n            const end = buffered.end(i);\n\n            if (start <= currentTime && currentTime + this.bufferedTime > end) {\n                loadNextBuffer = true;\n                break;\n            }\n        }\n\n        LOG('[player] onSeeked', loadNextBuffer, currentTime, seekInfo, this.nextBufferStart);\n        if (loadNextBuffer) {\n            this.loadNextBuffer(true);\n        }\n    }\n\n    timeUpdate(currentTime, duration, buffered) {\n        const ranges = [];\n        for (let i = 0; i < buffered.length; i++) {\n            ranges.push({ start: buffered.start(i), end: buffered.end(i)})\n        }\n\n        let loadNextBuffer = buffered.length === 0;\n        let hasRange = false;\n        for (let i = 0; i < buffered.length; i++) {\n            const start = buffered.start(i);\n            const end = buffered.end(i);\n\n            if (start <= currentTime && currentTime <= end) {\n                hasRange = true;\n                if (end < duration && currentTime + this.bufferedTime > end) {\n                    loadNextBuffer = true;\n                    break;\n                }\n            }\n        }\n\n        if (!hasRange) {\n            loadNextBuffer = true;\n        }\n\n        LOG('[player] timeUpdate', loadNextBuffer, currentTime, duration, JSON.stringify(ranges));\n        if (loadNextBuffer) {\n            this.loadNextBuffer();\n        }\n    }\n\n    async loadNextBuffer(seek = false) {\n        const { nextBufferStart, loading, currentBufferSize, mp4file } = this;\n        LOG('[player] loadNextBuffer', nextBufferStart === undefined, loading, !mp4file);\n        if (!mp4file) return;\n        if (nextBufferStart === undefined) return;\n        if (loading) return;\n\n        this.loading = true;\n        let bufferSize = seek ? this.seekBufferSize : this.bufferSize;\n        if (nextBufferStart + bufferSize > this.expectedSize) {\n            bufferSize = this.expectedSize - nextBufferStart;\n        }\n        const nextBuffer = await this.getBufferAsync(nextBufferStart, nextBufferStart + bufferSize);\n        nextBuffer.fileStart = nextBufferStart;\n\n        LOG('[player] loadNextBuffer start', nextBuffer.byteLength, nextBufferStart);\n        if (nextBuffer.byteLength) {\n            this.nextBufferStart = mp4file.appendBuffer(nextBuffer);\n        } else {\n            this.nextBufferStart = undefined;\n        }\n        LOG('[player] loadNextBuffer stop', nextBuffer.byteLength, nextBufferStart, this.nextBufferStart);\n\n        if (nextBuffer.byteLength < currentBufferSize) {\n            LOG('[player] loadNextBuffer flush');\n            this.mp4file.flush();\n        }\n\n        this.loading = false;\n        if (!this.ready) {\n            LOG('[player] loadNextBuffer next');\n            this.loadNextBuffer();\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport MP4Source from '../Player/Steaming/MP4/MP4Source';\nimport { getAnimationData, getMediaFile, getMediaMiniPreview, getMediaPreviewFile, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\nimport { LOG } from '../Player/Steaming/Utils/Common';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.updateAnimationData();\n    }\n\n    static async getArrayBuffer(blob) {\n        return new Promise((resolve) => {\n            let fr = new FileReader();\n            fr.onload = () => {\n                resolve(fr.result);\n            };\n            fr.readAsArrayBuffer(blob);\n        })\n    }\n\n    static async getBufferAsync(fileId, start, end) {\n        const offset = start;\n        const limit = end - start;\n\n        // console.log('[GET_BUFFER] downloadFile');\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: 1,\n            offset,\n            limit,\n            synchronous: true\n        });\n\n        // console.log('[GET_BUFFER] readFilePart');\n\n        const filePart = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id: fileId,\n            offset,\n            count: limit\n        });\n\n        // console.log('[GET_BUFFER] getArrayBuffer');\n\n        const buffer = await MediaViewerContent.getArrayBuffer(filePart.data);\n\n        // console.log('[GET_BUFFER] result', result, buffer);\n\n        return buffer;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            if (thumbnail){\n                thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n            }\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getMediaMiniPreview(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    source = new MP4Source(video, (start, end) => MediaViewerContent.getBufferAsync(file.id, start, end));\n                    src = source.getURL();\n                }\n            }\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { src } = this.state;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const { file } = this.state;\n        const animationData = await getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    source = new MP4Source(video, (start, end) => MediaViewerContent.getBufferAsync(file.id, start, end));\n\n                    src = source.getURL();\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n    handleSeeking = () => {\n        const video = this.videoRef.current;\n\n        const { currentTime, buffered } = video;\n        LOG('[player] onSeeking', currentTime);\n\n        if (this.prevTimeout) {\n            clearTimeout(this.prevTimeout);\n            this.prevTimeout = null;\n        }\n\n        this.prevTimeout = setTimeout(() => {\n            LOG('[player] onSeeking timeout', currentTime === video.currentTime, currentTime, video.currentTime);\n            if (currentTime === video.currentTime) {\n                this.handleSeeked(currentTime, buffered);\n            }\n        }, 150);\n    }\n\n    handleSeeked = (time, buffered) => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        source.seek(time, buffered);\n    }\n\n    handlePlayerSeeked = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n\n        const { currentTime, buffered } = video;\n        LOG('[player] onPlayerSeeked', currentTime);\n\n        source.seek(currentTime, buffered);\n    };\n\n    handleTimeUpdate = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n        const { currentTime, duration, buffered } = video;\n        source.timeUpdate(currentTime, duration, buffered);\n    };\n\n    handleProgress = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n        const { currentTime, duration, buffered } = video;\n        source.timeUpdate(currentTime, duration, buffered);\n    };\n\n    handleWaiting = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n        const { currentTime, buffered } = video;\n        source.seek(currentTime, buffered);\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            // animationData,\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            minithumbnail,\n            thumbnail,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                        onSeeking={this.handleSeeking}\n                        onSeeked={this.handlePlayerSeeked}\n                        onTimeUpdate={this.handleTimeUpdate}\n                        onWaiting={this.handleWaiting}\n                        onProgress={this.handleProgress}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && !supportsStreaming &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            // const defaultOptions = {\n            //     loop: true,\n            //     autoplay: true,\n            //     //path: src,\n            //     animationData: animationData,\n            //     rendererSettings: {\n            //         preserveAspectRatio: 'xMidYMid slice'\n            //     }\n            // };\n            // const { speed } = this.state;\n            //\n            // content = null;\n            // content = (\n            //     <Lottie\n            //         ref={this.lottieRef}\n            //         speed={speed}\n            //         options={defaultOptions}\n            //         height='auto'\n            //         width={400}\n            //         isStopped={false}\n            //         isPaused={false}\n            //     />\n            // );\n        } else {\n            content = (\n                <>\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                    {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                </>\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {/*{ supportsStreaming && <a style={{ left: 0, top: 0, position: 'absolute' }} onClick={this.handleClick}>Load Buffer</a>}*/}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            if (modalManager.modals.length > 0) {\n                return;\n            }\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.keyCode === 27) {\n            if (modalManager.modals.length > 0) {\n                return;\n            }\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            isSmallWidth\n        } = this.state;\n\n        // console.log('[p] mainPage.render');\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}