{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Utils/Archive.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Done.js","Assets/Icons/Send.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Assets/Icons/Share.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Player/Steaming/MP4/MP4Source.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","this","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","OnlineStatus","onUpdateUserStatus","update","userId","user_id","user","UserStore","get","online","isUserOnline","getChatUserId","chatId","on","off","size","borderSize","style","width","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","onUpdateChatPhoto","chat_id","photo","store","FileStore","getStore","loadChatContent","onUpdateChatTitle","handleSelect","event","onSelect","stopPropagation","handleLoad","nextProps","nextState","ChatStore","showOnline","showSavedMessages","small","dialog","big","t","isDeletedPrivateChat","classNames","onClick","pointer","DeletedAccount","fontSize","isMeChat","chat","letters","getChatLetters","src","getSrc","tileLoaded","typeId","getChatTypeId","tileColor","Math","abs","onLoad","draggable","alt","isPrivateChat","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","text","a","navigator","clipboard","writeText","console","error","copyOld","element","successful","document","createElement","contentEditable","readOnly","value","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","Promise","map","x","catch","e","chats","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","handleClose","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","key","aria-label","color","Close","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","forEach","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerHTML","innerText","handleSearchKeyDown","keyCode","preventDefault","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","externalSubtitle","Chat","handleClick","onTileSelect","showStatus","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","ListItemIcon","ListItemText","primary","Typography","variant","noWrap","ListItemSecondaryAction","Switch","onChange","checked","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","ApplicationStore","getChatId","setChatId","handleBlock","isUserBlocked","isGroup","isGroupChat","isBlocked","isMember","isChatMember","isChannel","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","inset","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","clientUpdate","handleOpenChat","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","list","scrollHeight","offsetHeight","theme","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","users","member","items","sort","y","getUserStatusOrder","alignItems","wordWrap","Divider","toUpperCase","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","messageId","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList","MenuItem","SharedDocument","contextMenu","left","handleOpenContextMenu","clientX","clientY","handleCloseContextMenu","onContextMenu","getMedia","openMedia","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","Boolean","SpeedDialIcon","icon","openIcon","SharedMediaBase","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","sender_user_id","from_message_id","offset","finally","messages","total_count","incompleteResults","setItems","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","func","bool","SharedDocuments","SharedLink","url","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","webPage","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedLinks","web_page","close","SharedMedia","handleChange","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","thumbnailSize","getSize","minithumbnail","miniSrc","data","thumbSrc","isBlurredThumbnail","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedPhotos","SharedVideo","onClientUpdateVideoThumbnailBlob","video","duration","isBlurred","THUMBNAIL_BLURRED_SIZE_90","getDurationString","SharedVideos","SharedVoiceNote","i18n","voiceNote","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","file","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","SharedVoiceNotes","voice_note","ChatInfo","onClientUpdatePageWidth","isSmallWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","classes","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","is_pinned","unread_count","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","r","Status","onUpdateMessageSend","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","last_message","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canSetChatChatList","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","setChatChatList","getViewInfoTitle","is_channel","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","hidden","isLastPinned","isSelected","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","sin","contentWidth","cos","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","window","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","target","isVisibleItem","overScanCount","renderIdsList","nextContext","addEventListener","item","removeEventListener","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","min","scrollTo","DialogListItem","DialogsList","onClientUpdateLeaveChat","hiddenChats","onUpdateAuthorizationState","authorizationState","authorization_state","loadFirstSlice","isAuthorizationReady","initDB","saveCache","onSaveCache","onUpdateChatOrder","order","currentIndex","newChatIds","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","max","CHAT_SLICE_LIMIT","replace","offsetOrder","offsetChatId","log","shift","replaceChats","appendChats","newChats","Array","from","oldChatIds","Archive","innerListRef","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","blur","concatSearchResults","results","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","KeyboardHandler","searchOrLoadContent","KeyboardManager","add","remove","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","onClientUpdate","addTdLibListener","removeTdLibListener","saveChatsInternal","load","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","options","setDataUrl","OutputTypingManager","updateChatChatList","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","deleteDataUrl","EventEmitter","MainMenuButton","handleMenuOpen","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","nativeEvent","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","SidebarPage","Slide","direction","mountOnEnter","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","Edit","Data","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getBoldItalicEntities","formattedText","getFormattedText","TextField","defaultValue","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","main","palette","FormControl","FormLabel","focused","RadioGroup","FormControlLabel","control","Radio","root","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","LocalizationStore","language_packs","tabIndex","inputProps","secondary","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","role","undefined","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","throttle","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","location","reload","Download","getArchiveTitle","archive","chatList","chatsOrder","NewChannel","defaultPhoto","defaultPhotoFile","titleRef","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","divRef","offsetLeft","offsetTop","offsetWidth","div","cssText","getUserShortName","AddParticipants","newArray","selectedItems","focusedItem","array","newMap","newFocusedItem","isDeleting","wrapPanel","wrapPanelRef","prevHeight","prevOffsetHeight","prevMap","itemsRef","prevCSSText","prevScrollTop","currentHeight","collapsed","requestAnimationFrame","scrollIntoView","animateItems","selectedItemsMap","publicItems","publicChats","handleSearchClose","handleBackspace","lastItem","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","transition","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","container","paper","onEnter","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","onUpdateChatChatList","prevShowArchive","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChatIds","saveChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","disabled","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","now","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onDone","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","onEdit","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","media","audio","performer","altKey","ctrlKey","metaKey","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Suspense","fallback","Done","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","onTimeout","startTime","setMilliseconds","getMilliseconds","setInterval","toFixed","CircularProgress","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","isCreator","clientUpdateType","persist","getLeaveChatTitle","handleUnpin","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","unpinMessage","canUnpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","code","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","zIndex","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","floor","getTimeString","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","playlist","onClientUpdateMediaPlaylist","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","player","videoRef","onClientUpdateMediaSeek","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","prevSrc","getMediaSrc","mimeType","getMediaMimeType","playing","paused","play","onClientUpdateMediaBlob","video_note","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","mime_type","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","stream","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","getMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","file_id","synchronous","isPinned","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","Share","FrameCheck","RemoveCheck","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","instantView","newWindow","opener","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Audio","Document","Animation","Video","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","shook","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","forward_info","isOutgoing","inlineMeta","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","getMessageStyle","withBubble","onMouseOver","onMouseOut","onAnimationEnd","isMetaBubble","Placeholder","onClientUpdateCacheLoaded","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","getSticker","mouseDownStickerId","handleMouseUp","dict","foundStickers","stickerIndex","data-sticker-id","autoplay","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","STICKER_SET","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","time","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","IVContext","createContext","withIV","IVComponent","Consumer","iv","RichText","richText","String","email_address","emailAddress","texts","getRichText","object","Anchor","Caption","credit","hasText","isEmptyText","hastCredit","block","need_autoplay","pageBlock","IV_PHOTO_DISPLAY_SIZE","AuthorDate","author","publishDate","hasAuthor","hasDate","rel","dateTime","toISOString","dateFormat","Blockquote","pageBlocks","getPageBlock","Cover","cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","getElementById","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevUrl","prevHtml","authorPhoto","ErrorHandler","errorInfo","componentStack","footer","Kicker","kicker","data-before","page_blocks","Paragraph","IV_PHOTO_SIZE","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","articles","publish_date","Subheader","subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","thumbnailSrc","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","cells","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","Location","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","ChatLink","needAutoplay","isLooped","openInstantViewMedia","fileCancel","is_downloading_active","remote","is_uploading_active","cancelUploadFile","download","updateAnimationBlob","setInstantViewViewerContent","updateAudioBlob","updateVideoBlob","is_open","posterPhoto","poster_photo","is_full_width","allow_scrolling","author_photo","zoom","is_bordered","is_striped","is_header","is_looped","every","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","blocks","dir","MediaCaption","InstantViewMediaViewerContent","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","videoWidth","videoHeight","scale","handleContentClick","onVolumeChange","loop","prevMedia","getViewerThumbnail","getViewerMinithumbnail","minithumbnailWidth","minithumbnailHeight","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","hash","scrollToHash","handleBack","hasScroll","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","Provider","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MP4Source","getBufferAsync","handleSourceBufferUpdateEnd","sourceBuffer","mediaSource","mp4file","updating","logSourceBufferRanges","pendingUpdates","buffer","sampleNum","isLast","LOG","releaseUsedSamples","appendBuffer","readyState","sourceBuffers","endOfStream","nextBufferStart","ready","bufferedTime","beforeMoovBufferSize","moovBufferSize","bufferSize","seekBufferSize","currentBufferSize","nbSamples","seeking","init","videoDuration","MediaSource","mp4File","MP4Box","createFile","onMoovStart","onError","onReady","isFragmented","timescale","fragment_duration","tracks","addSourceBuffer","initSegs","initializeSegmentation","onupdateend","start","onSegment","is_last","nb_samples","timestampOffset","loadNextBuffer","track","codec","trackType","isTypeSupported","setSegmentOptions","buffered","seekInfo","seek","end","ranges","hasRange","nextBuffer","fileStart","byteLength","flush","MediaViewerContent","updateAnimationData","isLottieMessage","getAnimationData","animationData","getMediaFile","supportsStreaming","getMediaPreviewFile","getURL","handleSeeking","prevTimeout","handleSeeked","handlePlayerSeeked","timeUpdate","handleProgress","handleWaiting","lottieRef","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","onSeeking","onSeeked","onWaiting","onProgress","poster","fr","readAsArrayBuffer","filePart","getArrayBuffer","getMediaMiniPreview","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","inHistory","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/5.77c55a7a.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { loaded } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size, t } = this.props;\n        const { loaded } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat, t);\n        const src = getSrc(photo ? photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './MoreListItem.css';\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className='list-item' onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className='list-item' onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className='list-item' onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport { copy } from '../../Utils/Text';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatIsPinned', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_pinned, unread_count } = chat;\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {is_pinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canSetChatChatList,\n    isChatArchived,\n    isChatMuted,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    setChatChatList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const chat = ChatStore.get(chatId);\n            const { is_pinned } = chat;\n            const canTogglePin = (await this.canPinChats(chatId)) || is_pinned;\n            const canToggleArchive = canSetChatChatList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: isChatArchived(chatId) ? { '@type': 'chatListArchive' } : { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && chat.is_pinned ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const { is_pinned } = chat;\n\n        if (!is_pinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, !is_pinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canSetChatChatList(chatId)) return;\n\n        setChatChatList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        const { is_pinned } = chat;\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {is_pinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={className}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { isChatMember } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (isAuthorizationReady(authorizationState)) {\n            await FileStore.initDB(() => this.onLoadNext(true));\n        }\n    };\n\n    saveCache = () => {\n        const { onSaveCache } = this.props;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatOrder = update => {\n        const { type } = this.props;\n        const { chats } = this.state;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id, order } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        const { chat_list } = chat;\n        if (chat_list && chat_list['@type'] !== type) {\n            return;\n        }\n\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0' && isChatMember(chat.id)) {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[update] GETCHATS start');\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': type },\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[update] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady' });\n            }\n        });\n        // TdLibController.send({\n        //     '@type': 'getChats',\n        //     offset_chat_id: offsetChatId,\n        //     offset_order: offsetOrder,\n        //     limit: CHAT_SLICE_LIMIT + 100\n        // });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { type, open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (type === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n            // <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n            //     {showArchive && offset === 0 && <Archive title={archiveTitle} />}\n            //     {dialogs}\n            // </div>\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                if (modalManager.modals.length > 0) {\n                    return;\n                }\n\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveChatsInternal = debounce(this.saveChatsInternal, 2000);\n    }\n\n    reset = () => {\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async loadCache() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.chat_list) {\n                    ChatStore.updateChatChatList(x.id, x.chat_list);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async saveChats(chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n\n        this.saveChatsInternal();\n    }\n\n    async saveChatsInternal() {\n        // console.log('[cm] saveChatsInternal', this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.filter(x => Boolean(x)).forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                if (modalManager.modals.length > 0) {\n                    return;\n                }\n\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getBoldItalicEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getBoldItalicEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities })\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ChatStore from '../Stores/ChatStore';\nimport { orderCompare } from './Common';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                if (chat.order !== '0') chats.push(chat);\n                chatsOrder.push({ order: chat.order, id: chat.id, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(b.order, a.order));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        return {\n            left: this.divRef.current.offsetLeft,\n            top: this.divRef.current.offsetTop,\n            width: this.divRef.current.offsetWidth,\n            height: this.divRef.current.offsetHeight\n        }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('user-chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='user-chip-delete'>\n                    <CloseIcon className='user-chip-delete-icon'/>\n                </div>\n                <div className='user-chip-name'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            const currentHeight = wrapPanel.scrollHeight;\n            const currentOffsetHeight = wrapPanel.offsetHeight;\n\n            const expanded = currentHeight > prevHeight;\n            const collapsed = currentHeight < prevHeight;\n            // console.log('[wrap]', prevHeight, prevOffsetHeight, currentHeight, currentOffsetHeight, expanded, collapsed);\n\n            const maxHeight = 123;\n            if (expanded) {\n                if (prevHeight < maxHeight) {\n                    // console.log('[wrap] animate expand', Math.min(prevHeight, maxHeight), Math.min(currentHeight, maxHeight));\n                    wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                    // console.log('[wrap] animate expand', wrapPanel.style.cssText);\n                    requestAnimationFrame(() => {\n                        wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                        setTimeout(() => {\n                            // console.log('[wrap] scrollIntoView');\n                            this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                        }, 250);\n                        // console.log('[wrap] animate expand', wrapPanel.style.cssText);\n                    });\n                } else {\n                    // console.log('[wrap] expand', prevHeight, maxHeight);\n                    wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                    //wrapPanel.scrollTop = wrapPanel.scrollHeight;\n                    // console.log('[wrap] scrollIntoView');\n                    this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n                    // console.log('[wrap] expand', wrapPanel.style.cssText);\n                }\n            } else if (collapsed) {\n                if (currentHeight < maxHeight) {\n                    // console.log('[wrap] animate collapse', Math.min(prevHeight, maxHeight), Math.min(currentHeight, maxHeight));\n                    wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                    // console.log('[wrap] animate collapse', wrapPanel.style.cssText);\n                    requestAnimationFrame(() => {\n                        wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                        // console.log('[wrap] animate collapse', wrapPanel.style.cssText);\n                    });\n                } else {\n                    // console.log('[wrap] collapse', prevHeight, maxHeight, wrapPanel.scrollTop, prevScrollTop);\n                    wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                    wrapPanel.scrollTop = prevScrollTop;\n                    // console.log('[wrap] collapse', wrapPanel.style.cssText, wrapPanel.scrollTop);\n                }\n            } else {\n                if (isDeleting) {\n                    wrapPanel.style.cssText = prevCSSText;\n                    wrapPanel.scrollTop = prevScrollTop;\n                } else {\n                    // console.log('[wrap] scrollIntoView');\n                    this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n                }\n            }\n\n            this.animateItems(prevMap);\n        });\n    };\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n\n        ChatStore.on('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n\n        ChatStore.off('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.loadCache()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        CacheStore.saveChats(mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { chat_id } = update;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archive = ChatStore.chatList.get('chatListArchive');\n        if (archive && archive.has(chat_id)) {\n            this.setState({ archiveTitle: getArchiveTitle() });\n        }\n    };\n\n    onUpdateChatChatList = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <DialogsList\n                                type='chatListMain'\n                                ref={this.dialogListRef}\n                                cacheItems={mainCacheItems}\n                                items={mainItems}\n                                showArchive={showArchive}\n                                archiveTitle={archiveTitle}\n                                open={true}\n                                onSaveCache={this.handleSaveCache}\n                            />\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, metaKey, repeat, shiftKey } = event;\n\n        switch (keyCode) {\n            case 13: {\n                // enter+cmd or enter+ctrl\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const { chatId, newDraft, files, replyToMessageId, editMessageId, openEditMedia, openEditUrl, sendFile } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n    }\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, metaKey, repeat, shiftKey } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[keydown] input.handleKeyDown', key, keyCode, altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey);\n\n        switch (keyCode) {\n            // ctrl+alt+0 fix\n            case 48: {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n\n                break;\n            }\n            case 13: {\n                // enter+cmd or enter+ctrl\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 27: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 38: {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n\n        return (\n            <div className='inputbox-background'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className='inputbox-send-button'\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {editMessageId ? <DoneIcon /> : <SendIcon />}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isCreator, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        let request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        if (isSupergroup(chatId) && isCreator(chatId)) {\n            request = {\n                '@type': 'setChatMemberStatus',\n                chat_id: chatId,\n                user_id: UserStore.getMyId(),\n                status: {\n                    '@type': 'chatMemberStatusCreator',\n                    is_member: false\n                }\n            };\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message),\n            mimeType: this.getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, value } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) return;\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = message => {\n        const { chat_id, id } = message;\n\n        const { src: prevSrc } = this.state;\n\n        const src = this.getMediaSrc(message);\n        const mimeType = this.getMediaMimeType(message);\n        const playing = Boolean(src);\n        const { playlist } = PlayerStore;\n\n        this.setState(\n            {\n                message,\n                playlist,\n                playing,\n                src,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                }\n                player.currentTime = this.startTime;\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        chatId: chat_id,\n                        messageId: id\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(PlayerStore.message);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaMimeType = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    return audio.mime_type;\n                }\n\n                if (voice_note) {\n                    return voice_note.mime_type;\n                }\n\n                if (video_note) {\n                    return 'video/mp4';\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        return web_page.audio.mime_type;\n                    }\n\n                    if (web_page.voice_note) {\n                        return web_page.voice_note.mime_type;\n                    }\n\n                    if (web_page.video_note) {\n                        return 'video/mp4';\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src, mimeType } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                >\n                    {source}\n                </video>\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = async event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { audio } = content;\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { id: file_id } = file;\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id,\n            priority: 1,\n            offset: 10 * 1024,\n            limit: 1024,\n            synchronous: true\n        });\n\n        const blob = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id,\n            offset: 10 * 1024,\n            count: 1024\n        });\n\n        console.log('[file] result', result, blob);\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId);\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { description, instant_view_version, site_name, title } = web_page;\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply, replyMessage, forwardMessages\n} from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'message-wrapper-shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker } = this.state;\n\n        return stickerSet !== nextState.stickerSet || sticker !== nextState.sticker;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className='sticker-set-dialog'\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <Typography variant='h6' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className='sticker-set-dialog-share-button' />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.photo);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Caption from '../InstantView/Blocks/Caption';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport SafeLink from '../Additional/SafeLink';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            let [width, height, file, mimeType] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getViewerMinithumbnail(media);\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, src, mimeType, thumbnailWidth, thumbnailHeight, thumbnail, minithumbnail, isPlaying } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            controls\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPlay'\n                                });\n                            }}\n                            onCanPlay={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    player.volume = PlayerStore.volume;\n                                }\n                            }}\n                            onPause={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPause'\n                                });\n                            }}\n                            onEnded={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerEnded'\n                                });\n                            }}\n                            onVolumeChange={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    TdLibController.clientUpdate({\n                                        '@type': 'clientUpdateMediaVolume',\n                                        volume: player.volume\n                                    });\n                                }\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            if (modalManager.modals.length > 0) {\n                return;\n            }\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(instantView.url)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', instantView.url, instantView.url === prevProps.instantView.url);\n\n        const hash = new URL(instantView.url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.instantView.url !== instantView.url) {\n                if (instantView.url.indexOf('#') === instantView.url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            if (modalManager.modals.length > 0) {\n                return;\n            }\n\n            const { media } = this.state;\n\n            if (media) {\n                setInstantViewViewerContent(null);\n                return;\n            }\n\n            this.handleClose();\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { classes, instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport MP4Box from 'mp4box';\nimport { LOG, logSourceBufferRanges } from '../Utils/Common';\n\nexport default class MP4Source {\n    constructor(video, getBufferAsync) {\n        this.mp4file = null;\n        this.nextBufferStart = 0;\n        this.mediaSource = null;\n        this.ready = false;\n        this.bufferedTime = 40;\n\n        this.beforeMoovBufferSize = 32 * 1024;\n        this.moovBufferSize = 512 * 1024;\n        this.bufferSize = 1024 * 1024;\n        this.seekBufferSize = 1024 * 1024;\n\n        this.currentBufferSize = this.beforeMoovBufferSize;\n        this.nbSamples = 10;\n        this.video = video;\n        this.getBufferAsync = getBufferAsync;\n\n        this.seeking = false;\n        this.loading = false;\n        this.url = null;\n\n        this.init(video.duration);\n    }\n\n    init(videoDuration) {\n        const mediaSource = new MediaSource();\n        mediaSource.addEventListener('sourceopen', async () => {\n            LOG('[MediaSource] sourceopen start', this.mediaSource, this);\n\n            if (this.mediaSource.sourceBuffers.length > 0) return;\n\n            const mp4File = MP4Box.createFile();\n            mp4File.onMoovStart = () => {\n                LOG('[MP4Box] onMoovStart');\n                this.currentBufferSize = this.moovBufferSize;\n            };\n            mp4File.onError = error => {\n                LOG('[MP4Box] onError', error);\n            };\n            mp4File.onReady = info => {\n                LOG('[MP4Box] onReady', info);\n                this.ready = true;\n                this.currentBufferSize = this.bufferSize;\n                const { isFragmented, timescale, fragment_duration, duration } = info;\n\n                if (!fragment_duration && !duration) {\n                    this.mediaSource.duration = videoDuration;\n                    this.bufferedTime = videoDuration;\n                } else {\n                    this.mediaSource.duration = isFragmented\n                        ? fragment_duration / timescale\n                        : duration / timescale;\n                }\n\n                for (let i = 0; i < info.tracks.length; i++) {\n                    this.addSourceBuffer(mp4File, this.mediaSource, info.tracks[i]);\n                }\n\n                const initSegs = mp4File.initializeSegmentation();\n                LOG('[MP4Box] initializeSegmentation', initSegs);\n\n                for (let i = 0; i < initSegs.length; i++) {\n                    const { user: sourceBuffer } = initSegs[i];\n                    sourceBuffer.onupdateend = () => {\n                        sourceBuffer.initSegs = true;\n                        sourceBuffer.onupdateend = this.handleSourceBufferUpdateEnd;\n                    };\n                    sourceBuffer.appendBuffer(initSegs[i].buffer);\n                }\n\n                LOG('[MP4Box] start fragmentation');\n                mp4File.start();\n            };\n            mp4File.onSegment = (id, sourceBuffer, buffer, sampleNum, is_last) => {\n                const isLast = (sampleNum + this.nbSamples) > sourceBuffer.nb_samples;\n\n                LOG('[MP4Box] onSegment', id, buffer, `${sampleNum}/${sourceBuffer.nb_samples}`, isLast, sourceBuffer.timestampOffset);\n\n                if (mediaSource.readyState !== 'open') {\n                    return;\n                }\n\n                sourceBuffer.pendingUpdates.push({ id, buffer, sampleNum, isLast });\n                if (sourceBuffer.initSegs && !sourceBuffer.updating) {\n                    this.handleSourceBufferUpdateEnd({ target: sourceBuffer, mediaSource: this.mediaSource });\n                }\n            };\n\n            this.nextBufferStart = 0;\n            this.mp4file = mp4File;\n            LOG('[MediaSource] sourceopen end', this, this.mp4file);\n\n            this.loadNextBuffer();\n        });\n        mediaSource.addEventListener('sourceended', () => {\n            LOG('[MediaSource] sourceended', mediaSource.readyState);\n        });\n        mediaSource.addEventListener('sourceclose', () => {\n            LOG('[MediaSource] sourceclose', mediaSource.readyState);\n        });\n\n        this.mediaSource = mediaSource;\n    }\n\n    addSourceBuffer(file, source, track) {\n        if (!track) return null;\n\n        const { id, codec, type: trackType, nb_samples } = track;\n        const type = `video/mp4; codecs=\"${codec}\"`;\n        if (!MediaSource.isTypeSupported(type)) {\n            LOG('[addSourceBuffer] not supported', type);\n            return null;\n        }\n        // if (trackType !== 'video') {\n        //     LOG('[addSourceBuffer] skip', trackType);\n        //     return null;\n        // }\n\n        const sourceBuffer = source.addSourceBuffer(type);\n        sourceBuffer.id = id;\n        sourceBuffer.pendingUpdates = [];\n        sourceBuffer.nb_samples = nb_samples;\n        file.setSegmentOptions(id, sourceBuffer, { nbSamples: this.nbSamples });\n        LOG('[addSourceBuffer] add', id, codec, trackType);\n\n        return sourceBuffer;\n    }\n\n    handleSourceBufferUpdateEnd = event => {\n        const { target: sourceBuffer } = event;\n        const { mediaSource, mp4file } = this;\n\n        if (!sourceBuffer) return;\n        if (sourceBuffer.updating) return;\n\n        logSourceBufferRanges(sourceBuffer, 0, 0);\n\n        const { pendingUpdates } = sourceBuffer;\n        if (!pendingUpdates) return;\n        if (!pendingUpdates.length) {\n            if (sourceBuffer.isLast && mediaSource.readyState === 'open') {\n                LOG('[SourceBuffer] updateend endOfStream start', sourceBuffer.id);\n                if (Array.from(mediaSource.sourceBuffers).every(x => !x.pendingUpdates.length && !x.updating)) {\n                    mediaSource.endOfStream();\n                    LOG('[SourceBuffer] updateend endOfStream stop', sourceBuffer.id);\n                }\n            }\n            return;\n        }\n\n        const update = pendingUpdates.shift();\n        if (!update) return;\n\n        const { id, buffer, sampleNum, isLast } = update;\n\n        if (sampleNum) {\n            LOG('[SourceBuffer] updateend releaseUsedSamples', id, sampleNum);\n            mp4file.releaseUsedSamples(id, sampleNum);\n        }\n\n        LOG('[SourceBuffer] updateend end', sourceBuffer.id, sourceBuffer.pendingUpdates.length);\n        sourceBuffer.isLast = isLast;\n        sourceBuffer.appendBuffer(buffer);\n    };\n\n    getURL() {\n        this.url = this.url || URL.createObjectURL(this.mediaSource);\n\n        return this.url;\n    }\n\n    seek(currentTime, buffered) {\n        const seekInfo = this.mp4file.seek(currentTime, true);\n        this.nextBufferStart = seekInfo.offset;\n\n        let loadNextBuffer = buffered.length === 0;\n        for (let i = 0; i < buffered.length; i++) {\n            const start = buffered.start(i);\n            const end = buffered.end(i);\n\n            if (start <= currentTime && currentTime + this.bufferedTime > end) {\n                loadNextBuffer = true;\n                break;\n            }\n        }\n\n        LOG('[player] onSeeked', loadNextBuffer, currentTime, seekInfo, this.nextBufferStart);\n        if (loadNextBuffer) {\n            this.loadNextBuffer(true);\n        }\n    }\n\n    timeUpdate(currentTime, duration, buffered) {\n        const ranges = [];\n        for (let i = 0; i < buffered.length; i++) {\n            ranges.push({ start: buffered.start(i), end: buffered.end(i)})\n        }\n\n        let loadNextBuffer = buffered.length === 0;\n        let hasRange = false;\n        for (let i = 0; i < buffered.length; i++) {\n            const start = buffered.start(i);\n            const end = buffered.end(i);\n\n            if (start <= currentTime && currentTime <= end) {\n                hasRange = true;\n                if (end < duration && currentTime + this.bufferedTime > end) {\n                    loadNextBuffer = true;\n                    break;\n                }\n            }\n        }\n\n        if (!hasRange) {\n            loadNextBuffer = true;\n        }\n\n        LOG('[player] timeUpdate', loadNextBuffer, currentTime, duration, JSON.stringify(ranges));\n        if (loadNextBuffer) {\n            this.loadNextBuffer();\n        }\n    }\n\n    async loadNextBuffer(seek = false) {\n        const { nextBufferStart, loading, currentBufferSize, mp4file } = this;\n        LOG('[player] loadNextBuffer', nextBufferStart === undefined, loading, !mp4file);\n        if (!mp4file) return;\n        if (nextBufferStart === undefined) return;\n        if (loading) return;\n\n        this.loading = true;\n        const bufferSize = seek ? this.seekBufferSize : this.bufferSize;\n        const nextBuffer = await this.getBufferAsync(nextBufferStart, nextBufferStart + bufferSize);\n        nextBuffer.fileStart = nextBufferStart;\n\n        LOG('[player] loadNextBuffer start', nextBuffer.byteLength, nextBufferStart);\n        if (nextBuffer.byteLength) {\n            this.nextBufferStart = mp4file.appendBuffer(nextBuffer);\n        } else {\n            this.nextBufferStart = undefined;\n        }\n        LOG('[player] loadNextBuffer stop', nextBuffer.byteLength, nextBufferStart, this.nextBufferStart);\n\n        if (nextBuffer.byteLength < currentBufferSize) {\n            LOG('[player] loadNextBuffer flush');\n            this.mp4file.flush();\n        }\n\n        this.loading = false;\n        if (!this.ready) {\n            LOG('[player] loadNextBuffer next');\n            this.loadNextBuffer();\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport MP4Source from '../Player/Steaming/MP4/MP4Source';\nimport { getAnimationData, getMediaFile, getMediaMiniPreview, getMediaPreviewFile, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\nimport { LOG } from '../Player/Steaming/Utils/Common';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.updateAnimationData();\n    }\n\n    static async getArrayBuffer(blob) {\n        return new Promise((resolve) => {\n            let fr = new FileReader();\n            fr.onload = () => {\n                resolve(fr.result);\n            };\n            fr.readAsArrayBuffer(blob);\n        })\n    }\n\n    static async getBufferAsync(fileId, start, end) {\n        const offset = start;\n        const limit = end - start;\n\n        // console.log('[GET_BUFFER] downloadFile');\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: 1,\n            offset,\n            limit,\n            synchronous: true\n        });\n\n        // console.log('[GET_BUFFER] readFilePart');\n\n        const filePart = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id: fileId,\n            offset,\n            count: limit\n        });\n\n        // console.log('[GET_BUFFER] getArrayBuffer');\n\n        const buffer = await MediaViewerContent.getArrayBuffer(filePart.data);\n\n        // console.log('[GET_BUFFER] result', result, buffer);\n\n        return buffer;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getMediaMiniPreview(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    source = new MP4Source(video, (start, end) => MediaViewerContent.getBufferAsync(file.id, start, end));\n                    src = source.getURL();\n                }\n            }\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { src } = this.state;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const { file } = this.state;\n        const animationData = await getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    source = new MP4Source(video, (start, end) => MediaViewerContent.getBufferAsync(file.id, start, end));\n\n                    src = source.getURL();\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n    handleSeeking = () => {\n        const video = this.videoRef.current;\n\n        const { currentTime, buffered } = video;\n        LOG('[player] onSeeking', currentTime);\n\n        if (this.prevTimeout) {\n            clearTimeout(this.prevTimeout);\n            this.prevTimeout = null;\n        }\n\n        this.prevTimeout = setTimeout(() => {\n            LOG('[player] onSeeking timeout', currentTime === video.currentTime, currentTime, video.currentTime);\n            if (currentTime === video.currentTime) {\n                this.handleSeeked(currentTime, buffered);\n            }\n        }, 150);\n    }\n\n    handleSeeked = (time, buffered) => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        source.seek(time, buffered);\n    }\n\n    handlePlayerSeeked = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n\n        const { currentTime, buffered } = video;\n        LOG('[player] onPlayerSeeked', currentTime);\n\n        source.seek(currentTime, buffered);\n    };\n\n    handleTimeUpdate = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n        const { currentTime, duration, buffered } = video;\n        source.timeUpdate(currentTime, duration, buffered);\n    };\n\n    handleProgress = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n        const { currentTime, duration, buffered } = video;\n        source.timeUpdate(currentTime, duration, buffered);\n    };\n\n    handleWaiting = () => {\n        const { source, supportsStreaming } = this.state;\n        if (!supportsStreaming) return;\n        if (!source) return;\n\n        const video = this.videoRef.current;\n        const { currentTime, buffered } = video;\n        source.seek(currentTime, buffered);\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            // animationData,\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            minithumbnail,\n            thumbnail,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                        onSeeking={this.handleSeeking}\n                        onSeeked={this.handlePlayerSeeked}\n                        onTimeUpdate={this.handleTimeUpdate}\n                        onWaiting={this.handleWaiting}\n                        onProgress={this.handleProgress}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && !supportsStreaming &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            // const defaultOptions = {\n            //     loop: true,\n            //     autoplay: true,\n            //     //path: src,\n            //     animationData: animationData,\n            //     rendererSettings: {\n            //         preserveAspectRatio: 'xMidYMid slice'\n            //     }\n            // };\n            // const { speed } = this.state;\n            //\n            // content = null;\n            // content = (\n            //     <Lottie\n            //         ref={this.lottieRef}\n            //         speed={speed}\n            //         options={defaultOptions}\n            //         height='auto'\n            //         width={400}\n            //         isStopped={false}\n            //         isPaused={false}\n            //     />\n            // );\n        } else {\n            content = (\n                <>\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                    {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                </>\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {/*{ supportsStreaming && <a style={{ left: 0, top: 0, position: 'absolute' }} onClick={this.handleClick}>Load Buffer</a>}*/}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            if (modalManager.modals.length > 0) {\n                return;\n            }\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.keyCode === 27) {\n            if (modalManager.modals.length > 0) {\n                return;\n            }\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}