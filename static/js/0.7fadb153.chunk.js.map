{"version":3,"sources":["Components/Viewer/Lottie.js"],"names":["Lottie","this","props","options","eventListeners","loop","autoplay","animationData","rendererSettings","segments","container","el","renderer","Boolean","anim","lottie","loadAnimation","registerEvents","nextProps","nextState","nextContext","path","unregisterEvents","destroy","prevProps","prevState","snapshot","setSpeed","setDirection","currentRawFrame","currentFrame","speed","direction","play","forceFlag","playSegments","stop","isPaused","pause","forEach","eventName","callback","addEventListener","removeEventListener","width","height","ariaRole","ariaLabel","title","onMouseEnter","onComplete","onMouseOut","other","getSize","initial","lottieStyles","overflow","margin","outline","style","ref","c","role","aria-label","tabIndex","React","Component","defaultProps"],"mappings":"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","file":"static/js/0.7fadb153.chunk.js","sourcesContent":["/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport lottie from 'lottie-web/build/player/lottie_light.min';\r\nimport './Lottie.css';\r\n\r\nclass Lottie extends React.Component {\r\n    componentDidMount() {\r\n        const { options, eventListeners } = this.props;\r\n        // console.log('Lottie.componentDidMount', eventListeners, this.props);\r\n\r\n        const {\r\n            loop,\r\n            autoplay,\r\n            animationData,\r\n            //path,\r\n            rendererSettings,\r\n            segments\r\n        } = options;\r\n\r\n        this.options = {\r\n            container: this.el,\r\n            renderer: 'svg',\r\n            loop: Boolean(loop),\r\n            autoplay: Boolean(autoplay),\r\n            segments: Boolean(segments),\r\n            animationData,\r\n            //path,\r\n            rendererSettings\r\n        };\r\n\r\n        this.options = { ...this.options, ...options };\r\n\r\n        this.anim = lottie.loadAnimation(this.options);\r\n        this.registerEvents(eventListeners);\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        /* Recreate the animation handle if the data is changed */\r\n        if (\r\n            this.options.animationData !== nextProps.options.animationData ||\r\n            this.options.path !== nextProps.options.path\r\n        ) {\r\n            this.unregisterEvents(this.props.eventListeners);\r\n            this.destroy();\r\n            this.options = { ...this.options, ...nextProps.options };\r\n            this.anim = lottie.loadAnimation(this.options);\r\n            this.registerEvents(nextProps.eventListeners);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // console.log('Lottie.componentDidUpdate', this.props.eventListeners, this.props);\r\n        // if (this.props.isStopped) {\r\n        //     this.stop();\r\n        // } else if (this.props.segments) {\r\n        //     this.playSegments();\r\n        // } else {\r\n        //     this.play();\r\n        // }\r\n\r\n        //this.pause();\r\n        this.setSpeed();\r\n        this.setDirection();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // console.log('Lottie.componentWillUnmount', this.props.eventListeners, this.props);\r\n        this.unregisterEvents(this.props.eventListeners);\r\n        this.destroy();\r\n        this.options.animationData = null;\r\n        this.options.path = null;\r\n        this.anim = null;\r\n    }\r\n\r\n    getCurrentRawFrame() {\r\n        return this.anim.currentRawFrame;\r\n    }\r\n\r\n    getCurrentFrame() {\r\n        return this.anim.currentFrame;\r\n    }\r\n\r\n    setSpeed() {\r\n        this.anim.setSpeed(this.props.speed);\r\n    }\r\n\r\n    setDirection() {\r\n        this.anim.setDirection(this.props.direction);\r\n    }\r\n\r\n    play() {\r\n        this.anim.play();\r\n    }\r\n\r\n    playSegments(segments, forceFlag) {\r\n        this.anim.playSegments(segments, forceFlag);\r\n    }\r\n\r\n    stop() {\r\n        this.anim.stop();\r\n    }\r\n\r\n    pause() {\r\n        if (!this.anim.isPaused) {\r\n            this.anim.pause();\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    destroy() {\r\n        this.anim.destroy();\r\n    }\r\n\r\n    registerEvents(eventListeners) {\r\n        if (!this.anim) return;\r\n\r\n        if (!eventListeners) return;\r\n\r\n        eventListeners.forEach(({ eventName, callback }) => {\r\n            this.anim.addEventListener(eventName, callback);\r\n        });\r\n    }\r\n\r\n    unregisterEvents(eventListeners) {\r\n        if (!this.anim) return;\r\n\r\n        if (!eventListeners) return;\r\n\r\n        eventListeners.forEach(({ eventName, callback }) => {\r\n            this.anim.removeEventListener(eventName, callback);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            width,\r\n            height,\r\n            ariaRole,\r\n            ariaLabel,\r\n            title,\r\n            eventListeners,\r\n            onComplete,\r\n            onMouseEnter,\r\n            onMouseOut,\r\n            ...other\r\n        } = this.props;\r\n\r\n        const getSize = initial => {\r\n            let size;\r\n\r\n            if (typeof initial === 'number') {\r\n                size = `${initial}px`;\r\n            } else {\r\n                size = initial || '100%';\r\n            }\r\n\r\n            return size;\r\n        };\r\n\r\n        const lottieStyles = {\r\n            width: getSize(width),\r\n            height: getSize(height),\r\n            overflow: 'hidden',\r\n            margin: '0 auto',\r\n            outline: 'none',\r\n            ...this.props.style\r\n        };\r\n\r\n        return (\r\n            // Bug with eslint rules https://github.com/airbnb/javascript/issues/1374\r\n            // eslint-disable-next-line jsx-a11y/no-static-element-interactions\r\n            <div\r\n                ref={c => {\r\n                    this.el = c;\r\n                }}\r\n                style={lottieStyles}\r\n                title={title}\r\n                role={ariaRole}\r\n                aria-label={ariaLabel}\r\n                tabIndex='0'\r\n                {...other}\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseOut={onMouseOut}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nLottie.propTypes = {\r\n    eventListeners: PropTypes.arrayOf(PropTypes.object),\r\n    options: PropTypes.object.isRequired,\r\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    speed: PropTypes.number,\r\n    segments: PropTypes.arrayOf(PropTypes.number),\r\n    direction: PropTypes.number,\r\n    ariaRole: PropTypes.string,\r\n    ariaLabel: PropTypes.string,\r\n    title: PropTypes.string,\r\n    style: PropTypes.string\r\n};\r\n\r\nLottie.defaultProps = {\r\n    eventListeners: [],\r\n    speed: 1,\r\n    ariaRole: 'button',\r\n    ariaLabel: 'animation',\r\n    title: ''\r\n};\r\n\r\nexport default Lottie;\r\n"],"sourceRoot":""}