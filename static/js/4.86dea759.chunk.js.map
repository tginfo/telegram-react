{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Channel.js","Utils/Supergroup.js","Components/Additional/MentionLink.js","Utils/Message.js","Components/Message/Media/Call.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Venue.js","Utils/Media.js","Assets/Icons/Close.js","Stores/PlayerStore.js","Utils/User.js","Components/Viewer/FileProgress.js","Workers/BlobInflator.js","Workers/Helpers.js","Components/Message/Media/Sticker.js","Stores/StickerStore.js","Stores/BasicGroupStore.js","Components/Tile/UserTile.js","Components/Message/Media/Photo.js","Utils/Date.js","Components/Additional/SafeLink.js","Stores/InstantViewStore.js","Assets/Icons/Download.js","Components/Message/MessageAuthor.js","Components/Tile/User.js","Components/Message/Media/Animation.js","Assets/Icons/PlayArrow.js","Utils/Currency.js","Utils/ServiceMessage.js","Utils/Url.js","Components/Message/Media/Audio.js","Assets/Icons/Pause.js","Components/Tile/DocumentTile.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Location.js","Components/Message/Media/Video.js","Components/Message/Media/MediaStatus.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/DeletedAccount.js","Actions/Poll.js","Components/Tile/UserStatus.js","Stores/PollStore.js","Utils/Poll.js","Utils/Punycode.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VideoNote.js","Components/Message/Media/VoiceNote.js","Components/Tile/VoiceNoteTile.js","Assets/Icons/Smile.js","Components/Message/Media/FireworksControl.js","Assets/Icons/Check.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Tile/UserPlaceholder.js","Components/Popup/PollOptionResult.js","Components/Popup/PollOptionResults.js","Components/Popup/PollResultsDialog.js","Components/Message/Media/Poll.js","Assets/Icons/Document.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Workers/pako.worker.js","Notifications.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Actions/Chat.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/Archive.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Additional/KeyboardManager.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/Main.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Done.js","Assets/Icons/Send.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Assets/Icons/Share.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["useReadFile","store","reset","callbacks","db","urls","WeakMap","dataUrls","Map","items","blobItems","locationItems","downloads","uploads","onUpdate","update","a","onUpdateAuthorizationState","set","file","onUpdateFile","emit","onClientUpdate","addTdLibListener","TdLibController","on","removeTdLibListener","off","authorization_state","initDB","handleDownloads","handleUploads","arr","id","idb_key","local","has","is_downloading_completed","get","delete","getStore","forEach","item","handleAnimation","handleAudio","handleChat","handleDocument","handleGame","handleLocation","handleMessage","handlePageBlockMap","handlePhoto","handleSticker","handleVideo","handleVideoNote","handleVoiceNote","handleUser","console","error","remote","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","audio","photo","document","game","location","sticker","web_page","video","video_note","voice_note","venue","obj","chatId","chat_id","messageId","thumbnail","source","updateAnimationThumbnailBlob","THUMBNAIL_PRIORITY","updateAnimationBlob","album_cover_thumbnail","updateAudioThumbnailBlob","updateAudioBlob","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","pageBlockMap","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","i","sizes","length","photoSize","updatePhotoBlob","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","deleteLocalFile","fileId","getBlob","setBlob","blob","deleteBlob","setLocationFile","getDataUrl","setDataUrl","dataUrl","deleteDataUrl","getBlobUrl","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","callback","this","initiatingDB","push","openDB","catch","log","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","send","file_id","response","data","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","FileStore","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","PRELOAD_AUDIO_SIZE","cancelLoadAnimationContent","cancelGetRemoteFile","loadAnimationContent","PRELOAD_ANIMATION_SIZE","cancelLoadAnimationThumbnailContent","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","PRELOAD_DOCUMENT_SIZE","loadGameContent","width","height","zoom","LOCATION_ZOOM","scale","LOCATION_SCALE","loadLocationContent","LOCATION_WIDTH","LOCATION_HEIGHT","cancelLoadBigPhotoContent","getSize","PHOTO_BIG_SIZE","loadBigPhotoContent","displaySize","PHOTO_SIZE","getPhotoSize","loadPhotoThumbnailContent","thumbSize","getPhotoThumbnailSize","loadStickerContent","PRELOAD_STICKER_SIZE","cancelLoadVideoContent","loadVideoContent","PRELOAD_VIDEO_SIZE","cancelLoadVideoThumbnailContent","loadVideoNoteContent","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","keys","saveMedia","media","file_name","saveOrDownload","saveAnimation","saveDocument","savePhoto","saveVideo","fileName","mime","type","saveData","can_be_downloaded","getViewerThumbnail","getViewerFile","getMediaPreviewFile","getMediaFile","mime_type","cancelLoadIVMediaViewerContent","blocks","cancelLoadMediaViewerContent","loadIVMediaViewerContent","useSizeLimit","loadMediaViewerContent","cancelPreloadIVMediaViewerContent","index","preload","cancelPreloadMediaViewerContent","history","preloadMediaViewerContent","preloadIVMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","small","big","getChatUserId","getProfilePhoto","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","loadChatPhotoContent","loadChatsContent","loadDraftContent","draft_message","loadRecentStickersContent","recent","loadStickersContent","stickers","loadStickerSetContent","stickerSet","loadBackgroundsContent","backgrounds","background","loadBackgroundContent","full","is_animated","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","loadInstantViewContent","instantView","page_blocks","pageBlock","loadPageBlockContent","b","caption","author","loadRichTextContent","text","credit","cover","header","poster_photo","author_photo","footer","kicker","loadPageBlockMapContent","IV_PHOTO_SIZE","articles","subheader","subtitle","cells","row","title","t","texts","getAnimationData","fileReader","FileReader","onload","JSON","parse","onabort","readAsText","canUnpinMessage","pinned_message_id","isChatArchived","chat_list","canSetChatChatList","is_sponsored","isMeChat","SERVICE_NOTIFICATIONS_USER_ID","draftEquals","draft1","draft2","inputMessageText1","input_message_text","replyToMessageId1","inputMessageText2","formattedText1","formattedText2","text1","entities1","entities","text2","entities2","offset","every","entitiesEquals","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","next","value","action","getPrivateChatTypingString","firstUser","secondUser","first_name","second_name","getGroupChatTypingString","getMessageSenderFullName","k","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","key","getContent","showChatUnreadMentionCount","unread_mention_count","showChatUnreadCount","is_marked_as_unread","unread_count","isChatUnread","isChatMuted","notification_settings","use_default_mute_for","mute_for","settings","NotificationStore","isChannelChat","getScopeNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","is_member","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getChannelStatus","getSupergroupStatus","getChatSubtitle","showSavedMessages","chatTypingString","getChatLetters","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","formatPhoneNumber","phone_number","getChatBio","description","bio","isPrivateChat","isGroupChat","isChatMember","getChatTitle","isDeletedPrivateChat","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendMediaMessages","globalPermissions","permissions","can_send_media_messages","getChatShortTitle","canClearHistory","Boolean","canDeleteChat","canSendPolls","can_send_polls","canSendMessages","can_send_messages","getChatDraft","getChatDraftReplyToMessageId","replyToMessageId","canPinMessages","can_pin_messages","isChatVerified","is_verified","isChatSecret","MentionLink","props","handleClick","stopPropagation","preventDefault","popup","openUser","setState","openChat","handleClose","handleDialogClick","state","children","onClick","Dialog","transitionDuration","onClose","aria-labelledby","DialogTitle","DialogContent","classes","root","DialogContentText","DialogActions","Button","prevUserId","prevUsername","React","Component","defaultProps","withTranslation","isMetaBubble","isMessageUnread","last_read_inbox_message_id","last_read_outbox_message_id","is_outgoing","isMe","getTitle","substring","start","end","searchCurrentChat","AppStore","searchChat","getFormattedText","formattedText","deleteLineBreakAfterPre","entity","textBefore","textBeforeLength","substr","entityKey","entityText","command","rel","SafeLink","textAfter","getText","meta","concat","getWebPage","d","getDateHint","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getSenderUserId","filterDuplicateMessages","reduce","accumulator","current","filterMessages","ttl","getServiceMessageContent","poll","question","emoji","isMediaContent","longitude","latitude","isVideoMessage","isLottieMessage","endsWith","isAnimationMessage","isContentOpened","is_listened","is_viewed","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","message_id","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","openVideo","openVideoNote","openVoiceNote","openMedia","openChatPhoto","openContact","openGame","isDeletedMessage","getReplyMinithumbnail","minithumbnail","getReplyPhotoSize","getEmojiMatches","textContent","m","lastIndex","emojiMatches","re","emojiRegex","exec","messageComparatorDesc","left","right","checkInclusion","checkIntersection","startIndex","endIndex","checkEntity","removeOffsetAfter","countToRemove","e","addOffsetAfter","countToAdd","removeEntities","entityStart","entityEnd","splice","addTextNode","nodes","node","createTextNode","getNodes","sort","prevEntity","innerText","dataset","getDecodedUrl","getEntities","replace","join","isPre","DOMParser","parseFromString","finalText","childNodes","nodeName","indexOf","language","lastChar","firstChar","c","checkString","checkChar","prevChar","canMessageBeEdited","can_be_edited","showMessageForward","isTextMessage","isMessagePinned","canMessageBeUnvoted","is_closed","options","is_chosen","is_being_chosen","canMessageBeClosed","canMessageBeForwarded","can_be_forwarded","canMessageBeDeleted","can_be_deleted_only_for_self","can_be_deleted_for_all_users","getMessageStyle","fitSize","getFitSize","PHOTO_DISPLAY_SIZE","Call","duration","callTitle","getCallTitle","durationString","getDurationString","Math","floor","className","classNames","IconButton","color","aria-label","fontSize","Contact","last_name","fullName","number","UserTile","firstName","lastName","Game","Animation","fitPhotoSize","Photo","Venue","venueTitle","address","Location","discard_reason","isEditedMedia","isValidAnimatedSticker","sending_state","isBlurredThumbnail","blurredSize","THUMBNAIL_BLURRED_SIZE_90","max","performer","trimmedTitle","trim","trimmedPerformer","getAudioShortTitle","getAudioSubtitle","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","setIndex","findIndex","stickerIndex","prevRows","ceil","toRowColumn","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","getInputMediaThumbnail","getInputMediaCaption","getInputMediaContent","live_period","added_sticker_file_ids","supports_streaming","waveform","getMedia","hasTitle","hasCaption","inlineMeta","Audio","duraton","discardReason","Document","Poll","Sticker","StickerSourceEnum","MESSAGE","Video","VideoNote","VoiceNote","getMediaDocumentFromFile","getRandomInt","name","expected_size","getMediaPhotoFromFile","startsWith","readImageSize","has_stickers","createSvgIcon","RepeatEnum","Object","freeze","NONE","REPEAT","REPEAT_ONE","playlist","time","videoStream","close","getPlaylist","volume","savePlayerSettings","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","currentTime","timestamp","stream","useRepeatShuffle","nextIndex","currentPlaylist","totalCount","query","from_message_id","limit","total_count","loadPlayerSettings","player","localStorage","getItem","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","setItem","stringify","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","isUserBlocked","is_blocked","getUserLetters","firstNameSymbol","getFirstLetter","lastNameSymbol","getUserStatusOrder","expires","PROFILE_PHOTO_SMALL_SIZE","PROFILE_PHOTO_BIG_SIZE","getProfilePhotoDateHint","userProfilePhoto","added_date","isDeletedUser","FileProgress","currentFile","nextFile","fileEquals","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","nextProps","nextState","icon","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","file1","file2","local1","remote1","local2","remote2","can_be_deleted","download_offset","downloaded_prefix_size","path","cancelButton","zIndex","completeIcon","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","circle","variant","thickness","worker","PakoWorker","handlers","inflateBlob","random","toString","slice","postMessage","onmessage","msg","Lottie","lazy","HINTS","PICKER_HEADER","PICKER","PREVIEW","STICKER_SET","UNKNOWN","onClientUpdateInstantViewContent","openIV","InstantViewStore","getCurrent","startStopAnimation","onClientUpdateDialogChatId","dialogChatId","ApplicationStore","onClientUpdateMediaViewerContent","openMediaViewer","mediaViewerContent","onClientUpdateProfileMediaViewerContent","openProfileMediaViewer","profileMediaViewerContent","onClientUpdateStickerPreview","stickerPreview","onClientUpdateMessagesInView","inView","onClientUpdateStickerSet","openedStickerSet","onClientUpdateFocusWindow","focused","windowFocused","onClientUpdateStickerBlob","loadContent","forceUpdate","onClientUpdateStickerThumbnailBlob","autoplay","play","isAnimated","animationData","handleMouseEnter","handleAnimationMouseEnter","entered","lottieRef","loopCount","handleAnimationLoopComplete","handleAnimationMouseOut","createRef","hasFocus","StickerStore","animationDate","hasError","errorInfo","nextContext","blur","prevProps","prevState","snapshot","pause","paused","preview","src","isBlurred","draggable","alt","Suspense","fallback","ref","loop","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","eventListeners","eventName","onMouseOut","stickerStyle","onMouseEnter","STICKER_DISPLAY_SIZE","hint","sticker_set_ids","is_installed","assign","foundStickers","fullInfoItems","basic_group","setFullInfo","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","loaded","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","handleLoad","fistName","dialog","pointer","tileLoaded","tileColor","abs","onLoad","onClientUpdatePhotoBlob","showProgress","miniSrc","thumbSrc","photoStyle","hasSrc","thumbnailSize","prevPhoto","PHOTO_THUMBNAIL_SIZE","token","timezone","timezoneClip","mask","utc","gmt","arguments","kindOf","test","undefined","isNaN","TypeError","maskSlice","String","masks","_","D","y","H","M","s","L","o","getTimezoneOffset","W","getWeek","N","getDayOfWeek","flags","dd","pad","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","round","timeNames","tt","T","TT","Z","match","S","val","len","targetThursday","getFullYear","getMonth","firstThursday","ds","getHours","weekDiff","dow","Array","isArray","call","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","confirm","handleDone","newWindow","opener","handleSafeClick","isTelegramLink","messageLinkInfo","lowerCaseUrl","decodedUrl","safe","displayText","mail","prevUrl","prevDisplayText","isUrlSafe","getHref","viewerContent","prevInstantView","MessageAuthor","openUserCommand","openChatCommand","User","showStatus","startStopPlayer","videoRef","ivInView","openIVMedia","onClientUpdateInstantViewViewerContent","onClientUpdateBlocksInView","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","setPlayerParams","animationStyle","isGif","poster","muted","autoPlay","playsInline","iv","transform","currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","Currency","getString","total_amount","getMessageAuthor","pinnedMessage","pinnedContent","domain_name","regExpRTLO","hasRTLOSymbol","decodedHref","decodeURI","domain","punycode","ToUnicode","regExpDomainExplicit","RegExp","regExpDomain","regExpProtocol","validateUrl","trimmed","domainMatch","protocolMatch","isGoodProtocol","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","PlayerStore","audioTitle","audioSubtitle","opacity","DocumentTile","onClientUpdateDocumentThumbnailBlob","AudioAction","onClientUpdateMediaSeeking","playerDuration","seekProgress","seeking","timeString","getTimeString","onClientUpdateMediaSeek","Infinity","onClientUpdateMediaTime","currentTimeString","audioDuration","theme","isDownloadingActive","isUploadingActive","sizeString","strings","onClientUpdateLocationBlob","locationStyle","onClientUpdateVideoThumbnailBlob","videoStyle","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","STICKER_PREVIEW_DISPLAY_SIZE","stroke","strokeWidth","strokeLinejoin","fill","cx","cy","r","setPollAnswer","optionIds","option_ids","cancelPollAnswer","stopPoll","reply_markup","UserStatus","onUpdateUserStatus","isAccent","allow_multiple_answers","is_anonymous","isAnonymous","newType","correct_option_id","option","source1","source2","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","POLL_OPTION_LENGTH","hasPollData","utf16","decode","input","extra","output","charCodeAt","RangeError","encode","fromCharCode","base","damp","tmin","tmax","skew","maxint","encode_digit","flag","adapt","delta","numpoints","firsttime","preserveCase","n","out","bias","basic","j","ic","oldi","w","digit","cp","case_flags","input_length","lastIndexOf","toUpperCase","q","ijv","bcp","Error","ToASCII","domain_array","VoiceNoteSlider","getValue","PLAYER_PROGRESS_TIMEOUT_MS","dragging","handleMouseDown","handleChangeCommitted","handleChange","track","thumb","min","step","onChange","onChangeCommitted","onMouseDown","circleStyle","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","sourceRef","getTracks","stop","load","progressTime","clamp","onCanPlay","VoiceNoteTile","Particle","fireworks","colorType","side","typeSize","xFinished","finishedStart","rotation","moveX","moveY","ctx","fillStyle","beginPath","arc","PI","save","translate","rotate","radius","tl","tr","br","bl","defaultRadius","moveTo","lineTo","quadraticCurveTo","closePath","roundRect","restore","dt","moveCoef","wasNegative","speedCoef","fallingDownCount","getMeasuredHeight","Fireworks","context","particlesCount","fallParticlesCount","particles","canvas","clientHeight","clientWidth","fall","particle","colors","getMeasuredWidth","xOffset","yOffset","started","startedFall","lastUpdateTime","createParticle","draw","newTime","clearRect","p","startFall","requestAnimationFrame","FireworksComponent","onResize","canvasRef","parentNode","attachToParent","detachFromParent","addEventListener","removeEventListener","getContext","position","top","pointerEvents","PollRadio","chosen","beingChosen","hidden","Radio","colorPrimary","disabled","TouchRippleProps","child","checked","checkedIcon","CircularProgress","PollPercentage","updateAnimation","stopAnimation","handle","onAnimationFrame","cancelAnimationFrame","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","animated","prevPropsValue","closed","PollOption","getTitleString","canBeSelected","onVote","maxVoterCount","isCorrect","voter_count","vote_percentage","isMultiChoosen","Close","Check","LinearProgress","bar","UserPlaceholder","titleWidth","sin","contentWidth","cos","marginLeft","PollOptionResult","ListItem","button","PollOptionResults","handleShowMore","newOffset","newCount","POLL_RESULTS_SLICE_LENGTH","updateVoters","handleCollapse","POLL_RESULTS_FIRST_SLICE_LENGTH","POLL_RESULTS_LEAVE_LENGTH","voters","loadMore","optionId","option_id","user_ids","offset2","isQuiz","results","voterCount","showMoreButton","showMoreCount","showMore","fullWidth","showCollapse","PollResultsDialog","onClientUpdateClosePollResults","handleContextMenu","PollStore","container","paper","onContextMenu","getTotalVoterCountString","handleSubmit","viewResults","handleVote","handleOpenResults","viewResultsPoll","handleCloseResults","fireworksRef","total_voter_count","recent_voter_user_ids","isSelected","showViewResults","showButton","buttonEnabled","recentVoters","marginRight","getOptionType","getOptionIsCorrect","textPrimary","fillRule","mixBlendMode","DocumentAction","Download","viewBox","data-name","data-ext","module","exports","Worker","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","OnlineStatus","online","borderSize","padding","ChatTile","onFastUpdatingComplete","showOnline","DeletedAccount","ForwardTargetChat","selected","shortTitle","copy","clipboard","writeText","copyOld","element","successful","contentEditable","readOnly","all","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","focus","select","execCommand","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","currentPackId","OptionStore","suggestedPackId","latinInput","getLatinInput","ForwardDialog","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","savedMessagesPromise","force","chats","savedMessages","chatIds","chat_ids","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","input_message_content","disable_web_page_preview","clear_draft","from_chat_id","as_album","handleChangeSelection","innerHTML","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","hasSearchText","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","aria-describedby","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","autoFocus","enhance","compose","withSnackbar","isVerified","DialogStatus","updateSubtitle","find","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","onUpdateSupergroup","prevChatId","externalSubtitle","Chat","onTileSelect","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","setChatChatList","chatList","toggleChatIsPinned","isPinned","is_pinned","toggleChatIsMarkedAsUnread","isMarkedAsUnread","toggleChatNotificationSettings","isMuted","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","getChatCounters","photoCounter","return_local","videoCounter","documentCounter","audioCounter","urlCounter","voiceAndVideoNoteCounter","Notifications","onUpdateChatNotificationSettings","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationsListItem","ListItemIcon","ListItemText","primary","Typography","noWrap","ListItemSecondaryAction","Switch","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isGroup","isBlocked","isMember","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","inset","ChatDetails","loadChatContents","handleUsernameHint","telegramUrlOption","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","scrollHeight","offsetHeight","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","member","wordWrap","Divider","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","SharedDocument","contextMenu","handleOpenContextMenu","clientX","clientY","handleCloseContextMenu","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","SpeedDialIcon","openIcon","SharedMediaBase","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","isValidContent","insertByOrder","onUpdateNewMessage","isValidMessage","onUpdateDeleteMessages","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","finally","incompleteResults","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","isRequired","func","bool","SharedDocuments","SharedLink","hostname","webPage","display_url","getTitleFromUrl","isValidEntityType","typeUrl","SharedLinks","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","label","minWidth","SharedPhoto","backgroundImage","backgroundSize","SharedPhotos","SharedVideo","SharedVideos","SharedVoiceNote","dateString","toLocaleDateString","month","year","hour","minute","hour12","SharedVoiceNotes","ChatInfo","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","setCounters","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","Archive","openArchive","onClientUpdateClearHistory","clearHistory","contentControl","draft","senderName","x1","y1","x2","y2","strokeLinecap","DialogBadge","showUnreadMentionCount","showUnreadCount","Pin","Status","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","unread","Pending","Sent","Succeeded","prevMessageId","DialogMeta","previousChatId","contextMenuId","canPinChats","canTogglePin","canToggleArchive","handleMute","pinnedSumMaxOption","isSecret","pinnedSum","handlePin","handleArchive","getViewInfoTitle","handleViewInfo","handleRead","forceRead","force_read","viewMessages","isLastPinned","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","DialogListItem","DialogsList","onClientUpdateLeaveChat","hiddenChats","authorizationState","loadFirstSlice","isAuthorizationReady","saveCache","onSaveCache","onUpdateChatOrder","order","newChatIds","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","oldChatIds","innerListRef","KeyboardHandler","manager","handler","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderFullName","tile","SectionHeader","multiline","Search","concatSearchResults","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","recentlyFound","trimmedText","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","searchOrLoadContent","KeyboardManager","add","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","MainMenuButton","handleMenuOpen","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewGroup","handleContacts","handleArchived","handleSaved","handleSettings","handleHelp","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Saved","Help","aria-owns","aria-haspopup","SearchInput","nativeEvent","stopImmediatePropagation","handleInput","inputRef","onFocus","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","ANIMATION_DURATION_100MS","SidebarPage","remove","Slide","direction","mountOnEnter","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","main","palette","FormControl","FormLabel","RadioGroup","FormControlLabel","control","withTheme","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","Edit","Data","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","firstNameRef","lastNameRef","bioRef","userFullInfo","setName","setBio","setUsername","newFirstName","newLastName","newBio","usernameLabel","TextField","defaultValue","Wallpaper","wallpaper","backgroundPosition","ChatBackground","selectedId","wallpapers","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","LocalizationStore","language_packs","tabIndex","inputProps","secondary","native_name","handleMuteFor","property","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","role","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","handleCloseSettings","removeItem","clear","cache","contacts","CacheManager","saveChatsInternal","files","parseCache","archiveChats","basicGroups","supergroups","OutputTypingManager","updateChatChatList","archiveChatIds","fileMap","userMap","basicGroupMap","supergroupMap","entries","getCache","readAsDataURL","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","throttle","CacheStore","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","getArchiveTitle","archive","chatsOrder","Dialogs","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","onUpdateChatChatList","prevShowArchive","archiveList","listCurrent","onClientUpdateContacts","openContacts","onClientUpdateSettings","openSettings","meChatId","onClientUpdateArchive","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsHeaderRef","setInitQuery","scrollToTop","visible","handleSaveCache","handleCloseArchive","handleCloseContacts","mainItems","archiveItems","loadCache","mainChatIds","saveChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","focusNode","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","optionTextRef","maxLength","remainLength","hasSelection","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","data-length","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","allowMultipleAnswers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","urlError","onDone","handleCancel","onCancel","textRef","urlRef","flexDirection","margin","autoComplete","prevOpen","ReplyTile","isVideoNote","Reply","onGetMessageResult","handleOpen","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","onEdit","editFile","editMedia","sendAsPhoto","editMessageAction","altKey","ctrlKey","metaKey","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","handleSendAsPhoto","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","onEnter","accept","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","setEditMessage","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateStickerSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateReply","setInputFocus","beforeEditText","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","getDraftMessage","inputContent","editedMessage","editMessageText","editMessageCaption","attachPhotoRef","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","sendFile","sendAsFile","performance","cancel","isMediaEditing","multiple","Done","Send","FooterCommand","onCommand","NotificationsCommand","Footer","handleJoin","handleDeleteAndExit","remove_from_chat_list","NotificationTimer","handleTimer","expire","timerId","clearInterval","setMilliseconds","getMilliseconds","setInterval","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","getLeaveChatTitle","handleUnpin","deleteChat","leaveChatTitle","unpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","isAccentSubtitle","HeaderChat","HeaderCommand","selectedItems","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","code","deletedMessage","getClientData","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","onMouseLeave","visibility","Slider","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","onClientUpdateMediaPlaylist","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","onClientUpdateMediaBlob","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHintStr","dateStr","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","handleUnvote","copyLink","handleReply","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","synchronous","canCopyLink","canBeUnvoted","canBeClosed","canBeReplied","canBePinned","canBeEdited","hasSelectedMessage","openInstantView","force_full","setInstantViewContent","WebPage","displaySmallSize","displayExtraSmallSize","site_name","smallPhoto","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","shook","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","showForward","showReply","suppressTitle","withBubble","onMouseOver","onAnimationEnd","Placeholder","onClientUpdateCacheLoaded","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","getSticker","mouseDownStickerId","handleMouseUp","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","scrollDownButtonRef","historyEquals","previousChat","MAX_VALUE","highlightMessage","viewAction","getMessagePhoto","getMessageSticker","oldMessageId","prevMessage","isFirst","MESSAGE_SPLIT_MAX_TIME_S","prevDate","nextMessage","showMessageDate","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","IVContext","createContext","withIV","IVComponent","Consumer","RichText","richText","email_address","emailAddress","getRichText","object","Anchor","Caption","hasText","isEmptyText","hastCredit","block","need_autoplay","IV_PHOTO_DISPLAY_SIZE","AuthorDate","publishDate","hasAuthor","hasDate","dateTime","toISOString","Blockquote","pageBlocks","getPageBlock","Cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","getElementById","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevHtml","authorPhoto","ErrorHandler","componentStack","Kicker","data-before","Paragraph","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","publish_date","Subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","ChatLink","needAutoplay","isLooped","openInstantViewMedia","setInstantViewViewerContent","is_open","posterPhoto","is_full_width","allow_scrolling","is_bordered","is_striped","is_header","is_looped","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","dir","MediaCaption","InstantViewMediaViewerContent","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailBlob","videoWidth","videoHeight","handleContentClick","onVolumeChange","prevMedia","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","handleSave","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewUrl","hash","scrollToHash","handleBack","hasScroll","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","scrollIntoView","Provider","alignItems","transition","MediaInfo","dateHint","tileControl","MediaViewerContent","updateAnimationData","changeSpeed","isVideo","isAnimation","isLottie","MediaViewer","deleteConfirmationOpened","currentMessageId","firstSliceLoaded","inserted","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","MEDIA_SLICE_LIMIT","handleDialogOpen","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","ProfileMediaViewerContent","ProfileMediaInfo","ProfileMediaViewer","currentIndex","inputFile","chatPhoto","getReadWriteStore","prevFileId","currentFileId","inHistory","MainPage","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"kOAYMA,GAAc,EA2gCdC,EAAQ,I,YAvgCV,aAAe,IAAD,8BACV,+CAOJC,MAAQ,WACJ,EAAKC,UAAY,GAGjB,EAAKC,GAAK,KACV,EAAKC,KAAO,IAAIC,QAChB,EAAKC,SAAW,IAAIC,IACpB,EAAKC,MAAQ,IAAID,IACjB,EAAKE,UAAY,IAAIF,IACrB,EAAKG,cAAgB,IAAIH,IAEzB,EAAKI,UAAY,IAAIJ,IACrB,EAAKK,QAAU,IAAIL,KApBT,EAuBdM,SAvBc,sCAuBH,WAAMC,GAAN,SAAAC,EAAA,0DACCD,EAAO,SADR,OAEE,6BAFF,OAOE,eAPF,uCAGO,EAAKE,2BAA2BF,GAHvC,iDAQC,EAAKG,IAAIH,EAAOI,MAEhB,EAAKC,aAAaL,GAElB,EAAKM,KAAKN,EAAO,SAAUA,GAZ5B,mGAvBG,wDA2CdO,eAAiB,SAAAP,GACb,OAAQA,EAAO,UACX,IAAK,iCAIL,IAAK,wBAIL,IAAK,2BAIL,IAAK,wBACD,EAAKM,KAAKN,EAAO,SAAUA,KA1DzB,EAkEdQ,iBAAmB,WACfC,IAAgBC,GAAG,SAAU,EAAKX,UAClCU,IAAgBC,GAAG,eAAgB,EAAKH,iBApE9B,EAuEdI,oBAAsB,WAClBF,IAAgBG,IAAI,SAAU,EAAKb,UACnCU,IAAgBG,IAAI,eAAgB,EAAKL,iBAzE/B,EA4EdL,2BA5Ec,sCA4Ee,WAAMF,GAAN,eAAAC,EAAA,wDACpBD,EADoB,oDAGjBa,EAAwBb,EAAxBa,oBAHiB,sDAMjBA,EAAoB,SANH,OAOhB,0CAPgB,OAWhB,6BAXgB,yCAQX,EAAKC,SARM,mDAYjB,EAAK3B,QAZY,+DA5Ef,wDA8FdkB,aAAe,SAAAL,GACX,GAAKA,EAAL,CADqB,IAGbI,EAASJ,EAATI,KACHA,IAEL,EAAKW,gBAAgBX,GACrB,EAAKY,cAAcZ,MArGT,EAwGdW,gBAAkB,SAAAX,GAAS,IACfa,EAA4Bb,EAA5Ba,IAAKC,EAAuBd,EAAvBc,GAAIC,EAAmBf,EAAnBe,QAASC,EAAUhB,EAAVgB,MAG1B,UAFOhB,EAAKa,IAEP,EAAKpB,UAAUwB,IAAIH,IACnBE,EAAME,2BACNrC,GAAgBkC,GAAYF,GAAjC,CAEA,IAAMvB,EAAQ,EAAKG,UAAU0B,IAAIL,GACjC,GAAKxB,EAAL,CAEA,EAAKG,UAAU2B,OAAON,GAEtB,IAAMhC,EAAQ,EAAKuC,WAEnB/B,EAAMgC,QAAQ,SAAAC,GACV,OAAQA,EAAK,UACT,IAAK,YACD,EAAKC,gBAAgB1C,EAAOyC,EAAMvB,EAAMa,EAAK,MAC7C,MAEJ,IAAK,QACD,EAAKY,YAAY3C,EAAOyC,EAAMvB,EAAMa,EAAK,MACzC,MAEJ,IAAK,OACD,EAAKa,WAAW5C,EAAOyC,EAAMvB,EAAMa,GACnC,MAEJ,IAAK,WACD,EAAKc,eAAe7C,EAAOyC,EAAMvB,EAAMa,EAAK,MAC5C,MAEJ,IAAK,OACD,EAAKe,WAAW9C,EAAOyC,EAAMvB,EAAMa,EAAK,MACxC,MAEJ,IAAK,WACD,EAAKgB,eAAe/C,EAAOyC,EAAMvB,EAAMa,EAAK,MAC5C,MAEJ,IAAK,UACD,EAAKiB,cAAchD,EAAOyC,EAAMvB,EAAMa,GACtC,MAEJ,IAAK,eACD,EAAKkB,mBAAmBjD,EAAOyC,EAAMvB,EAAMa,EAAK,MAChD,MAEJ,IAAK,QACD,EAAKmB,YAAYlD,EAAOyC,EAAMvB,EAAMa,EAAK,MACzC,MAEJ,IAAK,UACD,EAAKoB,cAAcnD,EAAOyC,EAAMvB,EAAMa,EAAK,MAC3C,MAEJ,IAAK,QACD,EAAKqB,YAAYpD,EAAOyC,EAAMvB,EAAMa,EAAK,MACzC,MAEJ,IAAK,YACD,EAAKsB,gBAAgBrD,EAAOyC,EAAMvB,EAAMa,EAAK,MAC7C,MAEJ,IAAK,YACD,EAAKuB,gBAAgBtD,EAAOyC,EAAMvB,EAAMa,EAAK,MAC7C,MAEJ,IAAK,OACD,EAAKwB,WAAWvD,EAAOyC,EAAMvB,EAAMa,GACnC,MAEJ,QACIyB,QAAQC,MAAM,wCAAyChB,SAlLzD,EAwLdX,cAAgB,SAAAZ,GAAS,IACbc,EAAed,EAAfc,GAAI0B,EAAWxC,EAAXwC,cACLxC,EAAKa,IAEP,EAAKnB,QAAQuB,IAAIH,KAClB0B,EAAOC,wBAEX,EAAK/C,QAAQ0B,OAAON,KA/LV,EAkMdY,WAAa,SAAC5C,EAAO4D,EAAM1C,EAAMa,GACxB6B,GAEL,EAAKC,aACD7D,EACAkB,EACAa,EACA,kBAAM,EAAK+B,oBAAoBF,EAAK5B,GAAId,EAAKc,KAC7C,kBAAM,EAAK+B,cAAc7C,EAAKc,GAAIgC,IAAeJ,MA1M3C,EA8MdL,WAAa,SAACvD,EAAOiE,EAAM/C,EAAMa,GACxBkC,GAEL,EAAKJ,aACD7D,EACAkB,EACAa,EACA,kBAAM,EAAKmC,oBAAoBD,EAAKjC,GAAId,EAAKc,KAC7C,kBAAM,EAAK+B,cAAc7C,EAAKc,GAAIgC,IAAeC,MAtN3C,EA0NdjB,cAAgB,SAAChD,EAAOmE,EAASjD,EAAMa,GACnC,GAAKoC,EAAL,CAD2C,IAGnCC,EAAYD,EAAZC,QACR,GAAKA,EAEL,OAAQA,EAAQ,UACZ,IAAK,mBAAqB,IACdC,EAAcD,EAAdC,UAER,EAAK3B,gBAAgB1C,EAAOqE,EAAWnD,EAAMa,EAAKoC,GAClD,MAEJ,IAAK,eAAiB,IACVG,EAAUF,EAAVE,MAER,EAAK3B,YAAY3C,EAAOsE,EAAOpD,EAAMa,EAAKoC,GAC1C,MAEJ,IAAK,yBAA2B,IACpBI,EAAUH,EAAVG,MAER,EAAKrB,YAAYlD,EAAOuE,EAAOrD,EAAMa,EAAKoC,GAC1C,MAEJ,IAAK,kBAAoB,IACbK,EAAaJ,EAAbI,SAER,EAAK3B,eAAe7C,EAAOwE,EAAUtD,EAAMa,EAAKoC,GAChD,MAEJ,IAAK,cAAgB,IACTM,EAASL,EAATK,KAER,EAAK3B,WAAW9C,EAAOyE,EAAMvD,EAAMa,EAAKoC,GACxC,MAEJ,IAAK,kBAAoB,IACbO,EAAaN,EAAbM,SAER,EAAK3B,eAAe/C,EAAO0E,EAAUxD,EAAMa,EAAKoC,GAChD,MAEJ,IAAK,eAAiB,IACVI,EAAUH,EAAVG,MAER,EAAKrB,YAAYlD,EAAOuE,EAAOrD,EAAMa,EAAKoC,GAC1C,MAEJ,IAAK,iBAAmB,IACZQ,EAAYP,EAAZO,QAER,EAAKxB,cAAcnD,EAAO2E,EAASzD,EAAMa,EAAKoC,GAC9C,MAEJ,IAAK,cAAgB,IACTS,EAAaR,EAAbQ,SACR,IAAKA,EAAU,MAFC,IAIRP,EAA8EO,EAA9EP,UAAWC,EAAmEM,EAAnEN,MAAOE,EAA4DI,EAA5DJ,SAAUD,EAAkDK,EAAlDL,MAAOI,EAA2CC,EAA3CD,QAASE,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WAEnEV,GACA,EAAK3B,gBAAgB1C,EAAOqE,EAAWnD,EAAMa,EAAKoC,GAGlDG,GACA,EAAK3B,YAAY3C,EAAOsE,EAAOpD,EAAMa,EAAKoC,GAG1CK,GACA,EAAK3B,eAAe7C,EAAOwE,EAAUtD,EAAMa,EAAKoC,GAGhDI,GACA,EAAKrB,YAAYlD,EAAOuE,EAAOrD,EAAMa,EAAKoC,GAG1CQ,GACA,EAAKxB,cAAcnD,EAAO2E,EAASzD,EAAMa,EAAKoC,GAG9CU,GACA,EAAKzB,YAAYpD,EAAO6E,EAAO3D,EAAMa,EAAKoC,GAG1CY,GACA,EAAKzB,gBAAgBtD,EAAO+E,EAAY7D,EAAMa,EAAKoC,GAGnDW,GACA,EAAKzB,gBAAgBrD,EAAO8E,EAAY5D,EAAMa,EAAKoC,GAGvD,MAEJ,IAAK,eAAiB,IAEVO,EADUN,EAAVY,MACAN,SAER,EAAK3B,eAAe/C,EAAO0E,EAAUxD,EAAMa,EAAKoC,GAChD,MAEJ,IAAK,eAAiB,IACVU,EAAUT,EAAVS,MAER,EAAKzB,YAAYpD,EAAO6E,EAAO3D,EAAMa,EAAKoC,GAC1C,MAEJ,IAAK,mBAAqB,IACdW,EAAeV,EAAfU,WAER,EAAKzB,gBAAgBrD,EAAO8E,EAAY5D,EAAMa,EAAKoC,GACnD,MAEJ,IAAK,mBAAqB,IACdY,EAAeX,EAAfW,WAER,EAAKzB,gBAAgBtD,EAAO+E,EAAY7D,EAAMa,EAAKoC,MA/UjD,EAuVdzB,gBAAkB,SAAC1C,EAAOqE,EAAWnD,EAAMa,EAAKkD,GAC5C,IAAMC,EAASD,EAAMA,EAAIE,QAAU,EAC7BC,EAAYH,EAAMA,EAAIjD,GAAK,EAEjC,GAAIqC,EAAUgB,UAAW,CACrB,IAAMC,EAASjB,EAAUgB,UAAUd,MAC/Be,GAAUA,EAAOtD,KAAOd,EAAKc,IAC7B,EAAK6B,aACD7D,EACAsF,EACAvD,EACA,kBAAM,EAAKwD,6BAA6BL,EAAQE,EAAWlE,EAAKc,KAChE,kBAAM,EAAK+B,cAAc7C,EAAKc,GAAIwD,KAAoBP,GAAOZ,KAKzE,GAAIA,EAAUA,UAAW,CACrB,IAAMiB,EAASjB,EAAUA,UACrBiB,GAAUA,EAAOtD,KAAOd,EAAKc,IAC7B,EAAK6B,aACD7D,EACAsF,EACAvD,EACA,kBAAM,EAAK0D,oBAAoBP,EAAQE,EAAWlE,EAAKc,KACvD,kBAAM,EAAK+B,cAAc7C,EAAKc,GAAIgC,IAAeiB,GAAOZ,OAhX1D,EAsXd1B,YAAc,SAAC3C,EAAOsE,EAAOpD,EAAMa,EAAKkD,GACpC,IAAMC,EAASD,EAAMA,EAAIE,QAAU,EAC7BC,EAAYH,EAAMA,EAAIjD,GAAK,EAEjC,GAAIsC,EAAMoB,sBAAuB,CAC7B,IAAMJ,EAAShB,EAAMoB,sBAAsBnB,MACvCe,GAAUA,EAAOtD,KAAOd,EAAKc,IAC7B,EAAK6B,aACD7D,EACAsF,EACAvD,EACA,kBAAM,EAAK4D,yBAAyBT,EAAQE,EAAWlE,EAAKc,KAC5D,kBAAM,EAAK+B,cAAc7C,EAAKc,GAAIwD,KAAoBP,GAAOX,KAKzE,GAAIA,EAAMA,MAAO,CACb,IAAMgB,EAAShB,EAAMA,MACjBgB,GAAUA,EAAOtD,KAAOd,EAAKc,IAC7B,EAAK6B,aACD7D,EACAsF,EACAvD,EACA,kBAAM,EAAK6D,gBAAgBV,EAAQE,EAAWlE,EAAKc,KACnD,kBAAM,EAAK+B,cAAc7C,EAAKc,GAAIgC,IAAeiB,GAAOX,OA/Y1D,EAqZdxB,WAAa,SAAC9C,EAAOyE,EAAMvD,EAAMa,EAAKoC,GAClC,GAAKM,EAAL,CAD8C,IAGtCJ,EAAqBI,EAArBJ,UAAWE,EAAUE,EAAVF,MACfA,GACA,EAAKrB,YAAYlD,EAAOuE,EAAOrD,EAAMa,EAAKoC,GAG1CE,GACA,EAAK3B,gBAAgB1C,EAAOqE,EAAWnD,EAAMa,EAAKoC,KA9Z5C,EAkadtB,eAAiB,SAAC7C,EAAOwE,EAAUtD,EAAMa,EAAKkD,GAC1C,IAAMC,EAASD,EAAMA,EAAIE,QAAU,EAC7BC,EAAYH,EAAMA,EAAIjD,GAAK,EAEjC,GAAIwC,EAASa,UAAW,CAAC,IACNC,EAAWd,EAASa,UAA3Bd,MACJe,GAAUA,EAAOtD,KAAOd,EAAKc,IAC7B,EAAK6B,aACD7D,EACAsF,EACAvD,EACA,kBAAM,EAAK8D,4BAA4BX,EAAQE,EAAWlE,EAAKc,KAC/D,kBAAM,EAAK+B,cAAc7C,EAAKc,GAAIwD,KAAoBP,GAAOT,KAKzE,GAAIA,EAASA,SAAU,CAAC,IACFc,EAAWd,EAArBA,SACJc,GAAUA,EAAOtD,KAAOd,EAAKc,IAC7B,EAAK6B,aACD7D,EACAsF,EACAvD,EACA,kBAAM,EAAK+D,mBAAmBZ,EAAQE,EAAWlE,EAAKc,KACtD,kBAAM,EAAK+B,cAAc7C,EAAKc,GAAIgC,IAAeiB,GAAOT,OA3b1D,EAicdzB,eAAiB,SAAC/C,EAAO0E,EAAUxD,EAAMa,EAAKkD,GAC1C,IAAMC,EAASD,EAAMA,EAAIE,QAAU,EAC7BC,EAAYH,EAAMA,EAAIjD,GAAK,EAE3B+D,EAAaC,YAActB,GACjC,GAAIqB,EAAY,CACZ,IAAMT,EAAS,EAAKW,gBAAgBF,GAChCT,GAAUA,EAAOtD,KAAOd,EAAKc,IAC7B,EAAK6B,aACD7D,EACAsF,EACAvD,EACA,kBAAM,EAAKmE,mBAAmBhB,EAAQE,EAAWlE,EAAKc,KACtD,kBAAM,EAAK+B,cAAc7C,EAAKc,GAAIwD,KAAoBP,GAAOP,OA9c/D,EAoddzB,mBAAqB,SAACjD,EAAOmG,EAAcjF,EAAMa,EAAKkD,GAClD,IAAMC,EAASD,EAAMA,EAAIE,QAAU,EAC7BC,EAAYH,EAAMA,EAAIjD,GAAK,EAEzB0C,EAAayB,EAAbzB,SACFqB,EAAaC,YAActB,EAAU0B,IAAmBC,KAC9D,GAAIN,EAAY,CACZ,IAAMT,EAAS,EAAKW,gBAAgBF,GAChCT,GAAUA,EAAOtD,KAAOd,EAAKc,IAC7B,EAAK6B,aACD7D,EACAsF,EACAvD,EACA,kBAAM,EAAKmE,mBAAmBhB,EAAQE,EAAWlE,EAAKc,KACtD,kBAAM,EAAK+B,cAAc7C,EAAKc,GAAIwD,KAAoBP,GAAOkB,OAle/D,EAwedjD,YAAc,SAAClD,EAAOuE,EAAOrD,EAAMa,EAAKkD,GACpC,IAAMC,EAASD,EAAMA,EAAIE,QAAU,EAC7BC,EAAYH,EAAMA,EAAIjD,GAAK,EAEjC,GAAIuC,EACA,IAAK,IAAI+B,EAAI,EAAGA,EAAI/B,EAAMgC,MAAMC,OAAQF,IAAK,CACzC,IAAMG,EAAYlC,EAAMgC,MAAMD,GAC9B,GAAIG,EAAW,CACX,IAAMnB,EAASmB,EAAUlC,MACzB,GAAIe,GAAUA,EAAOtD,KAAOd,EAAKc,GAAI,CACjC,EAAK6B,aACD7D,EACAsF,EACAvD,EACA,kBAAM,EAAK2E,gBAAgBxB,EAAQE,EAAWlE,EAAKc,KACnD,kBAAM,EAAK+B,cAAc7C,EAAKc,GAAIgC,IAAeiB,GAAOV,KAE5D,UAzfN,EAggBdpB,cAAgB,SAACnD,EAAO2E,EAASzD,EAAMa,EAAKkD,GACxC,IAAMC,EAASD,EAAMA,EAAIE,QAAU,EAC7BC,EAAYH,EAAMA,EAAIjD,GAAK,EAEjC,GAAI2C,EAAQU,UAAW,CACnB,IAAMC,EAASX,EAAQU,UAAUd,MAC7Be,GAAUA,EAAOtD,KAAOd,EAAKc,IAC7B,EAAK6B,aACD7D,EACAsF,EACAvD,EACA,kBAAM,EAAK4E,2BAA2BzB,EAAQE,EAAWlE,EAAKc,KAC9D,kBAAM,EAAK+B,cAAc7C,EAAKc,GAAIwD,KAAoBP,GAAON,KAKzE,GAAIA,EAAQA,QAAS,CACjB,IAAMW,EAASX,EAAQA,QACnBW,GAAUA,EAAOtD,KAAOd,EAAKc,IAC7B,EAAK6B,aACD7D,EACAsF,EACAvD,EACA,kBAAM,EAAK6E,kBAAkB1B,EAAQE,EAAWlE,EAAKc,KACrD,kBAAM,EAAK+B,cAAc7C,EAAKc,GAAIgC,IAAeiB,GAAON,OAzhB1D,EA+hBdrB,gBAAkB,SAACtD,EAAO6G,EAAW3F,EAAMa,EAAKkD,GAC5C,IAAMC,EAASD,EAAMA,EAAIE,QAAU,EAC7BC,EAAYH,EAAMA,EAAIjD,GAAK,EAEjC,GAAI6E,EAAUC,MAAO,CACjB,IAAMxB,EAASuB,EAAUC,MACrBxB,GAAUA,EAAOtD,KAAOd,EAAKc,IAC7B,EAAK6B,aACD7D,EACAsF,EACAvD,EACA,kBAAM,EAAKgF,oBAAoB7B,EAAQE,EAAWlE,EAAKc,KACvD,kBAAM,EAAK+B,cAAc7C,EAAKc,GAAIgC,IAAeiB,GAAO4B,OA3iB1D,EAijBdxD,gBAAkB,SAACrD,EAAOgH,EAAW9F,EAAMa,EAAKkD,GAC5C,IAAMC,EAASD,EAAMA,EAAIE,QAAU,EAC7BC,EAAYH,EAAMA,EAAIjD,GAAK,EAEjC,GAAIgF,EAAU3B,UAAW,CACrB,IAAMC,EAAS0B,EAAU3B,UAAUd,MAC/Be,GAAUA,EAAOtD,KAAOd,EAAKc,IAC7B,EAAK6B,aACD7D,EACAsF,EACAvD,EACA,kBAAM,EAAKkF,6BAA6B/B,EAAQE,EAAWlE,EAAKc,KAChE,kBAAM,EAAK+B,cAAc7C,EAAKc,GAAIwD,KAAoBP,GAAO+B,KAKzE,GAAIA,EAAUnC,MAAO,CACjB,IAAMS,EAAS0B,EAAUnC,MACrBS,GAAUA,EAAOtD,KAAOd,EAAKc,IAC7B,EAAK6B,aACD7D,EACAsF,EACAvD,EACA,kBAAM,EAAKmF,oBAAoBhC,EAAQE,EAAWlE,EAAKc,KACvD,kBAAM,EAAK+B,cAAc7C,EAAKc,GAAIgC,IAAeiB,GAAO+B,OA1kB1D,EAglBd5D,YAAc,SAACpD,EAAO6E,EAAO3D,EAAMa,EAAKkD,GACpC,IAAMC,EAASD,EAAMA,EAAIE,QAAU,EAC7BC,EAAYH,EAAMA,EAAIjD,GAAK,EAEjC,GAAI6C,EAAMQ,UAAW,CACjB,IAAMC,EAAST,EAAMQ,UAAUd,MAC3Be,GAAUA,EAAOtD,KAAOd,EAAKc,IAC7B,EAAK6B,aACD7D,EACAsF,EACAvD,EACA,kBAAM,EAAKoF,yBAAyBjC,EAAQE,EAAWlE,EAAKc,KAC5D,kBAAM,EAAK+B,cAAc7C,EAAKc,GAAIwD,KAAoBP,GAAOJ,KAKzE,GAAIA,EAAMA,MAAO,CACb,IAAMS,EAAST,EAAMA,MACjBS,GAAUA,EAAOtD,KAAOd,EAAKc,IAC7B,EAAK6B,aACD7D,EACAsF,EACAvD,EACA,kBAAM,EAAKqF,gBAAgBlC,EAAQE,EAAWlE,EAAKc,KACnD,kBAAM,EAAK+B,cAAc7C,EAAKc,GAAIgC,IAAeiB,GAAOJ,OAzmB1D,EAirBdwC,gBAAkB,SAACrH,EAAOkB,KAjrBZ,EAozBdmB,IAAM,SAAAiF,GACF,OAAO,EAAK9G,MAAM6B,IAAIiF,IArzBZ,EAwzBdrG,IAAM,SAAAC,GACF,EAAKV,MAAMS,IAAIC,EAAKc,GAAId,IAzzBd,EA4zBdqG,QAAU,SAAAD,GACN,OAAO,EAAK7G,UAAU4B,IAAIiF,IA7zBhB,EAg0BdE,QAAU,SAACF,EAAQG,GACf,EAAKhH,UAAUQ,IAAIqG,EAAQG,IAj0BjB,EAo0BdC,WAAa,SAAAJ,GACT,EAAK7G,UAAU6B,OAAOgF,IAr0BZ,EAw0BdrB,gBAAkB,SAAAF,GACd,IAAMuB,EAAS,EAAK5G,cAAc2B,IAAI0D,GAEtC,OAAO,EAAK1D,IAAIiF,IA30BN,EA80BdK,gBAAkB,SAAC5B,EAAY7E,GAC3B,EAAKR,cAAcO,IAAI8E,EAAY7E,EAAKc,IAExC,EAAKf,IAAIC,IAj1BC,EAo1Bd0G,WAAa,SAAA5F,GACT,OAAKA,GAID,EAAK1B,SAAS6B,IAAIH,GACX,EAAK1B,SAAS+B,IAAIL,GAJlB,MAt1BD,EAg2Bd6F,WAAa,SAAC7F,EAAI8F,GACd,EAAKxH,SAASW,IAAIe,EAAI8F,IAj2BZ,EAo2BdC,cAAgB,SAAA/F,GACZ,EAAK1B,SAASgC,OAAON,IAr2BX,EAw2BdgG,WAAa,SAAAP,GACT,IAAKA,EACD,OAAO,KAGX,GAAI,EAAKrH,KAAK+B,IAAIsF,GACd,OAAO,EAAKrH,KAAKiC,IAAIoF,GAGzB,IAAMQ,EAAMC,IAAIC,gBAAgBV,GAGhC,OAFA,EAAKrH,KAAKa,IAAIwG,EAAMQ,GAEbA,GAp3BG,EAu3BdG,cAAgB,SAAAX,GACR,EAAKrH,KAAK+B,IAAIsF,IACd,EAAKrH,KAAKkC,OAAOmF,IAz3BX,EA63Bdf,gBAAkB,SAACxB,EAAQE,EAAWkC,GAClC,EAAKlG,KAAK,wBAAyB,CAC/B8D,OAAQA,EACRE,UAAWA,EACXkC,OAAQA,KAj4BF,EAq4Bd3B,yBAA2B,SAACT,EAAQE,EAAWkC,GAC3C/F,IAAgB8G,aAAa,CACzB,QAAS,iCACTnD,OAAQA,EACRE,UAAWA,EACXkC,OAAQA,KA14BF,EA84Bd1B,gBAAkB,SAACV,EAAQE,EAAWkC,GAClC/F,IAAgB8G,aAAa,CACzB,QAAS,wBACTnD,OAAQA,EACRE,UAAWA,EACXkC,OAAQA,KAn5BF,EAu5BdP,oBAAsB,SAAC7B,EAAQE,EAAWkC,GACtC,EAAKlG,KAAK,4BAA6B,CACnC8D,OAAQA,EACRE,UAAWA,EACXkC,OAAQA,KA35BF,EA+5BdL,6BAA+B,SAAC/B,EAAQE,EAAWkC,GAC/C,EAAKlG,KAAK,qCAAsC,CAC5C8D,OAAQA,EACRE,UAAWA,EACXkC,OAAQA,KAn6BF,EAu6BdJ,oBAAsB,SAAChC,EAAQE,EAAWkC,GACtC,EAAKlG,KAAK,4BAA6B,CACnC8D,OAAQA,EACRE,UAAWA,EACXkC,OAAQA,KA36BF,EA+6Bd/B,6BAA+B,SAACL,EAAQE,EAAWkC,GAC/C,EAAKlG,KAAK,qCAAsC,CAC5C8D,OAAQA,EACRE,UAAWA,EACXkC,OAAQA,KAn7BF,EAu7Bd7B,oBAAsB,SAACP,EAAQE,EAAWkC,GACtC,EAAKlG,KAAK,4BAA6B,CACnC8D,OAAQA,EACRE,UAAWA,EACXkC,OAAQA,KA37BF,EA+7BdxB,mBAAqB,SAACZ,EAAQE,EAAWkC,GACrC/F,IAAgB8G,aAAa,CACzB,QAAS,2BACTnD,OAAQA,EACRE,UAAWA,EACXkC,OAAQA,KAp8BF,EAw8BdH,yBAA2B,SAACjC,EAAQE,EAAWkC,GAC3C,EAAKlG,KAAK,iCAAkC,CACxC8D,OAAQA,EACRE,UAAWA,EACXkC,OAAQA,KA58BF,EAg9BdF,gBAAkB,SAAClC,EAAQE,EAAWkC,GAClC,EAAKlG,KAAK,wBAAyB,CAC/B8D,OAAQA,EACRE,UAAWA,EACXkC,OAAQA,KAp9BF,EAw9BdX,2BAA6B,SAACzB,EAAQE,EAAWkC,GAC7C,EAAKlG,KAAK,mCAAoC,CAC1C8D,OAAQA,EACRE,UAAWA,EACXkC,OAAQA,KA59BF,EAg+BdV,kBAAoB,SAAC1B,EAAQE,EAAWkC,GACpC,EAAKlG,KAAK,0BAA2B,CACjC8D,OAAQA,EACRE,UAAWA,EACXkC,OAAQA,KAp+BF,EAw+BdpB,mBAAqB,SAAChB,EAAQE,EAAWkC,GACrC,EAAKlG,KAAK,2BAA4B,CAClC8D,OAAQA,EACRE,UAAWA,EACXkC,OAAQA,KA5+BF,EAg/BdzB,4BAA8B,SAACX,EAAQE,EAAWkC,GAC9C,EAAKlG,KAAK,oCAAqC,CAC3C8D,OAAQA,EACRE,UAAWA,EACXkC,OAAQA,KAj/BZ,EAAKrH,QAEL,EAAKqB,mBALK,E,4GA+mBDgH,G,0EAWLC,KAAKpI,G,uBAEDmI,GAAUA,I,8BAIdC,KAAKC,a,uBAEDF,GAAUC,KAAKrI,UAAUuI,KAAKH,G,iCAKlCA,GAAUC,KAAKrI,UAAUuI,KAAKH,GAElCC,KAAKC,cAAe,E,UACJD,KAAKG,SAASC,MAAM,SAAAlF,GAAK,OAAID,QAAQoF,IAAI,2BAA4BnF,K,QAKrF,GALA8E,KAAKpI,G,OACLoI,KAAKC,cAAe,EAIhBD,KAAKrI,UAAUsG,OAAQ,CAEvB,IAASF,EAAI,EAAGA,EAAIiC,KAAKrI,UAAUsG,OAAQF,IACvCiC,KAAKrI,UAAUoG,KAEnBiC,KAAKrI,UAAY,G,qIAKrB,OAAO,IAAI2I,QAAQ,SAACC,EAASC,GACzB,IAAMC,EAAUC,OAAOC,UAAUC,KAAK,SACtCH,EAAQI,UAAY,kBAAMN,EAAQE,EAAQK,SAC1CL,EAAQM,QAAU,kBAAMP,EAAOC,EAAQvF,Y,iCAK3C,IAAI1D,EAKJ,OAAOwI,KAAKpI,GAAGoJ,YAAY,CAAC,iBAAkB,YAAYC,YAAY,mB,0CAItE,IAAIzJ,EAIJ,OAAOwI,KAAKpI,GAAGoJ,YAAY,CAAC,iBAAkB,aAAaC,YAAY,mB,mCAK9DxJ,EAAOkB,EAAMa,EAAKuG,EAAUmB,GAAgB,IAAD,OAKpD,GAAI1J,EAEA,OADAmB,EAAOqH,KAAKlG,IAAInB,EAAKc,KAAOd,IAChBA,EAAKgB,QAAUhB,EAAKgB,MAAME,8BAClCqH,SAIJ,sCAAC,WAAMvI,GAAN,eAAAH,EAAA,qEAE0BQ,IAAgBmI,KAAK,CACxC,QAAS,WACTC,QAASzI,EAAKc,KAJrB,OAES4H,EAFT,OAQG,EAAKpC,QAAQtG,EAAKc,GAAI4H,EAASC,MARlC,yCAAD,sDASG3I,GAAM4I,KAAKxB,EAAUmB,GAK5B,IAAIxH,EAAUf,EAAKe,QAMnB,GALKA,IAEDA,GADAf,EAAOqH,KAAKlG,IAAInB,EAAKc,KAAOd,GACbe,SAGdA,GAAYF,EAAjB,CAKA,GAAIA,EAIA,OAHAb,EAAKuG,KAAO,IAAIsC,KAAK,CAAChI,IACtBwG,KAAKf,QAAQtG,EAAKc,GAAId,EAAKuG,WAC3Ba,IAIJ,IAAIpH,EAAKuG,KAAT,CASA,IAAMuB,EAAUhJ,EAAMqC,IAAIJ,GAC1B+G,EAAQI,UAAY,SAAAY,GAChB,IAAMvC,EAAOuC,EAAMC,OAAOZ,OAEtB5B,GACAvG,EAAKuG,KAAOA,EACZ,EAAKD,QAAQtG,EAAKc,GAAId,EAAKuG,MAC3Ba,KAEAmB,KAGRT,EAAQM,QAAU,WACdG,WAjCAA,M,oCAqCMnC,EAAQ4C,EAAUjF,GAK5B,IAAMzE,EAAQ+H,KAAK5H,UAAU0B,IAAIiF,IAAW,GACxC9G,EAAM2J,KAAK,SAAAC,GAAC,OAAIA,IAAMnF,MAE1BzE,EAAMiI,KAAKxD,GACXsD,KAAK5H,UAAUM,IAAIqG,EAAQ9G,GAE3Be,IAAgBmI,KAAK,CACjB,QAAS,eACTC,QAASrC,EACT4C,SAAUA,O,0CAIE5C,EAAQrC,GACxB,GAAKsD,KAAK5H,UAAUwB,IAAImF,GAAxB,CAEA,GAAKrC,EAEE,CACH,IAAMzE,EAAQ+H,KAAK5H,UAAU0B,IAAIiF,GAAQ+C,OAAO,SAAAD,GAAC,OAAIA,IAAMnF,IAC3DsD,KAAK5H,UAAUM,IAAIqG,EAAQ9G,QAH3B+H,KAAK5H,UAAU2B,OAAOgF,GAM1B/F,IAAgBmI,KAAK,CACjB,QAAS,qBACTC,QAASrC,EACTgD,iBAAiB,O,iCAIdhD,EAAQrC,GACXsD,KAAK3H,QAAQuB,IAAImF,GACLiB,KAAK3H,QAAQyB,IAAIiF,GACvBmB,KAAKxD,GAEXsD,KAAK3H,QAAQK,IAAIqG,EAAQ,CAACrC,IAG9BzB,QAAQoF,IAAI,6BAA+BtB,K,uCAG9BA,EAAQrC,GACjBsD,KAAK3H,QAAQuB,IAAImF,KACjBiB,KAAK3H,QAAQ0B,OAAOgF,GACpB9D,QAAQoF,IAAI,4BAA8B3D,EAAIjD,IAC9CT,IAAgBmI,KAAK,CACjB,QAAS,iBACTvE,QAASF,EAAIE,QACboF,YAAa,CAACtF,EAAIjD,IAClBwI,QAAQ,O,0CAyMAC,EAAQnD,GACxBiB,KAAKnH,KAAK,uBAAwB,CAC9BqJ,OAAQA,EACRnD,OAAQA,M,0CAIIpC,EAAQoC,GACxBiB,KAAKnH,KAAK,uBAAwB,CAC9B8D,OAAQA,EACRoC,OAAQA,Q,GAngCIoD,MAygCxBzB,OAAO/H,KAAOlB,EACCA,O,ixCCp/Bf,SAAS2K,EAAcC,GACnB,OAAKA,EAEDA,EAAO,KACD,GAAN,OAAUA,EAAV,MAGAA,EAAO,QACD,GAAN,QAAWA,EAAO,MAAMC,QAAQ,GAAhC,OAGAD,EAAO,WACD,GAAN,QAAWA,EAAO,KAAO,MAAMC,QAAQ,GAAvC,OAGE,GAAN,QAAWD,EAAO,KAAO,KAAO,MAAMC,QAAQ,GAA9C,OAdiB,MAiBrB,SAASC,EAAY5J,GACjB,IAAKA,EAAM,MAAO,GAElB,IAAI0J,EAAO1J,EAAK0J,KAChB,OAAKA,EAEED,EAAcC,GAFH,GAyCtB,SAASG,EAAStD,EAAMuD,GACpB,GAA2C,qBAAhC/B,OAAOgC,UAAUC,WAKxBjC,OAAOgC,UAAUC,WAAWzD,EAAMuD,OAC/B,CACH,IAAIG,EAAUlC,OAAOf,IAAIC,gBAAgBV,GACrC2D,EAAW5G,SAAS6G,cAAc,KACtCD,EAASE,MAAMC,QAAU,OACzBH,EAASI,KAAOL,EAChBC,EAASK,aAAa,WAAYT,GAMD,qBAAtBI,EAASM,UAChBN,EAASK,aAAa,SAAU,UAGpCjH,SAASmH,KAAKC,YAAYR,GAC1BA,EAASS,QACTrH,SAASmH,KAAKG,YAAYV,GAC1BnC,OAAOf,IAAI6D,gBAAgBZ,I,SAIpBa,E,iFAAf,WAA2BhM,EAAOkF,EAAQ+G,GAA1C,iBAAAlL,EAAA,wDACSmE,EADT,oDAES+G,EAFT,oDAGSA,EAAWzF,OAHpB,iEAKyBjF,IAAgBmI,KAAK,CACtC,QAAS,cACTvE,QAASD,EACTqF,YAAa0B,IARrB,OAwBI,KAnBM5C,EALV,QAWW6C,SAAW7C,EAAO6C,SAASC,IAAI,SAAChI,EAASmC,GAC5C,OACInC,GAAW,CACP,QAAS,iBACTgB,QAASD,EACTlD,GAAIiK,EAAW3F,GACflC,QAAS,QAKrBgI,IAAaC,SAAShD,EAAO6C,UAEpB5F,EAAI2F,EAAWzF,OAAS,EAAGF,GAAK,EAAGA,IACxC8F,IAAahL,KAAK,mBAAoBgL,IAAa/J,IAAI6C,EAAQ+G,EAAW3F,KAK9EgG,EAFQC,IAAUhK,WAEO8G,EAAO6C,UA9BpC,2C,sBAiCA,SAASI,EAAkBtM,EAAOkM,GAC9B,IAAK,IAAI5F,EAAI4F,EAAS1F,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAC3C,IAAMnC,EAAU+H,EAAS5F,GACzB,GAAKnC,EAAL,CAF2C,IAMnCC,EAAYD,EAAZC,QACR,GAAIA,EACA,OAAQA,EAAQ,UACZ,IAAK,mBAGDoI,EAA8BxM,EAFRoE,EAAdC,UAEwCF,GAChD,MAEJ,IAAK,eAGDsI,EAA0BzM,EAFRoE,EAAVE,MAEgCH,GACxC,MAEJ,IAAK,yBAGDuI,EAAiB1M,EAFCoE,EAAVG,MAEuBJ,GAC/B,MAEJ,IAAK,kBAGDwI,EAA6B3M,EAFRoE,EAAbI,SAEsCL,GAC9C,MAEJ,IAAK,cAGDyI,EAAyB5M,EAFRoE,EAATK,KAE8BN,GACtC,MAEJ,IAAK,eAGDuI,EAAiB1M,EAFCoE,EAAVG,MAEuBJ,GAC/B,MAEJ,IAAK,iBAGD0I,EAA4B7M,EAFRoE,EAAZO,QAEoCR,GAC5C,MAEJ,IAAK,cAAgB,IACTS,EAAaR,EAAbQ,SACR,IAAKA,EAAU,MAFC,IAIRP,EAAkEO,EAAlEP,UAAWC,EAAuDM,EAAvDN,MAAOE,EAAgDI,EAAhDJ,SAAUD,EAAsCK,EAAtCL,MAAOI,EAA+BC,EAA/BD,QAASE,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,WAE3D,GAAIP,EAAO,CACPmI,EAAiB1M,EAAOuE,EAAOJ,GAC/B,MAGJ,GAAIE,EAAW,CACXmI,EAA8BxM,EAAOqE,EAAWF,GAChD,MAGJ,GAAIG,EAAO,CACPmI,EAA0BzM,EAAOsE,EAAOH,GACxC,MAGJ,GAAIK,EAAU,CACVmI,EAA6B3M,EAAOwE,EAAUL,GAC9C,MAGJ,GAAIQ,EAAS,CACTkI,EAA4B7M,EAAO2E,EAASR,GAC5C,MAGJ,GAAIU,EAAO,CACPiI,EAA0B9M,EAAO6E,EAAOV,GACxC,MAGJ,GAAIW,EAAY,CACZiI,EAA8B/M,EAAO8E,EAAYX,GACjD,MAGJ,MAEJ,IAAK,eAGD2I,EAA0B9M,EAFRoE,EAAVS,MAEgCV,GACxC,MAEJ,IAAK,mBAGD4I,EAA8B/M,EAFPoE,EAAfU,WAEyCX,MAQrE,SAAS6I,EAAiBhN,EAAOsE,EAAOH,GAA8B,IAArB8I,IAAoB,yDACjE,GAAK3I,EAAL,CADiE,IAGpDpD,EAASoD,EAAhBA,MACN,GAAKpD,EAAL,CAJiE,MAMjEA,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EACzBc,EAPyD,EAOzDA,GAAI4I,EAPqD,EAOrDA,KAGZ,IADa2B,IAAUhF,QAAQvF,GAC/B,CAEA,IAAMkD,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAEzCuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAU3G,gBAAgBV,EAAQE,EAAWpD,IACnD,aACSiL,GAAgBrC,GAAQA,EAAOsC,MAChCX,IAAUxI,cAAc/B,EAAIgC,IAAeG,GAAWG,QAMtE,SAASmI,EAA0BzM,EAAOsE,EAAOH,GAC7C,IAAKG,EAAO,OAAO,EADmC,IAGvBmC,EAAcnC,EAArCoB,sBACR,IAAKe,EAAW,OAAO,EAJ+B,IAMzCvF,EAASuF,EAAhBlC,MACN,IAAKrD,EAAM,OAAO,EAPoC,IAU9Cc,GADRd,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,GACzBc,GAGR,GADauK,IAAUhF,QAAQrG,EAAKc,IAC1B,OAAO,EAEjB,IAAMkD,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAUzC,OARAuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAU5G,yBAAyBT,EAAQE,EAAWpD,IAC5D,kBAAMuK,IAAUxI,cAAc/B,EAAIwD,KAAoBrB,GAAWG,MAG9D,EAGX,SAAS6I,EAA2B9I,GAAY,IACzBnD,EAASmD,EAApBA,UACR,GAAKnD,EAAL,CAF2C,IAInCc,EAAOd,EAAPc,GAEKd,EAAKuG,MAAQ8E,IAAUhF,QAAQvF,IAG5CuK,IAAUa,oBAAoBpL,IAGlC,SAASqL,EAAqBrN,EAAOqE,EAAWF,GAA8B,IAArB8I,IAAoB,yDACzE,GAAK5I,EAAL,CADyE,IAGxDnD,EAASmD,EAApBA,UACN,GAAKnD,EAAL,CAJyE,MAMzEA,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EACzBc,EAPiE,EAOjEA,GAAI4I,EAP6D,EAO7DA,KAGZ,IADa2B,IAAUhF,QAAQvF,GAC/B,CAEA,IAAMkD,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAEzCuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAU9G,oBAAoBP,EAAQE,EAAWpD,IACvD,aACSiL,GAAgBrC,GAAQA,EAAO0C,MAChCf,IAAUxI,cAAc/B,EAAIgC,IAAeG,GAAWE,QAMtE,SAASkJ,EAAoClJ,GACzC,GAAKA,EAAL,CADoD,IAGjCoC,EAAcpC,EAAzBgB,UACR,GAAKoB,EAAL,CAJoD,IAMvCvF,EAASuF,EAAhBlC,MACN,GAAKrD,EAAL,CAPoD,IAU5Cc,GADRd,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,GACzBc,GAEKuK,IAAUhF,QAAQvF,IAG/BuK,IAAUa,oBAAoBpL,MAGlC,SAASwK,EAA8BxM,EAAOqE,EAAWF,GACrD,IAAKE,EAAW,OAAO,EADuC,IAG3CoC,EAAcpC,EAAzBgB,UACR,IAAKoB,EAAW,OAAO,EAJuC,IAMjDvF,EAASuF,EAAhBlC,MACN,IAAKrD,EAAM,OAAO,EAP4C,IAUtDc,GADRd,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,GACzBc,GAGR,GADauK,IAAUhF,QAAQrG,EAAKc,IAC1B,OAAO,EAEjB,IAAMkD,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAUzC,OARAuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAUhH,6BAA6BL,EAAQE,EAAWpD,IAChE,kBAAMuK,IAAUxI,cAAc/B,EAAIwD,KAAoBrB,GAAWE,MAG9D,EAGX,SAASmJ,EAAmBxN,EAAOyN,EAAStJ,GACxC,GAAKsJ,GACAtJ,EAAL,CAFiD,IAIzCuJ,EAAYD,EAAZC,QACFzJ,EAAO0J,IAAUtL,IAAIqL,GACtBzJ,GAEL2J,GAAgB5N,EAAOiE,IAG3B,SAAS4J,EAAoB7N,EAAOwE,EAAUL,GAA8B,IAArB8I,IAAoB,yDACvE,GAAKzI,EAAL,CADuE,IAGvDtD,EAASsD,EAAnBA,SACN,GAAKtD,EAAL,CAJuE,MAMvEA,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EACzBc,EAP+D,EAO/DA,GAAI4I,EAP2D,EAO3DA,KAGZ,IADa2B,IAAUhF,QAAQvF,GAC/B,CAEA,IAAMkD,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAEzCuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAUzG,mBAAmBZ,EAAQE,EAAWpD,IACtD,aACSiL,GAAgBrC,GAAQA,EAAOkD,MAChCvB,IAAUxI,cAAc/B,EAAIgC,IAAeG,GAAWK,QAMtE,SAASmI,EAA6B3M,EAAOwE,EAAUL,GACnD,IAAKK,EAAU,OAAO,EADsC,IAGzCiC,EAAcjC,EAAzBa,UACR,IAAKoB,EAAW,OAAO,EAJqC,IAM/CvF,EAASuF,EAAhBlC,MACN,IAAKrD,EAAM,OAAO,EAP0C,IAUpDc,GADRd,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,GACzBc,GAGR,GADauK,IAAUhF,QAAQrG,EAAKc,IAC1B,OAAO,EAEjB,IAAMkD,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAUzC,OARAuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAU1G,4BAA4BX,EAAQE,EAAWpD,IAC/D,kBAAMuK,IAAUxI,cAAc/B,EAAIwD,KAAoBrB,GAAWK,MAG9D,EAGX,SAASuJ,EAAgB/N,EAAOyE,EAAMN,GAA8B,IAArB8I,IAAoB,yDAC1DxI,GAIL4I,EAAqBrN,EAFCyE,EAAdJ,UAE+BF,EAAS8I,GAGpD,SAASL,EAAyB5M,EAAOyE,EAAMN,GAC3C,IAAKM,EAAM,OAAO,EADkC,IAG5CF,EAAqBE,EAArBF,MACR,QAAIiI,EAA8BxM,EADLyE,EAAdJ,UACqCF,KAIpDuI,EAAiB1M,EAAOuE,EAAOJ,IACxB,G,2CAGX,WAAuCnE,EAAOmG,EAAchC,GAA5D,yBAAApD,EAAA,wDACSoF,EADT,oDAGYzB,EAAayB,EAAbzB,SACFqB,EAAaC,YAActB,EAAU0B,IAAmBC,KAJlE,oDAOQnF,EAAOqL,IAAUtG,gBAAgBF,GAPzC,kCASqBxE,IAAgBmI,KAAK,CAC9B,QAAS,sBACThF,WACAsJ,MAAO5H,IACP6H,OAAQ5H,IACR6H,KAAMC,IACNC,MAAOC,IACPlJ,QAAShB,EAAUA,EAAQgB,QAAU,IAhBjD,QASQjE,EATR,OAkBQqL,IAAU5E,gBAAgB5B,EAAY7E,GAEtClB,EAAQuM,IAAUhK,WApB1B,WAuBIrB,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EACzBc,EAAOd,EAAPc,IAEKuK,IAAUhF,QAAQrG,EAAKc,IA1BxC,mDA6BUkD,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAEzCuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAUrG,mBAAmBhB,EAAQE,EAAWpD,IACtD,kBAAMuK,IAAUxI,cAAc/B,EAAIgC,IAAeG,GAAWgC,KArCpE,2C,+BAyCemI,E,iFAAf,WAAmCtO,EAAO0E,EAAUP,GAApD,uBAAApD,EAAA,wDACS2D,EADT,oDAGUqB,EAAaC,YAActB,GAHrC,oDAMQxD,EAAOqL,IAAUtG,gBAAgBF,GANzC,iCAQqBxE,IAAgBmI,KAAK,CAC9B,QAAS,sBACThF,WACAsJ,MAAOO,IACPN,OAAQO,IACRN,KAAMC,IACNC,MAAOC,IACPlJ,QAAShB,EAAUA,EAAQgB,QAAU,IAfjD,OAQQjE,EARR,OAiBQqL,IAAU5E,gBAAgB5B,EAAY7E,GAEtClB,EAAQuM,IAAUhK,WAnB1B,WAsBIrB,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EACzBc,EAAOd,EAAPc,IAEKuK,IAAUhF,QAAQrG,EAAKc,IAzBxC,mDA4BUkD,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAEzCuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAUrG,mBAAmBhB,EAAQE,EAAWpD,IACtD,kBAAMuK,IAAUxI,cAAc/B,EAAIgC,IAAeG,GAAWO,KApCpE,2C,sBAwCA,SAAS+J,EAA0BlK,GAC/B,GAAKA,EAAL,CADsC,IAG9BgC,EAAUhC,EAAVgC,MACR,GAAKA,EAAL,CAEA,IAAME,EAAYiI,YAAQnI,EAAOoI,KACjC,GAAKlI,EAAL,CAPsC,IASzBvF,EAASuF,EAAhBlC,MACN,GAAKrD,EAAL,CAVsC,IAa9Bc,GADRd,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,GACzBc,GAEKuK,IAAUhF,QAAQvF,IAG/BuK,IAAUa,oBAAoBpL,OAGlC,SAAS4M,EAAoB5O,EAAOuE,EAAOJ,GACvC,GAAKI,EAAL,CADgD,IAGxCgC,EAAUhC,EAAVgC,MACR,GAAKA,EAAL,CAEA,IAAME,EAAYiI,YAAQnI,EAAOoI,KACjC,GAAKlI,EAAL,CAPgD,IASnCvF,EAASuF,EAAhBlC,MACN,GAAKrD,EAAL,CAVgD,IAaxCc,GADRd,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,GACzBc,GAGR,IADauK,IAAUhF,QAAQvF,GAC/B,CAEA,IAAMkD,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAEzCuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAU7F,gBAAgBxB,EAAQE,EAAWpD,IACnD,kBAAMuK,IAAUxI,cAAc/B,EAAIgC,IAAeG,GAAWI,UAIpE,SAASmI,EAAiB1M,EAAOuE,EAAOJ,GAAoC,IAA3B0K,EAA0B,uDAAZC,IAC3D,GAAKvK,EAAL,CADuE,IAG/DgC,EAAUhC,EAAVgC,MACR,GAAKA,EAAL,CAEA,IAAME,EAAYsI,YAAaxI,EAAOsI,GACtC,GAAKpI,EAAL,CAPuE,IAS1DvF,EAASuF,EAAhBlC,MACN,GAAKrD,EAAL,CAVuE,IAa/Dc,GADRd,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,GACzBc,GAGR,IADauK,IAAUhF,QAAQvF,GAC/B,CAEA,IAAMkD,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAEzCuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAU7F,gBAAgBxB,EAAQE,EAAWpD,IACnD,kBAAMuK,IAAUxI,cAAc/B,EAAIgC,IAAeG,GAAWI,UAIpE,SAASyK,EAA0BhP,EAAOuE,EAAOJ,GAC7C,IAAKI,EAAO,OAAO,EACnB,IAAKJ,EAAS,OAAO,EAErB,IAAM8K,EAAYC,YAAsB3K,EAAMgC,OAC9C,IAAK0I,EAAW,OAAO,EAGvB,GADkBF,YAAaxK,EAAMgC,SACnB0I,EAAlB,CARsD,IAUzC/N,EAAS+N,EAAhB1K,MACN,IAAKrD,EAAM,OAAO,EAXoC,IAc9Cc,GADRd,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,GACzBc,GAGR,QADauK,IAAUhF,QAAQvF,KAG/BuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAU7F,gBAAgBvC,EAAQgB,QAAShB,EAAQnC,GAAIA,IAC7D,kBAAMuK,IAAUxI,cAAc/B,EAAIwD,KAAoBrB,MAGnD,IAGX,SAASgL,EAAmBnP,EAAO2E,EAASR,GAA8B,IAArB8I,IAAoB,yDACrE,GAAKtI,EAAL,CADqE,IAGtDzD,EAASyD,EAAlBA,QACN,GAAKzD,EAAL,CAJqE,MAMrEA,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EACzBc,EAP6D,EAO7DA,GAAI4I,EAPyD,EAOzDA,KAGZ,IADa2B,IAAUhF,QAAQvF,GAC/B,CAEA,IAAMkD,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAEzCuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAU3F,kBAAkB1B,EAAQE,EAAWpD,IACrD,aACSiL,GAAgBrC,GAAQA,EAAOwE,MAChC7C,IAAUxI,cAAc/B,EAAIgC,IAAeG,GAAWQ,QAMtE,SAASkI,EAA4B7M,EAAO2E,EAASR,GACjD,IAAKQ,EAAS,OAAO,EADqC,IAGvC8B,EAAc9B,EAAzBU,UACR,IAAKoB,EAAW,OAAO,EAJmC,IAM7CvF,EAASuF,EAAhBlC,MACN,IAAKrD,EAAM,OAAO,EAPwC,IAUlDc,GADRd,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,GACzBc,GAGR,GADauK,IAAUhF,QAAQvF,GACrB,OAAO,EAEjB,IAAMkD,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAUzC,OARAuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAU5F,2BAA2BzB,EAAQE,EAAWpD,IAC9D,kBAAMuK,IAAUxI,cAAc/B,EAAIwD,KAAoBrB,GAAWQ,MAG9D,EAGX,SAAS0K,EAAuBxK,GAC5B,GAAKA,EAAL,CADmC,IAGtB3D,EAAS2D,EAAhBA,MACN,GAAK3D,EAAL,CAJmC,IAO3Bc,GADRd,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,GACzBc,GAEKuK,IAAUhF,QAAQvF,IAG/BuK,IAAUa,oBAAoBpL,KAGlC,SAASsN,EAAiBtP,EAAO6E,EAAOV,GAA8B,IAArB8I,IAAoB,yDACjE,GAAKpI,EAAL,CADiE,IAGpD3D,EAAS2D,EAAhBA,MACN,GAAK3D,EAAL,CAJiE,MAMjEA,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EACzBc,EAPyD,EAOzDA,GAAI4I,EAPqD,EAOrDA,KAGZ,IADa2B,IAAUhF,QAAQvF,GAC/B,CAEA,IAAMkD,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAEzCuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAUnF,gBAAgBlC,EAAQE,EAAWpD,IACnD,aACSiL,GAAgBrC,GAAQA,EAAO2E,OAChChD,IAAUxI,cAAc/B,EAAIgC,IAAeG,GAAWU,QAMtE,SAAS2K,EAAgC3K,GACrC,GAAKA,EAAL,CAD4C,IAGzB4B,EAAc5B,EAAzBQ,UACR,IAAKoB,EAAW,OAAO,EAJqB,IAM/BvF,EAASuF,EAAhBlC,MACN,IAAKrD,EAAM,OAAO,EAP0B,IAUpCc,GADRd,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,GACzBc,GAGR,GADauK,IAAUhF,QAAQvF,GACrB,OAAO,EAEjBuK,IAAUa,oBAAoBpL,IAGlC,SAAS8K,EAA0B9M,EAAO6E,EAAOV,GAC7C,IAAKU,EAAO,OAAO,EADmC,IAGnC4B,EAAc5B,EAAzBQ,UACR,IAAKoB,EAAW,OAAO,EAJ+B,IAMzCvF,EAASuF,EAAhBlC,MACN,IAAKrD,EAAM,OAAO,EAPoC,IAU9Cc,GADRd,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,GACzBc,GAGR,GADauK,IAAUhF,QAAQvF,GACrB,OAAO,EAEjB,IAAMkD,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAUzC,OARAuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAUpF,yBAAyBjC,EAAQE,EAAWpD,IAC5D,kBAAMuK,IAAUxI,cAAc/B,EAAIwD,KAAoBrB,GAAWU,MAG9D,EAGX,SAAS4K,EAAqBzP,EAAOgH,EAAW7C,GAA8B,IAArB8I,IAAoB,yDACzE,GAAKjG,EAAL,CADyE,IAG5D9F,EAAS8F,EAAhBnC,MACN,GAAK3D,EAAL,CAJyE,MAMzEA,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EACzBc,EAPiE,EAOjEA,GAAI4I,EAP6D,EAO7DA,KAGZ,IADa2B,IAAUhF,QAAQvF,GAC/B,CAEA,IAAMkD,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAEzCuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAUrF,oBAAoBhC,EAAQE,EAAWpD,IACvD,aACSiL,GAAgBrC,GAAQA,EAAO8E,OAChCnD,IAAUxI,cAAc/B,EAAIgC,IAAeG,GAAW6C,QAMtE,SAAS+F,EAA8B/M,EAAOgH,EAAW7C,GACrD,IAAK6C,EAAW,OAAO,EADuC,IAG3CP,EAAcO,EAAzB3B,UACR,IAAKoB,EAAW,OAAO,EAJuC,IAMjDvF,EAASuF,EAAhBlC,MACN,IAAKrD,EAAM,OAAO,EAP4C,IAUtDc,GADRd,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,GACzBc,GAGR,GADauK,IAAUhF,QAAQvF,GACrB,OAAO,EAEjB,IAAMkD,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAUzC,OARAuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAUtF,6BAA6B/B,EAAQE,EAAWpD,IAChE,kBAAMuK,IAAUxI,cAAc/B,EAAIwD,KAAoBrB,GAAW6C,MAG9D,EAGX,SAAS2I,EAAqB3P,EAAO6G,EAAW1C,GAA8B,IAArB8I,IAAoB,yDACzE,GAAKpG,EAAL,CADyE,IAG5D3F,EAAS2F,EAAhBC,MACN,GAAK5F,EAAL,CAJyE,MAMzEA,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EACzBc,EAPiE,EAOjEA,GAAI4I,EAP6D,EAO7DA,KAGZ,IADa2B,IAAUhF,QAAQvF,GAC/B,CAEA,IAAMkD,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAEzCuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAUxF,oBAAoB7B,EAAQE,EAAWpD,IACvD,aACSiL,GAAgBrC,GAAQA,EAAOgF,OAChCrD,IAAUxI,cAAc/B,EAAIgC,IAAeG,GAAW0C,QAMtE,SAASgJ,EAAoB7P,EAAOkM,GAKhC,IAJA,IAAM4D,EAAQ,IAAIvP,IACd2E,EAAS,EACP6K,EAAU,IAAIxP,IAEX+F,EAAI4F,EAAS1F,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAC3C,IAAMnC,EAAU+H,EAAS5F,GACzB,GAAKnC,EAAL,CAF2C,IAMnCgB,EAA0DhB,EAA1DgB,QAASf,EAAiDD,EAAjDC,QAAS4L,EAAwC7L,EAAxC6L,eAAgBC,EAAwB9L,EAAxB8L,oBAW1C,GATID,GACAF,EAAM7O,IAAI+O,EAAgBA,GAG1BC,IACA/K,EAASC,EACT4K,EAAQ9O,IAAIgP,EAAqBA,IAGjC7L,EACA,OAAQA,EAAQ,UACZ,IAAK,mBAAqB,IACdC,EAAcD,EAAdC,UAERgJ,EAAqBrN,EAAOqE,EAAWF,GACvCqI,EAA8BxM,EAAOqE,EAAWF,GAChD,MAEJ,IAAK,eAAiB,IACVG,EAAUF,EAAVE,MAER0I,EAAiBhN,EAAOsE,EAAOH,GAC/BsI,EAA0BzM,EAAOsE,EAAOH,GACxC,MAEJ,IAAK,yBAA2B,IACpBI,EAAUH,EAAVG,MAERmI,EAAiB1M,EAAOuE,EAAOJ,GAC/ByK,EAAoB5O,EAAOuE,EAAOJ,GAClC,MAEJ,IAAK,iBAGDqJ,EAAmBxN,EAFCoE,EAAZqJ,QAE2BtJ,GACnC,MAEJ,IAAK,kBAAoB,IACbK,EAAaJ,EAAbI,SAERqJ,EAAoB7N,EAAOwE,EAAUL,GACrCwI,EAA6B3M,EAAOwE,EAAUL,GAC9C,MAEJ,IAAK,cAAgB,IACTM,EAASL,EAATK,KAERsJ,EAAgB/N,EAAOyE,EAAMN,GAC7ByI,EAAyB5M,EAAOyE,EAAMN,GACtC,MAEJ,IAAK,kBAGDmK,EAAoBtO,EAFCoE,EAAbM,SAE6BP,GACrC,MAEJ,IAAK,cAAgB,IACTS,EAAaR,EAAbQ,SACR,IAAKA,EACD,MAHY,IAMRP,EAA8EO,EAA9EP,UAAWC,EAAmEM,EAAnEN,MAAOE,EAA4DI,EAA5DJ,SAAUD,EAAkDK,EAAlDL,MAAOI,EAA2CC,EAA3CD,QAASE,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WACnEmL,GAAY,EAEZ7L,IACAgJ,EAAqBrN,EAAOqE,EAAWF,GACvC+L,GAAa1D,EAA8BxM,EAAOqE,EAAWF,IAG7DG,IACA0I,EAAiBhN,EAAOsE,EAAOH,GAC/B+L,GAAazD,EAA0BzM,EAAOsE,EAAOH,IAGrDK,IACAqJ,EAAoB7N,EAAOwE,EAAUL,GACrC+L,GAAavD,EAA6B3M,EAAOwE,EAAUL,IAG3DQ,IACAwK,EAAmBnP,EAAO2E,EAASR,GACnC+L,GAAarD,EAA4B7M,EAAO2E,EAASR,IAGzDU,IAEAqL,GAAapD,EAA0B9M,EAAO6E,EAAOV,IAGrDW,IACA2K,EAAqBzP,EAAO8E,EAAYX,GACxC+L,GAAanD,EAA8B/M,EAAO8E,EAAYX,IAG9DY,GACA4K,EAAqB3P,EAAO+E,EAAYZ,GAGxC+L,IACAtB,EAAoB5O,EAAOuE,EAAOJ,GAClCuI,EAAiB1M,EAAOuE,EAAOJ,GAC/B6K,EAA0BhP,EAAOuE,EAAOJ,IAE5C,MAEJ,IAAK,eAAiB,IACVI,EAAUH,EAAVG,MAERqK,EAAoB5O,EAAOuE,EAAOJ,GAClCuI,EAAiB1M,EAAOuE,EAAOJ,GAC/B6K,EAA0BhP,EAAOuE,EAAOJ,GACxC,MAEJ,IAAK,iBAAmB,IACZQ,EAAYP,EAAZO,QAERwK,EAAmBnP,EAAO2E,EAASR,GACnC0I,EAA4B7M,EAAO2E,EAASR,GAC5C,MAEJ,IAAK,eAIDmK,EAAoBtO,EAHFoE,EAAVY,MACAN,SAE6BP,GACrC,MAEJ,IAAK,eAID2I,EAA0B9M,EAHRoE,EAAVS,MAGgCV,GACxC,MAEJ,IAAK,mBAAqB,IACdW,EAAeV,EAAfU,WAER2K,EAAqBzP,EAAO8E,EAAYX,GACxC4I,EAA8B/M,EAAO8E,EAAYX,GACjD,MAEJ,IAAK,mBAGDwL,EAAqB3P,EAFEoE,EAAfW,WAEgCZ,KAUxDgM,GAAiBnQ,EAAD,YAAY8P,EAAMM,SAClCpE,EAAYhM,EAAOkF,EAAR,YAAoB6K,EAAQK,SAGpC,SAASC,EAAUC,EAAOnM,GAC7B,GAAKmM,EAEL,OAAQA,EAAM,UACV,IAAK,aAmBb,SAAuBjM,EAAWF,GAC9B,IAAMe,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAEzC,IAAKqC,EAAW,OAJuB,IAMpBnD,EAAoBmD,EAA/BA,UAAiBkM,EAAclM,EAAdkM,UACzB,IAAKrP,EAAM,OAP4B,IAS3BoG,EAAWpG,EAAfc,GAERwO,EAAetP,EAAMqP,GAAajJ,EAAQnD,GAAWE,EAAW,kBAC5DkI,IAAU9G,oBAAoBP,EAAQE,EAAWkC,KA9B7CmJ,CAAcH,EAAOnM,GACrB,MAEJ,IAAK,YA+Bb,SAAsBK,EAAUL,GAC5B,IAAMe,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAEzC,IAAKwC,EAAU,OAJsB,IAMnBtD,EAAoBsD,EAA9BA,SAAgB+L,EAAc/L,EAAd+L,UACxB,IAAKrP,EAAM,OAP0B,IASzBoG,EAAWpG,EAAfc,GAERwO,EAAetP,EAAMqP,GAAajJ,EAAQnD,GAAWK,EAAU,kBAC3D+H,IAAUzG,mBAAmBZ,EAAQE,EAAWkC,KA1C5CoJ,CAAaJ,EAAOnM,GACpB,MAEJ,IAAK,SA2Db,SAAmBI,EAAOJ,GACtB,IAAMe,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAEzC,IAAKuC,EAAO,OAEZ,IAAMkC,EAAYiI,YAAQnK,EAAMgC,MAAOoI,KACvC,IAAKlI,EAAW,OAPe,IAShBvF,EAASuF,EAAhBlC,MACR,IAAKrD,EAAM,OAVoB,IAYnBoG,EAAWpG,EAAfc,GAERwO,EAAetP,EAAMoG,EAAS,OAAQnD,GAAWI,EAAO,kBAAMgI,IAAU7F,gBAAgBxB,EAAQE,EAAWkC,KAxEnGqJ,CAAUL,EAAOnM,GACjB,MAEJ,IAAK,SAuCb,SAAmBU,EAAOV,GACtB,IAAMe,EAASf,EAAUA,EAAQgB,QAAU,EACrCC,EAAYjB,EAAUA,EAAQnC,GAAK,EAEzC,IAAK6C,EAAO,OAJmB,IAMhB3D,EAAoB2D,EAA3BA,MAAa0L,EAAc1L,EAAd0L,UACrB,IAAKrP,EAAM,OAPoB,IASnBoG,EAAWpG,EAAfc,GAERwO,EAAetP,EAAMqP,GAAajJ,EAAQnD,GAAWU,EAAO,kBACxD0H,IAAUnF,gBAAgBlC,EAAQE,EAAWkC,KAlDzCsJ,CAAUN,EAAOnM,IAuE7B,SAASqM,EAAetP,EAAM2P,EAAU5L,EAAKqD,GACzC,GAAKpH,GACA2P,EAEL,GAAI3P,EAAKa,KAtmCb,SAAkB8H,EAAMmB,EAAU8F,GAC9B,IAAIrJ,EAAO,IAAIsC,KAAK,CAACF,GAAO,CAAEkH,KAAMD,GAAQ,6BAC5C,GAA2C,qBAAhC7H,OAAOgC,UAAUC,WAKxBjC,OAAOgC,UAAUC,WAAWzD,EAAMuD,OAC/B,CACH,IAAIG,EAAUlC,OAAOf,IAAIC,gBAAgBV,GACrC2D,EAAW5G,SAAS6G,cAAc,KACtCD,EAASE,MAAMC,QAAU,OACzBH,EAASI,KAAOL,EAChBC,EAASK,aAAa,WAAYT,GAMD,qBAAtBI,EAASM,UAChBN,EAASK,aAAa,SAAU,UAGpCjH,SAASmH,KAAKC,YAAYR,GAC1BA,EAASS,QACTrH,SAASmH,KAAKG,YAAYV,GAC1BnC,OAAOf,IAAI6D,gBAAgBZ,IA6kC3B6F,CAAS9P,EAAKa,IAAK8O,OADvB,CAKA,IAAIpJ,EAAO8E,IAAUhF,QAAQrG,EAAKc,KAAOd,EAAKuG,KAC1CA,EACAsD,EAAStD,EAAMoJ,GAInBnF,EAASxK,EAAM+D,EAAK,WACZqD,GAAUA,KAEdb,EAAO8E,IAAUhF,QAAQrG,EAAKc,KAAOd,EAAKuG,OAEtCsD,EAAStD,EAAMoJ,MAK3B,SAASnF,EAASxK,EAAM+D,EAAKqD,GACzB,GAAKpH,EAAL,CADmC,IAE3Bc,EAAcd,EAAdc,GAAIE,EAAUhB,EAAVgB,MAGZ,IADaqK,IAAUhF,QAAQvF,GAK/B,GAAIE,EAAME,yBAAV,CACI,IAAMpC,EAAQuM,IAAUhK,WAExBgK,IAAU1I,aAAa7D,EAAOkB,EAAM,KAAMoH,EAAU,WAC5CpG,EAAM+O,mBACN1E,IAAUxI,cAAc7C,EAAKc,GAAIgC,IAAeiB,UAMxD/C,EAAM+O,mBACN1E,IAAUxI,cAAc/B,EAAIgC,IAAeiB,IAInD,SAASiM,GAAmBZ,GACxB,IAAKA,EAAO,MAAO,CAAC,EAAG,EAAG,MAE1B,OAAQA,EAAM,UACV,IAAK,YAAc,IACPjL,EAAciL,EAAdjL,UACR,GAAIA,EACA,MAAO,CAACA,EAAU2I,MAAO3I,EAAU4I,OAAQ5I,EAAUd,OAEzD,MAEJ,IAAK,WAAa,IACNc,EAAciL,EAAdjL,UACR,GAAIA,EACA,MAAO,CAACA,EAAU2I,MAAO3I,EAAU4I,OAAQ5I,EAAUd,OAEzD,MAEJ,IAAK,QACD,OAAO4M,GAAcb,EAAOxB,KAEhC,IAAK,QAAU,IACHzJ,EAAciL,EAAdjL,UACR,GAAIA,EACA,MAAO,CAACA,EAAU2I,MAAO3I,EAAU4I,OAAQ5I,EAAUd,OAEzD,MAEJ,QACI,MAAO,CAAC,EAAG,EAAG,MAItB,MAAO,CAAC,EAAG,EAAG,MAGlB,SAAS6M,GAAoBlM,EAAQE,GACjC,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,MAAO,CAAC,EAAG,EAAG,MAFgB,IAIpCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,MAAO,CAAC,EAAG,EAAG,MAE5B,OAAQA,EAAQ,UACZ,IAAK,mBAAqB,IACdC,EAAcD,EAAdC,UACR,GAAIA,GAAaA,EAAUgB,UACvB,MAAO,CAAChB,EAAUgB,UAAU2I,MAAO3J,EAAUgB,UAAU4I,OAAQ5J,EAAUgB,UAAUd,OAEvF,MAEJ,IAAK,yBACD,OAAO8M,GAAanM,EAAQE,EAAW0J,KAE3C,IAAK,kBAAoB,IACbtK,EAAaJ,EAAbI,SACR,GAAIA,EACA,MAAO,CAAC,GAAI,GAAIA,EAASA,UAE7B,MAEJ,IAAK,eACD,OAAO6M,GAAanM,EAAQE,EAAW0J,KAE3C,IAAK,cAAgB,IACTlK,EAAaR,EAAbQ,SACR,GAAIA,EAAU,CAAC,IACHP,EAAsCO,EAAtCP,UAAWG,EAA2BI,EAA3BJ,SAAUK,EAAiBD,EAAjBC,MAAON,EAAUK,EAAVL,MAEpC,GAAIF,GAAaA,EAAUgB,UACvB,MAAO,CAAChB,EAAUgB,UAAU2I,MAAO3J,EAAUgB,UAAU4I,OAAQ5J,EAAUgB,UAAUd,OAGvF,GAAIC,EACA,MAAO,CAAC,GAAI,GAAIA,EAASA,UAG7B,GAAIK,GAASA,EAAMQ,UACf,MAAO,CAACR,EAAMQ,UAAU2I,MAAOnJ,EAAMQ,UAAU4I,OAAQpJ,EAAMQ,UAAUd,OAG3E,GAAIA,EACA,OAAO8M,GAAanM,EAAQE,EAAW0J,KAG/C,MAEJ,IAAK,eAAiB,IACVjK,EAAUT,EAAVS,MACR,GAAIA,EAAMQ,UACN,MAAO,CAACR,EAAMQ,UAAU2I,MAAOnJ,EAAMQ,UAAU4I,OAAQpJ,EAAMQ,UAAUd,OAE3E,MAEJ,QACI,MAAO,CAAC,EAAG,EAAG,MAItB,MAAO,CAAC,EAAG,EAAG,MAGlB,SAAS4M,GAAcb,EAAO1F,GAC1B,IAAKA,EAAM,MAAO,CAAC,EAAG,EAAG,KAAM,IAE/B,OAAQ0F,EAAM,UACV,IAAK,YACD,MAAO,CAACA,EAAMtC,MAAOsC,EAAMrC,OAAQqC,EAAMjM,UAAWiM,EAAMgB,WAE9D,IAAK,QACD,IAAM7K,EAAYiI,YAAQ4B,EAAM/J,MAAOqE,GACvC,GAAInE,EACA,MAAO,CAACA,EAAUuH,MAAOvH,EAAUwH,OAAQxH,EAAUlC,MAAO,IAEhE,MAEJ,IAAK,WACD,MAAO,CAAC,GAAI,GAAIC,SAASA,SAAUA,SAAS8M,WAEhD,IAAK,QACD,MAAO,CAAChB,EAAMtC,MAAOsC,EAAMrC,OAAQqC,EAAMzL,MAAOyL,EAAMgB,WAM9D,MAAO,CAAC,EAAG,EAAG,KAAM,IAGxB,SAASD,GAAanM,EAAQE,EAAWwF,GACrC,IAAKA,EAAM,MAAO,CAAC,EAAG,EAAG,MACzB,IAAMzG,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,MAAO,CAAC,EAAG,EAAG,KAAM,IAHS,IAKnCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,MAAO,CAAC,EAAG,EAAG,KAAM,IAElC,OAAQA,EAAQ,UACZ,IAAK,mBAAqB,IACdC,EAAcD,EAAdC,UACR,GAAIA,EAEA,MAAO,CAD+CA,EAA9C2J,MAA8C3J,EAAvC4J,OAAuC5J,EAA/BA,UAA+BA,EAAdiN,WAG5C,MAEJ,IAAK,yBAA2B,IACpB/M,EAAUH,EAAVG,MACR,GAAIA,EAAO,CACP,IAAMkC,EAAYiI,YAAQnK,EAAMgC,MAAOqE,GACvC,GAAInE,EAEA,MAAO,CADgCA,EAA/BuH,MAA+BvH,EAAxBwH,OAAwBxH,EAAhBlC,MACM,IAGrC,MAEJ,IAAK,kBAAoB,IACbC,EAAaJ,EAAbI,SACR,GAAIA,EAEA,MAAO,CAAC,GAAI,GAD0BA,EAA9BA,SAA8BA,EAAd8M,WAG5B,MAEJ,IAAK,eAAiB,IACV/M,EAAUH,EAAVG,MACR,GAAIA,EAAO,CACP,IAAMkC,EAAYiI,YAAQnK,EAAMgC,MAAOqE,GACvC,GAAInE,EAEA,MAAO,CADgCA,EAA/BuH,MAA+BvH,EAAxBwH,OAAwBxH,EAAhBlC,MACM,IAGrC,MAEJ,IAAK,cAAgB,IACTK,EAAaR,EAAbQ,SACR,GAAIA,EAAU,CAAC,IACHP,EAAsCO,EAAtCP,UAAWG,EAA2BI,EAA3BJ,SAAUD,EAAiBK,EAAjBL,MAAOM,EAAUD,EAAVC,MACpC,GAAIR,EAEA,MAAO,CAD+CA,EAA9C2J,MAA8C3J,EAAvC4J,OAAuC5J,EAA/BA,UAA+BA,EAAdiN,WAI5C,GAAI9M,EAEA,MAAO,CAAC,GAAI,GAD0BA,EAA9BA,SAA8BA,EAAd8M,WAI5B,GAAI/M,EAAO,CACP,IAAMkC,EAAYiI,YAAQnK,EAAMgC,MAAOqE,GACvC,GAAInE,EAEA,MAAO,CADgCA,EAA/BuH,MAA+BvH,EAAxBwH,OAAwBxH,EAAhBlC,MACM,IAEjC,MAGJ,GAAIM,EAEA,MAAO,CAD2CA,EAA1CmJ,MAA0CnJ,EAAnCoJ,OAAmCpJ,EAA3BA,MAA2BA,EAAdyM,WAI5C,MAEJ,IAAK,eAAiB,IACVzM,EAAUT,EAAVS,MACR,GAAIA,EAEA,MAAO,CAD2CA,EAA1CmJ,MAA0CnJ,EAAnCoJ,OAAmCpJ,EAA3BA,MAA2BA,EAAdyM,WAShD,MAAO,CAAC,EAAG,EAAG,KAAM,IAGjB,SAASC,GAA+BC,GAC3C,GAAKA,GACAA,EAAOhL,OAEZ,IAAK,IAAIF,EAAI,EAAGA,EAAIkL,EAAOhL,OAAQF,IAAK,CACpC,IAAMlC,EAAUoN,EAAOlL,GACvB,GAAIlC,EACA,OAAQA,EAAQ,UACZ,IAAK,qBAAuB,IAChBC,EAAcD,EAAdC,UACR,IAAKA,EAAW,MAEhBkJ,EAAoClJ,GACpC8I,EAA2B9I,GAC3B,MAEJ,IAAK,iBAAmB,IACZE,EAAUH,EAAVG,MACR,IAAKA,EAAO,MAEZkK,EAA0BlK,GAC1B,MAEJ,IAAK,iBAAmB,IACZM,EAAUT,EAAVS,MACR,IAAKA,EAAO,MAEZ2K,EAAgC3K,GAChCwK,EAAuBxK,KAQ3C,SAAS4M,GAA6BvF,GAClC,GAAKA,GACAA,EAAS1F,OAEd,IAAK,IAAIF,EAAI,EAAGA,EAAI4F,EAAS1F,OAAQF,IAAK,CACtC,IAAInC,EAAU+H,EAAS5F,GACflC,EAAYD,EAAZC,QACR,GAAIA,EACA,OAAQA,EAAQ,UACZ,IAAK,mBAAqB,IACdC,EAAcD,EAAdC,UACR,IAAKA,EAAW,MAEhBkJ,EAAoClJ,GACpC8I,EAA2B9I,GAC3B,MAEJ,IAAK,eAAiB,IACVE,EAAUH,EAAVG,MACR,IAAKA,EAAO,MAEZkK,EAA0BlK,GAC1B,MAEJ,IAAK,eAAiB,IACVM,EAAUT,EAAVS,MACR,IAAKA,EAAO,MAEZ2K,EAAgC3K,GAChCwK,EAAuBxK,GACvB,MAEJ,IAAK,cAAgB,IACTD,EAAaT,EAAQC,QAArBQ,SACR,GAAIA,EAAU,CAAC,IACHP,EAA4BO,EAA5BP,UAAWE,EAAiBK,EAAjBL,MAAOM,EAAUD,EAAVC,MAEtBR,IACAkJ,EAAoClJ,GACpC8I,EAA2B9I,IAG3BE,GACAkK,EAA0BlK,GAG1BM,IACA2K,EAAgC3K,GAChCwK,EAAuBxK,OAW5C,SAAS6M,GAAyBF,GAA+B,IAAvBG,EAAsB,wDACnE,GAAKH,GACAA,EAAOhL,OAIZ,IAFA,IAAMxG,EAAQuM,IAAUhK,WAEf+D,EAAI,EAAGA,EAAIkL,EAAOhL,OAAQF,IAAK,CACpC,IAAMlC,EAAUoN,EAAOlL,GACvB,GAAIlC,EACA,OAAQA,EAAQ,UACZ,IAAK,qBAAuB,IAChBC,EAAcD,EAAdC,UAERgJ,EAAqBrN,EAAOqE,EAAW,KAAMsN,GAC7CnF,EAA8BxM,EAAOqE,EAAW,MAChD,MAEJ,IAAK,iBAGDuK,EAAoB5O,EAFFoE,EAAVG,MAE0B,MAClC,MAEJ,IAAK,iBAAmB,IACZM,EAAUT,EAAVS,MAERiI,EAA0B9M,EAAO6E,EAAO,MACxCyK,EAAiBtP,EAAO6E,EAAO,KAAM8M,KAQzD,SAASC,GAAuB1F,GAAiC,IAAvByF,EAAsB,wDAC5D,GAAKzF,GACAA,EAAS1F,OAId,IAFA,IAAMxG,EAAQuM,IAAUhK,WAEf+D,EAAI,EAAGA,EAAI4F,EAAS1F,OAAQF,IAAK,CACtC,IAAInC,EAAU+H,EAAS5F,GACflC,EAAYD,EAAZC,QACR,GAAIA,EACA,OAAQA,EAAQ,UACZ,IAAK,mBAAqB,IACdC,EAAcD,EAAdC,UAERgJ,EAAqBrN,EAAOqE,EAAWF,EAASwN,GAChDnF,EAA8BxM,EAAOqE,EAAWF,GAChD,MAEJ,IAAK,yBAGDyK,EAAoB5O,EAFFoE,EAAVG,MAE0BJ,GAClC,MAEJ,IAAK,kBAGD0J,EAAoB7N,EAFCoE,EAAbI,SAE6BL,EAASwN,GAC9C,MAEJ,IAAK,eAGD/C,EAAoB5O,EAFFoE,EAAVG,MAE0BJ,GAClC,MAEJ,IAAK,cAAgB,IACTS,EAAaT,EAAQC,QAArBQ,SACR,IAAKA,EACD,MAHY,IAMRP,EAAsCO,EAAtCP,UAAWG,EAA2BI,EAA3BJ,SAAUD,EAAiBK,EAAjBL,MAAOM,EAAUD,EAAVC,MAChCqL,GAAY,EAEZ7L,IACAgJ,EAAqBrN,EAAOqE,EAAWF,EAASwN,GAChDzB,GAAa1D,EAA8BxM,EAAOqE,EAAWF,IAG7DK,IACAqJ,EAAoB7N,EAAOwE,EAAUL,EAASwN,GAC9CzB,GAAY,GAGZrL,IACAyK,EAAiBtP,EAAO6E,EAAOV,EAASwN,GACxCzB,GAAapD,EAA0B9M,EAAO6E,EAAOV,IAGrD+L,GACAtB,EAAoB5O,EAAOuE,EAAOJ,GAGtC,MAEJ,IAAK,eAAiB,IACVU,EAAUT,EAAVS,MAERiI,EAA0B9M,EAAO6E,EAAOV,GACxCmL,EAAiBtP,EAAO6E,EAAOV,EAASwN,KAQrD,SAASE,GAAkCC,EAAON,GACrD,GAAKA,EAAOhL,OAAZ,CAEA,IAAMuL,EAAU,GACZD,EAAQ,GACRC,EAAQtJ,KAAK+I,EAAOM,EAAQ,IAE5BA,EAAQN,EAAOhL,OAAS,GACxBuL,EAAQtJ,KAAK+I,EAAOM,EAAQ,IAGhCP,GAA+B,CAACC,EAAOM,KACvCP,GAA+BC,IAGnC,SAASQ,GAAgCF,EAAOG,GAC5C,GAAKA,EAAQzL,OAAb,CAEA,IAAM0F,EAAW,GACb4F,EAAQ,GACR5F,EAASzD,KAAKwJ,EAAQH,EAAQ,IAE9BA,EAAQG,EAAQzL,OAAS,GACzB0F,EAASzD,KAAKwJ,EAAQH,EAAQ,IAGlCL,GAA6B,CAACQ,EAAQH,KACtCL,GAA6BvF,IAGjC,SAASgG,GAA0BJ,EAAOG,GACtC,GAAKA,EAAQzL,OAAb,CAEA,IAAM0F,EAAW,GACb4F,EAAQ,GACR5F,EAASzD,KAAKwJ,EAAQH,EAAQ,IAE9BA,EAAQG,EAAQzL,OAAS,GACzB0F,EAASzD,KAAKwJ,EAAQH,EAAQ,IAGlCF,GAAuB,CAACK,EAAQH,KAAS,GACzCF,GAAuB1F,GAAU,IAG9B,SAASiG,GAA4BL,EAAON,GAC/C,GAAKA,EAAOhL,OAAZ,CAEA,IAAMuL,EAAU,GACZD,EAAQ,GACRC,EAAQtJ,KAAK+I,EAAOM,EAAQ,IAE5BA,EAAQN,EAAOhL,OAAS,GACxBuL,EAAQtJ,KAAK+I,EAAOM,EAAQ,IAGhCJ,GAAyB,CAACF,EAAOM,KAAS,GAC1CJ,GAAyBK,GAAS,IAGtC,SAASK,GAAoBpS,EAAOkB,EAAMuJ,GACtC,GAAKvJ,EAAL,CAD8C,IAGtCc,EAAOd,EAAPc,GACRd,EAAOqL,IAAUlK,IAAIL,IAAOd,EAE5B,IAAM+C,EAAO0J,IAAUtL,IAAIoI,GAC3B,GAAKxG,EAEQ/C,EAAKuG,MAAQ8E,IAAUhF,QAAQvF,IAG5CuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAUrI,oBAAoBuG,EAAQzI,IAC5C,kBAAMuK,IAAUxI,cAAc/B,EAAIwD,KAAoBvB,MAI9D,SAASoO,GAAoBrS,EAAOkB,EAAMgE,GACtC,GAAKhE,EAAL,CAD8C,IAGtCc,EAAOd,EAAPc,GACRd,EAAOqL,IAAUlK,IAAIL,IAAOd,EAE5B,IAAM0C,EAAO0O,IAAUjQ,IAAI6C,GAC3B,GAAKtB,EAGL,IADgB2I,IAAU3E,WAAW5F,GAGxBd,EAAKuG,MAAQ8E,IAAUhF,QAAQvF,IAG5CuK,IAAU1I,aACN7D,EACAkB,EACA,KACA,kBAAMqL,IAAUzI,oBAAoBoB,EAAQlD,IAC5C,kBAAMuK,IAAUxI,cAAc/B,EAAIwD,KAAoB5B,MAI9D,SAAS2O,GAA8BrN,EAAQsN,GAC3C,GAAKA,EAAL,CAEA,IAAMxS,EAAQuM,IAAUhK,WAExBiQ,EAAOhQ,QAAQ,SAAA+B,GACX,OAAQA,EAAM,UACV,IAAK,YAAc,IAAD,EACSA,EAAfkO,EADM,EACNA,MAAOC,EADD,EACCA,IAEfL,GAAoBrS,EAAOyS,EAAOvN,GAClCmN,GAAoBrS,EAAO0S,EAAKxN,GAChC,MAEJ,IAAK,eACD,IAAMuF,EAASkI,YAAczN,GADZ,EAGMX,EAAfkO,EAHS,EAGTA,MAAOC,EAHE,EAGFA,IAEfN,GAAoBpS,EAAOyS,EAAOhI,GAClC2H,GAAoBpS,EAAO0S,EAAKjI,GAChC,MAEJ,IAAK,mBAED,KADAlG,EAAQqO,YAAgBrO,IACZ,MAEZ,IAAMkG,EAASkI,YAAczN,GAJR,EAMEX,EAAfkO,EANa,EAMbA,MAAOC,EANM,EAMNA,IAEfN,GAAoBpS,EAAOyS,EAAOhI,GAClC2H,GAAoBpS,EAAO0S,EAAKjI,OAOhD,SAASoI,GAAiC3N,EAAQ4M,EAAOG,GACrD,GAAKA,EAAQzL,OAAb,CAEA,IAAMhG,EAAQ,GACVsR,EAAQ,GACRtR,EAAMiI,KAAKwJ,EAAQH,EAAQ,IAE3BA,EAAQG,EAAQzL,OAAS,GACzBhG,EAAMiI,KAAKwJ,EAAQH,EAAQ,IAE3BA,GAAS,GAAKA,EAAQG,EAAQzL,QAC9BhG,EAAMiI,KAAKwJ,EAAQH,IAGvBS,GAA8BrN,EAAQ1E,IAG1C,SAASoN,GAAgB5N,EAAOyK,GAC5B,IAAMxG,EAAO0J,IAAUtL,IAAIoI,GAC3B,GAAKxG,EAAL,CAFoC,IAI5B6O,EAAkB7O,EAAlB6O,cACR,GAAKA,EAILV,GAAoBpS,EAFI8S,EAAhBL,MAEyBhI,IAGrC,SAAS0F,GAAiBnQ,EAAO+S,GACxBA,GAELA,EAAIvQ,QAAQ,SAAAR,GAAE,OAAI4L,GAAgB5N,EAAOgC,KAG7C,SAASgR,GAAgBhT,EAAOkF,GAC5B,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GACtBtB,GAGLqP,GAAqBjT,EADH4D,EAAVW,MAC2BX,EAAK5B,IAG5C,SAASiR,GAAqBjT,EAAOuE,EAAOW,GACnCX,GAIL8N,GAAoBrS,EAFIuE,EAAhBkO,MAEyBvN,GAGrC,SAASgO,GAAiBlT,EAAO+S,GACxBA,GAELA,EAAIvQ,QAAQ,SAAAR,GAAE,OAAIgR,GAAgBhT,EAAOgC,KAG7C,SAASmR,GAAiBnT,EAAOkF,GAC7B,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,GAAKtB,EAAL,CAFqC,IAI7BwP,EAAkBxP,EAAlBwP,cACR,GAAKA,EAAL,CALqC,IAO7BnD,EAAwBmD,EAAxBnD,oBACHA,GAELjE,EAAYhM,EAAOkF,EAAQ,CAAC+K,MAGzB,SAASoD,GAA0BrT,EAAOsT,GACxCA,GAGLC,GAAoBvT,EADCsT,EAAbE,UAIZ,SAASC,GAAsBzT,EAAO0T,GAC7BA,GAGLH,GAAoBvT,EADC0T,EAAbF,UAIL,SAASG,GAAuB3T,EAAO4T,GACrCA,GAELA,EAAYpR,QAAQ,SAAAqR,GAChBC,GAAsB9T,EAAO6T,GAAY,KAI1C,SAASC,GAAsB9T,EAAO6T,GAA2B,IAAfE,EAAc,wDACnE,GAAKF,EAEL,OAAQA,EAAW9C,KAAK,UACpB,IAAK,qBACD,MAEJ,IAAK,wBAA0B,IACnBvM,EAAaqP,EAAbrP,SACJA,IACAmI,EAA6B3M,EAAOwE,EAAU,MAC1CuP,GAAMlG,EAAoB7N,EAAOwE,EAAU,MAAM,IAEzD,MAEJ,IAAK,0BAA4B,IACrBA,EAAaqP,EAAbrP,SACJA,IACAmI,EAA6B3M,EAAOwE,EAAU,MAC1CuP,GAAMlG,EAAoB7N,EAAOwE,EAAU,MAAM,KAOrE,SAAS+O,GAAoBvT,EAAOwT,GAC3BA,GAELA,EAAShR,QAAQ,SAAAmC,GACbkI,EAA4B7M,EAAO2E,EAAS,MACxCA,EAAQqP,aACR7E,EAAmBnP,EAAO2E,EAAS,QAK/C,SAASsP,GAAcC,GACnB,OAAOA,GAAuC,cAA3BA,EAASC,cAGhC,SAASC,GAAOlT,GACZ,IAAM4G,EAAU5G,GAAQqL,IAAU3E,WAAW1G,EAAKc,IAClD,GAAI8F,EAAS,OAAOA,EAEpB,IAAML,EAAOF,GAAQrG,GAErB,OAAOqL,IAAUvE,WAAWP,IAAS,GAGzC,SAASF,GAAQrG,GACb,OAAOA,EAAOqL,IAAUhF,QAAQrG,EAAKc,KAAOd,EAAKuG,KAAO,KAG5D,SAAS4M,GAAkBnT,GACvB,OAAKA,GACAA,EAAKgB,OACLhB,EAAKgB,MAAMoS,sBAET3J,EAAczJ,EAAKgB,MAAMqS,iBAJd,IAOtB,SAASC,GAAgBtT,GACrB,OAAKA,GACAA,EAAKwC,QACLxC,EAAKwC,OAAO+Q,oBAEV9J,EAAczJ,EAAKwC,OAAOgR,eAJf,IAOtB,SAASC,GAAa9D,GAClB,IAAKA,EACD,MAAO,GAGX,IAAM+D,EAAQ/D,EAASgE,MAAM,KAC7B,OAAqB,IAAjBD,EAAMpO,QAA8B,KAAboO,EAAM,IAA8B,IAAjBA,EAAMpO,OACzC,GAEJoO,EAAME,MAAMX,cAGvB,SAASY,GAAuBC,GAC5B,GAAKA,EAAL,CADyC,IAGjCC,EAAgBD,EAAhBC,YACR,GAAKA,EAAL,CAEA,IAAMjV,EAAQuM,IAAUhK,WAExB0S,EAAYzS,QAAQ,SAAA0S,GAAS,OAGjC,SAASC,EAAqBnV,EAAOoV,GACjC,IAAKA,EAAG,OAER,OAAQA,EAAE,UACN,IAAK,kBACD,MAEJ,IAAK,qBAAuB,IAChB/Q,EAAuB+Q,EAAvB/Q,UAAWgR,EAAYD,EAAZC,QAEnB7I,EAA8BxM,EAAOqE,EAAW,MAChDgJ,EAAqBrN,EAAOqE,EAAW,MACvC8Q,EAAqBnV,EAAOqV,GAC5B,MAEJ,IAAK,iBAAmB,IACZ/Q,EAAmB8Q,EAAnB9Q,MAAO+Q,EAAYD,EAAZC,QAEf5I,EAA0BzM,EAAOsE,EAAO,MACxC0I,EAAiBhN,EAAOsE,EAAO,MAC/B6Q,EAAqBnV,EAAOqV,GAC5B,MAEJ,IAAK,sBAAwB,IACjBC,EAAWF,EAAXE,OAERC,GAAoBvV,EAAOsV,GAC3B,MAEJ,IAAK,sBAAwB,IACjBE,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAEdF,GAAoBvV,EAAOwV,GAC3BD,GAAoBvV,EAAOyV,GAC3B,MAGJ,IAAK,mBAAqB,IACdD,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAEdF,GAAoBvV,EAAOwV,GAC3BD,GAAoBvV,EAAOyV,GAC3B,MAEJ,IAAK,oBAAsB,IACflR,EAAU6Q,EAAV7Q,MAER0O,GAAqBjT,EAAOuE,EAAO,GACnC,MAEJ,IAAK,mBAAqB,IACd0Q,EAAyBG,EAAzBH,YAAaI,EAAYD,EAAZC,QAErBF,EAAqBnV,EAAOqV,GAC5BJ,EAAYzS,QAAQ,SAAA4H,GAAC,OAAI+K,EAAqBnV,EAAOoK,KACrD,MAEJ,IAAK,iBAAmB,IACZsL,EAAUN,EAAVM,MAERP,EAAqBnV,EAAO0V,GAC5B,MAEJ,IAAK,mBAAqB,IACdC,EAAwBP,EAAxBO,OAAQV,EAAgBG,EAAhBH,YAEhBE,EAAqBnV,EAAO2V,GAC5BV,EAAYzS,QAAQ,SAAA4H,GAAC,OAAI+K,EAAqBnV,EAAOoK,KACrD,MAEJ,IAAK,mBACD,MAEJ,IAAK,oBAAsB,IACfwL,EAA0BR,EAA1BQ,aAAcP,EAAYD,EAAZC,QAEtB3I,EAAiB1M,EAAO4V,EAAc,MACtCT,EAAqBnV,EAAOqV,GAC5B,MAEJ,IAAK,wBAA0B,IACnBQ,EAAuCT,EAAvCS,aAAcZ,EAAyBG,EAAzBH,YAAaI,EAAYD,EAAZC,QAEnC3I,EAAiB1M,EAAO6V,EAAc,MACtCZ,EAAYzS,QAAQ,SAAA4H,GAAC,OAAI+K,EAAqBnV,EAAOoK,KACrD+K,EAAqBnV,EAAOqV,GAC5B,MAEJ,IAAK,kBAAoB,IACbS,EAAWV,EAAXU,OAERP,GAAoBvV,EAAO8V,GAC3B,MAEJ,IAAK,kBAAoB,IACbH,EAAWP,EAAXO,OAERJ,GAAoBvV,EAAO2V,GAC3B,MAEJ,IAAK,kBAAoB,IACbI,EAAWX,EAAXW,OAERR,GAAoBvV,EAAO+V,GAC3B,MAEJ,IAAK,gBACiBX,EAAV5U,MAEFgC,QAAQ,SAAA4H,GAAC,OAAI+K,EAAqBnV,EAAOoK,KAC/C,MAGJ,IAAK,oBACuBgL,EAAhBH,YAEIzS,QAAQ,SAAA4H,GAAC,OAAI+K,EAAqBnV,EAAOoK,KACrD,MAEJ,IAAK,eAAiB,IACViL,EAAYD,EAAZC,S,wCAERW,CAAwBhW,EAAOoV,EAAG,MAClCD,EAAqBnV,EAAOqV,GAC5B,MAEJ,IAAK,qBAAuB,IAChBG,EAASJ,EAATI,KAERD,GAAoBvV,EAAOwV,GAC3B,MAEJ,IAAK,iBAAmB,IACZjR,EAAmB6Q,EAAnB7Q,MAAO8Q,EAAYD,EAAZC,QAEf3I,EAAiB1M,EAAOuE,EAAO,KAAM0R,KACrCd,EAAqBnV,EAAOqV,GAC5B,MAEJ,IAAK,wBAA0B,IACnBG,EAASJ,EAATI,KAERD,GAAoBvV,EAAOwV,GAC3B,MAEJ,IAAK,qBAAuB,IAChBA,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAEdF,GAAoBvV,EAAOwV,GAC3BD,GAAoBvV,EAAOyV,GAC3B,MAEJ,IAAK,2BAA6B,IACtBE,EAAqBP,EAArBO,OAAQO,EAAad,EAAbc,SAEhBX,GAAoBvV,EAAO2V,GAC3BO,EAAS1T,QAAQ,SAAA4H,GAAC,OAAI+K,EAAqBnV,EAAOoK,KAClD,MAGJ,IAAK,0BAA4B,IACrB7F,EAAU6Q,EAAV7Q,MAERmI,EAAiB1M,EAAOuE,EAAO,MAC/B,MAEJ,IAAK,qBAAuB,IAChB0Q,EAAyBG,EAAzBH,YAAaI,EAAYD,EAAZC,QAErBF,EAAqBnV,EAAOqV,GAC5BJ,EAAYzS,QAAQ,SAAA4H,GAAC,OAAI+K,EAAqBnV,EAAOoK,KACrD,MAEJ,IAAK,qBAAuB,IAChB+L,EAAcf,EAAde,UAERZ,GAAoBvV,EAAOmW,GAC3B,MAEJ,IAAK,oBAAsB,IACfC,EAAahB,EAAbgB,SAERb,GAAoBvV,EAAOoW,GAC3B,MAEJ,IAAK,iBAAmB,IACZf,EAAmBD,EAAnBC,QAASgB,EAAUjB,EAAViB,MAEjBd,GAAoBvV,EAAOqV,GAC3BgB,EAAM7T,QAAQ,SAAA8T,GAAG,OAAIA,EAAI9T,QAAQ,SAAA4H,GAAC,OAAI+K,EAAqBnV,EAAOoK,OAClE,MAGJ,IAAK,qBAAuB,IAChBoL,EAASJ,EAATI,KAERD,GAAoBvV,EAAOwV,GAC3B,MAEJ,IAAK,iBAAmB,IACZe,EAAUnB,EAAVmB,MAERhB,GAAoBvV,EAAOuW,GAC3B,MAEJ,IAAK,iBAAmB,IACZ1R,EAAmBuQ,EAAnBvQ,MAAOwQ,GAAYD,EAAZC,QAEfvI,EAA0B9M,EAAO6E,EAAO,MACxCyK,EAAiBtP,EAAO6E,EAAO,MAC/BsQ,EAAqBnV,EAAOqV,KArNHF,CAAqBnV,EAAOkV,OA2NjE,SAASK,GAAoBvV,EAAOwW,GAChC,GAAKA,EAEL,OAAQA,EAAE,UACN,IAAK,iBAAmB,IACZhB,EAASgB,EAAThB,KAERD,GAAoBvV,EAAOwV,GAC3B,MAEJ,IAAK,eAAiB,IACVA,EAASgB,EAAThB,KAERD,GAAoBvV,EAAOwV,GAC3B,MAEJ,IAAK,uBAAyB,IAClBA,EAASgB,EAAThB,KAERD,GAAoBvV,EAAOwV,GAC3B,MAEJ,IAAK,gBAAkB,IACXA,EAASgB,EAAThB,KAERD,GAAoBvV,EAAOwV,GAC3B,MAEJ,IAAK,eAAiB,IACVhR,EAAagS,EAAbhS,SAERmI,EAA6B3M,EAAOwE,EAAU,MAC9CqJ,EAAoB7N,EAAOwE,EAAU,MAAM,GAC3C,MAEJ,IAAK,iBAAmB,IACZgR,EAASgB,EAAThB,KAERD,GAAoBvV,EAAOwV,GAC3B,MAEJ,IAAK,iBAAmB,IACZA,EAASgB,EAAThB,KAERD,GAAoBvV,EAAOwV,GAC3B,MAEJ,IAAK,sBAAwB,IACjBA,EAASgB,EAAThB,KAERD,GAAoBvV,EAAOwV,GAC3B,MAEJ,IAAK,gBAAkB,IACXA,EAASgB,EAAThB,KAERD,GAAoBvV,EAAOwV,GAC3B,MAEJ,IAAK,YACiBgB,EAAVC,MAEFjU,QAAQ,SAAA4H,GAAC,OAAImL,GAAoBvV,EAAOoK,KAC9C,MAEJ,IAAK,wBAA0B,IACnBoL,EAASgB,EAAThB,KAERD,GAAoBvV,EAAOwV,GAC3B,MAEJ,IAAK,oBAAsB,IACfA,EAASgB,EAAThB,KAERD,GAAoBvV,EAAOwV,GAC3B,MAEJ,IAAK,sBAAwB,IACjBA,EAASgB,EAAThB,KAERD,GAAoBvV,EAAOwV,GAC3B,MAEJ,IAAK,oBAAsB,IACfA,EAASgB,EAAThB,KAERD,GAAoBvV,EAAOwV,GAC3B,MAEJ,IAAK,cAAgB,IACTA,EAASgB,EAAThB,KAERD,GAAoBvV,EAAOwV,IAMvC,SAASkB,GAAiBxV,GACtB,OAAO,IAAI2H,QAAQ,SAAAC,GACf,GAAK5H,EAAL,CAKA,IAAMuG,EAAO8E,IAAUhF,QAAQrG,EAAKc,IACpC,GAAKyF,EAAL,CAKA,IAAMkP,EAAa,IAAIC,WACvBD,EAAWE,OAAS,SAAA7M,GAAK,OAAIlB,EAAQgO,KAAKC,MAAM/M,EAAMC,OAAOZ,UAC7DsN,EAAWrN,QAAU,kBAAMR,EAAQ,OACnC6N,EAAWK,QAAU,kBAAMlO,EAAQ,OACnC6N,EAAWM,WAAWxP,QARlBqB,EAAQ,WANRA,EAAQ,U,sLCpvEb,SAASoO,EAAgBhS,GAC5B,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,QAAKtB,GAEyBA,EAAtBuT,kBAEmB,EAGxB,SAASC,EAAelS,GAC3B,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAFiB,IAI3ByT,EAAczT,EAAdyT,UACR,QAAKA,GAEyB,oBAAvBA,EAAU,SAGd,SAASC,EAAmBpS,GAC/B,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAFqB,IAI/B2T,EAA4B3T,EAA5B2T,aAAcF,EAAczT,EAAdyT,UACtB,OAAIE,MACCF,IAEsB,iBAAvBA,EAAU,WACNG,EAAStS,IAAWA,IAAWuS,OAQpC,SAASC,EAAYC,EAAQC,GAChC,IAAKD,IAAWC,EAAQ,OAAO,EAC/B,GAAID,IAAWC,EAAQ,OAAO,EAC9B,GAAIA,IAAWD,EAAQ,OAAO,EAHU,IAKZE,EAA8DF,EAAlFG,mBAA4DC,EAAsBJ,EAA3C1H,oBACnB+H,EAA8DJ,EAAlFE,mBAER,GAAIC,IAFsFH,EAA3C3H,oBAG3C,OAAO,EAGX,GAAI4H,EAAkB,WAAaG,EAAkB,SACjD,OAAO,EAGX,GAAmC,qBAA/BH,EAAkB,SAClB,OAAO,EAjB6B,IAoB1BI,EAAmBJ,EAAzBrC,KACM0C,EAAmBF,EAAzBxC,KAER,IAAKyC,IAAmBC,EAAgB,OAAO,EAC/C,GAAID,IAAmBC,EAAgB,OAAO,EAC9C,GAAIA,IAAmBD,EAAgB,OAAO,EAzBN,IA2B1BE,EAA+BF,EAArCzC,KAAuB4C,EAAcH,EAAxBI,SACPC,EAA+BJ,EAArC1C,KAAuB+C,EAAcL,EAAxBG,SAErB,OAAIF,IAAUG,GAOlB,SAAwBF,EAAWG,GAC/B,IAAKH,IAAcG,EAAW,OAAO,EACrC,GAAIH,IAAcG,EAAW,OAAO,EACpC,GAAIA,IAAcH,EAAW,OAAO,EAEpC,GAAIA,EAAU5R,SAAW+R,EAAU/R,OAC/B,OAAO,EAGX,IAAM2F,EAAM,IAAI5L,IAKhB,OAJA6X,EAAU5V,QAAQ,SAAA4H,GACd+B,EAAIlL,IAAJ,UAAWmJ,EAAE2G,KAAK,SAAlB,YAA8B3G,EAAEoO,OAAhC,YAA0CpO,EAAE5D,QAAU4D,KAGnDmO,EAAUE,MAAM,SAAArO,GAAC,OAAI+B,EAAIhK,IAAJ,UAAWiI,EAAE2G,KAAK,SAAlB,YAA8B3G,EAAEoO,OAAhC,YAA0CpO,EAAE5D,WAjBjEkS,CAAeN,EAAWG,GAyIrC,SAASI,EAAoBzT,GACzB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,KAClB,IAAKA,EAAKmN,KAAM,OAAO,KAEvB,IAAI6H,EAAgBtG,IAAUuG,iBAAiBjV,EAAK5B,IACpD,IAAK4W,EAAe,OAAO,KAE3B,OAAQhV,EAAKmN,KAAK,UACd,IAAK,kBACL,IAAK,iBACD,IAAM+H,EA9ClB,SAAoCC,GAChC,IAAKA,EAAoB,OAAO,KAEhC,GAAIA,EAAmBC,QAAQpO,MAAQ,EAEnC,OADamO,EAAmBC,QAAQC,SAASC,OAAOC,MAAMC,OAC/C,UACX,IAAK,2BACD,MAAO,oBACX,IAAK,+BACD,MAAO,4BACX,IAAK,+BACD,MAAO,4BACX,IAAK,6BACD,MAAO,iBACX,IAAK,8BACD,MAAO,iBACX,IAAK,2BACD,MAAO,kBACX,IAAK,2BACD,MAAO,kBACX,IAAK,+BACD,MAAO,0BACX,IAAK,+BACD,MAAO,0BACX,IAAK,4BACL,IAAK,6BACL,IAAK,mBACL,QACI,MAAO,SAInB,OAAO,KAcsBC,CAA2BT,GAChD,OAAOE,EAAeA,EAAe,MAAQ,KAEjD,IAAK,qBACL,IAAK,qBACD,IAAMA,EArIlB,SAAkCC,GAC9B,IAAKA,EAAoB,OAAO,KAEhC,IA4BQO,EA5BJ1O,EAAOmO,EAAmBC,QAAQpO,KACtC,GAAIA,EAAO,EACP,MAAM,GAAN,OAAUA,EAAV,sBACG,GAAIA,EAAO,EAAG,CACjB,IAAI0O,EACAC,EAFa,uBAGjB,YAAmBR,EAAmBC,QAAQ5I,OAA9C,+CAAsD,CAAC,IAA9C3F,EAA6C,QAClD,GAAK6O,GAEE,IAAKC,EAAY,CACpBA,EAAa5L,IAAUtL,IAAIoI,GAC3B,YAHA6O,EAAY3L,IAAUtL,IAAIoI,IALjB,kFAYjB,OAAK6O,GAAcC,GAInBD,EAAYA,EAAUE,WAAaF,EAAUE,WAAaF,EAAUG,YACpEF,EAAaA,EAAWC,WAAaD,EAAWC,WAAaD,EAAWE,YAEnEH,GAAcC,EAIb,GAAN,OAAUD,EAAV,gBAA2BC,EAA3B,eAHU,GAAN,OAAU3O,EAAV,uBAPM,GAAN,OAAUA,EAAV,sBAaJ,GAAImO,EAAmBC,QAAQpO,MAAQ,EAAG,CAAC,IAAD,uBACtC,YAAmBmO,EAAmBC,QAAQ5I,OAA9C,+CAAsD,CAAC,IAA9C3F,EAA6C,QAClD,IAAK6O,EAAW,CACZA,EAAY3L,IAAUtL,IAAIoI,GAC1B,QAJ8B,kFAQtC,IAAK6O,EACD,MAAM,qBAKV,KAFAA,EAAYA,EAAUE,WAAaF,EAAUE,WAAaF,EAAUG,aAGhE,MAAM,qBAIV,OADaV,EAAmBC,QAAQC,SAASC,OAAOC,MAAMC,OAC/C,UACX,IAAK,2BACD,MAAM,GAAN,OAAUE,EAAV,yBACJ,IAAK,+BACD,MAAM,GAAN,OAAUA,EAAV,iCACJ,IAAK,+BACD,MAAM,GAAN,OAAUA,EAAV,iCACJ,IAAK,6BACD,MAAM,GAAN,OAAUA,EAAV,sBACJ,IAAK,8BACD,MAAM,GAAN,OAAUA,EAAV,sBACJ,IAAK,2BACD,MAAM,GAAN,OAAUA,EAAV,uBACJ,IAAK,2BACD,MAAM,GAAN,OAAUA,EAAV,uBACJ,IAAK,+BACD,MAAM,GAAN,OAAUA,EAAV,+BACJ,IAAK,+BACD,MAAM,GAAN,OAAUA,EAAV,+BACJ,IAAK,4BACL,IAAK,6BACL,IAAK,mBACL,QACI,MAAM,GAAN,OAAUA,EAAV,eAKhB,OAAO,KAsDsBI,CAAyBd,GAC9C,OAAOE,EAAeA,EAAe,MAAQ,KAIrD,OAAO,KAGX,SAASa,EAAyBxV,GAAsB,IAAbqS,EAAY,uDAAR,SAAAoD,GAAC,OAAIA,GAChD,OAAKzV,EACD0V,YAAiB1V,GAAiB,KACjCA,EAAQ6L,eAEN8J,YAAgB3V,EAAQ6L,eAAgB,KAAMwG,GAFjB,KAFf,KAOzB,SAASuD,EAAqB5V,GAAsB,IAAbqS,EAAY,uDAAR,SAAAoD,GAAC,OAAIA,GAC5C,IAAKzV,EAAS,OAAO,KACrB,GAAI0V,YAAiB1V,GAAU,OAAO,KAEtC,IAAMP,EAAO0O,IAAUjQ,IAAI8B,EAAQgB,SACnC,OAAIvB,GAA+B,uBAAvBA,EAAKmN,KAAK,UAA4D,uBAAvBnN,EAAKmN,KAAK,SAC1D,KAGJiJ,YAAiB7V,EAAQ6L,eAAgBwG,GAGpD,SAASyD,EAAyBrW,GAAmB,IAAb4S,EAAY,uDAAR,SAAAoD,GAAC,OAAIA,GAC7C,OAAKhW,EAEEmW,EAAqBnW,EAAKsW,aAAc1D,GAF7B,KAKtB,SAAS2D,EAAsBvW,GAAuB,IAAjB4S,EAAgB,uDAAZ,SAAA4D,GAAG,OAAIA,GAC5C,IAAKxW,EAAM,OAAO,KAD+B,IAGzCsW,EAAiBtW,EAAjBsW,aACR,OAAKA,EAEEG,YAAWH,EAAc1D,GAFN,KAmB9B,SAAS8D,EAA2BpV,GAChC,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,QAAKtB,GAE4BA,EAAzB2W,qBAEsB,EAGlC,SAASC,EAAoBtV,GACzB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAFe,IAIzB6W,EAA4D7W,EAA5D6W,oBAAqBC,EAAuC9W,EAAvC8W,aAAcH,EAAyB3W,EAAzB2W,qBAE3C,OACIG,EAAe,GACG,IAAjBA,GAA+C,IAAzBH,GACtBE,GAAwC,IAAjBC,GAA+C,IAAzBH,EAItD,SAASI,EAAazV,GAClB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAFQ,IAIlB6W,EAA4D7W,EAA5D6W,oBAAqBC,EAAuC9W,EAAvC8W,aAAuC9W,EAAzB2W,qBAE3C,OAAOE,GAAuBC,EAAe,EAGjD,SAASE,EAAY1V,GACjB,OAGJ,SAAwBA,GACpB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAFU,IAIpBiX,EAA0BjX,EAA1BiX,sBACR,IAAKA,EAAuB,OAAO,EALP,IAOpBC,EAAmCD,EAAnCC,qBAAsBC,EAAaF,EAAbE,SAE9B,GAAID,EAAsB,CACtB,IAAME,EAQP,SAAsC9V,GACzC,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,KAElB,OAAQA,EAAKmN,KAAK,UACd,IAAK,kBACL,IAAK,iBACD,OAAOkK,IAAkBD,SAAS3Y,IAAI,yCAE1C,IAAK,qBACL,IAAK,qBAOD,OALI6Y,EAAchW,GACH+V,IAAkBD,SAAS3Y,IAAI,yCAE/B4Y,IAAkBD,SAAS3Y,IAAI,uCAMtD,OAAO,KA7Bc8Y,CAA6BjW,GAE9C,QAAO8V,GAAWA,EAASD,SAG/B,OAAOA,EAlBAK,CAAelW,GAAU,EA6CpC,SAASmW,EAAelX,GACpB,IAAMmX,EAAO,IAAIC,KAAoB,IAAfpX,EAAQmX,MAExBE,EAAW,IAAID,KAErB,GADAC,EAASC,SAAS,EAAG,EAAG,EAAG,GACvBH,EAAOE,EACP,OAAOE,YAAWJ,EAAM,QAG5B,IAAMK,EAAM,IAAIJ,KACVK,EAAMD,EAAIE,SACVC,EAAYH,EAAII,UAAYH,GAAe,IAARA,GAAa,EAAI,GAE1D,OAAIN,EADW,IAAIC,KAAKI,EAAIK,QAAQF,IAEzBJ,YAAWJ,EAAM,OAGrBI,YAAWJ,EAAM,aAG5B,SAASW,EAAmBrY,GACxB,OAAKA,GACAA,EAAKsW,cACLtW,EAAKsW,aAAaoB,KACnBY,GAActY,EAAK5B,IAAY,KAE5BqZ,EAAezX,EAAKsW,cALT,KAQtB,SAASiC,EAA6BjX,GAClC,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,KAFwB,IAIlCmN,EAASnN,EAATmN,KACR,IAAKA,EAAM,OAAO,KAElB,OAAQA,EAAK,UACT,IAAK,qBACD,IAAMqL,EAAaC,IAAgBha,IAAI0O,EAAKuL,gBAC5C,GAAIF,EACA,OC7ZhB,SAA6BA,EAAYlX,GACrC,IAAKkX,EAAY,OAAO,KADqB,IAGrCG,EAAgCH,EAAhCG,OAAsBC,EAAUJ,EAAxBK,aAEhB,GACIF,IACqB,2BAApBA,EAAO,UACgB,yBAApBA,EAAO,UACc,4BAApBA,EAAO,WAA2CA,EAAOG,WAE9D,MAAO,wBAGX,IAAKF,EAAO,MAAO,YACnB,GAAc,IAAVA,EAAa,MAAO,WAExB,IAAMG,EAAcrK,IAAUsK,qBAAqB1X,GACnD,OAAIyX,EAAc,EACR,GAAN,OAAUH,EAAV,qBAA4BG,EAA5B,WAGE,GAAN,OAAUH,EAAV,YDuYmBK,CAAoBT,EAAYlX,GAG3C,MAEJ,IAAK,kBACL,IAAK,iBACD,IAAMjB,EAAO0J,IAAUtL,IAAI0O,EAAKrD,SAChC,GAAIzJ,EACA,OAAO6Y,YAAc7Y,GAGzB,MAEJ,IAAK,qBACD,IAAM8Y,EAAaC,IAAgB3a,IAAI0O,EAAKkM,eAC5C,GAAIF,EACA,OAAOA,EAAWG,WE7a3B,SAA0BH,EAAY7X,GACzC,IAAK6X,EAAY,MAAO,GADyB,IAG3CR,EAA4CQ,EAA5CR,OAAQW,EAAoCH,EAApCG,WAA0BV,EAAUO,EAAxBN,aAC1B,IAAKS,EAAY,MAAO,GAExB,GAAIX,GAA8B,2BAApBA,EAAO,SACjB,MAAO,0BAGX,IAAKC,EAAO,CACR,IAAMW,EAAWH,IAAgBI,YAAYL,EAAW/a,IACpDmb,IACAX,EAAQW,EAASV,cAIzB,IAAKD,EAAO,MAAO,gBACnB,GAAc,IAAVA,EAAa,MAAO,eAExB,IAAMG,EAAcrK,IAAUsK,qBAAqB1X,GACnD,OAAIyX,EAAc,EACR,GAAN,OAAUH,EAAV,yBAAgCG,EAAhC,WAGE,GAAN,OAAUH,EAAV,gBFqZkBa,CAAiBN,EAAY7X,GG9a5C,SAA6B6X,EAAY7X,GAC5C,IAAK6X,EAAY,OAAO,KAD4B,IAG9CR,EAA4CQ,EAA5CR,OAAQW,EAAoCH,EAApCG,WAA0BV,EAAUO,EAAxBN,aAE1B,GAAIF,GAA8B,2BAApBA,EAAO,SACjB,OAAOW,EAAa,0BAA4B,wBAGpD,IAAKV,EAAO,CACR,IAAMW,EAAWH,IAAgBI,YAAYL,EAAW/a,IACpDmb,IACAX,EAAQW,EAASV,cAIzB,IAAKD,EAAO,MAAO,YACnB,GAAc,IAAVA,EAAa,MAAO,WAExB,IAAMG,EAAcrK,IAAUsK,qBAAqB1X,GACnD,OAAIyX,EAAc,EACR,GAAN,OAAUH,EAAV,qBAA4BG,EAA5B,WAGE,GAAN,OAAUH,EAAV,YHuZkBc,CAAoBP,EAAY7X,GAOlD,OAAO,KAGX,SAASqY,EAAgBrY,GAAoC,IAA5BsY,EAA2B,wDACxD,GAAIhG,EAAStS,IAAWsY,EACpB,OAAO,KAGX,IAAMC,EAAmB9E,EAAoBzT,GAC7C,OAAIuY,GAIGtB,EAA6BjX,GAGxC,SAASwY,EAAe9Z,EAAM4S,GAC1B,IAAK5S,EAAM,OAAO,KAElB,IAAI2S,EAAQ3S,EAAK2S,OAASC,EAAE,cAC5B,GAAqB,IAAjBD,EAAM/P,OAAc,OAAO,KAE/B,IAAImX,EAAUC,YAAWrH,GACzB,OAAIoH,GAAWA,EAAQnX,OAAS,EACrBmX,EAGJ/Z,EAAK2S,MAAMsH,OAAO,GAG7B,SAASC,EAAkC5Y,GACvC,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAClB,IAAKA,EAAKmN,KAAM,OAAO,EAEvB,OAAQnN,EAAKmN,KAAK,UACd,IAAK,qBACD,OAAO,EAEX,IAAK,kBACL,IAAK,iBACD,IAAM9M,EAAO0J,IAAUtL,IAAIuB,EAAKmN,KAAKrD,SACrC,GAAIzJ,EACA,OAAO8Z,YAAa9Z,GAGxB,MAEJ,IAAK,qBACD,OAAO,EAIf,OAAO,EAGX,SAAS+Z,EAAqB9Y,GAE1B,OADqByT,EAAoBzT,IAGlC4Y,EAAkC5Y,GAG7C,SAAS+Y,EAAgB/Y,GACrB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,KAClB,IAAKA,EAAKmN,KAAM,OAAO,KAEvB,OAAQnN,EAAKmN,KAAK,UACd,IAAK,qBACD,OAAO,KAEX,IAAK,kBACL,IAAK,iBACD,IAAM9M,EAAO0J,IAAUtL,IAAIuB,EAAKmN,KAAKrD,SACrC,GAAIzJ,EACA,OAAOA,EAAKia,SAGhB,MAEJ,IAAK,qBACD,IAAMnB,EAAaC,IAAgB3a,IAAIuB,EAAKmN,KAAKkM,eACjD,GAAIF,EACA,OAAOA,EAAWmB,SAM9B,OAAO,KAGX,SAASC,EAAmBjZ,GACxB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,KAClB,IAAKA,EAAKmN,KAAM,OAAO,KAEvB,OAAQnN,EAAKmN,KAAK,UACd,IAAK,qBACD,OAAO,KAEX,IAAK,kBACL,IAAK,iBACD,IAAM9M,EAAO0J,IAAUtL,IAAIuB,EAAKmN,KAAKrD,SACrC,GAAIzJ,EACA,OAAOma,YAAkBna,EAAKoa,cAGlC,MAEJ,IAAK,qBACD,OAAO,KAIf,OAAO,KAGX,SAASC,EAAWpZ,GAChB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,KAClB,IAAKA,EAAKmN,KAAM,OAAO,KAEvB,OAAQnN,EAAKmN,KAAK,UACd,IAAK,qBACD,IAAMoM,EAAWd,IAAgBe,YAAYxZ,EAAKmN,KAAKuL,gBACvD,GAAIa,EACA,OAAOA,EAASoB,YAGpB,MAEJ,IAAK,kBACL,IAAK,iBACD,IAAMpB,EAAWxP,IAAUyP,YAAYxZ,EAAKmN,KAAKrD,SACjD,GAAIyP,EACA,OAAOA,EAASqB,IAGpB,MAEJ,IAAK,qBACD,IAAMrB,EAAWH,IAAgBI,YAAYxZ,EAAKmN,KAAKkM,eACvD,GAAIE,EACA,OAAOA,EAASoB,YAO5B,OAAO,KAGX,SAASE,EAAcvZ,GACnB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAClB,IAAKA,EAAKmN,KAAM,OAAO,EAEvB,OAAQnN,EAAKmN,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAAO,EAEX,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAAS2N,EAAYxZ,GACjB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAClB,IAAKA,EAAKmN,KAAM,OAAO,EAEvB,OAAQnN,EAAKmN,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAAO,EAEX,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAASmK,EAAchW,GACnB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAClB,IAAKA,EAAKmN,KAAM,OAAO,EAEvB,OAAQnN,EAAKmN,KAAK,UACd,IAAK,qBACD,IAAMgM,EAAaC,IAAgB3a,IAAIuB,EAAKmN,KAAKkM,eAEjD,OAAOF,GAAcA,EAAWG,WAEpC,IAAK,qBACL,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAASyB,EAAazZ,GAClB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAFQ,IAIlBmN,EAASnN,EAATmN,KACR,IAAKA,EAAM,OAAO,EAElB,OAAQA,EAAK,UACT,IAAK,qBACD,IAAMgM,EAAaC,IAAgB3a,IAAI0O,EAAKkM,eAC5C,GAAIF,GAAcA,EAAWR,OACzB,OAAQQ,EAAWR,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAOQ,EAAWR,OAAOG,UAE7B,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,OAAOK,EAAWR,OAAOG,UAIrC,MAEJ,IAAK,qBACD,IAAMN,EAAaC,IAAgBha,IAAI0O,EAAKuL,gBAC5C,GAAIF,GAAcA,EAAWG,OACzB,OAAQH,EAAWG,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAOH,EAAWG,OAAOG,UAE7B,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,OAAON,EAAWG,OAAOG,UAIrC,MAEJ,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAASkC,EAAa1Z,GAAoD,IAA5CsY,EAA2C,wDAAhBhH,EAAgB,uDAAZ,SAAA4D,GAAG,OAAIA,GAC1DxW,EAAO0O,IAAUjQ,IAAI6C,GAC3B,OAAKtB,EAED4T,EAAStS,IAAWsY,EACbhH,EAAE,iBAGN5S,EAAK2S,OAASC,EAAE,cANL,KASf,SAASqI,EAAqB3Z,GACjC,IAEMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAHW,EAKtB,OAAQA,EAAKmN,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAAO,EAEX,IAAK,iBACL,IAAK,kBACD,IAAM9M,EAAO0J,IAAUtL,IAAIuB,EAAKmN,KAAKrD,SAErC,OAAOzJ,GAA+B,oBAAvBA,EAAK8M,KAAK,SAIjC,OAlBsB,EAqB1B,SAASyG,EAAStS,GACd,IAEMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAHW,EAKtB,OAAQA,EAAKmN,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAAO,EAEX,IAAK,iBACL,IAAK,kBACD,OAAOpD,IAAUmR,YAAclb,EAAKmN,KAAKrD,QAIjD,OAhBsB,EAmB1B,SAASqR,EAAoB7Z,GACzB,IAAM8Z,EAAgB,GAEhBpb,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAOob,EAElB,OAAQpb,EAAKmN,KAAK,UACd,IAAK,qBACD,IAAMoM,EAAWd,IAAgBe,YAAYxZ,EAAKmN,KAAKuL,gBACvD,GAAIa,EACA,OAAOA,EAAS8B,SAAWD,EAcvC,OAAOA,E,SAGIE,E,6EAAf,WAA+Bha,GAA/B,iBAAAnE,EAAA,wDACU6C,EAAO0O,IAAUjQ,IAAI6C,GAD/B,yCAEsB,MAFtB,UAIY6L,EAASnN,EAATmN,KAJZ,yCAKsB,MALtB,YAOYA,EAAK,SAPjB,OAQa,oBARb,OAca,mBAdb,QAoBa,uBApBb,QA0Ba,uBA1Bb,yCASyBxP,IAAgBmI,KAAK,CAC9B,QAAS,kBACTgE,QAASqD,EAAKrD,UAX9B,kEAeyBnM,IAAgBmI,KAAK,CAC9B,QAAS,kBACTgE,QAASqD,EAAKrD,UAjB9B,kEAqByBnM,IAAgBmI,KAAK,CAC9B,QAAS,wBACT4S,eAAgBvL,EAAKuL,iBAvBrC,kEA2ByB/a,IAAgBmI,KAAK,CAC9B,QAAS,wBACTuT,cAAelM,EAAKkM,gBA7BpC,0EAkCW,MAlCX,2C,sBAqCA,SAASkC,EAAgBja,EAAQka,GAC7B,IAAMxb,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAFyB,IAInCmN,EAASnN,EAATmN,KAER,OAAOA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKuL,iBAAmB8C,EAGrF,SAASC,EAAana,GAClB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAFQ,IAIlBmN,EAASnN,EAATmN,KAER,OAAOA,GAA0B,uBAAlBA,EAAK,SAGxB,SAASuO,GAAgBpa,GACrB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAFW,IAIrBmN,EAASnN,EAATmN,KAER,OAAIA,GAA0B,uBAAlBA,EAAK,SACNA,EAAKkM,cAGT,EAGX,SAASsC,GAAgBra,EAAQsa,GAC7B,IAAM5b,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAFyB,IAInCmN,EAASnN,EAATmN,KAER,OAAOsO,EAAana,IAAW6L,EAAKkM,gBAAkBuC,EAc1D,SAAS7M,GAAczN,GACnB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAFS,IAInBmN,EAASnN,EAATmN,KAER,OAAOA,GAA2B,oBAAlBA,EAAK,UAAoD,mBAAlBA,EAAK,SAAgD,EAAfA,EAAKrD,QAGtG,SAAS+R,GAAiBva,GACtB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,KAElB,GAAI6a,EAAcvZ,GAAS,CACvB,IAAMjB,EAAO0J,IAAUtL,IAAIsQ,GAAczN,IACzC,GAAIjB,EACA,OAAOA,EAAK6O,cAIpB,OAAOlP,EAAKW,MAGhB,SAASmb,GAAqBxa,GAC1B,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAFgB,IAI1BmN,EAAyCnN,EAAzCmN,KAAmB4O,EAAsB/b,EAAnCgc,YACd,IAAK7O,EAAM,OAAO,EAClB,IAAK4O,EAAmB,OAAO,EANG,IAQ1BE,EAA4BF,EAA5BE,wBAER,OAAQ9O,EAAK,UACT,IAAK,qBACD,IAAMqL,EAAaC,IAAgBha,IAAI0O,EAAKuL,gBAC5C,IAAKF,EAAY,OAAO,EAFD,IAIfG,EAAWH,EAAXG,OACR,IAAKA,EAAQ,OAAO,EALG,IAOfG,EAA2BH,EAA3BG,UAAWkD,EAAgBrD,EAAhBqD,YAEnB,OAAQrD,EAAO,UACX,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAOG,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,OAAOA,GAAakD,GAAeA,EAAYC,wBAIvD,MAEJ,IAAK,kBACL,IAAK,iBACD,OAAOA,EAEX,IAAK,qBACD,IAAM9C,EAAaC,IAAgB3a,IAAIuB,EAAKmN,KAAKkM,eACjD,IAAKF,EAAY,OAAO,EAFD,IAIfR,EAAWQ,EAAXR,OACR,IAAKA,EAAQ,OAAO,EALG,IAOfG,EAA2BH,EAA3BG,UAAWkD,EAAgBrD,EAAhBqD,YAEnB,OAAQrD,EAAO,UACX,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAOG,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAOmD,IAA4B9C,EAAWG,WAElD,IAAK,6BACD,OAAO2C,GAA2BnD,GAAakD,GAAeA,EAAYC,yBAM1F,OAAO,EAGX,SAASC,GAAkB5a,GAAgD,IAAxCsY,EAAuC,wDAAZhH,EAAY,uDAAR,SAAAoD,GAAC,OAAIA,GACnE,GAAIpC,EAAStS,IAAWsY,EACpB,OAAOhH,EAAE,iBAGb,IAAM5S,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,KAClB,IAAKA,EAAKmN,KAAM,OAAO,KAEvB,OAAQnN,EAAKmN,KAAK,UACd,IAAK,qBAGL,IAAK,qBACD,OAAOnN,EAAK2S,MAEhB,IAAK,kBACL,IAAK,iBACD,OAAOyD,YAAiBpW,EAAKmN,KAAKrD,QAAS8I,GAInD,OAAO,KAkCX,SAASuJ,GAAgB7a,GACrB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAClB,IAAKA,EAAKmN,KAAM,OAAO,EAEvB,OAAQnN,EAAKmN,KAAK,UACd,IAAK,qBACD,OAAO,EAEX,IAAK,qBACD,IAAMgM,EAAaC,IAAgB3a,IAAIuB,EAAKmN,KAAKkM,eACjD,OAAIF,IACQiD,QAAQjD,EAAWmB,UAKnC,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAAS+B,GAAc/a,GACnB,OAAQsS,EAAStS,GAGrB,SAASgb,GAAahb,GAClB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAFQ,IAIlBmN,EAAyCnN,EAAzCmN,KAAmB4O,EAAsB/b,EAAnCgc,YACd,IAAK7O,EAAM,OAAO,EAClB,IAAK4O,EAAmB,OAAO,EANL,IAQlBQ,EAAmBR,EAAnBQ,eAER,OAAQpP,EAAK,UACT,IAAK,qBACD,IAAMqL,EAAaC,IAAgBha,IAAI0O,EAAKuL,gBAC5C,IAAKF,EAAY,OAAO,EAFD,IAIfG,EAAWH,EAAXG,OACR,IAAKA,EAAQ,OAAO,EALG,IAOfG,EAA2BH,EAA3BG,UAAWkD,EAAgBrD,EAAhBqD,YAEnB,OAAQrD,EAAO,UACX,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAOG,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,OAAOA,GAAakD,GAAeA,EAAYO,eAIvD,MAEJ,IAAK,kBACL,IAAK,iBACD,OAAOA,EAEX,IAAK,qBACD,IAAMpD,EAAaC,IAAgB3a,IAAI0O,EAAKkM,eAC5C,IAAKF,EAAY,OAAO,EAFD,IAIfR,EAAWQ,EAAXR,OACR,IAAKA,EAAQ,OAAO,EALG,IAOfG,EAA2BH,EAA3BG,UAAWkD,EAAgBrD,EAAhBqD,YAEnB,OAAQrD,EAAO,UACX,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAOG,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAOyD,IAAmBpD,EAAWG,WAEzC,IAAK,6BACD,OAAOiD,GAAkBzD,GAAakD,GAAeA,EAAYO,gBAMjF,OAAO,EAGX,SAASC,GAAgBlb,GACrB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAFW,IAIrBmN,EAAyCnN,EAAzCmN,KAAmB4O,EAAsB/b,EAAnCgc,YACd,IAAK7O,EAAM,OAAO,EAClB,IAAK4O,EAAmB,OAAO,EANF,IAQrBU,EAAsBV,EAAtBU,kBAER,OAAQtP,EAAK,UACT,IAAK,qBACD,IAAMqL,EAAaC,IAAgBha,IAAI0O,EAAKuL,gBAC5C,IAAKF,EAAY,OAAO,EAFD,IAIfG,EAAWH,EAAXG,OACR,IAAKA,EAAQ,OAAO,EALG,IAOfG,EAA2BH,EAA3BG,UAAWkD,EAAgBrD,EAAhBqD,YAEnB,OAAQrD,EAAO,UACX,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAOG,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,OAAOA,GAAakD,GAAeA,EAAYS,kBAIvD,MAEJ,IAAK,kBACL,IAAK,iBACD,OAAOA,EAEX,IAAK,qBACD,IAAMtD,EAAaC,IAAgB3a,IAAI0O,EAAKkM,eAC5C,IAAKF,EAAY,OAAO,EAFD,IAIfR,EAAWQ,EAAXR,OACR,IAAKA,EAAQ,OAAO,EALG,IAOfG,EAA2BH,EAA3BG,UAAWkD,EAAgBrD,EAAhBqD,YAEnB,OAAQrD,EAAO,UACX,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAOG,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO2D,IAAsBtD,EAAWG,WAE5C,IAAK,6BACD,OAAOmD,GAAqB3D,GAAakD,GAAeA,EAAYS,mBAMpF,OAAO,EAGX,SAASnE,GAAchX,GACnB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAG3B,OAFcob,GAAapb,IAEW,IAAtBtB,EAAK8W,cAAoD,IAA9B9W,EAAK2W,qBAGpD,SAAS+F,GAAapb,GAClB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAE3B,GAAItB,EAAM,CAAC,IACCwP,EAAkBxP,EAAlBwP,cACR,GAAIA,EAAe,CAAC,IACR0E,EAAuB1E,EAAvB0E,mBACR,GAAIA,EACA,OAAOA,EAAmBtC,MAKtC,OAAO,KAGX,SAAS+K,GAA6Brb,GAClC,IAAIsb,EAAmB,EACjB5c,EAAO0O,IAAUjQ,IAAI6C,GAC3B,GAAItB,EAAM,CAAC,IACCwP,EAAkBxP,EAAlBwP,cACJA,IACAoN,EAAmBpN,EAAcnD,qBAIzC,OAAOuQ,EAGX,SAASC,GAAevb,GACpB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAFU,IAIpBmN,EAAyCnN,EAAzCmN,KAAmB4O,EAAsB/b,EAAnCgc,YACd,IAAK7O,EAAM,OAAO,EAClB,IAAK4O,EAAmB,OAAO,EANH,IAQpBe,EAAqBf,EAArBe,iBAER,OAAQ3P,EAAK,UACT,IAAK,qBACD,IAAMqL,EAAaC,IAAgBha,IAAI0O,EAAKuL,gBAC5C,IAAKF,EAAY,OAAO,EAFD,IAIfG,EAAWH,EAAXG,OACR,IAAKA,EAAQ,OAAO,EALG,IAOfG,EAA2BH,EAA3BG,UAAWkD,EAAgBrD,EAAhBqD,YAEnB,OAAQrD,EAAO,UACX,IAAK,gCACD,OAAOA,EAAOmE,iBAElB,IAAK,yBAGL,IAAK,0BAGL,IAAK,uBAGL,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,OAAOhE,GAAakD,GAAeA,EAAYc,iBAIvD,MAEJ,IAAK,kBACL,IAAK,iBACD,OAAOA,EAEX,IAAK,qBACD,IAAM3D,EAAaC,IAAgB3a,IAAI0O,EAAKkM,eAC5C,IAAKF,EAAY,OAAO,EAFD,IAIfR,EAAWQ,EAAXR,OACR,IAAKA,EAAQ,OAAO,EALG,IAOfG,EAA2BH,EAA3BG,UAAWkD,EAAgBrD,EAAhBqD,YAEnB,OAAQrD,EAAO,UACX,IAAK,gCACD,OAAOmE,GAAoBnE,EAAOmE,iBAEtC,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAOhE,EAEX,IAAK,uBAGL,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,OAAOgE,GAAoBhE,GAAakD,GAAeA,EAAYc,kBAMnF,OAAO,EAGX,SAASC,GAAezb,GACpB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAFU,IAIpBmN,EAASnN,EAATmN,KACR,IAAKA,EAAM,OAAO,EAElB,OAAQnN,EAAKmN,KAAK,UACd,IAAK,qBACD,OAAO,EAEX,IAAK,kBACL,IAAK,iBACD,IAAM9M,EAAO0J,IAAUtL,IAAI0O,EAAKrD,SAEhC,OAAOzJ,GAAQA,EAAK2c,YAExB,IAAK,qBACD,IAAM7D,EAAaC,IAAgB3a,IAAI0O,EAAKkM,eAE5C,OAAOF,GAAcA,EAAW6D,YAIxC,OAAO,EAGX,SAASC,GAAa3b,GAClB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,EAGlB,IADiBA,EAATmN,KACG,OAAO,EAElB,OAAQnN,EAAKmN,KAAK,UACd,IAAK,qBAGL,IAAK,kBACD,OAAO,EAEX,IAAK,iBACD,OAAO,EAEX,IAAK,qBACD,OAAO,EAIf,OAAO,E,0zDIx3CL+P,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAmBVC,YApBmB,sCAoBL,WAAMhX,GAAN,uBAAAjJ,EAAA,wDACViJ,EAAMiX,kBACNjX,EAAMkX,iBAFI,EAI0B,EAAKH,MAAjCtW,EAJE,EAIFA,OAAQyT,EAJN,EAIMA,SAAUiD,EAJhB,EAIgBA,OACtB1W,EALM,gBAMN2W,YAAS3W,EAAQ0W,GANX,2BAOCjD,EAPD,kCAQa3c,IAAgBmI,KAAK,CACpC,QAAS,mBACTwU,aACDvV,MAAM,WACL,EAAK0Y,SAAS,CAAE5d,OAAO,MAZrB,SAQAG,EARA,UAgBE8a,YAAY9a,EAAK5B,IACjBsf,YAAS1d,EAAK5B,GAAI,MAAM,GAExBsf,YAAS1d,EAAK5B,GAAI,KAAMmf,IAnB1B,0CApBK,wDA6CnBI,YAAc,WACV,EAAKF,SAAS,CAAE5d,OAAO,KA9CR,EAiDnB+d,kBAAoB,SAAAxX,GAChBA,EAAMkX,iBACNlX,EAAMiX,mBAhDN,EAAKQ,MAAQ,GAHE,E,sEAsDT,IAAD,EACoClZ,KAAKwY,MAAtCW,EADH,EACGA,SAAUlL,EADb,EACaA,EAAGD,EADhB,EACgBA,MAAO2H,EADvB,EACuBA,SACpBza,EAAU8E,KAAKkZ,MAAfhe,MAER,OACI,oCACI,uBAAG8S,MAAOA,EAAOoL,QAASpZ,KAAKyY,aAC1BU,GAEJje,GACG,kBAACme,EAAA,EAAD,CACIC,mBAAoB,EACpB1Y,MAAM,EACN2Y,QAASvZ,KAAKgZ,YACdI,QAASpZ,KAAKiZ,kBACdO,kBAAgB,wBAChB,kBAACC,EAAA,EAAD,CAAahgB,GAAG,wBAAwBwU,EAAE,UAC1C,kBAACyL,EAAA,EAAD,CAAeC,QAAS,CAAEC,KAAM,2BAC5B,kBAACC,EAAA,EAAD,mCAA2ClE,EAA3C,OAEJ,kBAACmE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQX,QAASpZ,KAAKgZ,aAAc/K,EAAE,a,gDArE9BuK,EAAOU,GAAQ,IACnChX,EAAqBsW,EAArBtW,OAAQyT,EAAa6C,EAAb7C,SAEhB,OAAIuD,EAAMc,aAAe9X,GAAUgX,EAAMe,eAAiBtE,EAC/C,CACHqE,WAAY9X,EACZ+X,aAActE,EACdza,OAAO,GAIR,S,GAlBWgf,IAAMC,WA4FhC5B,EAAY6B,aAAe,CACvBxB,OAAO,GAGIyB,oBAAkB9B,G,kIChF1B,SAAS+B,EAAa3d,EAAQE,GACjC,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EACD,OAAO,EAHiC,IAMpCC,EAAYD,EAAZC,QACR,IAAKA,EACD,OAAO,EARiC,IAWpCiR,EAAYjR,EAAZiR,QACR,GAAIA,GAAWA,EAAQG,MAAQH,EAAQG,KAAKhP,OAAS,EACjD,OAAO,EAGX,OAAQpC,EAAQ,UACZ,IAAK,mBAGL,IAAK,kBAGL,IAAK,eAGL,IAAK,iBAGL,IAAK,eAGL,IAAK,mBACD,OAAO,EAIf,OAAO,EAGJ,SAAS0e,EAAgB5d,EAAQE,GACpC,IAAMxB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EACD,OAAO,EAHoC,IAMvCmf,EAA4Dnf,EAA5Dmf,2BAA4BC,EAAgCpf,EAAhCof,4BAE9B7e,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EACD,OAAO,EAVoC,IAavCnC,EAAoBmC,EAApBnC,GAAIihB,EAAgB9e,EAAhB8e,YACNC,EAAO1L,YAAStS,GACtB,QAAI+d,IAAeC,KAIZD,EAAcjhB,EAAKghB,EAA8BhhB,EAAK+gB,GAgCjE,SAASI,EAAShf,GAAsB,IAAbqS,EAAY,uDAAR,SAAAoD,GAAC,OAAIA,GAChC,IAAKzV,EAAS,OAAO,KADc,IAG3B6L,EAA4B7L,EAA5B6L,eAAgB7K,EAAYhB,EAAZgB,QAExB,GAAI6K,GACarC,IAAUtL,IAAI2N,GAEvB,OAAO8J,YAAgB9J,EAAgB,KAAMwG,GAIrD,GAAIrR,EAAS,CACT,IAAMvB,EAAO0O,IAAUjQ,IAAI8C,GAC3B,GAAIvB,EACA,OAAOA,EAAK2S,MAIpB,OAAO,KAGX,SAAS6M,EAAU5N,EAAM6N,EAAOC,GAM5B,OALID,EAAQ,IAAGA,EAAQ,GACnBA,EAAQ7N,EAAKhP,OAAS,IAAG6c,EAAQ7N,EAAKhP,OAAS,GAC/C8c,EAAMD,IAAOC,EAAMD,GACnBC,EAAM9N,EAAKhP,SAAQ8c,EAAM9N,EAAKhP,QAE3BgP,EAAK4N,UAAUC,EAAOC,GAGjC,SAASrC,EAAgBjX,GACrBA,EAAMiX,kBAGV,SAASsC,EAAkBvZ,EAAOwL,GAC9BxL,EAAMiX,kBACNjX,EAAMkX,iBAF8B,IAI5Bhc,EAAWse,IAAXte,OAERue,YAAWve,EAAQsQ,GAGvB,SAASkO,EAAiBC,GAA4B,IAAbnN,EAAY,uDAAR,SAAAoD,GAAC,OAAIA,GAC9C,GAA+B,kBAA3B+J,EAAc,SAA8B,OAAO,KADN,IAGzCnO,EAAmBmO,EAAnBnO,KAAM6C,EAAasL,EAAbtL,SACd,IAAK7C,EAAM,OAAO,KAClB,IAAK6C,EAAU,OAAO7C,EAKtB,IAHA,IAAIoO,GAA0B,EAC1Bva,EAAS,GACTyI,EAAQ,EATqC,WAUxCxL,GACL,IAAMud,EAASxL,EAAS/R,GAChBkS,EAAyBqL,EAAzBrL,OAAQhS,EAAiBqd,EAAjBrd,OAAQuK,EAAS8S,EAAT9S,KAGxB,GAAIe,EAAQ0G,EACR,iBAGJ,IAAIsL,EAAaV,EAAU5N,EAAM1D,EAAO0G,GAClCuL,EAAmBD,EAAWtd,OAChCsd,IACIF,GAA2BE,EAAWtd,OAAS,GAAuB,OAAlBsd,EAAW,KAC/DA,EAAaA,EAAWE,OAAO,GAC/BJ,GAA0B,GAE1BE,GACAza,EAAOZ,KAAKqb,IAIpB,IAAMG,EAAYzL,EACd0L,EAAad,EAAU5N,EAAMgD,EAAQA,EAAShS,GAMlD,OALIod,GAA2BM,EAAW1d,OAAS,GAAuB,OAAlB0d,EAAW,KAC/DA,EAAaA,EAAWF,OAAO,GAC/BJ,GAA0B,GAGtB7S,EAAK,UACT,IAAK,qBACD1H,EAAOZ,KAAK,4BAAQ2R,IAAK6J,GAAYC,IACrC,MAEJ,IAAK,2BACD,IAAMC,EAAUD,EAAW1d,OAAS,GAAuB,MAAlB0d,EAAW,GAAad,EAAUc,EAAY,GAAKA,EAC5F7a,EAAOZ,KACH,uBAAG2R,IAAK6J,EAAWtC,QAASV,EAAiBzV,KAAI,mCAA8B2Y,EAA9B,UAC5CD,IAGT,MAEJ,IAAK,wBACD7a,EAAOZ,KACH,uBAAG2R,IAAK6J,EAAWtC,QAAS,SAAA3X,GAAK,OAAIuZ,EAAkBvZ,EAAOka,KACzDA,IAGT,MAEJ,IAAK,qBACD7a,EAAOZ,KAAK,0BAAM2R,IAAK6J,GAAYC,IACnC,MAEJ,IAAK,6BACD7a,EAAOZ,KACH,uBACI2R,IAAK6J,EACLzY,KAAI,iBAAY0Y,GAChBvC,QAASV,EACThX,OAAO,SACPma,IAAI,uBACHF,IAGT,MAEJ,IAAK,wBACD7a,EAAOZ,KACH,uBAAG2R,IAAK6J,EAAWtC,QAAS,SAAA3X,GAAK,OAAIuZ,EAAkBvZ,EAAOka,KACzDA,IAGT,MAEJ,IAAK,uBACD7a,EAAOZ,KAAK,wBAAI2R,IAAK6J,GAAYC,IACjC,MAEJ,IAAK,4BACD7a,EAAOZ,KACH,kBAAC,EAAD,CAAa2R,IAAK6J,EAAWxZ,OAAQsG,EAAKrD,QAAS6I,MAAOuD,YAAgB/I,EAAKrD,QAAS,KAAM8I,IACzF0N,IAGT,MAEJ,IAAK,wBACD7a,EAAOZ,KACH,kBAAC,EAAD,CAAa2R,IAAK6J,EAAW/F,SAAUgG,GAClCA,IAGT,MAEJ,IAAK,4BACD7a,EAAOZ,KACH,uBAAG2R,IAAK6J,EAAWzY,KAAI,cAAS0Y,GAAcvC,QAASV,GAClDiD,IAGT,MAEJ,IAAK,oBACD7a,EAAOZ,KAAK,yBAAK2R,IAAK6J,GAAYC,IAClCN,GAA0B,EAC1B,MAEJ,IAAK,wBACDva,EAAOZ,KACH,yBAAK2R,IAAK6J,GACN,8BAAOC,KAGfN,GAA0B,EAC1B,MAEJ,IAAK,wBACD,IAAM3b,EAAM8I,EAAK9I,IAAM8I,EAAK9I,IAAMic,EAElC7a,EAAOZ,KACH,kBAAC4b,EAAA,EAAD,CAAUjK,IAAK6J,EAAWhc,IAAKA,GAC1Bic,IAGT,MAEJ,IAAK,oBACD7a,EAAOZ,KACH,kBAAC4b,EAAA,EAAD,CAAUjK,IAAK6J,EAAWhc,IAAKic,GAC1BA,IAGT,MAEJ,QACI7a,EAAOZ,KAAKyb,GAIpBpS,GAASiS,EAAmBF,EAAOrd,QA5I9BF,EAAI,EAAGA,EAAI+R,EAAS7R,OAAQF,IAAK,EAAjCA,GA+IT,GAAIwL,EAAQ0D,EAAKhP,OAAQ,CACrB,IAAI8d,EAAY9O,EAAK4N,UAAUtR,GAC3B8R,GAA2BU,EAAU9d,OAAS,GAAsB,OAAjB8d,EAAU,KAC7DA,EAAYA,EAAUN,OAAO,IAE7BM,GACAjb,EAAOZ,KAAK6b,GAIpB,OAAOjb,EAGX,SAASkb,EAAQpgB,EAASqgB,GAAmB,IAAbhO,EAAY,uDAAR,SAAAoD,GAAC,OAAIA,GACrC,IAAKzV,EAAS,OAAO,KAErB,IAAIkF,EAAS,GAELjF,EAAYD,EAAZC,QACR,IAAKA,EAAS,MAAM,GAAN,mBAAWiF,GAAX,CAAmBmb,IANO,IAQhChP,EAAkBpR,EAAlBoR,KAAMH,EAAYjR,EAAZiR,QAEd,GAAIG,GAA0B,kBAAlBA,EAAK,UAAgCA,EAAKA,KAClDnM,EAASqa,EAAiBlO,EAAMgB,QAC7B,GAAInB,GAAgC,kBAArBA,EAAQ,UAAgCA,EAAQG,KAAM,CACxE,IAAMmO,EAAgBD,EAAiBrO,EAASmB,GAC5CmN,IACAta,EAASA,EAAOob,OAAOd,IAI/B,OAAOta,GAAUA,EAAO7C,OAAS,EAA1B,sBAAkC6C,GAAlC,CAA0Cmb,IAAQ,GAG7D,SAASE,EAAWvgB,GAChB,OAAKA,GACAA,EAAQC,QAEND,EAAQC,QAAQQ,SAHF,KAMzB,SAASmX,EAAQT,GACb,IAAKA,EAAM,OAAO,KAElB,IAAMqJ,EAAI,IAAIpJ,KAAY,IAAPD,GAEnB,OAAOI,YAAWiJ,EAAG,QAGzB,SAASC,EAAYtJ,GACjB,IAAKA,EAAM,OAAO,KAElB,IAAMqJ,EAAI,IAAIpJ,KAAY,IAAPD,GACnB,OAAOI,YAAWiJ,EAAG,qBAGzB,SAASE,EAAsBC,GAC3B,IAAKA,EAAa,OAAO,EADe,IAGhCC,EAAWD,EAAXC,OACR,IAAKA,EAAQ,OAAO,EAEpB,OAAQA,EAAO,UACX,IAAK,2BACD,OAAO,EAEX,IAAK,iCACD,OAAO,EAEX,IAAK,8BACD,OAAO,EAIf,OAAO,EAGX,SAASC,GAAgBF,GAA8B,IAAjBtO,EAAgB,uDAAZ,SAAA4D,GAAG,OAAIA,GAC7C,IAAK0K,EAAa,MAAO,GADyB,IAG1CC,EAAWD,EAAXC,OACR,IAAKA,EAAQ,MAAO,GAEpB,OAAQA,EAAO,UACX,IAAK,2BAA6B,IACtB/U,EAAmB+U,EAAnB/U,eAER,OAAO8J,YAAgB9J,EAAgB,KAAMwG,GAEjD,IAAK,iCAGD,OAFwBuO,EAAhBE,YAIZ,IAAK,8BAAgC,IACzB9f,EAA8B4f,EAA9B5f,QAAS+f,EAAqBH,EAArBG,iBAEjB,OAAOtG,YAAazZ,GAAS,EAAOqR,IAAM0O,EAAgB,YAAQA,EAAR,KAA8B,IAIhG,MAAO,GAcX,SAASC,GAAgBhhB,GACrB,OAAKA,EAEEA,EAAQ6L,eAFM,KAKzB,SAASoV,GAAwB/b,EAAQ4I,GACrC,GAA+B,IAA3B5I,EAAO6C,SAAS1F,QACG,IAAnByL,EAAQzL,OAAZ,CAEA,IAAM2F,EAAM8F,EAAQoT,OAAO,SAASC,EAAaC,GAE7C,OADAD,EAAYrkB,IAAIskB,EAAQvjB,GAAIujB,EAAQvjB,IAC7BsjB,GACR,IAAI/kB,KAEP8I,EAAO6C,SAAW7C,EAAO6C,SAAS7B,OAAO,SAAAD,GAAC,OAAK+B,EAAIhK,IAAIiI,EAAEpI,OAG7D,SAASwjB,GAAetZ,GACpB,OAAOA,EAAS7B,OAAO,SAAAD,GAAC,MAA2B,yBAAvBA,EAAEhG,QAAQ,WAG1C,SAASiW,GAAWlW,GAA0B,IAAjBqS,EAAgB,uDAAZ,SAAA4D,GAAG,OAAIA,GACpC,IAAKjW,EAAS,OAAO,KADoB,IAGjCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,IAAIiR,EAAU,GAKd,GAJIjR,EAAQiR,SAAWjR,EAAQiR,QAAQG,OACnCH,EAAO,YAAQjR,EAAQiR,QAAQG,OAG/BrR,EAAQshB,IAAM,EACd,OAAOC,YAAyBvhB,GAGpC,OAAQC,EAAQ,UACZ,IAAK,mBACD,OAAOoS,EAAE,aAAenB,EAE5B,IAAK,eACD,OAAOmB,EAAE,eAAiBnB,EAE9B,IAAK,8BACD,OAAOqQ,YAAyBvhB,GAEpC,IAAK,cACD,OAAOqS,EAAE,QAAUnB,EAEvB,IAAK,wBAGL,IAAK,yBAGL,IAAK,yBAGL,IAAK,0BAGL,IAAK,yBAGL,IAAK,wBAGL,IAAK,oBAGL,IAAK,yBAGL,IAAK,uBACD,OAAOqQ,YAAyBvhB,GAEpC,IAAK,iBACD,OAAOqS,EAAE,iBAAmBnB,EAEhC,IAAK,2BAGL,IAAK,6BACD,OAAOqQ,YAAyBvhB,GAEpC,IAAK,kBAAoB,IACbK,EAAaJ,EAAbI,SACR,OAAIA,GAAYA,EAAS+L,UACd/L,EAAS+L,UAAY8E,EAGzBmB,EAAE,kBAAoBnB,EAEjC,IAAK,sBACD,OAAOmB,EAAE,eAAiBnB,EAE9B,IAAK,sBACD,OAAOmB,EAAE,eAAiBnB,EAE9B,IAAK,cACD,OAAOmB,EAAE,cAAgBnB,EAE7B,IAAK,mBAGL,IAAK,iBACD,OAAOqQ,YAAyBvhB,GAEpC,IAAK,kBACD,OAAOqS,EAAE,kBAAoBnB,EAEjC,IAAK,8BAGL,IAAK,0BAGL,IAAK,2BAGL,IAAK,8BACD,OAAOqQ,YAAyBvhB,GAEpC,IAAK,eACD,OAAOqS,EAAE,eAAiBnB,EAE9B,IAAK,cAGD,MAAO,iBAFUjR,EAATuhB,KAEaC,UAAYpP,EAAE,SAAWnB,EAElD,IAAK,oBAGL,IAAK,yBACD,OAAOqQ,YAAyBvhB,GAEpC,IAAK,iBAAmB,IACZQ,EAAYP,EAAZO,QACJkhB,EAAQ,GAKZ,OAJIlhB,GAAWA,EAAQkhB,QACnBA,EAAQlhB,EAAQkhB,OAGbrP,EAAE,kBAAoBqP,EAAK,WAAOA,GAAU,IAAMxQ,EAE7D,IAAK,8BACD,OAAOqQ,YAAyBvhB,GAEpC,IAAK,cACD,OAAOC,EAAQoR,KAAKA,KAAOH,EAE/B,IAAK,qBACD,OAAOqQ,YAAyBvhB,GAEpC,IAAK,eACD,OAAOqS,EAAE,kBAAoBnB,EAEjC,IAAK,eACD,OAAOmB,EAAE,eAAiBnB,EAE9B,IAAK,mBACD,OAAOmB,EAAE,eAAiBnB,EAE9B,IAAK,mBACD,OAAOmB,EAAE,eAAiBnB,EAE9B,IAAK,0BACD,OAAOqQ,YAAyBvhB,GAEpC,QACI,OAAOqS,EAAE,0BAKrB,SAASsP,GAAe1hB,GACpB,QAAKA,GAEuB,iBAArBA,EAAQ,SAGnB,SAAS4B,GACLtB,GAKD,IAJCsJ,EAIF,uDAJUO,IACRN,EAGF,uDAHWO,IACTN,EAEF,uDAFSC,IACPC,EACF,uDADUC,IAER,IAAK3J,EAAU,OAAO,KADxB,IAGUqhB,EAAwBrhB,EAAxBqhB,UAAWC,EAAathB,EAAbshB,SACnB,MAAM,OAAN,OAAcA,EAAd,YAA0BD,EAA1B,iBAA4C/X,EAA5C,YAAqDC,EAArD,kBAAqEG,EAArE,iBAAmFF,GAGvF,SAAS+X,GAAe/gB,EAAQE,GAC5B,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,EAFkB,IAI/BC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,eACD,OAAO,EAEX,IAAK,cAAgB,IACTQ,EAAaR,EAAbQ,SACR,OAAOob,QAAQpb,EAASC,OAE5B,QACI,OAAO,GAKnB,SAASqhB,GAAgBhhB,EAAQE,GAC7B,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,EAFmB,IAIhCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,kBAAoB,IACbI,EAAaJ,EAAbI,SACR,IAAKA,EAAU,OAAO,EAFF,IAIZ+L,EAAc/L,EAAd+L,UAER,OAAOA,GAAaA,EAAU4D,cAAcgS,SAAS,SAEzD,IAAK,cAAgB,IACTvhB,EAAaR,EAAbQ,SACR,IAAKA,EAAU,OAAO,EAFN,IAIRJ,EAAaI,EAAbJ,SACR,IAAKA,EAAU,OAAO,EALN,IAOR+L,EAAc/L,EAAd+L,UAER,OAAOA,GAAaA,EAAU4D,cAAcgS,SAAS,SAEzD,QACI,OAAO,GAKnB,SAASC,GAAmBlhB,EAAQE,GAChC,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,EAFsB,IAInCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,mBACD,OAAO,EAEX,IAAK,cAAgB,IACTQ,EAAaR,EAAbQ,SACR,OAAOob,QAAQpb,EAASP,WAE5B,QACI,OAAO,GAKnB,SAASgiB,GAAgBnhB,EAAQE,GAC7B,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,EAFmB,IAIhCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,mBACD,OAAOA,EAAQkiB,YAEnB,IAAK,mBACD,OAAOliB,EAAQmiB,UAEnB,QACI,OAAO,GAKnB,SAASC,GAAcriB,GAAsB,IAAbqS,EAAY,uDAAR,SAAAoD,GAAC,OAAIA,GACrC,IAAKzV,EAAS,OAAO,KADmB,IAGhCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,eAAiB,IACVE,EAAUF,EAAVE,MACR,GAAIA,EACA,OAAOmiB,YAAcniB,GAEzB,MAEJ,IAAK,cAAgB,IACTM,EAAaR,EAAbQ,SACR,GAAIA,EAAU,CAAC,IACHN,EAAUM,EAAVN,MACR,GAAIA,EACA,OAAOmiB,YAAcniB,GAEzB,OAKZ,OAnpBJ,SAAmBH,GAAsB,IAAbqS,EAAY,uDAAR,SAAAoD,GAAC,OAAIA,GACjC,IAAKzV,EAAS,OAAO,KADe,IAG5BuiB,EAAiBviB,EAAjBuiB,aAER,GAAIA,EACA,OAAQA,EAAa,UACjB,IAAK,2BACD,GAAIA,EAAa1W,eAAiB,EAE9B,GADarC,IAAUtL,IAAIqkB,EAAa1W,gBAEpC,OAAO8J,YAAgB4M,EAAa1W,eAAgB,KAAMwG,GAGlE,MAEJ,IAAK,uBACD,IAAM5S,EAAO0O,IAAUjQ,IAAIqkB,EAAavhB,SACxC,GAAIvB,EACA,OAAOA,EAAK2S,MAO5B,OAAO4M,EAAShf,EAASqS,GAynBlBmQ,CAAUxiB,EAASqS,GAG9B,SAASoQ,GAAS1hB,EAAQE,GACtB,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,EAFY,IAIzBC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,eAED,GADkBA,EAAVE,MAEJ,OAAO,EAGX,MAEJ,IAAK,cAAgB,IACTM,EAAaR,EAAbQ,SACR,GAAIA,EAEA,GADkBA,EAAVN,MAEJ,OAAO,EAQvB,OAAO,EAGX,SAASuiB,GAAa3hB,EAAQE,GAC1B,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,EAFgB,IAI7BC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,mBAED,GADuBA,EAAfU,WAEJ,OAAO,EAGX,MAEJ,IAAK,cAAgB,IACTF,EAAaR,EAAbQ,SACR,GAAIA,EAEA,GADuBA,EAAfE,WAEJ,OAAO,EAQvB,OAAO,EAGX,SAASgiB,GAAwB5hB,EAAQE,GACrC,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,KAF2B,IAIxCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,eAED,GADkBA,EAAVE,MAEJ,MAAO,CACH,QAAS,6BAGjB,MAEJ,IAAK,mBAED,GADuBF,EAAfW,WAEJ,MAAO,CACH,QAAS,iCAGjB,MAEJ,IAAK,mBAED,GADuBX,EAAfU,WAEJ,OAAO,KAMX,MAEJ,IAAK,cAAgB,IACTF,EAAaR,EAAbQ,SACR,GAAIA,EAAU,CAAC,IACHN,EAAkCM,EAAlCN,MAAOS,EAA2BH,EAA3BG,WAAYD,EAAeF,EAAfE,WAC3B,GAAIR,EACA,OAAO,KAOX,GAAIS,EACA,OAAO,KAOX,GAAID,EACA,OAAO,KAMX,OAKZ,OAAO,KAGX,SAASiiB,GAAc1iB,EAAWF,EAAS6iB,GACvC,GAAK3iB,GACAF,EAAL,CAFmD,IAI3CgB,EAAgBhB,EAAhBgB,QAASnD,EAAOmC,EAAPnC,GAEAd,EAASmD,EAApBA,UACDnD,IAELA,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EAC7B8lB,GAAc9lB,EAAKgB,MAAMoS,sBACzB/H,IAAUa,oBAAoBlM,EAAKc,GAAImC,GAEhC6iB,GAAc9lB,EAAKwC,OAAO+Q,oBACjClI,IAAU0a,iBAAiB/lB,EAAKc,GAAImC,IAOxC5C,IAAgB8G,aAAa,CACzB,QAAS,8BACTnD,OAAQC,EACRC,UAAWpD,IAGfT,IAAgBmI,KAAK,CACjB,QAAS,qBACTvE,QAASA,EACT+hB,WAAYllB,IAGhBmlB,YAAsB,CAClBjiB,OAAQC,EACRC,UAAWpD,OAInB,SAASolB,GAAU9iB,EAAOH,EAAS6iB,GAC/B,GAAK1iB,GACAH,EAAL,CAF2C,IAInCgB,EAAgBhB,EAAhBgB,QAASnD,EAAOmC,EAAPnC,GAEJd,EAASoD,EAAhBA,MACDpD,IAELA,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EAC7B8lB,GAAc9lB,EAAKgB,MAAMoS,sBACzB/H,IAAUa,oBAAoBlM,EAAKc,GAAImC,GAEhC6iB,GAAc9lB,EAAKwC,OAAO+Q,oBACjClI,IAAU0a,iBAAiB/lB,EAAKc,GAAImC,IAGpCuH,YAASxK,EAAMiD,EAAS,kBAAMoI,IAAU3G,gBAAgBT,EAASnD,EAAId,EAAKc,MAG9ET,IAAgBmI,KAAK,CACjB,QAAS,qBACTvE,QAASA,EACT+hB,WAAYllB,IAGhBT,IAAgB8G,aAAa,CACzB,QAAS,0BACTnD,OAAQC,EACRC,UAAWpD,OAsDnB,SAASqlB,GAAa7iB,EAAUL,EAAS6iB,GACrC,GAAKxiB,GACAL,EAAL,CAFiD,IAIzCgB,EAAgBhB,EAAhBgB,QAASnD,EAAOmC,EAAPnC,GAEDd,EAASsD,EAAnBA,SACDtD,IAELA,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EAC7B8lB,GAAc9lB,EAAKgB,MAAMoS,sBACzB/H,IAAUa,oBAAoBlM,EAAKc,GAAImC,GAEhC6iB,GAAc9lB,EAAKwC,OAAO+Q,oBACjClI,IAAU0a,iBAAiB/lB,EAAKc,GAAImC,IAIxC5C,IAAgBmI,KAAK,CACjB,QAAS,qBACTvE,QAASA,EACT+hB,WAAYllB,IAGZkkB,GAAgB/gB,EAASnD,IACzBT,IAAgBmI,KAAK,CACjB,QAAS,qBACTvE,QAASA,EACT+hB,WAAYllB,IAGhBmlB,YAAsB,CAClBjiB,OAAQC,EACRC,UAAWpD,KAGfwO,YAAetP,EAAMsD,EAAS+L,UAAWpM,MAwCjD,SAASmjB,GAAU/iB,EAAOJ,EAAS6iB,GAC/B,GAAKziB,GACAJ,EAAL,CAF2C,IAInCgB,EAAgBhB,EAAhBgB,QAASnD,EAAOmC,EAAPnC,GAEXyE,EAAYsI,YAAaxK,EAAMgC,OACrC,GAAKE,EAAL,CAP2C,IAS9BvF,EAASuF,EAAhBlC,MACDrD,IAELA,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EAC7B8lB,GAAc9lB,EAAKgB,MAAMoS,sBACzB/H,IAAUa,oBAAoBlM,EAAKc,GAAImC,GAEhC6iB,GAAc9lB,EAAKwC,OAAO+Q,oBACjClI,IAAU0a,iBAAiB/lB,EAAKc,GAAImC,IAIxCuH,YAASxK,EAAMiD,EAAS,kBAAMoI,IAAU7F,gBAAgBvB,EAASnD,EAAId,EAAKc,MAE1ET,IAAgBmI,KAAK,CACjB,QAAS,qBACTvE,QAASA,EACT+hB,WAAYllB,IAGhBmlB,YAAsB,CAClBjiB,OAAQC,EACRC,UAAWpD,Q,SAIJulB,G,oFAAf,WAA2B5iB,EAASR,EAAS6iB,GAA7C,qBAAAjmB,EAAA,wDACS4D,EADT,oDAESR,EAFT,oDAIYgB,EAAgBhB,EAAhBgB,QAASnD,EAAOmC,EAAPnC,GAEjBT,IAAgBmI,KAAK,CACjB,QAAS,qBACTvE,QAASA,EACT+hB,WAAYllB,IAGRwlB,EAAW7iB,EAAX6iB,OAZZ,kEAe6BjmB,IAAgBmI,KAAK,CAC1C,QAAS,gBACT8d,WAjBR,WAeU9T,EAfV,0DAsBInS,IAAgB8G,aAAa,CACzB,QAAS,yBACTqL,eAxBR,2C,sBA4BA,SAAS+T,GAAU5iB,EAAOV,EAAS6iB,GAC/B,GAAKniB,GACAV,EAAL,CAF2C,IAInCgB,EAAgBhB,EAAhBgB,QAASnD,EAAOmC,EAAPnC,GAEJd,EAAS2D,EAAhBA,MACD3D,IAELA,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EAC7B8lB,GAAc9lB,EAAKgB,MAAMoS,sBACzB/H,IAAUa,oBAAoBlM,EAAKc,GAAImC,GAEhC6iB,GAAc9lB,EAAKwC,OAAO+Q,oBACjClI,IAAU0a,iBAAiB/lB,EAAKc,GAAImC,IAIxC5C,IAAgBmI,KAAK,CACjB,QAAS,qBACTvE,QAASA,EACT+hB,WAAYllB,IAGhBmlB,YAAsB,CAClBjiB,OAAQC,EACRC,UAAWpD,OAInB,SAAS0lB,GAAc1gB,EAAW7C,EAAS6iB,GACvC,GAAKhgB,GACA7C,EAAL,CAFmD,IAI3CgB,EAAgBhB,EAAhBgB,QAASnD,EAAOmC,EAAPnC,GAEJd,EAAS8F,EAAhBnC,MACD3D,IAELA,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EAC7B8lB,GAAc9lB,EAAKgB,MAAMoS,sBACzB/H,IAAUa,oBAAoBlM,EAAKc,GAAImC,GAEhC6iB,GAAc9lB,EAAKwC,OAAO+Q,oBACjClI,IAAU0a,iBAAiB/lB,EAAKc,GAAImC,IAIxCuH,YAASxK,EAAMiD,EAAS,kBAAMoI,IAAUrF,oBAAoB/B,EAASnD,EAAId,EAAKc,MAE9ET,IAAgBmI,KAAK,CACjB,QAAS,qBACTvE,QAASA,EACT+hB,WAAYllB,IAGhBT,IAAgB8G,aAAa,CACzB,QAAS,0BACTnD,OAAQC,EACRC,UAAWpD,OAInB,SAAS2lB,GAAc9gB,EAAW1C,EAAS6iB,GACvC,GAAKngB,GACA1C,EAAL,CAFmD,IAI3CgB,EAAgBhB,EAAhBgB,QAASnD,EAAOmC,EAAPnC,GAEJd,EAAS2F,EAAhBC,MACD5F,IAELA,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EAC7B8lB,GAAc9lB,EAAKgB,MAAMoS,sBACzB/H,IAAUa,oBAAoBlM,EAAKc,GAAImC,GAEhC6iB,GAAc9lB,EAAKwC,OAAO+Q,oBACjClI,IAAU0a,iBAAiB/lB,EAAKc,GAAImC,IAGpCuH,YAASxK,EAAMiD,EAAS,kBAAMoI,IAAUxF,oBAAoB5B,EAASnD,EAAId,EAAKc,MAGlFT,IAAgBmI,KAAK,CACjB,QAAS,qBACTvE,QAASA,EACT+hB,WAAYllB,IAGhBT,IAAgB8G,aAAa,CACzB,QAAS,0BACTnD,OAAQC,EACRC,UAAWpD,OAInB,SAAS4lB,GAAU1iB,EAAQE,GAA+B,IAApB4hB,IAAmB,yDAC/C7iB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,GAAKjB,EAAL,CAFqD,IAI7CC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,mBAAqB,IACdC,EAAcD,EAAdC,UACJA,GACA0iB,GAAc1iB,EAAWF,EAAS6iB,GAGtC,MAEJ,IAAK,eAAiB,IACV1iB,EAAUF,EAAVE,MACJA,GAEA8iB,GAAU9iB,EAAOH,EAAS6iB,GAG9B,MAEJ,IAAK,yBAA2B,IACpBziB,EAAUH,EAAVG,MACJA,GAxThB,SAAuBA,EAAOJ,EAAS6iB,GACnC,GAAKziB,GACAJ,EAAL,CAF+C,IAIvCgB,EAAgBhB,EAAhBgB,QAASnD,EAAOmC,EAAPnC,GAEXyE,EAAYsI,YAAaxK,EAAMgC,OACrC,GAAKE,EAAL,CAP+C,IASlCvF,EAASuF,EAAhBlC,MACDrD,IAELA,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EAC7B8lB,GAAc9lB,EAAKgB,MAAMoS,sBACzB/H,IAAUa,oBAAoBlM,EAAKc,GAAImC,GAEhC6iB,GAAc9lB,EAAKwC,OAAO+Q,oBACjClI,IAAU0a,iBAAiB/lB,EAAKc,GAAImC,IAIxCuH,YAASxK,EAAMiD,EAAS,kBAAMoI,IAAU7F,gBAAgBvB,EAASnD,EAAId,EAAKc,MAE1ET,IAAgBmI,KAAK,CACjB,QAAS,qBACTvE,QAASA,EACT+hB,WAAYllB,IAGhBmlB,YAAsB,CAClBjiB,OAAQC,EACRC,UAAWpD,QA0RH6lB,CAActjB,EAAOJ,EAAS6iB,GAGlC,MAEJ,IAAK,iBAAmB,IACZvZ,EAAYrJ,EAAZqJ,QACJA,GA7RhB,SAAqBA,EAAStJ,EAAS6iB,GACnC,GAAKvZ,GACAtJ,EAAL,CAF+C,IAIvCgB,EAAgBhB,EAAhBgB,QAASnD,EAAOmC,EAAPnC,GAEjBT,IAAgBmI,KAAK,CACjB,QAAS,qBACTvE,QAASA,EACT+hB,WAAYllB,IAGhBof,YAAS3T,EAAQC,SAAS,IAkRdoa,CAAYra,EAAStJ,GAGzB,MAEJ,IAAK,kBAAoB,IACbK,EAAaJ,EAAbI,SACJA,GACA6iB,GAAa7iB,EAAUL,EAAS6iB,GAGpC,MAEJ,IAAK,cAAgB,IACTviB,EAASL,EAATK,KACJA,GAtPhB,SAAkBA,EAAMN,EAAS6iB,GAC7B,GAAKviB,GACAN,EAAL,CAFyC,IAIjCgB,EAAgBhB,EAAhBgB,QAASnD,EAAOmC,EAAPnC,GAETqC,EAAcI,EAAdJ,UACR,GAAIA,EAAW,CAAC,IACKnD,EAASmD,EAApBA,UACN,IAAKnD,EAAM,OAGX,GADAA,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EAC7B8lB,GAAc9lB,EAAKgB,MAAMoS,sBAEzB,YADA/H,IAAUa,oBAAoBlM,EAAKc,GAAImC,GAEpC,GAAI6iB,GAAc9lB,EAAKwC,OAAO+Q,oBAEjC,YADAlI,IAAU0a,iBAAiB/lB,EAAKc,GAAImC,GAIxCuH,YAASxK,EAAMiD,EAAS,kBAAMoI,IAAU9G,oBAAoBN,EAASnD,EAAId,EAAKc,MAGlFT,IAAgBmI,KAAK,CACjB,QAAS,qBACTvE,QAASA,EACT+hB,WAAYllB,IAGhBT,IAAgB8G,aAAa,CACzB,QAAS,8BACTnD,OAAQC,EACRC,UAAWpD,KAuNH+lB,CAAStjB,EAAMN,EAAS6iB,GAG5B,MAEJ,IAAK,eAAiB,IACVziB,EAAUH,EAAVG,MACJA,GACA+iB,GAAU/iB,EAAOJ,EAAS6iB,GAG9B,MAEJ,IAAK,iBAAmB,IACZriB,EAAYP,EAAZO,QACJA,GACA4iB,GAAY5iB,EAASR,EAAS6iB,GAGlC,MAEJ,IAAK,cAAgB,IACTpiB,EAAaR,EAAbQ,SACR,GAAIA,EAAU,CAAC,IACHP,EAA8EO,EAA9EP,UAAWC,EAAmEM,EAAnEN,MAAOE,EAA4DI,EAA5DJ,SAAUD,EAAkDK,EAAlDL,MAAOI,EAA2CC,EAA3CD,QAASE,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WAEnEV,GACA0iB,GAAc1iB,EAAWF,EAAS6iB,GAGlC1iB,GACA8iB,GAAU9iB,EAAOH,EAAS6iB,GAG1BxiB,GACA6iB,GAAa7iB,EAAUL,EAAS6iB,GAGhCriB,GACA4iB,GAAY5iB,EAASR,EAAS6iB,GAG9BniB,GACA4iB,GAAU5iB,EAAOV,EAAS6iB,GAG1BliB,GACA4iB,GAAc5iB,EAAYX,EAAS6iB,GAGnCjiB,GACA4iB,GAAc5iB,EAAYZ,EAAS6iB,GAGnCziB,GACA+iB,GAAU/iB,EAAOJ,EAAS6iB,GAIlC,MAEJ,IAAK,eAAiB,IACVniB,EAAUT,EAAVS,MACJA,GACA4iB,GAAU5iB,EAAOV,EAAS6iB,GAG9B,MAEJ,IAAK,mBAAqB,IACdliB,EAAeV,EAAfU,WACJA,GACA4iB,GAAc5iB,EAAYX,EAAS6iB,GAGvC,MAEJ,IAAK,mBAAqB,IACdjiB,EAAeX,EAAfW,WACJA,GACA4iB,GAAc5iB,EAAYZ,EAAS6iB,KAQnD,SAASgB,GAAiB7jB,GACtB,OAAOA,GAAgC,mBAArBA,EAAQ,SAGvB,SAAS8jB,GAAsB/iB,EAAQE,GAC1C,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,GAAKjB,EAAL,CAFqD,IAI7CC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,mBAAqB,IACdC,EAAcD,EAAdC,UACR,OAAKA,GAEqBA,EAAlB6jB,eAFe,KAK3B,IAAK,eACD,OAAO,KAEX,IAAK,yBAA2B,IACpB3jB,EAAUH,EAAVG,MACR,OAAKA,GAEEA,EAAM2jB,eAFM,KAIvB,IAAK,kBAAoB,IACb1jB,EAAaJ,EAAbI,SACR,OAAKA,GAEqBA,EAAlB0jB,eAFc,KAK1B,IAAK,cAAgB,IACTzjB,EAASL,EAATK,KACR,IAAKA,EAAM,OAAO,KAFF,IAIRJ,EAAqBI,EAArBJ,UAAWE,EAAUE,EAAVF,MACnB,GAAIF,EAAW,CAAC,IACJ6jB,EAAkB7jB,EAAlB6jB,cACR,GAAIA,EACA,OAAOA,EAIf,OAAI3jB,GACOA,EAAM2jB,eAGV,KAEX,IAAK,eAAiB,IACV3jB,EAAUH,EAAVG,MACR,OAAKA,GAEEA,EAAM2jB,eAFM,KAIvB,IAAK,iBACD,OAAO,KAEX,IAAK,cAAgB,IACTtjB,EAAaR,EAAbQ,SACR,GAAIA,EAAU,CAAC,IACHP,EAAkEO,EAAlEP,UAAWC,EAAuDM,EAAvDN,MAAOE,EAAgDI,EAAhDJ,SAAUD,EAAsCK,EAAtCL,MAAOI,EAA+BC,EAA/BD,QAASE,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,WAC3D,GAAIP,EACA,OAAOA,EAAM2jB,eAAiB,KAElC,GAAI7jB,EAEA,OAD0BA,EAAlB6jB,eACgB,KAE5B,GAAI5jB,EACA,OAAO,KAEX,GAAIE,EAEA,OAD0BA,EAAlB0jB,eACgB,KAE5B,GAAIvjB,EACA,OAAO,KAEX,GAAIE,EAEA,OAD0BA,EAAlBqjB,eACgB,KAE5B,GAAIpjB,EAEA,OAD0BA,EAAlBojB,eACgB,KAIhC,MAEJ,IAAK,eAAiB,IACVrjB,EAAUT,EAAVS,MACR,OAAKA,GAEqBA,EAAlBqjB,eAFW,KAKvB,IAAK,mBAAqB,IACdpjB,EAAeV,EAAfU,WACR,OAAKA,GAEqBA,EAAlBojB,eAFgB,KAOhC,OAAO,MAGX,SAASC,GAAkBjjB,EAAQE,GAC/B,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,GAAKjB,EAAL,CAF0C,IAIlCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,mBAAqB,IACdC,EAAcD,EAAdC,UACR,OAAKA,GAEiBA,EAAdgB,WAFe,KAK3B,IAAK,eAAiB,IACVf,EAAUF,EAAVE,MACR,OAAKA,GAE6BA,EAA1BoB,uBAFW,KAKvB,IAAK,yBAA2B,IACpBnB,EAAUH,EAAVG,MACR,OAAKA,EAEEwK,YAAaxK,EAAMgC,OAFP,KAIvB,IAAK,kBAAoB,IACb/B,EAAaJ,EAAbI,SACR,OAAKA,GAEiBA,EAAda,WAFc,KAK1B,IAAK,cAAgB,IACTZ,EAASL,EAATK,KACR,IAAKA,EAAM,OAAO,KAFF,IAIRJ,EAAqBI,EAArBJ,UAAWE,EAAUE,EAAVF,MACnB,GAAIF,EAAW,CAAC,IACJgB,EAAchB,EAAdgB,UACR,GAAIA,EACA,OAAOA,EAIf,OAAId,EACOwK,YAAaxK,EAAMgC,OAGvB,KAEX,IAAK,eAAiB,IACVhC,EAAUH,EAAVG,MACR,OAAKA,EAEEwK,YAAaxK,EAAMgC,OAFP,KAIvB,IAAK,iBAAmB,IACZ5B,EAAYP,EAAZO,QACR,OAAKA,GAEiBA,EAAdU,WAFa,KAKzB,IAAK,cAAgB,IACTT,EAAaR,EAAbQ,SACR,GAAIA,EAAU,CAAC,IACHP,EAAkEO,EAAlEP,UAAWC,EAAuDM,EAAvDN,MAAOE,EAAgDI,EAAhDJ,SAAUD,EAAsCK,EAAtCL,MAAOI,EAA+BC,EAA/BD,QAASE,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,WAC3D,GAAIP,EACA,OAAOwK,YAAaxK,EAAMgC,OAE9B,GAAIlC,EAEA,OADsBA,EAAdgB,WACY,KAExB,GAAIf,EAEA,OADkCA,EAA1BoB,uBACwB,KAEpC,GAAIlB,EAEA,OADsBA,EAAda,WACY,KAExB,GAAIV,EAEA,OADsBA,EAAdU,WACY,KAExB,GAAIR,EAEA,OADsBA,EAAdQ,WACY,KAExB,GAAIP,EAEA,OADsBA,EAAdO,WACY,KAI5B,MAEJ,IAAK,eAAiB,IACVR,EAAUT,EAAVS,MACR,OAAKA,GAEiBA,EAAdQ,WAFW,KAKvB,IAAK,mBAAqB,IACdP,EAAeV,EAAfU,WACR,OAAKA,GAEiBA,EAAdO,WAFgB,KAOhC,OAAO,MAGX,SAAS+iB,GAAgBljB,EAAQE,GAC7B,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,EAFmB,IAIhCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EACrB,GAAyB,gBAArBA,EAAQ,SAA4B,OAAO,EANP,IAQ1BikB,EAAgBjkB,EAAtBoR,KACR,GAAK6S,EAAL,CACA,GAA6B,kBAAzBA,EAAY,SAA8B,OAAO,EAVb,IAYhC7S,EAAmB6S,EAAnB7S,KAAM6C,EAAagQ,EAAbhQ,SACd,IAAK7C,EAAM,OAAO,EAClB,GAAI6C,GAAYA,EAAS7R,OAAS,EAAG,OAAO,EAE5C,IAEI8hB,EAFAC,EAAY,EACZC,EAAe,EAEbC,EAAKC,MACX,EAAG,CAGC,GAFAJ,EAAIG,EAAGE,KAAKnT,GAEL,CAGH,GAFAgT,GAAgB,EAEZD,IAAcD,EAAExW,MAAO,CACvB0W,EAAe,EACf,MAGJ,GAAIA,EAAe,EAAG,CAClBA,EAAe,EACf,MAEJD,EAAYE,EAAGF,UAGnB,IAAKD,GAAKC,IAAc/S,EAAKhP,OAAQ,CACjCgiB,EAAe,EACf,aAECF,GAET,OAAOE,GAGX,SAASI,GAAsBC,EAAMC,GACjC,OAAOD,EAAK7mB,GAAK8mB,EAAM9mB,GAG3B,SAAS+mB,GAAejX,EAAOuG,GAC3B,IAAKA,EAAU,OAAO,EACtB,IAAKA,EAAS7R,OAAQ,OAAO,EAE7B,IAAK,IAAIF,EAAI,EAAGA,EAAI+R,EAAS7R,OAAQF,IACjC,GAAIwL,GAASuG,EAAS/R,GAAGkS,QAAU1G,EAAQuG,EAAS/R,GAAGkS,OAASH,EAAS/R,GAAGE,OACxE,OAAO,EAIf,OAAO,EAGX,SAASwiB,GAAkBC,EAAYC,EAAU7Q,GAC7C,IAAKA,EAAU,OAAO,EACtB,IAAKA,EAAS7R,OAAQ,OAAO,EAE7B,IAAK,IAAIF,EAAI,EAAGA,EAAI+R,EAAS7R,OAAQF,IACjC,GAAI2iB,GAAc5Q,EAAS/R,GAAGkS,QAAUH,EAAS/R,GAAGkS,OAASH,EAAS/R,GAAGE,OAAS,GAAK0iB,EACnF,OAAO,EAIf,OAAO,EAGX,SAASC,GAAYF,EAAYC,EAAU7Q,GACvC,OACK0Q,GAAeE,EAAY5Q,KAC3B0Q,GAAeG,EAAU7Q,KACzB2Q,GAAkBC,EAAYC,EAAU7Q,GAIjD,SAAS+Q,GAAkB/F,EAAOgG,EAAehR,GACxCA,GACAA,EAAS7R,QAEd6R,EAAS7V,QAAQ,SAAA8mB,GACTA,EAAE9Q,OAAS6K,IACXiG,EAAE9Q,QAAU6Q,KAKxB,SAASE,GAAelG,EAAOmG,EAAYnR,GAClCA,GACAA,EAAS7R,QAEd6R,EAAS7V,QAAQ,SAAA8mB,GACTA,EAAE9Q,OAAS6K,IACXiG,EAAE9Q,QAAUgR,KAKxB,SAASC,GAAeR,EAAYC,EAAU7Q,GAC1C,GAAKA,GACAA,EAAS7R,OAEd,IAAK,IAAIF,EAAI,EAAGA,EAAI+R,EAAS7R,OAAQF,IAAK,CACtC,IAAMud,EAASxL,EAAS/R,GAClBojB,EAAc7F,EAAOrL,OACrBmR,EAAY9F,EAAOrL,OAASqL,EAAOrd,OAAS,GAE7CyiB,GAAcS,GAAeA,GAAeR,GAC5CD,GAAcU,GAAaA,GAAaT,GACxCQ,EAAcT,GAAcC,EAAWS,IAExCtR,EAASuR,OAAOtjB,IAAK,IAKjC,SAASujB,GAAYrR,EAAQhS,EAAQgP,EAAMsU,GACvC,IAAMC,EAAOvlB,SAASwlB,eAAexU,EAAKwO,OAAOxL,EAAQhS,IACzDsjB,EAAMrhB,KAAKshB,GAGR,SAASE,GAASzU,EAAM6C,GAAuB,IAAb7B,EAAY,uDAAR,SAAAoD,GAAC,OAAIA,GAC9C,IAAKpE,EAAM,MAAO,GAElB6C,GAAYA,GAAY,IAAI6R,KAAK,SAACnpB,EAAGqU,GACjC,OAAIrU,EAAEyX,OAASpD,EAAEoD,SAAW,EACjBzX,EAAEyX,OAASpD,EAAEoD,OAGjBpD,EAAE5O,OAASzF,EAAEyF,SAGxB,IAAIsjB,EAAQ,GACRtR,EAAS,EACT2R,EAAa,KAoHjB,OAnHA9R,EAAS7V,QAAQ,SAAA4H,GAMb,GALIA,EAAEoO,OAASA,EAAS,IACpBqR,GAAYrR,EAAQpO,EAAEoO,OAASA,EAAQhD,EAAMsU,GAC7CtR,EAASpO,EAAEoO,SAGT2R,IAAcpB,GAAe3e,EAAEoO,OAAQ,CAAC2R,IAAe,CACzD,OAAQ/f,EAAE2G,KAAK,UACX,IAAK,qBACD,IAAMgZ,EAAOvlB,SAAS6G,cAAc,KACpC0e,EAAKK,UAAY5U,EAAKwO,OAAO5Z,EAAEoO,OAAQpO,EAAE5D,QACzCsjB,EAAMrhB,KAAKshB,GACX,MAEJ,IAAK,2BAIL,IAAK,wBACDF,GAAYzf,EAAEoO,OAAQpO,EAAE5D,OAAQgP,EAAMsU,GACtC,MAEJ,IAAK,qBACD,IAAMC,EAAOvlB,SAASwlB,eAAe,IAAMxU,EAAKwO,OAAO5Z,EAAEoO,OAAQpO,EAAE5D,QAAU,KAC7EsjB,EAAMrhB,KAAKshB,GACX,MAEJ,IAAK,6BAIL,IAAK,wBACDF,GAAYzf,EAAEoO,OAAQpO,EAAE5D,OAAQgP,EAAMsU,GACtC,MAEJ,IAAK,uBACD,IAAMC,EAAOvlB,SAAS6G,cAAc,KACpC0e,EAAKK,UAAY5U,EAAKwO,OAAO5Z,EAAEoO,OAAQpO,EAAE5D,QACzCsjB,EAAMrhB,KAAKshB,GACX,MAEJ,IAAK,wBACDF,GAAYzf,EAAEoO,OAAQpO,EAAE5D,OAAQgP,EAAMsU,GACtC,MAEJ,IAAK,4BACD,IAAK,IACOpc,EAAYtD,EAAE2G,KAAdrD,QAER,GADaC,IAAUtL,IAAIqL,GACjB,CACN,IAAMqc,EAAOvlB,SAAS6G,cAAc,KAEpC0e,EAAKxT,MAAQuD,YAAgBpM,EAAS,KAAM8I,GAG5CuT,EAAKM,QAAQ5f,OAASiD,EACtBqc,EAAKK,UAAY5U,EAAKwO,OAAO5Z,EAAEoO,OAAQpO,EAAE5D,QACzCsjB,EAAMrhB,KAAKshB,QAEXF,GAAYzf,EAAEoO,OAAQpO,EAAE5D,OAAQgP,EAAMsU,GAE5C,SACED,GAAYzf,EAAEoO,OAAQpO,EAAE5D,OAAQgP,EAAMsU,GAE1C,MAEJ,IAAK,4BACDD,GAAYzf,EAAEoO,OAAQpO,EAAE5D,OAAQgP,EAAMsU,GACtC,MAEJ,IAAK,oBACD,IAAMC,EAAOvlB,SAASwlB,eAAe,MAAQxU,EAAKwO,OAAO5Z,EAAEoO,OAAQpO,EAAE5D,QAAU,OAC/EsjB,EAAMrhB,KAAKshB,GACX,MAEJ,IAAK,wBACD,IAAMA,EAAOvlB,SAASwlB,eAAe,MAAQxU,EAAKwO,OAAO5Z,EAAEoO,OAAQpO,EAAE5D,QAAU,OAC/EsjB,EAAMrhB,KAAKshB,GACX,MAEJ,IAAK,wBACD,IAAK,IACO9hB,EAAQmC,EAAE2G,KAAV9I,IAEF8hB,EAAOvlB,SAAS6G,cAAc,KACpC0e,EAAKve,KAAO8e,YAAcriB,GAAK,GAC/B8hB,EAAKxT,MAAQ+T,YAAcriB,GAAK,GAChC8hB,EAAK9f,OAAS,SACd8f,EAAK3F,IAAM,sBACX2F,EAAKK,UAAY5U,EAAKwO,OAAO5Z,EAAEoO,OAAQpO,EAAE5D,QACzCsjB,EAAMrhB,KAAKshB,GACb,SACEF,GAAYzf,EAAEoO,OAAQpO,EAAE5D,OAAQgP,EAAMsU,GAE1C,MAEJ,IAAK,oBAIL,QACID,GAAYzf,EAAEoO,OAAQpO,EAAE5D,OAAQgP,EAAMsU,GAK9CK,EAAa/f,EACboO,GAAUpO,EAAE5D,UAIhBgS,EAAShD,EAAKhP,QACdqjB,GAAYrR,EAAQhD,EAAKhP,OAASgS,EAAQhD,EAAMsU,GAG7CA,EAKJ,SAASS,GAAY/U,GACxB,IAAM6C,EAAW,GACjB,IAAK7C,EAAM,MAAO,CAAEA,OAAM6C,YAM1B7C,GAFAA,GADAA,GADAA,EAAOA,EAAKgV,QAAQ,qBAAsB,SAC9BA,QAAQ,UAAW,SACnBA,QAAQ,YAAa,KAErB3V,MAAM,QAAQ4V,KAAK,MAI/B,IAAI3Y,GAAS,EACTyW,EAAY,EACZlF,GAAS,EACTqH,GAAQ,EAONrhB,GAAS,IAAIshB,WAAYC,gBAAgBpV,EAAM,aACjDgD,EAAS,EACThS,EAAS,EACTqkB,EAAY,GAgGhB,IA/FAxhB,EAAOsC,KAAKmf,WAAWtoB,QAAQ,SAAAunB,GAAS,IAC5B1B,EAA0B0B,EAA1B1B,YAAa0C,EAAahB,EAAbgB,SAKrB,GAHAvkB,EAAS6hB,EAAY7hB,OACrBqkB,GAAaxC,EAERc,GAAY3Q,EAAQA,EAAShS,EAAS,EAAG6R,GAI9C,OAAQ0S,GACJ,IAAK,QACDvS,GAAUhS,EACV,MAEJ,IAAK,IACGujB,EAAKM,QAAQ5f,OACb4N,EAAS5P,KAAK,CACV,QAAS,aACT+P,SACAhS,SACAuK,KAAM,CAAE,QAAS,4BAA6BrD,QAASqc,EAAKM,QAAQ5f,QACpE4d,YAAawC,EAAUzH,UAAU5K,EAAQA,EAAShS,KAE/CujB,EAAKve,MACZ6M,EAAS5P,KAAK,CACV,QAAS,aACT+P,SACAhS,SACAuK,KAAM,CAAE,QAAS,wBAAyB9I,IAAK8hB,EAAKve,MACpD6c,YAAawC,EAAUzH,UAAU5K,EAAQA,EAAShS,KAG1DgS,GAAUhS,EACV,MAEJ,IAAK,IACL,IAAK,SACD6R,EAAS5P,KAAK,CACV,QAAS,aACT+P,SACAhS,SACAuK,KAAM,CAAE,QAAS,sBACjBsX,YAAawC,EAAUzH,UAAU5K,EAAQA,EAAShS,KAEtDgS,GAAUhS,EACV,MAEJ,IAAK,KACD,MAEJ,IAAK,OACD6R,EAAS5P,KAAK,CACV,QAAS,aACT+P,SACAhS,SACAuK,KAAM,CAAE,QAAS,sBACjBsX,YAAawC,EAAUzH,UAAU5K,EAAQA,EAAShS,KAEtDgS,GAAUhS,EACV,MAEJ,IAAK,IACL,IAAK,KACD6R,EAAS5P,KAAK,CACV,QAAS,aACT+P,SACAhS,SACAuK,KAAM,CAAE,QAAS,wBACjBsX,YAAawC,EAAUzH,UAAU5K,EAAQA,EAAShS,KAEtDgS,GAAUhS,EACV,MAEJ,IAAK,MACD6R,EAAS5P,KAAK,CACV,QAAS,aACT+P,SACAhS,SACAuK,KAAM,CAAE,QAAS,qBACjBsX,YAAawC,EAAUzH,UAAU5K,EAAQA,EAAShS,KAEtDgS,GAAUhS,EACV,MAEJ,QACIgS,GAAUhS,KAKtBgP,EAAOqV,GAI2D,KAA1D/Y,EAAQ0D,EAAKwV,QAAQN,EAxGjB,MADC,IAyGoCnC,KAC7C,IAAe,IAAXlF,EAGAA,EAAQvR,EACRyW,EAAYzW,IAFZ4Y,EAAQlV,EAAKhP,OAASsL,EAAQ,GA5GzB,MA4G8B0D,EAAK1D,EAAQ,IA5G3C,MA4G0D0D,EAAK1D,EAAQ,IAE/C,EAAI,OAC9B,CAEH,IAAK,IAAIxL,EAAIwL,GAAS4Y,EAAQ,EAAI,GAAIpkB,EAAIkP,EAAKhP,QAjH1C,MAkHGgP,EAAKlP,GAD0CA,IAE/CwL,IAOR,GADAyW,EAAYzW,GAAS4Y,EAAQ,EAAI,GAC7BA,EAAO,CAGP,IAAI5G,EAAatO,EAAK4N,UAAU,EAAGC,GAC/BgF,EAAc7S,EAAK4N,UAAUC,EAAQ,EAAGvR,GACxCwS,EAAY9O,EAAK4N,UAAUtR,EAAQ,EAAG0D,EAAKhP,QAE/C,GAAI6hB,EAAY7hB,OAAS,EAAG,CAMxB,IAAMqd,EAAS,CACX,QAAS,aACTrL,OAPJA,EAAS6K,EAQL7c,OAPJA,EAASsL,EAAQuR,EAAQ,EAQrB4H,SAAU,GACVla,KAAM,CAAE,QAAS,qBACjBsX,aARJ7S,EAAOsO,EAAauE,EAAc/D,GAQZlB,UAAU5K,EAAQA,EAAShS,IAQjD,GANAijB,GAAejR,EAAQA,EAAShS,EAAS,EAAI,GAC7C4iB,GAAkB5Q,EAAShS,EAAQ,EAAG6R,GACtCA,EAAS5P,KAAKob,GACd0E,GAAa,EAGTzE,EAAWtd,OAAS,EAAG,CACvB,IAAM0kB,EAAWpH,EAAWA,EAAWtd,OAAS,GAC/B,OAAb0kB,IACiB,MAAbA,GAAiC,SAAbA,EAEpB1V,GADAsO,EAAaA,EAAWE,OAAO,EAAGF,EAAWtd,OAAS,GAAK,MACvC6hB,EAAc/D,GAGlC9O,GADAsO,GAAc,MACMuE,EAAc/D,EAClCiF,GAAe/Q,EAAS,EAAG,EAAGH,GAC9BkQ,GAAa,IAMzB,GAAIjE,EAAU9d,OAAS,EAAG,CACtB,IAAM2kB,EAAY7G,EAAU,GACV,OAAd6G,IACkB,MAAdA,GAAmC,SAAdA,EAErB3V,EAAOsO,EAAauE,GADpB/D,EAAY,KAAOA,EAAUN,OAAO,KAIpCxO,EAAOsO,EAAauE,GADpB/D,EAAY,KAAOA,GAEnBiF,GAAe/Q,EAAShS,EAAS,EAAG,EAAG6R,GACvCkQ,GAAa,IAMrBF,EAAY7hB,OAAS,GACE,OAAnB6hB,EAAY,KAEZ7S,EAAOsO,GADPuE,EAAcA,EAAYjF,UAAU,IACFkB,EAClCT,EAAOrd,QAAU,EACjBqd,EAAOwE,YAAcA,EACrBe,GAAkBvF,EAAOrL,OAASqL,EAAOrd,OAAS,EAAG,EAAG6R,GACxDkQ,GAAa,GAIjBF,EAAY7hB,OAAS,GACuB,OAAxC6hB,EAAYA,EAAY7hB,OAAS,KAEjCgP,EAAOsO,GADPuE,EAAcA,EAAYjF,UAAU,EAAGiF,EAAY7hB,OAAS,IAC1B8d,EAClCT,EAAOrd,QAAU,EACjBqd,EAAOwE,YAAcA,EACrBe,GAAkBvF,EAAOrL,OAASqL,EAAOrd,OAAS,EAAG,EAAG6R,GACxDkQ,GAAa,SAMzB,GAAIlF,EAAQ,IAAMvR,EAAO,CACrB0G,EAAS6K,EACT7c,EAASsL,EAAQuR,EAAQ,EAEzB7N,EACIA,EAAK4N,UAAU,EAAGC,GAClB7N,EAAK4N,UAAUC,EAAQ,EAAGvR,GAC1B0D,EAAK4N,UAAUtR,EAAQ,EAAG0D,EAAKhP,QAEnC,IAAMqd,EAAS,CACX,QAAS,aACTrL,SACAhS,SACAuK,KAAM,CAAE,QAAS,sBACjBsX,YAAa7S,EAAK4N,UAAU5K,EAAQA,EAAShS,IAEjDijB,GAAejR,EAAQA,EAAShS,EAAS,EAAI,GAC7C4iB,GAAkB5Q,EAAShS,EAAQ,EAAG6R,GACtCA,EAAS5P,KAAKob,GACd0E,GAAa,EAIrBlF,GAAS,EACTqH,GAAQ,EAKhB,IAAe,IAAXrH,GAAgBqH,GAIZvB,GAHJ3Q,EAAS6K,EAGe7K,GAFxBhS,EAAS,GAEiC,EAAI,EAAG6R,GAAW,CACxD7C,EAAOA,EAAK4N,UAAU,EAAGC,GAAS7N,EAAK4N,UAAUC,EAAQ,EAAG7N,EAAKhP,QAEjE,IAAMqd,EAAS,CACX,QAAS,aACTrL,SACAhS,SACAuK,KAAM,CAAE,QAAS,sBACjBsX,YAAa7S,EAAK4N,UAAU5K,EAAQA,EAAShS,IAEjDijB,GAAejR,EAAQA,EAAShS,EAAS,EAAI,GAC7C4iB,GAAkB5Q,EAAShS,EAAQ,EAAG6R,GACtCA,EAAS5P,KAAKob,GAMtB,IAAK,IAAIuH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB7C,EAAY,EACZlF,GAAS,EAGT,IAFA,IAAMgI,EAAoB,IAAND,EAjQX,KACE,KAiQLE,EAAkB,IAANF,EAAU,IAAM,KACyB,KAAnDtZ,EAAQ0D,EAAKwV,QAAQK,EAAa9C,KACtC,IAAe,IAAXlF,EAAc,CACd,IAAMkI,EAAqB,IAAVzZ,EAAc,IAAM0D,EAAK1D,EAAQ,GAE7CiX,GAAejX,EAAOuG,IACT,MAAbkT,GAAiC,SAAbA,GAAoC,OAAbA,IAE5ClI,EAAQvR,GAEZyW,EAAYzW,EAAQ,MACjB,CACH,IAAK,IAAI/Q,EAAI+Q,EAAQ,EAAG/Q,EAAIyU,EAAKhP,QACzBgP,EAAKzU,KAAOuqB,EADqBvqB,IAEjC+Q,IAMR,GADAyW,EAAYzW,EAAQ,EAChBiX,GAAejX,EAAOuG,IAAa2Q,GAAkB3F,EAAOvR,EAAOuG,GAAW,CAC9EgL,GAAS,EACT,SAEJ,GAAIA,EAAQ,IAAMvR,EAAO,CACrB0G,EAAS6K,EACT7c,EAASsL,EAAQuR,EAAQ,EACzB7N,EACIA,EAAK4N,UAAU,EAAGC,GAClB7N,EAAK4N,UAAUC,EAAQ,EAAGvR,GAC1B0D,EAAK4N,UAAUtR,EAAQ,EAAG0D,EAAKhP,QAEnC,IAAMqd,EAAS,CACX,QAAS,aACTrL,SACAhS,SACAykB,SAAU,GACVla,KAAM,CAAE,QAAe,IAANqa,EAAU,qBAAuB,wBAClD/C,YAAa7S,EAAK4N,UAAU5K,EAAQA,EAAShS,IAEjD4iB,GAAkB5Q,EAAShS,EAAQ,EAAG6R,GACtCA,EAAS5P,KAAKob,GACd0E,GAAa,EAEjBlF,GAAS,GAMrB,MAAO,CAAE7N,OAAM6C,YAGZ,SAASmT,GAAmBtmB,EAAQE,GACvC,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,QAAKjB,GAEqBA,EAAlBsnB,cAKL,SAASC,GAAmBxmB,EAAQE,GACvC,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,EAF6B,IAI1CuiB,EAA0BviB,EAA1BuiB,aAActiB,EAAYD,EAAZC,QAEtB,OAAOsiB,GAAgBtiB,GAAgC,mBAArBA,EAAQ,UAAsD,iBAArBA,EAAQ,SAGhF,SAASunB,GAAczmB,EAAQE,GAClC,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,EAFwB,IAIrCC,EAAYD,EAAZC,QAER,OAAOA,GAAgC,gBAArBA,EAAQ,SAGvB,SAASwnB,GAAgB1mB,EAAQE,GACpC,IAAMxB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,QAAKtB,GAEEA,EAAKuT,oBAAsB/R,EAG/B,SAASymB,GAAoB3mB,EAAQE,GACxC,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,EAF8B,IAI3CC,EAAYD,EAAZC,QACR,GAAKA,GACoB,gBAArBA,EAAQ,SAAZ,CANmD,IAQ3CuhB,EAASvhB,EAATuhB,KACR,IAAKA,EAAM,OAAO,EATiC,IAW3C5U,EAA6B4U,EAA7B5U,KAAM+a,EAAuBnG,EAAvBmG,UAAWC,EAAYpG,EAAZoG,QACzB,QAAKhb,IACiB,oBAAlBA,EAAK,YACL+a,GAEGC,EAAQ5hB,KAAK,SAAAC,GAAC,OAAIA,EAAE4hB,WAAa5hB,EAAE6hB,qBAGvC,SAASC,GAAmBhnB,EAAQE,GACvC,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,EAF6B,IAI1CC,EAA2BD,EAA3BC,QAASqnB,EAAkBtnB,EAAlBsnB,cACjB,OAAKrnB,GACoB,gBAArBA,EAAQ,SAELqnB,OAHP,EAMG,SAASU,GAAsBjnB,EAAQE,GAC1C,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GAEzC,OAAOjB,GAAWA,EAAQioB,iBAGvB,SAASC,GAAoBnnB,EAAQE,GACxC,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GAEzC,OAAOjB,IAAYA,EAAQmoB,8BAAgCnoB,EAAQooB,8BAGhE,SAASC,GAAgBtnB,EAAQE,GACpC,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,KAF0B,IAIvCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,mBAAqB,IACdC,EAAcD,EAAdC,UACR,IAAKA,EAAW,OAAO,KAFF,IAIb2J,EAA6B3J,EAA7B2J,MAAOC,EAAsB5J,EAAtB4J,OAAQ5I,EAAchB,EAAdgB,UAEjBuF,EAAO,CAAEoD,QAAOC,WAAY5I,EAClC,IAAKuF,EAAM,OAAO,KAElB,IAAM6hB,EAAUC,YAAW9hB,EAAM+hB,KAAoB,GACrD,OAAKF,EAEE,CAAEze,MAAOye,EAAQze,OAFH,KAIzB,IAAK,eAAiB,IACVzJ,EAAUH,EAAVG,MACR,IAAKA,EAAO,OAAO,KAEnB,IAAMqG,EAAO8D,YAAQnK,EAAMgC,MAAOuI,KAClC,IAAKlE,EAAM,OAAO,KAElB,IAAM6hB,EAAUC,YAAW9hB,EAAM+hB,KAAoB,GACrD,OAAKF,EAEE,CAAEze,MAAOye,EAAQze,OAFH,KAIzB,IAAK,eAAiB,IACVnJ,EAAUT,EAAVS,MACR,IAAKA,EAAO,OAAO,KAFF,IAITQ,EAA6BR,EAA7BQ,UAEFuF,EAAO,CAAEoD,MAFsBnJ,EAAlBmJ,MAEGC,OAFepJ,EAAXoJ,SAEQ5I,EAClC,IAAKuF,EAAM,OAAO,KAElB,IAAM6hB,EAAUC,YAAW9hB,EAAM+hB,KACjC,OAAKF,EAEE,CAAEze,MAAOye,EAAQze,OAFH,KAM7B,OAAO,K,gjDC7vEI4e,G,wLA7BD,IAAD,EAC2DrkB,KAAKwY,MAA7D7b,EADH,EACGA,OAAQE,EADX,EACWA,UAAWynB,EADtB,EACsBA,SAAqBtW,GAD3C,EACgCqR,UADhC,EAC2CrR,OAAOiO,EADlD,EACkDA,KAEjDsI,EAAYC,EAAa7nB,EAAQE,GACjC4nB,EAAiBC,YAAkBC,KAAKC,MAAMN,GAAY,IAEhE,OACI,yBAAKO,UAAWC,IAAW,WAAY,CAAE,cAAe9W,KACpD,kBAAC+W,EAAA,EAAD,CAAYC,MAAM,UAAUC,aAAW,QACnC,kBAAC,IAAD,CAAUC,SAAS,WAEvB,yBAAKL,UAAU,oBACX,yBAAKA,UAAU,kBAAkBN,GACjC,yBAAKM,UAAU,mBACVJ,EACAxI,S,GAhBN/B,IAAMC,Y,0CCCnBgL,G,wLACQ,IAAD,EACmDnlB,KAAKwY,MAArDtT,EADH,EACGA,QAAS8I,EADZ,EACYA,MAAOqR,EADnB,EACmBA,UAAWpD,EAD9B,EAC8BA,KAAMnP,EADpC,EACoCA,QAASmB,EAD7C,EAC6CA,EAClD,IAAK/I,EAAS,OAAO,KAFhB,IAIYzL,EAA4CyL,EAArDC,QAAa8L,EAAwC/L,EAAxC+L,WAAYmU,EAA4BlgB,EAA5BkgB,UAAWtP,EAAiB5Q,EAAjB4Q,aAEtCpa,EAAO0J,IAAUtL,IAAIL,IAAO,CAC9B,QAAS,OACT+O,KAAM,CAAE,QAAS,mBACjB/O,KACAwX,aACAmU,aAGEC,EAAW9T,YAAgB9X,EAAIiC,EAAMuS,GACrCqX,EAASzP,YAAkBC,GAEjC,OACI,yBAAK+O,UAAWC,IAAW,UAAW,CAAE,cAAe9W,KACnD,yBAAK6W,UAAU,gBACX,kBAACU,EAAA,EAAD,CAAUrjB,OAAQzI,EAAI+rB,UAAWvU,EAAYwU,SAAUL,KAE3D,yBAAKP,UAAU,mBACX,yBAAKA,UAAU,gBACVprB,EAAK,EAAI,uBAAG2f,QAASiG,GAAYgG,GAAgB,8BAAOA,IAE7D,yBAAKR,UAAU,iBACVS,GACCxY,GAAWmP,S,GA7Bf/B,IAAMC,YA4CbE,gBAAkB8K,G,oCC3C3BO,G,kNACF5T,WAAa,WAAO,IAAD,EACmD,EAAK0G,MAA/D7b,EADO,EACPA,OAAQE,EADD,EACCA,UAAWX,EADZ,EACYA,KAAMmG,EADlB,EACkBA,KAAMiE,EADxB,EACwBA,YAAa+Y,EADrC,EACqCA,UACpD,IAAKnjB,EAAM,OAAO,KAFH,IAIPF,EAAqBE,EAArBF,MAAOF,EAAcI,EAAdJ,UAEf,GAAIA,IACqB+P,YAAO/P,EAAUA,YAClBA,EAAUgB,WAC1B,OAAO,kBAAC6oB,EAAA,EAAD,CAAWhpB,OAAQA,EAAQE,UAAWA,EAAWf,UAAWA,EAAWujB,UAAWA,IAIjG,GAAIrjB,EAAO,CACP,IAAI+G,EAAQ,CACR0C,MAAO,EACPC,OAAQ,GAENxH,EAAYiI,YAAQnK,EAAMgC,MAAOqE,GACvC,GAAInE,EAAW,CACX,IAAM0nB,EAAezB,YAAWjmB,EAAWoI,GACvCsf,IACA7iB,EAAM0C,MAAQmgB,EAAangB,MAC3B1C,EAAM2C,OAASkgB,EAAalgB,QAIpC,OAAO,kBAACmgB,EAAA,EAAD,CAAOlpB,OAAQA,EAAQE,UAAWA,EAAWb,MAAOA,EAAO+G,MAAOA,EAAOsc,UAAWA,IAG/F,OAAO,M,wEAGD,IAAD,EACerf,KAAKwY,MAAjBtc,EADH,EACGA,KAAM+R,EADT,EACSA,EACd,IAAK/R,EAAM,OAAO,KAFb,IAIG8R,EAA6B9R,EAA7B8R,MAAOf,EAAsB/Q,EAAtB+Q,KAAM+I,EAAgB9Z,EAAhB8Z,YACfoF,EAAgBD,YAAiBlO,EAAMgB,GAE7C,OACI,yBAAK4W,UAAU,QACX,yBAAKA,UAAU,WACf,yBAAKA,UAAU,gBACV7W,GAAS,yBAAK6W,UAAU,cAAc7W,GACtCoN,GAAiB,yBAAKyJ,UAAU,aAAazJ,GAC7CpF,GAAe,yBAAK6O,UAAU,oBAAoB7O,GAClDhW,KAAK8R,mB,GAhDPoI,IAAMC,YAiEzBuL,EAAKtL,aAAe,CAChB/X,KAAMkE,IACND,YAAa8d,KAGF/J,oBAAkBqL,G,2BCjClBI,G,wLA1CD,IAAD,EACiE9lB,KAAKwY,MAAnE7b,EADH,EACGA,OAAQE,EADX,EACWA,UAAWJ,EADtB,EACsBA,MAAO4iB,EAD7B,EAC6BA,UAAWpD,EADxC,EACwCA,KAAMjO,EAD9C,EAC8CA,MAAOlB,EADrD,EACqDA,QAC1D,IAAKrQ,EAAO,OAAO,KAFd,IAIUspB,EAAkCtpB,EAAzCuR,MAAmBgY,EAAsBvpB,EAAtBupB,QAAS7pB,EAAaM,EAAbN,SACpC,IAAKA,EAAU,OAAO,KALjB,IAOGqhB,EAAwBrhB,EAAxBqhB,UAAWC,EAAathB,EAAbshB,SACb1gB,EAAM,qCAAiC0gB,EAAjC,YAA6CD,GAEzD,OACI,yBAAKqH,UAAU,SACX,kBAACoB,EAAA,EAAD,CACIzd,KAAK,QACL7L,OAAQA,EACRE,UAAWA,EACXV,SAAUA,EACVkjB,UAAWA,EACXrR,MAAOA,EACPlB,QAASA,IAEb,yBAAK+X,UAAU,iBACX,uBAAG5hB,KAAMlG,EAAQ2E,OAAO,SAASma,IAAI,uBACjC,yBAAKgJ,UAAU,eAAekB,IAElC,yBAAKlB,UAAU,kBACVmB,GACClZ,GAAWmP,S,GA5BjB/B,IAAMC,Y,oCCenB,SAASqK,EAAa7nB,EAAQE,GACjC,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,KAFuB,IAIpCC,EAAyBD,EAAzBC,QAAS6e,EAAgB9e,EAAhB8e,YACjB,GAAyB,gBAArB7e,EAAQ,SAA4B,OAAO,KALH,IAOpCqqB,EAA6BrqB,EAA7BqqB,eAA6BrqB,EAAbyoB,SACxB,OAAI5J,EACmC,4BAA5BwL,EAAe,SAAyC,iBAAmB,gBAC/C,4BAA5BA,EAAe,SACf,cAC4B,8BAA5BA,EAAe,SACf,gBAGJ,gBAGJ,SAASC,EAAcxpB,EAAQE,GAClC,IAAMjB,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,GAAKjB,EAAL,CAGA,OADoBA,EAAZC,QACQ,UACZ,IAAK,mBAGL,IAAK,eAGL,IAAK,kBAGL,IAAK,eAGL,IAAK,eACD,OAAO,EAIf,OAAO,GAGJ,SAASuqB,EAAuBhqB,EAASO,EAAQE,GACpD,IAAKT,EAAS,OAAO,EACrB,IAAKA,EAAQqP,YAAa,OAAO,EAEjC,IAAM7P,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,GAAIjB,IAC0BA,EAAlByqB,gBACcjqB,EAAQ6iB,QAAQ,OAAO,EAGjD,OAAO,EAGJ,SAASqH,EAAmBxpB,GAAqD,IAA1CypB,EAAyC,uDAA3BC,KACxD,QAAK1pB,GAEE6nB,KAAK8B,IAAI3pB,EAAU2I,MAAO3I,EAAU4I,QAAU6gB,EAGlD,SAASrI,EAAcniB,GAC1B,IAAKA,EAAO,OAAO,KADc,IAGzBiM,EAAgCjM,EAAhCiM,UAAWgG,EAAqBjS,EAArBiS,MAAO0Y,EAAc3qB,EAAd2qB,UACpBC,EAAe3Y,EAAQA,EAAM4Y,OAAS,GACtCC,EAAmBH,EAAYA,EAAUE,OAAS,GAExD,OAAOD,GAAgBE,EAAhB,UACEA,GAAoB,iBADtB,mBAC4CF,GAAgB,iBAC7D3e,EAGH,SAAS8e,EAAmB/qB,GAC/B,IAAKA,EAAO,OAAO,KADmB,IAG9BiM,EAAgCjM,EAAhCiM,UAAWgG,EAAqBjS,EAArBiS,MAAO0Y,EAAc3qB,EAAd2qB,UACpBC,EAAe3Y,EAAQA,EAAM4Y,OAAS,GACtCC,EAAmBH,EAAYA,EAAUE,OAAS,GAExD,OAAOD,GAAgBE,EAAhB,UAAsCA,GAAoB,kBAAqB7e,EAGnF,SAAS+e,EAAiBhrB,GAC7B,IAAKA,EAAO,OAAO,KADiB,IAG5BiS,EAAUjS,EAAViS,MAGR,OAFqBA,EAAQA,EAAM4Y,OAAS,KAErB,gBAGpB,SAASI,EAAYC,GACxB,OAAOA,EAAKnK,OAAO,SAAC7R,EAAUvS,GAAX,OAAmBuS,EAASiR,OAAOxjB,EAAIuS,WAAW,IAGlE,SAASic,GAA4B9qB,EAAS6qB,EAAME,GACvD,IAAMrmB,EAAS,GADwD,EAyG3E,SAAqB1E,EAAS6qB,EAAME,GAChC,IAAMC,EAAWH,EAAKI,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAO2C,EAAQ6iB,SACtD,IAAkB,IAAdmI,EAAiB,MAAO,EAAE,GAAI,GAElC,IAAME,EAAeL,EAAKG,GAAUnc,SAASoc,UAAU,SAAAxlB,GAAC,OAAIA,EAAEzF,QAAQ3C,KAAO2C,EAAQA,QAAQ3C,KAC7F,IAAsB,IAAlB6tB,EAAqB,MAAO,EAAE,GAAI,GAGtC,IADA,IAAIC,EAAW,EACNxpB,EAAI,EAAGA,EAAIqpB,EAAUrpB,IAC1BwpB,GAAY5C,KAAK6C,KAAKP,EAAKlpB,GAAGkN,SAAShN,OAASkpB,GAGpD,MAAO,CAACI,EAAW5C,KAAKC,MAAM0C,EAAeH,GAAiBG,EAAeH,GAnHvDM,CAAYrrB,EAAS6qB,EAAME,GAFsB,mBAEhEpZ,EAFgE,KAE3D2Z,EAF2D,KAGvE,IAAa,IAAT3Z,EAAY,MAAO,GACvB,IAAgB,IAAZ2Z,EAAe,MAAO,GAE1B,IAAMC,EAAc5Z,EAAM,EACpB6Z,EAAU7Z,EAAM,EAChB8Z,EAAU9Z,EAAM,EAChB+Z,EAAc/Z,EAAM,EAEpBga,EAAaL,EAAS,EACtBM,EAAaN,EAAS,EAExBO,EAAcL,EAAU,EACxBM,EAAiBP,EAAc,EACnC,IAAKM,EAAa,CACd,GAAIF,GAAc,EAAG,CACjB,IAAIxe,EAAQ4e,GAAQP,EAASG,EAAYd,EAAME,IAChC,IAAX5d,IACA0e,GAAc,EAEdC,GAA4B,KAD5B3e,EAAQ2e,GAAkB,EAAIC,GAAQR,EAAaI,EAAYd,EAAME,MAG1D,IAAX5d,GACAzI,EAAOZ,KAAKqJ,GAIpB,IAAIA,EAAQ0e,GAAe,EAAIE,GAAQP,EAASF,EAAQT,EAAME,GAU9D,IATe,IAAX5d,IACA0e,GAAc,EAEdC,GAA4B,KAD5B3e,EAAQ2e,GAAkB,EAAIC,GAAQR,EAAaD,EAAQT,EAAME,MAGtD,IAAX5d,GACAzI,EAAOZ,KAAKqJ,GAGZye,EAAab,EAAgB,CAC7B,IAAI5d,EAAQ0e,GAAe,EAAIE,GAAQP,EAASI,EAAYf,EAAME,IACnD,IAAX5d,IACAA,EAAQ2e,GAAkB,EAAIC,GAAQR,EAAaK,EAAYf,EAAME,KAE1D,IAAX5d,GACAzI,EAAOZ,KAAKqJ,IAKxB,GAAIwe,GAAc,EAAG,CACjB,IAAMxe,EAAQ4e,GAAQpa,EAAKga,EAAYd,EAAME,IAC9B,IAAX5d,GACAzI,EAAOZ,KAAKqJ,GAIpB,GAAIye,EAAab,EAAgB,CAC7B,IAAM5d,EAAQ4e,GAAQpa,EAAKia,EAAYf,EAAME,IAC9B,IAAX5d,GACAzI,EAAOZ,KAAKqJ,GAIpB,IAAI6e,EAAYnB,EAAKnK,OAAO,SAACsL,EAAW1vB,GAAZ,OAAoB0vB,EAAYzD,KAAK6C,KAAK9uB,EAAIuS,SAAShN,OAASkpB,IAAiB,GACzGkB,EAAcR,GAAWO,EACzBE,EAAkBT,GAAWO,EACjC,IAAKC,EAAa,CACd,GAAIN,GAAc,EAAG,CACjB,IAAIxe,EAAQ4e,GAAQN,EAASE,EAAYd,EAAME,IAChC,IAAX5d,IACA8e,GAAc,EAEdC,GAA6B,KAD7B/e,EAAQ+e,GAAmB,EAAIH,GAAQL,EAAaC,EAAYd,EAAME,MAG3D,IAAX5d,GACAzI,EAAOZ,KAAKqJ,GAIpB,IAAIA,EAAQ8e,GAAe,EAAIF,GAAQN,EAASH,EAAQT,EAAME,GAU9D,IATe,IAAX5d,IACA8e,GAAc,EAEdC,GAA6B,KAD7B/e,EAAQ+e,GAAmB,EAAIH,GAAQL,EAAaJ,EAAQT,EAAME,MAGvD,IAAX5d,GACAzI,EAAOZ,KAAKqJ,GAGZye,EAAab,EAAgB,CAC7B,IAAI5d,EAAQ8e,GAAe,EAAIF,GAAQN,EAASG,EAAYf,EAAME,IACnD,IAAX5d,IACAA,EAAQ+e,GAAmB,EAAIH,GAAQL,EAAaE,EAAYf,EAAME,KAE3D,IAAX5d,GACAzI,EAAOZ,KAAKqJ,IAKxB,IAAMtR,EAAQ+uB,EAAYC,GAC1B,OAAOnmB,EAAO8C,IAAI,SAAA/B,GAAC,OAAI5J,EAAM4J,KAkBjC,SAASsmB,GAAQpa,EAAK2Z,EAAQT,EAAME,GAIhC,IAHA,IAAI5d,GAAS,EACT6e,EAAY,EACZhB,GAAY,EACPrpB,EAAI,EAAGA,EAAIkpB,EAAKhpB,OAAQF,IAAK,CAGlC,IADAqqB,GADczD,KAAK6C,KAAKP,EAAKlpB,GAAGkN,SAAShN,OAASkpB,IAElCpZ,EAAK,CACjBqZ,EAAWrpB,EACX,OAGR,IAAkB,IAAdqpB,EAAiB,OAAO7d,EAI5B,IAFA,IAAIgf,EAASxa,EACTya,EAAYd,EACP3pB,EAAI,EAAGA,EAAIqpB,EAAUrpB,IAAK,CAE/BwqB,GADc5D,KAAK6C,KAAKP,EAAKlpB,GAAGkN,SAAShN,OAASkpB,GAMtD,IAFA5d,EAAQ4d,EAAiBoB,EAASC,IAErBvB,EAAKG,GAAUnc,SAAShN,OAAQ,OAAQ,EAErD,IAAK,IAAIF,EAAI,EAAGA,EAAIqpB,EAAUrpB,IAC1BwL,GAAS0d,EAAKlpB,GAAGkN,SAAShN,OAG9B,OAAOsL,EAGX,SAASkf,GAAuB3rB,GAC5B,IAAKA,EAAW,OAAO,KADgB,IAG/Bd,EAAyBc,EAAzBd,MAAOyJ,EAAkB3I,EAAlB2I,MAAOC,EAAW5I,EAAX4I,OACtB,OAAK1J,EAEE,CACH,QAAS,iBACTc,UAAW,CACP,QAAS,cACTrD,GAAIuC,EAAMvC,IAEdgM,QACAC,UATe,KAavB,SAASgjB,GAAqBzb,GAC1B,OAAKA,EAEE,CACH,QAAS,gBACTA,KAAMA,EACN6C,SAAU,MALI,KASf,SAAS6Y,GAAqB5gB,EAAOkF,GACxC,IAAKlF,EAAO,OAAO,KAEnB,OAAQA,EAAM,UACV,IAAK,YAAc,IACIpP,EAA6CoP,EAAxDjM,UAAiBgB,EAAuCiL,EAAvCjL,UAAW2I,EAA4BsC,EAA5BtC,MAAOC,EAAqBqC,EAArBrC,OAAQ4e,EAAavc,EAAbuc,SAEnD,MAAO,CACH,QAAS,wBACTxoB,UAAW,CACP,QAAS,cACTrC,GAAId,EAAKc,IAEbqD,UAAW2rB,GAAuB3rB,GAClCwnB,WACA7e,QACAC,SACAoH,QAAS4b,GAAqBzb,IAGtC,IAAK,QAAU,IACItU,EAAuEoP,EAA9EhM,MAAoCe,EAA0CiL,EAAjE5K,sBAAkC6Q,EAA+BjG,EAA/BiG,MAAO0Y,EAAwB3e,EAAxB2e,UAAWpC,EAAavc,EAAbuc,SAEzE,MAAO,CACH,QAAS,oBACTvoB,MAAO,CACH,QAAS,cACTtC,GAAId,EAAKc,IAEb0D,sBAAuBsrB,GAAuB3rB,GAC9CwnB,WACAtW,QACA0Y,YACA5Z,QAAS4b,GAAqBzb,IAGtC,IAAK,UACD,MAAO,CACH,QAAS,sBACT/H,QAAS6C,GAGjB,IAAK,WAAa,IACIpP,EAAoBoP,EAA9B9L,SAAgBa,EAAciL,EAAdjL,UAExB,MAAO,CACH,QAAS,uBACTb,SAAU,CACN,QAAS,cACTxC,GAAId,EAAKc,IAEbqD,UAAW2rB,GAAuB3rB,GAClCgQ,QAAS4b,GAAqBzb,IAGtC,IAAK,OAGL,IAAK,UACD,OAAO,KAEX,IAAK,WACD,MAAO,CACH,QAAS,uBACT9Q,SAAU4L,EACV6gB,YAAa,GAGrB,IAAK,QAAU,IACH5qB,EAAU+J,EAAV/J,MACR,IAAKA,EAAMC,OAAQ,OAAO,KAE1B,IAAMnB,EAAYkB,EAAM,GAClBhC,EAAQgC,EAAMA,EAAMC,OAAS,GACnC,IAAKjC,EAAO,OAAO,KANT,IAQKrD,EAAwBqD,EAA/BA,MAAayJ,EAAkBzJ,EAAlByJ,MAAOC,EAAW1J,EAAX0J,OAE5B,MAAO,CACH,QAAS,oBACT1J,MAAO,CACH,QAAS,cACTvC,GAAId,EAAKc,IAEbqD,UAAW2rB,GAAuB3rB,GAClC+rB,uBAAwB,GACxBpjB,QACAC,SACAoH,QAAS4b,GAAqBzb,GAC9BiQ,IAAK,GAGb,IAAK,OACD,OAAO,KAEX,IAAK,UAAY,IACIvkB,EAAmCoP,EAA5C3L,QAAeU,EAA6BiL,EAA7BjL,UAAW2I,EAAkBsC,EAAlBtC,MAAOC,EAAWqC,EAAXrC,OAEzC,MAAO,CACH,QAAS,sBACTtJ,QAAS,CACL,QAAS,cACT3C,GAAId,EAAKc,IAEbqD,UAAW2rB,GAAuB3rB,GAClC2I,QACAC,SACAoH,QAAS4b,GAAqBzb,IAGtC,IAAK,QACD,MAAO,CACH,QAAS,oBACTxQ,MAAOsL,GAGf,IAAK,QAAU,IACIpP,EAAiEoP,EAAxEzL,MAAaQ,EAA2DiL,EAA3DjL,UAAW2I,EAAgDsC,EAAhDtC,MAAOC,EAAyCqC,EAAzCrC,OAAQ4e,EAAiCvc,EAAjCuc,SAAUwE,EAAuB/gB,EAAvB+gB,mBAEzD,MAAO,CACH,QAAS,oBACTxsB,MAAO,CACH,QAAS,cACT7C,GAAId,EAAKc,IAEbqD,UAAW2rB,GAAuB3rB,GAClC+rB,uBAAwB,GACxBvE,WACA7e,QACAC,SACAojB,qBACAhc,QAAS4b,GAAqBzb,GAC9BiQ,IAAK,GAGb,IAAK,YAAc,IACAvkB,EAAsCoP,EAA7CzL,MAAaQ,EAAgCiL,EAAhCjL,UAAWwnB,EAAqBvc,EAArBuc,SAAUrmB,EAAW8J,EAAX9J,OAE1C,MAAO,CACH,QAAS,wBACT3B,MAAO,CACH,QAAS,cACT7C,GAAId,EAAKc,IAEbqD,UAAW2rB,GAAuB3rB,GAClCwnB,WACArmB,SACAif,IAAK,GAGb,IAAK,YAAc,IACAvkB,EAA6BoP,EAApCxJ,MAAa+lB,EAAuBvc,EAAvBuc,SAAUyE,EAAahhB,EAAbghB,SAE/B,MAAO,CACH,QAAS,wBACTvsB,WAAY,CACR,QAAS,cACT/C,GAAId,EAAKc,IAEb6qB,WACAyE,YAKZ,OAAO,KAGJ,SAASC,GAASptB,EAASyjB,GAAqE,IAA1D4J,EAAyD,wDAAvCC,EAAuC,wDAAnBC,EAAmB,uDAAN,KAC5F,IAAKvtB,EAAS,OAAO,KAD6E,IAG1FgB,EAAyBhB,EAAzBgB,QAASnD,EAAgBmC,EAAhBnC,GAAIoC,EAAYD,EAAZC,QACrB,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,mBACD,OACI,kBAAC8pB,EAAA,EAAD,CACInd,KAAK,UACLwF,MAAOib,EACPnc,QAASoc,EACTvsB,OAAQC,EACRC,UAAWpD,EACXqC,UAAWD,EAAQC,UACnBujB,UAAWA,IAGvB,IAAK,eACD,OACI,kBAAC+J,EAAA,EAAD,CACIpb,MAAOib,EACPnc,QAASoc,EACTvsB,OAAQC,EACRC,UAAWpD,EACXsC,MAAOF,EAAQE,MACfsjB,UAAWA,EACXpD,KAAMkN,IAGlB,IAAK,cACD,OACI,kBAAC,EAAD,CACInb,MAAOib,EACPnc,QAASoc,EACTvsB,OAAQC,EACRC,UAAWpD,EACX4vB,QAASxtB,EAAQyoB,SACjBgF,cAAeztB,EAAQqqB,eACvB7G,UAAWA,EACXpD,KAAMkN,IAGlB,IAAK,iBACD,OACI,kBAAC,EAAD,CACInb,MAAOib,EACPnc,QAASoc,EACTvsB,OAAQC,EACRC,UAAWpD,EACXyL,QAASrJ,EAAQqJ,QACjBma,UAAWA,EACXpD,KAAMkN,IAGlB,IAAK,kBACD,OACI,kBAACI,EAAA,EAAD,CACIvb,MAAOib,EACPnc,QAASoc,EACTvsB,OAAQC,EACRC,UAAWpD,EACXwC,SAAUJ,EAAQI,SAClBojB,UAAWA,EACXpD,KAAMkN,IAGlB,IAAK,cACD,OAAO,kBAAC,EAAD,CAAMxsB,OAAQC,EAASC,UAAWpD,EAAIyC,KAAML,EAAQK,KAAMmjB,UAAWA,IAChF,IAAK,kBACD,OACI,kBAAC4G,EAAA,EAAD,CACIzd,KAAK,UACLwF,MAAOib,EACPnc,QAASoc,EACTvsB,OAAQC,EACRC,UAAWpD,EACX0C,SAAUN,EAAQM,SAClBkjB,UAAWA,IAGvB,IAAK,eACD,OACI,kBAACwG,EAAA,EAAD,CACIrd,KAAK,UACLwF,MAAOib,EACPnc,QAASoc,EACTvsB,OAAQC,EACRC,UAAWpD,EACXuC,MAAOH,EAAQG,MACfqjB,UAAWA,IAGvB,IAAK,cACD,OAAO,kBAACmK,EAAA,EAAD,CAAM7sB,OAAQC,EAASC,UAAWpD,EAAI2jB,KAAMvhB,EAAQuhB,KAAMiC,UAAWA,EAAWpD,KAAMkN,IACjG,IAAK,iBACD,OACI,kBAACM,EAAA,EAAD,CACI9sB,OAAQC,EACRC,UAAWpD,EACX2C,QAASP,EAAQO,QACjBW,OAAQ2sB,IAAkBC,QAC1BtK,UAAWA,IAGvB,IAAK,cACD,OAAO,KACX,IAAK,eACD,OACI,kBAAC,EAAD,CACI7W,KAAK,UACLwF,MAAOib,EACPnc,QAASoc,EACTvsB,OAAQC,EACRC,UAAWpD,EACXgD,MAAOZ,EAAQY,MACf4iB,UAAWA,EACXpD,KAAMkN,IAGlB,IAAK,eACD,OACI,kBAACS,EAAA,EAAD,CACIphB,KAAK,UACLwF,MAAOib,EACPnc,QAASoc,EACTvsB,OAAQC,EACRC,UAAWpD,EACX6C,MAAOT,EAAQS,MACf+iB,UAAWA,IAGvB,IAAK,mBACD,OACI,kBAACwK,EAAA,EAAD,CACIrhB,KAAK,UACLwF,MAAOib,EACPnc,QAASoc,EACTvsB,OAAQC,EACRC,UAAWpD,EACXgF,UAAW5C,EAAQU,WACnB8iB,UAAWA,IAGvB,IAAK,mBACD,OACI,kBAACyK,EAAA,EAAD,CACIthB,KAAK,UACLwF,MAAOib,EACPnc,QAASoc,EACTvsB,OAAQC,EACRC,UAAWpD,EACX6E,UAAWzC,EAAQW,WACnB6iB,UAAWA,EACXpD,KAAMkN,IAGlB,QACI,MAAO,CAAC,IAAD,OAAKttB,EAAQ,SAAb,KAA0BstB,IAItC,SAAeY,GAAtB,mC,6CAAO,WAAwCpxB,GAAxC,eAAAH,EAAA,wDACEG,EADF,yCAEQ,MAFR,cAKGoG,GAAUirB,YAAa,EAAG,KAChChmB,IAAU/E,QAAQF,EAAQpG,GANvB,kBAQI,CACH,QAAS,kBACTsD,SAAU,CACN,QAAS,WACT+L,UAAWrP,EAAKsxB,KAChBlhB,UAAWpQ,EAAK6P,KAChBmX,cAAe,KACf7iB,UAAW,KACXb,SAAU,CACN,QAAS,OACTxC,GAAIsF,EACJsD,KAAM1J,EAAK0J,KACX6nB,cAAevxB,EAAKuxB,cACpBvwB,MAAO,CACHE,0BAA0B,OAtBvC,0C,sBA6BA,SAAeswB,GAAtB,mC,6CAAO,WAAqCxxB,GAArC,yBAAAH,EAAA,wDACEG,EADF,yCAEQ,MAFR,WAKCA,EAAK6P,KAAK4hB,WAAW,SALtB,iCAM+BC,YAAc1xB,GAN7C,0CAMQ8M,EANR,KAMeC,EANf,KAQO3G,GAAUirB,YAAa,EAAG,KAChChmB,IAAU/E,QAAQF,EAAQpG,GAEpBuF,EAAY,CACd,QAAS,YACTlC,MAAO,CACH,QAAS,OACTvC,GAAIsF,EACJsD,KAAM1J,EAAK0J,KACX6nB,cAAevxB,EAAKuxB,cACpBvwB,MAAO,CACHE,0BAA0B,IAGlC4L,QACAC,UAvBL,kBA0BQ,CACH,QAAS,eACT1J,MAAO,CACH,QAAS,QACTsuB,cAAc,EACd3K,cAAe,KACf3hB,MAAO,CAACE,MAhCjB,iCAoCQ,MApCR,2C,2dCzpBP,4BASeqsB,gBACX,0BAAMnO,EAAE,kwBACR,U,yLCGEoO,EAAaC,OAAOC,OAAO,CAC7BC,KAAM,OACNC,OAAQ,SACRC,WAAY,eAiYVpzB,EAAQ,I,YA3XV,aAAe,IAAD,uBACV,+CAcJC,MAAQ,WACJ,EAAKozB,SAAW,KAChB,EAAKlvB,QAAU,KACf,EAAKmvB,KAAO,KACZ,EAAKC,YAAc,KACnB,EAAKve,YAAc,KACnB,EAAKE,UAAY,MArBP,EAwBd5T,iBAAmB,WACfC,IAAgBC,GAAG,SAAU,EAAKX,UAClCU,IAAgBC,GAAG,eAAgB,EAAKH,iBA1B9B,EA6BdI,oBAAsB,WAClBF,IAAgBG,IAAI,SAAU,EAAKb,UACnCU,IAAgBG,IAAI,eAAgB,EAAKL,iBA/B/B,EAkCdR,SAlCc,sCAkCH,WAAMC,GAAN,eAAAC,EAAA,0DACCD,EAAO,SADR,OAEE,6BAFF,0BAGSa,EAAwBb,EAAxBa,oBAHT,wDAMSA,EAAoB,SAN7B,OAOU,6BAPV,8BAQS,EAAK1B,QARd,2GAlCG,wDAsDduzB,MAAQ,WACJjyB,IAAgB8G,aAAa,CACzB,QAAS,4BAxDH,EAgFdhH,eAAiB,SAAAP,GACb,OAAQA,EAAO,UACX,IAAK,yBACD,EAAKb,QAEL,EAAKmB,KAAKN,EAAO,SAAUA,GAC3B,MAEJ,IAAK,0BAA4B,IACrBoE,EAA8CpE,EAA9CoE,OAAQE,EAAsCtE,EAAtCsE,UAAW4P,EAA2BlU,EAA3BkU,YAAaE,EAAcpU,EAAdoU,UAElC/Q,EAAUiI,IAAa/J,IAAI6C,EAAQE,GACzC,GAAIjB,EAKA,OAJA,EAAKA,QAAUA,EACf,EAAK/C,KAAKN,EAAO,SAAUA,QAC3B,EAAK2yB,YAAYvuB,EAAQE,GAGlB4P,GAAeE,IACtB,EAAKF,YAAcA,EACnB,EAAKE,UAAYA,EACjB,EAAK9T,KAAKN,EAAO,SAAUA,IAG/B,MAEJ,IAAK,0BAA4B,IACrB4yB,EAAW5yB,EAAX4yB,OAER,EAAKA,OAASA,EAEd,EAAKC,qBAEL,EAAKvyB,KAAKN,EAAO,SAAUA,GAC3B,MAEJ,IAAK,0BAA4B,IACrB8yB,EAAW9yB,EAAX8yB,OAER,EAAKA,OAASA,EAEd,EAAKxyB,KAAKN,EAAO,SAAUA,GAC3B,MAEJ,IAAK,2BAA6B,IACtB+yB,EAAY/yB,EAAZ+yB,QAER,EAAKA,QAAUA,EAEf,EAAKzyB,KAAKN,EAAO,SAAUA,GAC3B,MAEJ,IAAK,gCAAkC,IAC3BgzB,EAAiBhzB,EAAjBgzB,aAER,EAAKA,aAAeA,EAEpB,EAAKH,qBAEL,EAAKvyB,KAAKN,EAAO,SAAUA,GAC3B,MAEJ,IAAK,wBACD,EAAKizB,SAAU,EAEf,EAAK3yB,KAAKN,EAAO,SAAUA,GAC3B,MAEJ,IAAK,kCACD,EAAKM,KAAKN,EAAO,SAAUA,GAC3B,MAEJ,IAAK,yBACD,EAAKizB,SAAU,EAEf,EAAK3yB,KAAKN,EAAO,SAAUA,GAC3B,MAEJ,IAAK,wBAIL,IAAK,2BAIL,IAAK,wBACD,EAAKM,KAAKN,EAAO,SAAUA,GAC3B,MAEJ,IAAK,wBACD,EAAKM,KAAKN,EAAO,SAAUA,GAE3B,EAAKkzB,iBAAgB,GACrB,MAEJ,IAAK,wBACD,EAAK5yB,KAAKN,EAAO,SAAUA,GAE3B,EAAKmzB,kBACL,MAEJ,IAAK,0BACD,EAAK7yB,KAAKN,EAAO,SAAUA,GAC3B,MAEJ,IAAK,uBACD,EAAKM,KAAKN,EAAO,SAAUA,GAEvBA,EAAOozB,UACH,EAAKF,iBAAgB,IAKzB,EAAKR,QAET,MAEJ,IAAK,wBAA0B,IACnB3G,EAAqC/rB,EAArC+rB,SAAUsH,EAA2BrzB,EAA3BqzB,YAAaC,EAActzB,EAAdszB,UAE/B,EAAKd,KAAO,CACRa,YAAaA,EACbtH,SAAUA,EACVuH,UAAWA,GAGf,EAAKhzB,KAAKN,EAAO,SAAUA,GAC3B,MAEJ,IAAK,iCACD,EAAKyyB,YAAczyB,EAAOuzB,OAE1B,EAAKjzB,KAAKN,EAAO,SAAUA,GAC3B,MAEJ,IAAK,8BAIL,IAAK,+BAIL,IAAK,+BAIL,IAAK,mCAIL,IAAK,gCAIL,IAAK,4BAIL,IAAK,gCACD,EAAKM,KAAKN,EAAO,SAAUA,KAlPzB,EA0PdmzB,gBAAkB,WACd,GAAK,EAAKZ,UACL,EAAKlvB,QAAV,CAFoB,MAII,EAAKA,QAArBgB,EAJY,EAIZA,QAASnD,EAJG,EAIHA,GACTkK,EAAa,EAAKmnB,SAAlBnnB,SACR,GAAKA,EAAL,CAEA,IAAM4F,EAAQ5F,EAAS0jB,UAAU,SAAAxlB,GAAC,OAAIA,EAAEjF,UAAYA,GAAWiF,EAAEpI,KAAOA,IACxE,IAAe,IAAX8P,GAEAA,EAAQ,EAAI5F,EAAS1F,OAAQ,CAC7B,IAAMrC,EAAU+H,EAAS4F,EAAQ,GAEjC8V,YAAUzjB,EAAQgB,QAAShB,EAAQnC,IAAI,OAxQjC,EA4QdgyB,gBAAkB,SAAAM,GACd,IAAK,EAAKjB,SAAU,OAAO,EAC3B,IAAK,EAAKlvB,QAAS,OAAO,EAFQ,MAIV,EAAKA,QAArBgB,EAJ0B,EAI1BA,QAASnD,EAJiB,EAIjBA,GACTkK,EAAa,EAAKmnB,SAAlBnnB,SACR,IAAKA,EAAU,OAAO,EAEtB,IAAM4F,EAAQ5F,EAAS0jB,UAAU,SAAAxlB,GAAC,OAAIA,EAAEjF,UAAYA,GAAWiF,EAAEpI,KAAOA,IACxE,IAAe,IAAX8P,EAAc,OAAO,EAEzB,IAAIyiB,GAAa,EACjB,GAAKD,EAGD,OAAQ,EAAKV,QACT,KAAKb,EAAWG,KAERqB,EADA,EAAKV,QACOtB,YAAa,EAAGrmB,EAAS1F,QAEzBsL,EAAQ,EAExB,MAEJ,KAAKihB,EAAWK,WACZmB,EAAYziB,EACZ,MAEJ,KAAKihB,EAAWI,OAERoB,EADA,EAAKV,QACOtB,YAAa,EAAGrmB,EAAS1F,QAEzBsL,EAAQ,GAAK,EAAIA,EAAQ,EAAI5F,EAAS1F,OAAS,OAnBvE+tB,EAAYziB,EAAQ,EA0BxB,GAAIyiB,GAAa,EAAG,CAChB,IAAMpwB,EAAU+H,EAASqoB,GAGzB,OADA3M,YAAUzjB,EAAQgB,QAAShB,EAAQnC,IAAI,IAChC,EAGX,OAAO,GA1TG,EA6TdyxB,YA7Tc,sCA6TA,WAAOvuB,EAAQE,GAAf,2BAAArE,EAAA,2EACQyzB,EADR,EACFnB,UADE,qBAIEnnB,EAAasoB,EAAbtoB,YACiF,IAAzEA,EAAS0jB,UAAU,SAAAxlB,GAAC,OAAIA,EAAEjF,UAAYD,GAAUkF,EAAEpI,KAAOoD,IALnE,oDAUV7D,IAAgB8G,aAAa,CACzB,QAAS,mCACTnD,OAAQA,EACRE,UAAWA,IAGTiF,EAASyc,YAAwB5hB,EAAQE,GAhBrC,wBAkBN,EAAKiuB,SAAW,CACZnuB,OAAQA,EACRE,UAAWA,EACXqvB,WAAY,EACZvoB,SAAU,CAACE,IAAa/J,IAAI6C,EAAQE,KAGxC7D,IAAgB8G,aAAa,CACzB,QAAS,4BACTgrB,SAAU,EAAKA,WA3Bb,4CAiCW9xB,IAAgBmI,KAAK,CACtC,QAAS,qBACTvE,QAASD,EACTwvB,MAAO,GACP1kB,eAAgB,EAChB2kB,gBAAiBvvB,EACjBoT,QAAS,GACToc,MAAO,IACPvqB,OAAQA,IAzCF,QAiCJhB,EAjCI,OA4CV+C,IAAaC,SAAShD,EAAO6C,UAErB2oB,EAA0BxrB,EAA1BwrB,YAAa3oB,EAAa7C,EAAb6C,SAErB,EAAKmnB,SAAW,CACZnuB,OAAQA,EACRE,UAAWA,EACXqvB,WAAYI,EACZ3oB,SAAUA,GAGd3K,IAAgB8G,aAAa,CACzB,QAAS,4BACTgrB,SAAU,EAAKA,WAzDT,0CA7TA,8DAGuB,EAAKyB,qBAA9BhB,EAHE,EAGFA,aAAcJ,EAHZ,EAGYA,OAHZ,OAKV,EAAKI,aAAeA,EACpB,EAAKJ,OAASA,EACd,EAAKE,OAASb,EAAWG,KACzB,EAAKW,SAAU,EAEf,EAAK5zB,QAEL,EAAKqB,mBAZK,E,kFA6DV,IAAMyzB,EAASC,aAAaC,QAAQ,WAAa,GAE3CnB,EAAyBiB,EAAzBjB,aAAcJ,EAAWqB,EAAXrB,OAQpB,MAAO,CAAEI,aANTA,EACIA,GAAgBoB,OAAOpB,IAAiB,GAAKoB,OAAOpB,IAAiB,EAC/DoB,OAAOpB,GACPqB,IAGazB,OAFvBA,EAASA,GAAUwB,OAAOxB,IAAW,GAAKwB,OAAOxB,IAAW,EAAIwB,OAAOxB,GAAU0B,O,2CAK/D,IACV1B,EAAyBnrB,KAAzBmrB,OAAQI,EAAiBvrB,KAAjBurB,aAEhBkB,aAAaK,QAAQ,SAAUve,KAAKwe,UAAU,CAAE5B,SAAQI,sB,GA9EtCppB,MA6X1BzB,OAAO8rB,OAAS/0B,EACDA,O,6BCpZf,qWAYA,SAAS8c,EAAc7Y,GACnB,IAAKA,EAAM,OAAO,KAClB,IAAKA,EAAKsY,OAAQ,OAAO,KAEzB,GAAItY,EAAKjC,KAAOyV,KACZ,MAAO,wBAGX,GAAIxT,EAAK8M,MAA+B,gBAAvB9M,EAAK8M,KAAK,SACvB,MAAO,MAGX,OAAQ9M,EAAKsY,OAAO,UAChB,IAAK,kBACD,MAAO,4BAEX,IAAK,sBACD,MAAO,2BAEX,IAAK,qBACD,MAAO,0BAEX,IAAK,oBAAsB,IACjBgZ,EAAetxB,EAAKsY,OAApBgZ,WACN,IAAKA,EAAY,MAAO,UAExB,IAAM5Z,EAAM,IAAIJ,KACVia,EAAY,IAAIja,KAAkB,IAAbga,GAC3B,GAAIC,EAAY7Z,EACZ,MAAO,qBAGX,IAAI8Z,EAAO,IAAIla,KAAKI,EAAM6Z,GAG1B,GAAIC,EAAKC,UAAY,IAAO,GACxB,MAAO,qBAIX,GAAID,EAAKC,UAAY,IAAO,KAAS,CACjC,IAAMC,EAAUzI,KAAKC,MAAMsI,EAAKC,UAAY,IAAO,IACnD,MAAM,aAAN,OAAgC,IAAZC,EAAgB,WAAaA,EAAU,WAA3D,QAIJ,IAAMC,EAAQ,IAAIra,KAElB,GADAqa,EAAMna,SAAS,EAAG,EAAG,EAAG,GACpB+Z,EAAYI,EAAO,CAEnB,GAAIH,EAAKC,UAAY,IAAO,MAAa,CACrC,IAAMG,EAAQ3I,KAAKC,MAAMsI,EAAKC,UAAY,IAAO,GAAK,IACtD,MAAM,aAAN,OAA8B,IAAVG,EAAc,SAAWA,EAAQ,SAArD,QAIJ,MAAM,sBAAN,OAA6Bna,YAAW8Z,EAAW,SAIvD,IAAIM,EAAY,IAAIva,KAGpB,OAFAua,EAAU9Z,QAAQL,EAAII,UAAY,GAClC6Z,EAAMna,SAAS,EAAG,EAAG,EAAG,GACpB+Z,EAAYM,EACN,0BAAN,OAAiCpa,YAAW8Z,EAAW,SAGrD,aAAN,OAAoB9Z,YAAW8Z,EAAW,eAE9C,IAAK,mBACD,MAAO,SAEX,IAAK,qBACD,MAAO,qBAIf,OAAO,KAGX,SAASzX,EAAa9Z,GAClB,IAAKA,EAAM,OAAO,EADM,IAGhBjC,EAAqBiC,EAArBjC,GAAIua,EAAiBtY,EAAjBsY,OAAQxL,EAAS9M,EAAT8M,KACpB,QAAKwL,MACAxL,IACD/O,IAAOyV,OAEgB,qBAApB8E,EAAO,UAAqD,gBAAlBxL,EAAK,YAG1D,SAAS+I,EAAgBrP,EAAQxG,GAAmB,IAAbuS,EAAY,uDAAR,SAAAoD,GAAC,OAAIA,GAE5C,KADA3V,EAAO0J,IAAUtL,IAAIoI,IAAWxG,GACrB,OAAO,KAF6B,MAIPA,EAAhC8M,EAJuC,EAIvCA,KAAMyI,EAJiC,EAIjCA,WAAYmU,EAJqB,EAIrBA,UAC1B,IAAK5c,EAAM,OAAO,KAElB,OAAQA,EAAK,UACT,IAAK,cACL,IAAK,kBACD,GAAIyI,GAAcmU,EAAW,MAAM,GAAN,OAAUnU,EAAV,YAAwBmU,GACrD,GAAInU,EAAY,OAAOA,EACvB,GAAImU,EAAW,OAAOA,EAE1B,IAAK,kBACL,IAAK,kBACD,OAAOnX,EAAE,cAIjB,OAAO,KAGX,SAASwD,EAAiBvP,GAAqB,IAAb+L,EAAY,uDAAR,SAAAoD,GAAC,OAAIA,GACjC3V,EAAO0J,IAAUtL,IAAIoI,GAC3B,IAAKxG,EAAM,OAAO,KAFwB,IAIlC8M,EAAgC9M,EAAhC8M,KAAMyI,EAA0BvV,EAA1BuV,WAAYmU,EAAc1pB,EAAd0pB,UAC1B,IAAK5c,EAAM,OAAO,KAElB,OAAQA,EAAK,UACT,IAAK,cACL,IAAK,kBACD,GAAIyI,EAAY,OAAOA,EACvB,GAAImU,EAAW,OAAOA,EAE1B,IAAK,kBACL,IAAK,kBACD,OAAOnX,EAAE,cAIjB,OAAO,KAGX,SAASuf,EAActrB,GACnB,IAAM0S,EAAWxP,IAAUyP,YAAY3S,GACvC,QAAI0S,GACOA,EAAS6Y,WAMxB,SAASC,EAAexrB,EAAQsjB,EAAWC,EAAUxX,GACjD,IAAMvS,EAAO0J,IAAUtL,IAAIoI,GAC3B,IAAKxG,IAAU8pB,IAAaC,EAAW,OAAO,KAE9C,IAAMzX,EAAQuD,EAAgBrP,EAAQ,KAAM+L,IAAM,UAAGuX,EAAH,YAAgBC,GAAWmB,OACvExR,EAAUC,YAAWrH,GAC3B,GAAIoH,GAAWA,EAAQnX,OAAS,EAC5B,OAAOmX,EAGP1Z,IACA8pB,EAAY9pB,EAAKuV,WACjBwU,EAAW/pB,EAAK0pB,WAGpB,IAAMuI,EAAkBC,YAAepI,IAAcA,EAAUlQ,OAAO,GACtE,GAAIqY,EAAiB,OAAOA,EAE5B,IAAME,EAAiBD,YAAenI,IAAaA,EAASnQ,OAAO,GACnE,OAAIuY,GAEG,GAGX,SAASC,EAAmBpyB,GACxB,IAAKA,EAAM,OAAO,EAClB,IAAKA,EAAKsY,OAAQ,OAAO,EACzB,GAA2B,gBAAvBtY,EAAK8M,KAAK,SAA4B,OAAO,EAEjD,OAAQ9M,EAAKsY,OAAO,UAChB,IAAK,kBACD,OAAO,EAEX,IAAK,sBACD,OAAO,GAEX,IAAK,qBACD,OAAO,IAEX,IAAK,oBACD,OAAOtY,EAAKsY,OAAOgZ,WAEvB,IAAK,mBACD,OAAOtxB,EAAKsY,OAAO+Z,QAEvB,IAAK,qBACD,OAAO,KAKnB,SAAS1jB,EAAgBrO,GACrB,IAAKA,EAAO,OAAO,KADS,IAGpBvC,EAAcuC,EAAdvC,GAAIuE,EAAUhC,EAAVgC,MACZ,OAAKA,GACAA,EAAMC,OAKJ,CACH,QAAS,eACTxE,KACAyQ,MANqB/D,YAAQnI,EAAOgwB,MAAhChyB,MAOJmO,IANmBhE,YAAQnI,EAAOiwB,MAA9BjyB,OAJW,KAcvB,SAASkyB,EAAwBC,GAC7B,IAAKA,EAAkB,OAAO,KADiB,IAGvCC,EAAeD,EAAfC,WACR,IAAKA,EAAY,OAAO,KAExB,IAAMrb,EAAO,IAAIC,KAAkB,IAAbob,GACtB,OAAOjb,YAAWJ,EAAM,qBAGrB,SAASsb,EAAcnsB,GAC1B,IAAMxG,EAAO0J,IAAUtL,IAAIoI,GAE3B,OAAOxG,GAA+B,oBAAvBA,EAAK8M,KAAK,W,0JC/NvB8lB,G,mBACF,WAAY9V,GAAQ,IAAD,uBACf,4CAAMA,KAuGV5f,aAAe,SAAAL,GACX,IAAMg2B,EAAc,EAAKrV,MAAMvgB,KACzB61B,EAAWj2B,EAAOI,KAEpB41B,GAAeA,EAAY90B,KAAO+0B,EAAS/0B,KACvC,EAAKg1B,WAAWD,EAAUD,IAI1B,EAAKzV,SAAS,CAAEngB,KAAM61B,EAAUE,SAAUH,MAjHnC,EAsHnBI,cAAgB,SAACh2B,EAAM+1B,GACnB,IAAK,EAAKlW,MAAMrV,SAAU,OAAO,EAEjC,IAAMyrB,EAAYF,GAAYA,EAAS/0B,OAAS+0B,EAAS/0B,MAAMoS,sBACzD8iB,EAAWl2B,GAAQA,EAAKgB,OAAShB,EAAKgB,MAAMoS,sBAElD,OAAO6iB,GAAaC,GA5HL,EA+HnBC,YAAc,SAACn2B,EAAM+1B,GACjB,IAAK,EAAKlW,MAAMuW,OAAQ,OAAO,EAE/B,IAAMH,EAAYF,GAAYA,EAASvzB,QAAUuzB,EAASvzB,OAAO+Q,oBAC3D2iB,EAAWl2B,GAAQA,EAAKwC,QAAUxC,EAAKwC,OAAO+Q,oBAEpD,OAAO0iB,GAAaC,GArIL,EAwInBG,kBAAoB,SAACr2B,EAAM+1B,GAAc,IAC7B/0B,EAAkBhB,EAAlBgB,MAAOwB,EAAWxC,EAAXwC,OAEXyzB,GAAY,EACZC,GAAW,EACXI,GAAc,EACdC,EAAe,EACf7sB,EAAO,EAqCX,OApCI,EAAKssB,cAAch2B,EAAM+1B,IACzBE,EAAYF,GAAYA,EAAS/0B,OAAS+0B,EAAS/0B,MAAMoS,sBACzD8iB,EAAWl1B,EAAMoS,sBACjBkjB,EAAct1B,EAAME,yBACpBq1B,EAAev1B,EAAMqS,gBACrB3J,EAAO1J,EAAK0J,MAQL,EAAKysB,YAAYn2B,EAAM+1B,KAC9BE,EAAYF,GAAYA,EAASvzB,QAAUuzB,EAASvzB,OAAO+Q,oBAC3D2iB,EAAW1zB,EAAO+Q,oBAClB+iB,EAAc9zB,EAAOC,uBACrB8zB,EAAe/zB,EAAOgR,cACtB9J,EAAO1J,EAAK0J,MAkBT,CAACusB,EAAWC,EAAUI,EAAaC,EAAc7sB,IAjLxD,EAAK8sB,mBAAoB,EAHV,IAIPx2B,EAAS,EAAK6f,MAAd7f,KAJO,OAKf,EAAKugB,MAAQ,CACTkW,cAAez2B,EACf+1B,SAAU,KACV/1B,KAAMqL,IAAUlK,IAAInB,EAAKc,KAAOd,GARrB,E,mFA2BG02B,EAAWC,GAAY,IAAD,EACStvB,KAAKwY,MAA9CrV,EADgC,EAChCA,SAAU4rB,EADsB,EACtBA,OAAQQ,EADc,EACdA,KAAMC,EADQ,EACRA,aAEhC,GAAIH,EAAUG,eAAiBA,EAC3B,OAAO,EAGX,GAAIH,EAAUE,OAASA,EACnB,OAAO,EAGX,GAAIvvB,KAAK2uB,cAAcW,EAAU32B,KAAM22B,EAAUZ,YAAcvrB,EAC3D,OAAO,EAGX,GAAInD,KAAK8uB,YAAYQ,EAAU32B,KAAM22B,EAAUZ,YAAcK,EACzD,OAAO,EAGX,IAAMU,EAAYH,EAAU32B,KAAO22B,EAAU32B,KAAKgB,MAAQ,KACpD+1B,EAAaJ,EAAU32B,KAAO22B,EAAU32B,KAAKe,QAAU,KACvDi2B,EAAY3vB,KAAKkZ,MAAMwV,SAAW1uB,KAAKkZ,MAAMwV,SAAS/0B,MAAQ,KAC9Di2B,EAAa5vB,KAAKkZ,MAAMwV,SAAW1uB,KAAKkZ,MAAMwV,SAASh1B,QAAU,KACjEm2B,EACFF,GAAaF,IAAcE,EAAU91B,0BAA4B41B,EAAU51B,yBACzEi2B,EAAgBJ,IAAeE,EAErC,OAAIN,EAAU32B,KAAKc,KAAOuG,KAAKkZ,MAAMvgB,KAAKc,KAAMo2B,IAA0BC,KAItER,EAAU32B,OAASqH,KAAKkZ,MAAMvgB,MAI9B22B,EAAUZ,WAAa1uB,KAAKkZ,MAAMwV,Y,0CAQtC1uB,KAAK+vB,OAAQ,EACb/rB,IAAU/K,GAAG,aAAc+G,KAAKpH,gB,6CAIhCoH,KAAK+vB,OAAQ,EACb/rB,IAAU7K,IAAI,aAAc6G,KAAKpH,gB,iCAG1Bo3B,EAAOC,GACd,GAAID,IAAUC,GAAmB,OAAVD,EAAgB,OAAO,EAC9C,GAAc,OAAVA,GAA4B,OAAVC,EAAgB,OAAO,EAC7C,GAAc,OAAVD,GAA4B,OAAVC,EAAgB,OAAO,EAHxB,IAKNC,EAA4BF,EAAnCr2B,MAAuBw2B,EAAYH,EAApB70B,OACRi1B,EAA4BH,EAAnCt2B,MAAuB02B,EAAYJ,EAApB90B,OAEvB,OAAI+0B,EAAOI,iBAAmBF,EAAOE,iBACjCJ,EAAOxnB,oBAAsB0nB,EAAO1nB,oBACpCwnB,EAAOK,kBAAoBH,EAAOG,kBAClCL,EAAOM,yBAA2BJ,EAAOI,yBACzCN,EAAOlkB,kBAAoBokB,EAAOpkB,kBAClCkkB,EAAOnkB,wBAA0BqkB,EAAOrkB,wBACxCmkB,EAAOr2B,2BAA6Bu2B,EAAOv2B,2BAC3Cq2B,EAAOO,OAASL,EAAOK,OAEvBN,EAAQ12B,KAAO42B,EAAQ52B,KACvB02B,EAAQjkB,sBAAwBmkB,EAAQnkB,sBACxCikB,EAAQ/0B,yBAA2Bi1B,EAAQj1B,wBAC3C+0B,EAAQhkB,gBAAkBkkB,EAAQlkB,0B,+BAoFhC,IAAD,SAC4DnM,KAAKwY,MAAhEgX,EADD,EACCA,aAAckB,EADf,EACeA,aAAcC,EAD7B,EAC6BA,OAAQpB,EADrC,EACqCA,KAAMqB,EAD3C,EAC2CA,aAD3C,EAEsB5wB,KAAKkZ,MAAxBvgB,EAFH,EAEGA,KAAM+1B,EAFT,EAESA,SACd,IAAK/1B,EAAM,OAAO,KAHb,MAK0DqH,KAAKgvB,kBAAkBr2B,EAAM+1B,GALvF,mBAKEE,EALF,KAKaC,EALb,KAKuBI,EALvB,KAKoCC,EALpC,KAKkD7sB,EALlD,KAODwuB,EAAahC,EACbiC,EAAW,EACXjC,IACAiC,EAAW5B,GAAgB7sB,EAAO,KAAQA,EAAO6sB,GAAgB7sB,EAAQ,IAAM,GAGpDusB,IAAcC,IAEzC7uB,KAAKmvB,mBAAoB,EAEzB2B,EAAW7B,EAAc,IAAM,EAC/B4B,GAAa,EACbE,WAAW,WACP,EAAK5B,mBAAoB,EACpB,EAAKY,OAGV,EAAKjX,SAAS,CAAE4V,SAAU,QAC3BsC,MAGP,IAAMjuB,EAAQ,CACV4tB,OAAQA,EACRrlB,WAAakkB,GAAwC,qBAAjBA,EAAsC,sBAAP,MAuBvE,OAnBI72B,GACAA,EAAKgB,QACJhB,EAAKgB,MAAME,0BAA4BlB,EAAKe,SAAWf,EAAKgB,MAAMyB,0BAClE4E,KAAKmvB,oBACLN,EAiBG+B,EAEI,yBAAK/L,UAAWC,IAAW,gBAAiB,0BAA2B/hB,MAAOA,GACzE6tB,GAKN,KAGPC,GAAc7wB,KAAKmvB,kBAGf,yBAAKtK,UAAU,gBAAgB9hB,MAAOA,GAClC,kBAAC,IAAD,CACI8hB,UAAU,0BACVlL,QAAS,CAAEsX,OAAQ,wBACnBC,QAAQ,SACRtgB,MAAOkgB,EACPzuB,KAAM,GACN8uB,UAAW,IAEdT,GAAgB,kBAAC,IAAD,OAKzBnB,EAGI,yBAAK1K,UAAU,gBAAgB9hB,MAAOA,GACjCwsB,GAKN,Q,gDAvQqB/W,EAAOU,GAAQ,IACnCvgB,EAAS6f,EAAT7f,KACAy2B,EAAkBlW,EAAlBkW,cAER,OAAIz2B,GAAQy2B,GAAiBz2B,EAAKc,KAAO21B,EAAc31B,GAC5C,CACH21B,cAAez2B,EACf+1B,SAAU,KACV/1B,KAAMqL,IAAUlK,IAAInB,EAAKc,KAAOd,GAIjC,S,GAzBYuhB,IAAMC,YAoSjCmU,EAAalU,aAAe,CACxBsW,cAAc,EACdvtB,UAAU,EACV4rB,QAAQ,GAGGT,O,wLC/ST8C,EAAS,I,OAAIC,GACbC,EAAW,IAAIt5B,IAkBd,SAAeu5B,EAAtB,kC,2CAAO,WAA2BryB,GAA3B,eAAA1G,EAAA,4DACGqZ,ECtBF,IACA8S,KAAK6M,SACAC,SAAS,IACTC,MAAM,EAAG,IDkBf,kBAEI,IAAIpxB,QAAQ,SAACC,EAASC,GACzB8wB,EAAS54B,IAAImZ,EAAK,CAAEtR,UAASC,WAC7B4wB,EAAOO,YAAY,CAAE9f,MAAK3S,YAJ3B,0C,sBAhBPkyB,EAAOQ,UAAY,SAAAnwB,GAAU,IACjBH,EAASG,EAATH,KACR,GAAKA,EAAL,CAFwB,IAIhBuQ,EAA4BvQ,EAA5BuQ,IAAK3W,EAAuBoG,EAAvBpG,MAAO4F,EAAgBQ,EAAhBR,OAAQ+wB,EAAQvwB,EAARuwB,IAJJ,EAMIP,EAASx3B,IAAI+X,GAAjCtR,EANgB,EAMhBA,QAASC,EANO,EAMPA,OACjB8wB,EAASv3B,OAAO8X,GAEX3W,EAGDsF,EAAOqxB,GAFPtxB,EAAQO,K,2TEDhB,IAAMgxB,EAAS5X,IAAM6X,KAAK,kBAAM,sDAEnBrI,EAAoBe,OAAOC,OAAO,CAC3CsH,MAAO,QACPrI,QAAS,UACTsI,cAAe,gBACfC,OAAQ,SACRC,QAAS,UACTC,YAAa,cACbC,QAAS,YAGP5I,E,YACF,WAAYjR,GAAQ,IAAD,8BACf,4CAAMA,KA0FV8Z,iCAAmC,SAAA/5B,GAC/B,EAAKg6B,OAAS9a,QAAQ+a,IAAiBC,cAEvC,EAAKC,sBA9FU,EAiGnBC,2BAA6B,SAAAp6B,GACzB,EAAKq6B,aAAeC,IAAiBD,aAErC,EAAKF,sBApGU,EAuGnBI,iCAAmC,SAAAv6B,GAC/B,EAAKw6B,gBAAkBtb,QAAQob,IAAiBG,oBAEhD,EAAKN,sBA1GU,EA6GnBO,wCAA0C,SAAA16B,GACtC,EAAK26B,uBAAyBzb,QAAQob,IAAiBM,2BAEvD,EAAKT,sBAhHU,EAmHnBU,6BAA+B,SAAA76B,GAC3B,EAAK86B,eAAiB96B,EAAO6D,QAE7B,EAAKs2B,sBAtHU,EAyHnBY,6BAA+B,SAAA/6B,GAAW,IAAD,EACP,EAAKigB,MAA3B7b,EAD6B,EAC7BA,OAAQE,EADqB,EACrBA,UACVgV,EAAG,UAAMlV,EAAN,YAAgBE,GAEzB,EAAK02B,OAASh7B,EAAOoL,SAAS/J,IAAIiY,GAElC,EAAK6gB,sBA/HU,EAkInBc,yBAA2B,SAAAj7B,GAAW,IAC1B4S,EAAe5S,EAAf4S,WAER,EAAKsoB,iBAAmBtoB,EAExB,EAAKunB,sBAvIU,EA0InBgB,0BAA4B,SAAAn7B,GAAW,IAC3Bo7B,EAAYp7B,EAAZo7B,QAD0B,EAEK,EAAKnb,MAApC7b,EAF0B,EAE1BA,OAAQE,EAFkB,EAElBA,UAAWT,EAFO,EAEPA,QAERgqB,YAAuBhqB,EAASO,EAAQE,KAG3D,EAAK+2B,cAAgBD,EACrB,EAAKjB,uBAlJU,EAgMnBmB,0BAA4B,SAAAt7B,GAAW,IAAD,EACD,EAAKigB,MAAMpc,QAApCA,EAD0B,EAC1BA,QAASqP,EADiB,EACjBA,YACT1M,EAAWxG,EAAXwG,OAEH3C,GAEDA,EAAQ3C,KAAOsF,IACX0M,EACA,EAAKqoB,cAEL,EAAKC,gBA1ME,EA+MnBC,mCAAqC,SAAAz7B,GAAW,IACpCuE,EAAc,EAAK0b,MAAMpc,QAAzBU,UACR,GAAKA,EAAL,CAF2C,IAInCiC,EAAWxG,EAAXwG,OAEJjC,EAAUd,OAASc,EAAUd,MAAMvC,KAAOsF,GAC1C,EAAKg1B,gBAtNM,EA0NnBD,YA1NmB,qBA0NL,kDAAAt7B,EAAA,0DACqD,EAAKggB,MAA5D7b,EADE,EACFA,OAAQE,EADN,EACMA,UAAoBE,EAD1B,EACiBX,QAAiB63B,EADlC,EACkCA,SAAUC,EAD5C,EAC4CA,KAC9CzoB,EAAyB1O,EAAzB0O,YAAarP,EAAYW,EAAZX,QACf+3B,EAAa/N,YAAuBrpB,EAAQJ,EAAQE,GAErD4O,EALK,oDAML0oB,EANK,oDAOLD,EAPK,oDASJh1B,EAAOF,YAAQ5C,GATX,0DAYNg4B,EAAgB,KAZV,oBAmBe7C,EAAYryB,GAnB3B,WAmBA4B,EAnBA,0DAsBNszB,EAAgB7lB,KAAKC,MAAM1N,GAtBrB,mDAyBN7F,QAAQoF,IAAI,8BAAZ,MAzBM,WA2BL+zB,EA3BK,mDA6BNH,EACA,EAAKnb,SAAS,CAAEsb,kBAEhB,EAAKA,cAAgBA,EAhCf,yDA1NK,EA8PnBC,iBAAmB,SAAA5yB,GAAU,IACjB2yB,EADgB,eAChBA,cAEJA,GACA,EAAKtb,SAAS,CAAEsb,iBAAiB,WAC7B,EAAKE,+BAnQE,EAwQnBA,0BAA4B,WAEpB,EAAK9b,MAAMyb,WAEf,EAAKM,SAAU,EAEA,EAAKC,UAAUxX,UAI9B,EAAKyX,UAAY,EACjB,EAAK/B,wBAnRU,EAsRnBgC,4BAA8B,WACtB,EAAKlc,MAAMyb,UAEA,EAAKO,UAAUxX,UAGzB,EAAKuX,UAAS,EAAKE,WAAa,GACjC,EAAKA,UAAY,GACS,EAAKvb,MAAvBkb,eAEJ,EAAKtb,SAAS,CAAEsb,cAAe,SAhSxB,EAqSnBO,wBAA0B,WACtB,EAAKJ,SAAU,GAnSf,EAAKC,UAAYta,IAAM0a,YACvB,EAAKhB,cAAgBlzB,OAAOm0B,SAC5B,EAAKtB,QAAS,EACd,EAAKF,eAAiByB,IAAazB,eACnC,EAAKN,gBAAkBtb,QAAQob,IAAiBG,oBAChD,EAAKE,uBAAyBzb,QAAQob,IAAiBM,2BACvD,EAAKZ,OAAS9a,QAAQ+a,IAAiBC,cACvC,EAAKG,aAAeC,IAAiBD,aAErC,EAAK1Z,MAAQ,CACT6b,cAAe,KACfC,UAAU,GAdC,E,+EAsBD95B,EAAO+5B,GACrBh6B,QAAQoF,IAAI,yBAA0BnF,EAAO+5B,K,4CAG3B5F,EAAWC,EAAW4F,GAAc,IAAD,EACKl1B,KAAKwY,MAAvD7b,EAD6C,EAC7CA,OAAQE,EADqC,EACrCA,UAAWT,EAD0B,EAC1BA,QAAS+4B,EADiB,EACjBA,KAAM7uB,EADW,EACXA,YAG1C,OAF0BtG,KAAKkZ,MAAvBkb,gBAEc9E,EAAU8E,gBAI5Bz3B,IAAW0yB,EAAU1yB,SAIrBE,IAAcwyB,EAAUxyB,YAIxBT,IAAYizB,EAAUjzB,UAItB+4B,IAAS9F,EAAU8F,MAInB7uB,IAAgB+oB,EAAU/oB,kB,yCAOf8uB,EAAWC,EAAWC,GACjCF,EAAUh5B,UAAY4D,KAAKwY,MAAMpc,SACjC4D,KAAK8zB,gB,0CAKT9zB,KAAK8zB,cAELjB,IAAiB55B,GAAG,2BAA4B+G,KAAK2yB,4BACrDE,IAAiB55B,GAAG,0BAA2B+G,KAAK0zB,2BACpDb,IAAiB55B,GAAG,iCAAkC+G,KAAK8yB,kCAC3DD,IAAiB55B,GAAG,wCAAyC+G,KAAKizB,yCAClET,IAAiBv5B,GAAG,iCAAkC+G,KAAKsyB,kCAC3DtuB,IAAU/K,GAAG,mCAAoC+G,KAAKg0B,oCACtDhwB,IAAU/K,GAAG,0BAA2B+G,KAAK6zB,2BAC7ChwB,IAAa5K,GAAG,6BAA8B+G,KAAKszB,8BACnDwB,IAAa77B,GAAG,6BAA8B+G,KAAKozB,8BACnD0B,IAAa77B,GAAG,yBAA0B+G,KAAKwzB,4B,6CAI/CX,IAAiB15B,IAAI,2BAA4B6G,KAAK2yB,4BACtDE,IAAiB15B,IAAI,0BAA2B6G,KAAK0zB,2BACrDb,IAAiB15B,IAAI,iCAAkC6G,KAAK8yB,kCAC5DD,IAAiB15B,IAAI,wCAAyC6G,KAAKizB,yCACnET,IAAiBr5B,IAAI,iCAAkC6G,KAAKsyB,kCAC5DtuB,IAAU7K,IAAI,mCAAoC6G,KAAKg0B,oCACvDhwB,IAAU7K,IAAI,0BAA2B6G,KAAK6zB,2BAC9ChwB,IAAa1K,IAAI,6BAA8B6G,KAAKszB,8BACpDwB,IAAa37B,IAAI,6BAA8B6G,KAAKozB,8BACpD0B,IAAa37B,IAAI,yBAA0B6G,KAAKwzB,4B,2CA6D9B,IACVS,EAAaj0B,KAAKwY,MAAlByb,SAEFzH,EAASxsB,KAAKw0B,UAAUxX,QAC9B,GAAKwP,EAAL,CAEA,GACIxsB,KAAK4zB,gBACJ5zB,KAAKqzB,iBACLrzB,KAAK+yB,kBACL/yB,KAAKkzB,yBACLlzB,KAAKuyB,SACLvyB,KAAK4yB,aACR,CACE,GAAI5yB,KAAKu0B,QAIL,OAFA/H,EAAO0H,YACPl0B,KAAKu1B,OAAQ,GAKjB,IAAKv1B,KAAKyzB,iBAAkB,CACxB,GAAIzzB,KAAKw1B,OAIL,OAFAhJ,EAAO0H,YACPl0B,KAAKw1B,QAAS,GAIlB,GAAIvB,GAAYj0B,KAAKuzB,OAIjB,OAFA/G,EAAO0H,YACPl0B,KAAKw1B,QAAS,IAO1Bx1B,KAAKw1B,OAAShJ,EAAO+I,W,+BA4Gf,IAAD,EAYDv1B,KAAKwY,MAVL7b,EAFC,EAEDA,OACAE,EAHC,EAGDA,UACAo3B,EAJC,EAIDA,SACApP,EALC,EAKDA,UACAve,EANC,EAMDA,YACA6uB,EAPC,EAODA,KACSp4B,EARR,EAQDX,QACA2G,EATC,EASDA,MACAsc,EAVC,EAUDA,UACAoW,EAXC,EAWDA,QAEI34B,EAAsCC,EAAtCD,UAAWV,EAA2BW,EAA3BX,QAASqJ,EAAkB1I,EAAlB0I,MAAOC,EAAW3I,EAAX2I,OAb9B,EAc+B1F,KAAKkZ,MAAjCkb,EAdH,EAcGA,cAAeY,EAdlB,EAckBA,SAEjBb,EAAa/N,YAAuBrpB,EAAQJ,EAAQE,GAEpD2yB,EAAe3jB,YAAO/O,EAAYA,EAAUd,MAAQ,MACpD05B,EAAM7pB,YAAOzP,GACbu5B,EAAYrP,YAAmBxpB,GAErC,GAAIk4B,EAAU,CACV,IAAMjyB,EAAQ,CACV0C,MAAOa,EACPZ,OAAQY,GAOZ,OACI,yBAAKue,UAAWC,IAAW,UAAWD,GAAY9hB,MAAOA,EAAOqW,QAASiG,GACrE,yBACIwF,UAAWC,IAAW,gBAAiB,CAAE,gBAAiB6Q,GAAaR,IACvES,WAAW,EACXF,IAAKlG,EACLqG,IAAI,MAMpB,IAAIh6B,EAAU,KACRqoB,EAAUC,YAAW,CAAE1e,MAAOA,EAAOC,OAAQA,GAAUY,GACzD4d,IACAroB,EAAUs4B,EACN,oCACKC,EACG,kBAAC,IAAM0B,SAAP,CAAgBC,SAAU,MACtB,kBAACjE,EAAD,CACIkE,IAAKh2B,KAAKw0B,UACVhR,QAAS,CACLyQ,SAAUA,EACVgC,MAAM,EACN7B,gBACA8B,SAAU,MACVC,iBAAkB,CACdC,oBAAqB,iBACrBC,aAAa,EACbC,iBAAiB,EACjBC,mBAAmB,EACnB1R,UAAW,eAGnB2R,eAAgB,CACZ,CACIC,UAAW,eACX12B,SAAUC,KAAK00B,8BAGvBgC,WAAY12B,KAAK20B,2BAIzB,yBACI9P,UAAWC,IAAW,gBAAiB,CAAE,gBAAiB6Q,GAAaR,IACvES,WAAW,EACXF,IAAKlG,EACLqG,IAAI,MAKhB,oCACKH,IAAQD,EACL,yBAAK5Q,UAAU,gBAAgB+Q,WAAW,EAAOF,IAAKA,EAAKG,IAAI,KAE/D,yBACIhR,UAAWC,IAAW,gBAAiB,CAAE,gBAAiB6Q,GAAaR,IACvES,WAAW,EACXF,IAAKlG,EACLqG,IAAI,OAOxB,IAAMc,E,qVAAY,EACdlxB,MAAOye,EAAUA,EAAQze,MAAQ,EACjCC,OAAQwe,EAAUA,EAAQxe,OAAS,GAChC3C,GAGP,OACI,yBACI8hB,UAAWC,IAAW,UAAWD,GACjC9hB,MAAO4zB,EACPvd,QAASiG,EACTuX,aAAc52B,KAAKq0B,kBAClBx4B,M,gDAvYmBX,GAC5B,MAAO,CAAE85B,UAAU,O,GApBL9a,IAAMC,WA8a5BsP,EAAQrP,aAAe,CACnBzd,OAAQ,EACRE,UAAW,EACXwiB,UAAW,aAEX4U,UAAU,EACVC,MAAM,EACNiB,MAAM,EACN7uB,YAAauwB,KACbpB,SAAS,EACT14B,OAAQ2sB,EAAkB2I,SAGf5I,O,sFClWThyB,EAAQ,I,YAlHV,aAAe,IAAD,8BACV,+CAOJC,MAAQ,WACJ,EAAKyT,WAAa,KAClB,EAAK2rB,KAAO,KACZ,EAAK1C,cAAgB,IAAIt8B,SAXf,EAcdQ,SAAW,SAAAC,GACP,OAAQA,EAAO,UACX,IAAK,2BAA6B,IACtBa,EAAwBb,EAAxBa,oBACR,IAAKA,EAAqB,MAE1B,OAAQA,EAAoB,UACxB,IAAK,2BACD,EAAK1B,QAKb,MAEJ,IAAK,6BAA+B,IACxBq/B,EAAoBx+B,EAApBw+B,gBACR,GAAI,EAAK5rB,WAAY,CAAC,IAAD,EACY,EAAKA,WAA1B1R,EADS,EACTA,GAAIu9B,EADK,EACLA,aACRA,IAAiBD,EAAgBn1B,KAAK,SAAAC,GAAC,OAAIA,IAAMpI,MACjD,EAAK0R,WAAasf,OAAOwM,OAAO,GAAI,EAAK9rB,WAAY,CAAE6rB,cAAeA,KAI9E,EAAKn+B,KAAK,6BAA8BN,GACxC,MAEJ,IAAK,uBACD,EAAKM,KAAK,uBAAwBN,KA1ChC,EAkDdO,eAAiB,SAAAP,GACb,OAAQA,EAAO,UACX,IAAK,0BACD,EAAKM,KAAK,0BAA2BN,GACrC,MAEJ,IAAK,gCAAkC,IAC3Bu+B,EAASv+B,EAATu+B,KAER,EAAKA,KAAOA,EAEZ,EAAKj+B,KAAK,gCAAiCN,GAC3C,MAEJ,IAAK,iCAAmC,IAC5Bu+B,EAASv+B,EAATu+B,KAEJ,EAAKA,MAAQ,EAAKA,KAAKjL,YAAciL,EAAKjL,YAC1C,EAAKiL,KAAOrM,OAAOwM,OAAO,GAAI,EAAKH,KAAM,CAAEI,cAAeJ,EAAK7rB,YAGnE,EAAKpS,KAAK,iCAAkCN,GAC5C,MAEJ,IAAK,yBAA2B,IACpB4S,EAAe5S,EAAf4S,WAER,EAAKA,WAAaA,EAElB,EAAKtS,KAAK,yBAA0BN,GACpC,MAEJ,IAAK,iCACD,EAAKM,KAAK,iCAAkCN,GAC5C,MAEJ,IAAK,6BACD,EAAKM,KAAK,6BAA8BN,KAvFtC,EA+FdQ,iBAAmB,WACfC,IAAgBC,GAAG,SAAU,EAAKX,UAClCU,IAAgBC,GAAG,eAAgB,EAAKH,iBAjG9B,EAoGdI,oBAAsB,WAClBF,IAAgBG,IAAI,SAAU,EAAKb,UACnCU,IAAgBG,IAAI,eAAgB,EAAKL,iBAnGzC,EAAKpB,QAEL,EAAKqB,mBALK,E,8EAyGG8Y,GACb,OAAO7R,KAAKo0B,cAAct6B,IAAI+X,K,uCAGjBA,EAAKvQ,GAClBtB,KAAKo0B,cAAc17B,IAAImZ,EAAKvQ,O,GA/GTa,MAoH3BzB,OAAOtE,QAAU3E,EACFA,O,sFCzCTA,EAAQ,I,YA1EV,aAAe,IAAD,8BACV,+CAOJC,MAAQ,WACJ,EAAKO,MAAQ,IAAID,IACjB,EAAKm/B,cAAgB,IAAIn/B,KAVf,EAadM,SAAW,SAAAC,GACP,OAAQA,EAAO,UACX,IAAK,2BAA6B,IACtBa,EAAwBb,EAAxBa,oBACR,IAAKA,EAAqB,MAE1B,OAAQA,EAAoB,UACxB,IAAK,2BACD,EAAK1B,QAKb,MAEJ,IAAK,mBACD,EAAKgB,IAAIH,EAAO6+B,aAEhB,EAAKv+B,KAAKN,EAAO,SAAUA,GAC3B,MAEJ,IAAK,2BACD,EAAK8+B,YAAY9+B,EAAOwb,eAAgBxb,EAAO++B,uBAE/C,EAAKz+B,KAAKN,EAAO,SAAUA,KArCzB,EA6CdO,eAAiB,SAAAP,KA7CH,EA+CdQ,iBAAmB,WACfC,IAAgBC,GAAG,SAAU,EAAKX,UAClCU,IAAgBC,GAAG,eAAgB,EAAKH,iBAjD9B,EAoDdI,oBAAsB,WAClBF,IAAgBG,IAAI,SAAU,EAAKb,UACnCU,IAAgBG,IAAI,eAAgB,EAAKL,iBAnDzC,EAAKpB,QAEL,EAAKqB,mBALK,E,iEAyDVw+B,GACA,OAAOv3B,KAAK/H,MAAM6B,IAAIy9B,K,0BAGtBC,GACAx3B,KAAK/H,MAAMS,IAAI8+B,EAAM/9B,GAAI+9B,K,kCAGjB/9B,GACR,OAAOuG,KAAKm3B,cAAcr9B,IAAIL,K,kCAGtBA,EAAImb,GACZ5U,KAAKm3B,cAAcz+B,IAAIe,EAAImb,O,GAvELzS,MA4E9BzB,OAAO+2B,WAAahgC,EACLA,O,yLCpET8tB,E,YACF,WAAY/M,GAAQ,IAAD,8BACf,4CAAMA,KAwCVkf,uBAAyB,SAAAn/B,GACF,EAAKigB,MAAhBtW,SAEO3J,EAAO2J,SAElB,EAAKgX,MAAMye,OACX,EAAK7e,SAAS,CAAE6e,QAAQ,IAExB,EAAK5D,gBAjDM,EAqDnB6D,uBAAyB,SAAAr/B,GAAW,IACxB2J,EAAW,EAAKsW,MAAhBtW,OACAvF,EAAWpE,EAAXoE,OAEFtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,GAAKtB,GACAA,EAAKmN,KAEV,OAAQnN,EAAKmN,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAEJ,IAAK,kBACL,IAAK,iBACD,GAAInN,EAAKmN,KAAKrD,UAAYjD,EAAQ,OAE9B,EAAKgX,MAAMye,OACX,EAAK7e,SAAS,CAAE6e,QAAQ,IAExB,EAAK5D,gBAzEF,EA+EnB8D,kBAAoB,SAAAt/B,GAAW,IACnB2J,EAAW,EAAKsW,MAAhBtW,OACAtF,EAAmBrE,EAAnBqE,QAASZ,EAAUzD,EAAVyD,MAEXX,EAAO0O,IAAUjQ,IAAI8C,GAC3B,GAAKvB,GACAA,EAAKmN,KAEV,OAAQnN,EAAKmN,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAEJ,IAAK,kBACL,IAAK,iBACD,GAAInN,EAAKmN,KAAKrD,UAAYjD,EAAQ,OAQlC,GANI,EAAKgX,MAAMye,OACX,EAAK7e,SAAS,CAAE6e,QAAQ,IAExB,EAAK5D,cAGL/3B,EAAO,CACP,IAAMvE,EAAQuM,IAAUhK,WACxByQ,YAAgBhT,EAAO4D,MAxGpB,EA8GnBy8B,kBAAoB,SAAAv/B,GAAW,IACnB2J,EAAW,EAAKsW,MAAhBtW,OAEF7G,EAAO0O,IAAUjQ,IAAIvB,EAAOqE,SAClC,GAAKvB,GACAA,EAAKmN,KAEV,OAAQnN,EAAKmN,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAEJ,IAAK,kBACL,IAAK,iBACD,GAAInN,EAAKmN,KAAKrD,UAAYjD,IAAW7G,EAAKW,MAAO,OAEjD,EAAK+3B,gBA9HE,EAmInBgE,aAAe,SAAAt2B,GAAU,IAAD,EACS,EAAK+W,MAA1BtW,EADY,EACZA,OAAQ81B,EADI,EACJA,SACXA,IAELv2B,EAAMiX,kBACNsf,EAAS91B,KAxIM,EA2InB+1B,WAAa,WACT,EAAKnf,SAAS,CAAE6e,QAAQ,KAnIpB,EAAKze,MAAQ,CACTye,QAAQ,GAVD,E,mFAeGtI,EAAWC,GAC7B,OAAID,EAAUntB,SAAWlC,KAAKwY,MAAMtW,QAIhCotB,EAAUqI,SAAW33B,KAAKkZ,MAAMye,S,0CAQpC3zB,IAAU/K,GAAG,uBAAwB+G,KAAK03B,wBAC1C1zB,IAAU/K,GAAG,uBAAwB+G,KAAK43B,wBAC1C7tB,IAAU9Q,GAAG,kBAAmB+G,KAAK63B,mBACrC9tB,IAAU9Q,GAAG,kBAAmB+G,KAAK83B,qB,6CAIrC9zB,IAAU7K,IAAI,uBAAwB6G,KAAK03B,wBAC3C1zB,IAAU7K,IAAI,uBAAwB6G,KAAK43B,wBAC3C7tB,IAAU5Q,IAAI,kBAAmB6G,KAAK63B,mBACtC9tB,IAAU5Q,IAAI,kBAAmB6G,KAAK83B,qB,+BAyGhC,IAAD,EAC+E93B,KAAKwY,MAAjFqM,EADH,EACGA,UAAW3iB,EADd,EACcA,OAAQg2B,EADtB,EACsBA,SAAUzS,EADhC,EACgCA,SAAUuS,EAD1C,EAC0CA,SAAU9tB,EADpD,EACoDA,MAAOiuB,EAD3D,EAC2DA,OAAQ/a,EADnE,EACmEA,KAAMnP,EADzE,EACyEA,EACtE0pB,EAAW33B,KAAKkZ,MAAhBye,OAEFj8B,EAAO0J,IAAUtL,IAAIoI,GAC3B,IAAKxG,IAAUw8B,IAAYzS,EAAW,OAAO,KAE7C,GAAI4I,YAAcnsB,GACd,OACI,yBACI2iB,UAAWC,IACPD,EACA,YACA,eACA,CAAEuT,QAASJ,GACX,CAAE,cAAeG,GACjB,CAAE,aAAcjuB,GAChB,CAAE,YAAakT,IAEnBhE,QAASpZ,KAAK+3B,cACd,yBAAKlT,UAAU,cACX,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAoBK,SAAS,eAOjD,IAAM9P,EAAUsY,YAAexrB,EAAQg2B,EAAUzS,EAAUxX,GACrDynB,EAAM7pB,YAAOnQ,GAAQA,EAAK6O,cAAgB7O,EAAK6O,cAAcL,MAAQ,MACrEmuB,EAAa3C,GAAOiC,EAEpBW,EAAS,qBAAkB3T,KAAK4T,IAAIr2B,GAAU,EAAK,GAEzD,OACI,yBACI2iB,UAAWC,IACPD,EACA,YAFiB,eAGdyT,GAAaD,GAChB,CAAED,QAASJ,GACX,CAAE,cAAeG,GACjB,CAAE,aAAcjuB,GAChB,CAAE,YAAakT,IAEnBhE,QAASpZ,KAAK+3B,eACZM,GACE,yBAAKxT,UAAU,cACX,0BAAMA,UAAU,aAAazP,IAGpCsgB,GAAO,yBAAK7Q,UAAU,aAAa6Q,IAAKA,EAAK8C,OAAQx4B,KAAKi4B,WAAYrC,WAAW,EAAOC,IAAI,U,GApMtF1b,aAkNRE,kBAAkBkL,I,4YCnN3BM,E,YACF,WAAYrN,GAAQ,IAAD,8BACf,4CAAMA,KA2BVigB,wBAA0B,SAAAlgC,GAAW,IAAD,EACC,EAAK2gB,MAA9Bhb,EADwB,EACxBA,UAAWwI,EADa,EACbA,UACX3H,EAAWxG,EAAXwG,OAEJb,GAAaA,EAAUlC,OAASkC,EAAUlC,MAAMvC,KAAOsF,EACvD,EAAKg1B,cACErtB,GAAaA,EAAU1K,OAAS0K,EAAU1K,MAAMvC,KAAOsF,GAC9D,EAAKg1B,eAhCT,EAAK7a,MAAQ,GAHE,E,iFAqBflV,IAAU/K,GAAG,wBAAyB+G,KAAKy4B,2B,6CAI3Cz0B,IAAU7K,IAAI,wBAAyB6G,KAAKy4B,2B,+BActC,IAAD,EACoFz4B,KAAKwY,MAAtFqM,EADH,EACGA,UAAWve,EADd,EACcA,YAAa+Y,EAD3B,EAC2BA,UAAWqZ,EADtC,EACsCA,aAAc1qB,EADpD,EACoDA,MAAOlB,EAD3D,EAC2DA,QAAStE,EADpE,EACoEA,KAAMzF,EAD1E,EAC0EA,MAD1E,EAE2C/C,KAAKkZ,MAA7CxS,EAFH,EAEGA,UAAWxI,EAFd,EAEcA,UAAWyhB,EAFzB,EAEyBA,cAE9B,IAAKzhB,EAAW,OAAO,KAEvB,IAAMy6B,EAAUhZ,EAAgB,2BAA6BA,EAAcre,KAAO,KAC5Es3B,EAAW/sB,YAAOnF,EAAYA,EAAU1K,MAAQ,MAChD05B,EAAM7pB,YAAO3N,EAAUlC,OACvB25B,GAAciD,GAAYD,GAAYrS,YAAmB5f,GAEzDkf,EAAezB,YAAWjmB,EAAWoI,GAAa,GACxD,IAAKsf,EAAc,OAAO,KAG1B,IAAMiT,E,qVAAU,EACZpzB,MAAOmgB,EAAangB,MACpBC,OAAQkgB,EAAalgB,QAClB3C,GAGD+1B,EAASrhB,QAAQie,GAAOkD,GAAYD,GAE1C,OACI,yBACI9T,UAAWC,IAAWD,EAAW,QAAS,CACtC,YAAsB,YAATrc,EACb,cAAewF,EACf,gBAAiBlB,EACjBsrB,QAAS/Y,IAEbtc,MAAO81B,EACPzf,QAASiG,GACRyZ,GACG,yBACIjU,UAAWC,IAAW,cAAe,CACjC,iBAAkB4Q,GAAOC,EACzB,sBAAuBD,IAAQkD,GAAYjD,IAE/CC,WAAW,EACXF,IAAKA,GAAOkD,GAAYD,EACxB9C,IAAI,KAGX6C,GAAgB,kBAAC,IAAD,CAAc//B,KAAMuF,EAAUlC,MAAOmH,UAAQ,EAAC4rB,QAAM,EAAC2B,cAAY,Q,gDA7E9DlY,EAAOU,GAAQ,IACnCld,EAA+Bwc,EAA/Bxc,MAAOqG,EAAwBmW,EAAxBnW,KAAM02B,EAAkBvgB,EAAlBugB,cACrB,OAAI/8B,IAAUkd,EAAM8f,UACT,CACHA,UAAWh9B,EACXkC,UAAWiI,YAAQnK,EAAMgC,MAAOqE,GAChCqE,UAAWP,YAAQnK,EAAMgC,MAAO+6B,GAChCpZ,cAAe3jB,EAAQA,EAAM2jB,cAAgB,MAI9C,S,GAlBKzF,IAAMC,WAuG1B0L,EAAMzL,aAAe,CACjB/X,KAAMkE,IACNwyB,cAAeE,IACf3yB,YAAa8d,IACbsU,cAAc,GAGH7S,O,8BClHf,IAAM1S,EAAc,WAChB,IAAM+lB,EAAQ,mEACRC,EAAW,uIACXC,EAAe,cAGrB,OAAO,SAASrmB,EAAMsmB,EAAMC,EAAKC,GAa7B,GAXyB,IAArBC,UAAUv7B,QAAiC,WAAjBw7B,EAAO1mB,IAAuB,KAAK2mB,KAAK3mB,KAClEsmB,EAAOtmB,EACPA,OAAO4mB,IAGX5mB,EAAOA,GAAQ,IAAIC,gBAEGA,OAClBD,EAAO,IAAIC,KAAKD,IAGhB6mB,MAAM7mB,GACN,MAAM8mB,UAAU,gBAMpB,IAAIC,GAHJT,EAAOU,OAAO5mB,EAAW6mB,MAAMX,IAASA,GAAQlmB,EAAW6mB,MAAX,UAG3BtI,MAAM,EAAG,GACZ,SAAdoI,GAAsC,SAAdA,IACxBT,EAAOA,EAAK3H,MAAM,GAClB4H,GAAM,EACY,SAAdQ,IACAP,GAAM,IAId,IAAIU,EAAIX,EAAM,SAAW,MACrBld,EAAIrJ,EAAKknB,EAAI,UACbC,EAAInnB,EAAKknB,EAAI,SACbla,EAAIhN,EAAKknB,EAAI,WACbE,EAAIpnB,EAAKknB,EAAI,cACbG,EAAIrnB,EAAKknB,EAAI,WACbI,EAAItnB,EAAKknB,EAAI,aACbK,EAAIvnB,EAAKknB,EAAI,aACbM,EAAIxnB,EAAKknB,EAAI,kBACbO,EAAIlB,EAAM,EAAIvmB,EAAK0nB,oBACnBC,EAAIC,EAAQ5nB,GACZ6nB,EAAIC,EAAa9nB,GACjB+nB,EAAQ,CACR1e,EAAGA,EACH2e,GAAIC,EAAI5e,GACR6e,IAAK9nB,EAAW+nB,KAAKC,SAASjB,GAC9BkB,KAAMjoB,EAAW+nB,KAAKC,SAASjB,EAAI,GACnCna,EAAGA,EAAI,EACPsb,GAAIL,EAAIjb,EAAI,GACZub,IAAKnoB,EAAW+nB,KAAKK,WAAWxb,GAChCyb,KAAMroB,EAAW+nB,KAAKK,WAAWxb,EAAI,IACrC0b,GAAI1B,OAAOI,GAAGzI,MAAM,GACpBgK,KAAMvB,EACNwB,EAAGvB,EAAI,IAAM,GACbwB,GAAIZ,EAAIZ,EAAI,IAAM,IAClBA,EAAGA,EACHyB,GAAIb,EAAIZ,GACRC,EAAGA,EACHyB,GAAId,EAAIX,GACRC,EAAGA,EACHyB,GAAIf,EAAIV,GACR0B,EAAGhB,EAAIT,EAAG,GACVA,EAAGS,EAAIrW,KAAKsX,MAAM1B,EAAI,KACtBtsB,EAAGmsB,EAAI,GAAKjnB,EAAW+nB,KAAKgB,UAAU,GAAK/oB,EAAW+nB,KAAKgB,UAAU,GACrEC,GAAI/B,EAAI,GAAKjnB,EAAW+nB,KAAKgB,UAAU,GAAK/oB,EAAW+nB,KAAKgB,UAAU,GACtEE,EAAGhC,EAAI,GAAKjnB,EAAW+nB,KAAKgB,UAAU,GAAK/oB,EAAW+nB,KAAKgB,UAAU,GACrEG,GAAIjC,EAAI,GAAKjnB,EAAW+nB,KAAKgB,UAAU,GAAK/oB,EAAW+nB,KAAKgB,UAAU,GACtEI,EAAG/C,EAAM,MAAQD,EAAM,OAASS,OAAOhnB,GAAMwpB,MAAMpD,IAAa,CAAC,KAAK5sB,MAAM0V,QAAQmX,EAAc,IAClGoB,GAAIA,EAAI,EAAI,IAAM,KAAOQ,EAAmC,IAA/BrW,KAAKC,MAAMD,KAAK4T,IAAIiC,GAAK,IAAa7V,KAAK4T,IAAIiC,GAAK,GAAK,GACtFgC,EAAG,CAAC,KAAM,KAAM,KAAM,MAAMpgB,EAAI,GAAK,EAAI,GAAOA,EAAI,IAAQA,EAAI,IAAO,IAAMA,EAAK,IAClFse,EAAGA,EACHE,EAAGA,GAGP,OAAOvB,EAAKpX,QAAQiX,EAAO,SAASqD,GAChC,OAAIA,KAASzB,EACFA,EAAMyB,GAEVA,EAAM7K,MAAM,EAAG6K,EAAMt+B,OAAS,MAnF7B,GAuJpB,SAAS+8B,EAAIyB,EAAKC,GAGd,IAFAD,EAAM1C,OAAO0C,GACbC,EAAMA,GAAO,EACND,EAAIx+B,OAASy+B,GAChBD,EAAM,IAAMA,EAEhB,OAAOA,EAWX,SAAS9B,EAAQ5nB,GAEb,IAAI4pB,EAAiB,IAAI3pB,KAAKD,EAAK6pB,cAAe7pB,EAAK8pB,WAAY9pB,EAAKS,WAGxEmpB,EAAelpB,QAAQkpB,EAAenpB,WAAcmpB,EAAerpB,SAAW,GAAK,EAAK,GAGxF,IAAIwpB,EAAgB,IAAI9pB,KAAK2pB,EAAeC,cAAe,EAAG,GAG9DE,EAAcrpB,QAAQqpB,EAActpB,WAAcspB,EAAcxpB,SAAW,GAAK,EAAK,GAGrF,IAAIypB,EAAKJ,EAAelC,oBAAsBqC,EAAcrC,oBAC5DkC,EAAezpB,SAASypB,EAAeK,WAAaD,GAGpD,IAAIE,GAAYN,EAAiBG,GAAlB,OACf,OAAO,EAAInY,KAAKC,MAAMqY,GAU1B,SAASpC,EAAa9nB,GAClB,IAAImqB,EAAMnqB,EAAKO,SAIf,OAHY,IAAR4pB,IACAA,EAAM,GAEHA,EAQX,SAASzD,EAAOgD,GACZ,OAAY,OAARA,EACO,YAGC9C,IAAR8C,EACO,YAGQ,kBAARA,SACOA,EAGdU,MAAMC,QAAQX,GACP,QAGJ,GAAGhL,SACL4L,KAAKZ,GACL/K,MAAM,GAAI,GACV9lB,cA9ITuH,EAAW6mB,MAAQ,CACfsD,QAAS,2BACTC,UAAW,SACXC,WAAY,cACZC,SAAU,eACVC,SAAU,qBACVC,UAAW,UACXC,WAAY,aACZC,SAAU,eACVC,QAAS,aACTC,QAAS,WACTC,YAAa,yBACbC,eAAgB,+BAChBC,oBAAqB,+BAIzB/qB,EAAW+nB,KAAO,CACdC,SAAU,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,SACA,SACA,UACA,YACA,WACA,SACA,YAEJI,WAAY,CACR,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEJW,UAAW,CAAC,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,OAqFvC/oB,O,wNCjOT2I,E,YACF,WAAYtD,GAAQ,IAAD,8BACf,4CAAMA,KAsBVC,YAAc,SAAAhX,GACVA,EAAMkX,iBACNlX,EAAMiX,kBAEN,EAAKI,SAAS,CAAEqlB,SAAS,KA3BV,EA8BnBllB,kBAAoB,SAAAxX,GAChBA,EAAMkX,iBACNlX,EAAMiX,mBAhCS,EAmCnBM,YAAc,WACV,EAAKF,SAAS,CAAEqlB,SAAS,KApCV,EAuCnBC,WAAa,SAAA38B,GACT,EAAKuX,cADa,MAGO,EAAKR,MAAtB9Y,EAHU,EAGVA,IAAK0Z,EAHK,EAGLA,QACb,GAAK1Z,EAEL,GAAI0Z,EACAA,EAAQ3X,OACL,CACH,IAAM48B,EAAY39B,OAAOE,OACzBy9B,EAAUC,OAAS,KACnBD,EAAUliC,SAAWuD,IAlDV,EAiEnB6+B,gBAjEmB,sCAiED,WAAM98B,GAAN,yBAAAjJ,EAAA,wDACdiJ,EAAMiX,kBADQ,EAGiB,EAAKF,MAA5BY,EAHM,EAGNA,QAAcnW,EAHR,EAGGvD,KAEb,EAAK8+B,eAAev7B,GALV,wBAMVxB,EAAMkX,iBANI,kBAQwB3f,IAAgBmI,KAAK,CAC/C,QAAS,qBACTzB,IAAKuD,IAVH,UAQAw7B,EARA,OAaN56B,IAAaC,SAAS,CAAC26B,EAAgB7iC,UAE/BgB,EAAqB6hC,EAArB7hC,QAAShB,EAAY6iC,EAAZ7iC,SACbgB,EAhBE,wBAiBFmc,YAASnc,EAAShB,EAAUA,EAAQnC,GAAK,MAjBvC,6EAqBNwB,QAAQoF,IAAI,mCAAZ,MArBM,QAwBN+Y,GACAA,EAAQ3X,GAzBF,QA6BV2X,IACA3X,EAAMkX,iBACNS,EAAQ3X,IA/BE,wDAjEC,sDAGf,EAAKyX,MAAQ,GAHE,E,4EAsDJxZ,GACX,IAAKA,EAAK,OAAO,EAEjB,IAAMg/B,EAAeh/B,EAChBkM,cACAqW,QAAQ,WAAY,IACpBA,QAAQ,UAAW,IAExB,OAAOyc,EAAatU,WAAW,SAAWsU,EAAatU,WAAW,W,+BAsC5D,IAAD,EACmCpqB,KAAKwY,MAArCqM,EADH,EACGA,UAAW1L,EADd,EACcA,SAAUlL,EADxB,EACwBA,EAAGvO,EAD3B,EAC2BA,IAD3B,EAEuCM,KAAKkZ,MAAzCilB,EAFH,EAEGA,QAASQ,EAFZ,EAEYA,WAAY17B,EAFxB,EAEwBA,KAAM27B,EAF9B,EAE8BA,KAEnC,OAAKl/B,GACAi/B,EAGD,oCACKC,EACG,uBACI/Z,UAAWA,EACX5hB,KAAMA,EACN+K,MAAO2wB,EACPj9B,OAAO,SACPma,IAAI,sBACJzC,QAASpZ,KAAKu+B,iBACbplB,GAAYzZ,GAGjB,oCACI,uBAAGmlB,UAAWA,EAAW7W,MAAO2wB,EAAYvlB,QAASpZ,KAAKyY,aACrDU,GAAYzZ,GAEhBy+B,GACG,kBAAC,IAAD,CACI7kB,mBAAoB,EACpB1Y,KAAMu9B,EACN5kB,QAASvZ,KAAKgZ,YACdI,QAASpZ,KAAKiZ,kBACdO,kBAAgB,wBAChB,kBAAC,IAAD,CAAa/f,GAAG,wBAAwBwU,EAAE,YAC1C,kBAAC,IAAD,CAAe0L,QAAS,CAAEC,KAAM,2BAC5B,kBAAC,IAAD,kCAA0C+kB,KAE9C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQvlB,QAASpZ,KAAKgZ,aAAc/K,EAAE,WACtC,kBAAC,IAAD,CAAQmL,QAASpZ,KAAKo+B,WAAYpZ,MAAM,WACnC/W,EAAE,aAlClB,Q,gDAlGWuK,EAAOU,GAAQ,IACnC2lB,EAA2BrmB,EAA3BqmB,YAAaC,EAActmB,EAAdsmB,KAAMp/B,EAAQ8Y,EAAR9Y,IAE3B,OAAIwZ,EAAM6lB,UAAYr/B,GAAOwZ,EAAM8lB,kBAAoBH,EAC5C,CACHE,QAASr/B,EACTs/B,gBAAiBH,EACjBD,KAAMK,YAAUJ,EAAan/B,GAC7Bi/B,WAAY5c,YAAcriB,EAAKo/B,GAC/B77B,KAAMi8B,YAAQx/B,EAAKo/B,GACnBX,SAAS,GAIV,S,GArBQjkB,IAAMC,WA8JdE,kBAAkByB,I,sFCnE3BrkB,EAAQ,I,YAtGV,aAAe,IAAD,8BACV,+CAOJC,MAAQ,WACJ,EAAKO,MAAQ,IATH,EAYdK,SAAW,SAAAC,GACP,OAAQA,EAAO,UACX,IAAK,2BAA6B,IACtBa,EAAwBb,EAAxBa,oBACR,IAAKA,EAAqB,MAE1B,OAAQA,EAAoB,UACxB,IAAK,2BACD,EAAK1B,WApBX,EAgCdoB,eAAiB,SAAAP,GACb,OAAQA,EAAO,UACX,IAAK,2BACD,EAAKM,KAAK,2BAA4BN,GACtC,MAEJ,IAAK,iCAAmC,IAC5BsD,EAAYtD,EAAZsD,QAEJA,EACA,EAAK5D,MAAMiI,KAAKrE,EAAQ4Q,aAExB,EAAKxU,MAAQ,GAGjB,EAAKY,KAAK,iCAAkCN,GAE5C,MAEJ,IAAK,6BACD,EAAKM,KAAK,6BAA8BN,GACxC,MAEJ,IAAK,uCAAyC,IAClCsD,EAAYtD,EAAZsD,QAER,EAAKsjC,cAAgBtjC,EAErB,EAAKhD,KAAK,uCAAwCN,GAClD,MAEJ,IAAK,8BACD,GAAI,EAAKN,MAAMgG,QAAU,EAAG,OAE5B,EAAKhG,MAAMsU,MACX,IAAM6yB,EAAkB,EAAKnnC,MAAMsU,MAEnCvT,IAAgB8G,aAAa,CACzB,QAAS,iCACTjE,QAAS,CACL4Q,YAAa2yB,OAxEnB,EAmFdrmC,iBAAmB,WACfC,IAAgBC,GAAG,SAAU,EAAKX,UAClCU,IAAgBC,GAAG,eAAgB,EAAKH,iBArF9B,EAwFdI,oBAAsB,WAClBF,IAAgBG,IAAI,SAAU,EAAKb,UACnCU,IAAgBG,IAAI,eAAgB,EAAKL,iBAvFzC,EAAKpB,QAEL,EAAKqB,mBALK,E,uEA8FV,OAAOiH,KAAK/H,MAAMgG,OAAS,I,mCAI3B,OAAO+B,KAAK/H,MAAMgG,OAAS,EAAI+B,KAAK/H,MAAM+H,KAAK/H,MAAMgG,OAAS,GAAK,S,GAnG5CkE,MAwG/BzB,OAAO+L,YAAchV,EACNA,O,6BCnHf,4BASe8yB,gBACX,0BAAMnO,EAAE,+6BACR,a,4JCOEijB,G,kNACFtH,aAAe,SAAAt2B,GAAU,IAAD,EAC2B,EAAK+W,MAA5C7b,EADY,EACZA,OAAQuF,EADI,EACJA,OAAQ2W,EADJ,EACIA,SAAUE,EADd,EACcA,SAElC,OAAIF,GAAY3W,GACZT,EAAMiX,uBAEN4mB,YAAgBp9B,GAAQ,IAIxB6W,GAAYpc,GACZ8E,EAAMiX,uBAEN6mB,YAAgB5iC,EAAQ,MAAM,SAHlC,G,wEAQM,IAAD,EAC6CqD,KAAKwY,MAA/CvK,EADH,EACGA,EAAGtR,EADN,EACMA,OAAQuF,EADd,EACcA,OAAQ2W,EADtB,EACsBA,SAAUE,EADhC,EACgCA,SAGrC,GADa3T,IAAUtL,IAAIoI,GACjB,CACN,IAAMo2B,EAAYpiB,YAAcvZ,GAC1B,uBADY,qBAEGgoB,KAAK4T,IAAIr2B,GAAU,EAAK,GACvC2iB,EAAYC,IAAW,CAACwT,GAAY,kBAEpCjT,EAAW9T,YAAgBrP,EAAQ,KAAM+L,GAE/C,OAAO4K,EACH,uBAAGgM,UAAWA,EAAWzL,QAASpZ,KAAK+3B,cAClC1S,GAGL,oCAAGA,GAKX,GADatb,IAAUjQ,IAAI6C,GACjB,CACN,IAAMkoB,EAAYC,IAAW,uBAAwB,kBAE/CO,EAAWhP,YAAa1Z,GAAQ,EAAOsR,GAE7C,OAAO8K,EACH,uBAAG8L,UAAWA,EAAWzL,QAASpZ,KAAK+3B,cAClC1S,GAGL,oCAAGA,GAIX,OAAO,S,GAvDanL,IAAMC,YAkElCklB,EAAcjlB,aAAe,CACzBvB,UAAU,EACVE,UAAU,GAGCsB,kBAAkBglB,I,sICzE3BG,G,mBACF,WAAYhnB,GAAQ,IAAD,8BACf,4CAAMA,KAWVC,YAAc,WAAO,IAAD,EACa,EAAKD,MAA1BtW,EADQ,EACRA,OAAQ81B,EADA,EACAA,SACXA,GAELA,EAAS91B,IAbT,EAAKgX,MAAQ,CACTxd,KAAM0J,IAAUtL,IAAI0e,EAAMtW,SAJf,E,mFAQGmtB,EAAWC,GAC7B,OAAOD,EAAUntB,SAAWlC,KAAKwY,MAAMtW,S,+BAUjC,IAAD,EAC6BlC,KAAKwY,MAA/BtW,EADH,EACGA,OAAQ+L,EADX,EACWA,EAAGwxB,EADd,EACcA,WAEbpa,EAAW9T,YAAgBrP,EAAQ,KAAM+L,GAE/C,OACI,yBAAK4W,UAAU,OAAOzL,QAASpZ,KAAKyY,aAChC,yBAAKoM,UAAU,gBACX,kBAAC,IAAD,CAAU3iB,OAAQA,IAClB,yBAAK2iB,UAAU,sBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,cAAcQ,IAEhCoa,GACG,yBAAK5a,UAAU,mBACX,kBAAC,IAAD,CAAY3iB,OAAQA,Y,GAnCjCgY,IAAMC,YAmDzBqlB,EAAKplB,aAAe,CAChBqlB,YAAY,GAGDplB,kBAAkBmlB,I,8aCjD3B7Z,E,YACF,WAAYnN,GAAQ,IAAD,8BACf,4CAAMA,KAiDVknB,gBAAkB,WACd,IAAMlT,EAAS,EAAKmT,SAAS3iB,QACxBwP,IAGD,EAAKoH,gBACH,EAAKL,SAAW,EAAKR,kBAAoB,EAAKG,yBAA2B,EAAKX,QAC3E,EAAKqN,WAAa,EAAKC,aAE5BrT,EAAO0H,OAEP1H,EAAO+I,UA7DI,EAiEnBjD,iCAAmC,SAAA/5B,GAC/B,EAAKg6B,OAAS9a,QAAQ+a,IAAiBC,cAEvC,EAAKiN,mBApEU,EAuEnBzM,wCAA0C,SAAA16B,GACtC,EAAK26B,uBAAyBzb,QAAQwD,IAASkY,2BAE/C,EAAKuM,mBA1EU,EA6EnB5M,iCAAmC,SAAAv6B,GAC/B,EAAKw6B,gBAAkBtb,QAAQwD,IAAS+X,oBAExC,EAAK0M,mBAhFU,EAmFnBI,uCAAyC,SAAAvnC,GACrC,EAAKsnC,YAAcpoB,QAAQ+a,IAAiB2M,eAE5C,EAAKO,mBAtFU,EAyFnBhM,0BAA4B,SAAAn7B,GACxB,EAAKq7B,cAAgBr7B,EAAOo7B,QAE5B,EAAK+L,mBA5FU,EA+FnBpM,6BAA+B,SAAA/6B,GAAW,IAAD,EACP,EAAKigB,MAA3B7b,EAD6B,EAC7BA,OAAQE,EADqB,EACrBA,UACVgV,EAAG,UAAMlV,EAAN,YAAgBE,GAEzB,EAAK02B,OAASh7B,EAAOoL,SAAS/J,IAAIiY,GAElC,EAAK6tB,mBArGU,EAwGnBK,2BAA6B,SAAAxnC,GAAW,IAC5BoU,EAAc,EAAK6L,MAAnB7L,UACHA,IAEL,EAAKizB,SAAWrnC,EAAO0Q,OAAOrP,IAAI+S,GAElC,EAAK+yB,oBA9GU,EAiHnBM,4BAA8B,SAAAznC,GAAW,IAC7BuD,EAAc,EAAK0c,MAAM1c,UAAzBA,UACAiD,EAAWxG,EAAXwG,OAEHjD,GAEDA,EAAUrC,KAAOsF,GACjB,EAAKg1B,YAAY,WACb,EAAK2L,qBAzHE,EA8HnBO,qCAAuC,SAAA1nC,GAAW,IACtCuE,EAAc,EAAK0b,MAAM1c,UAAzBgB,UACR,GAAKA,EAAL,CAF6C,IAIrCiC,EAAWxG,EAAXwG,OAEJjC,EAAUd,OAASc,EAAUd,MAAMvC,KAAOsF,GAC1C,EAAKg1B,gBAlIT,EAAK4L,SAAWzlB,IAAM0a,YAEtB,EAAKsL,kBALU,E,+EASflgC,KAAK4zB,cAAgBlzB,OAAOm0B,SAE5B70B,KAAKuzB,QAAS,EACdvzB,KAAK+yB,gBAAkBtb,QAAQwD,IAAS+X,oBACxChzB,KAAKkzB,uBAAyBzb,QAAQwD,IAASkY,2BAC/CnzB,KAAKuyB,OAAS9a,QAAQ+a,IAAiBC,cAEvCzyB,KAAK4/B,UAAW,EAChB5/B,KAAK6/B,YAAcpoB,QAAQ+a,IAAiB2M,iB,yCAG7B/J,EAAWC,EAAWC,GACjCF,EAAUt5B,YAAckE,KAAKwY,MAAM1c,WACnCkE,KAAKkgC,oB,0CAKTl8B,IAAU/K,GAAG,qCAAsC+G,KAAKigC,sCACxDj8B,IAAU/K,GAAG,4BAA6B+G,KAAKggC,6BAC/C/kB,IAAShiB,GAAG,0BAA2B+G,KAAK0zB,2BAC5CzY,IAAShiB,GAAG,iCAAkC+G,KAAK8yB,kCACnD7X,IAAShiB,GAAG,wCAAyC+G,KAAKizB,yCAC1DpvB,IAAa5K,GAAG,6BAA8B+G,KAAKszB,8BACnDd,IAAiBv5B,GAAG,iCAAkC+G,KAAKsyB,kCAC3DE,IAAiBv5B,GAAG,uCAAwC+G,KAAK8/B,wCACjEtN,IAAiBv5B,GAAG,2BAA4B+G,KAAK+/B,8B,6CAIrD/7B,IAAU7K,IAAI,qCAAsC6G,KAAKigC,sCACzDj8B,IAAU7K,IAAI,4BAA6B6G,KAAKggC,6BAChD/kB,IAAS9hB,IAAI,0BAA2B6G,KAAK0zB,2BAC7CzY,IAAS9hB,IAAI,iCAAkC6G,KAAK8yB,kCACpD7X,IAAS9hB,IAAI,wCAAyC6G,KAAKizB,yCAC3DpvB,IAAa1K,IAAI,6BAA8B6G,KAAKszB,8BACpDd,IAAiBr5B,IAAI,iCAAkC6G,KAAKsyB,kCAC5DE,IAAiBr5B,IAAI,uCAAwC6G,KAAK8/B,wCAClEtN,IAAiBr5B,IAAI,2BAA4B6G,KAAK+/B,8B,+BA0FhD,IAAD,EAC8D//B,KAAKwY,MAAhElS,EADH,EACGA,YAAa+Y,EADhB,EACgBA,UAAWpR,EAD3B,EAC2BA,EAAGD,EAD9B,EAC8BA,MAAOlB,EADrC,EACqCA,QAAStE,EAD9C,EAC8CA,KAAMzF,EADpD,EACoDA,MADpD,EAEqE/C,KAAKwY,MAAM1c,UAA7E6jB,EAFH,EAEGA,cAAe7iB,EAFlB,EAEkBA,UAAWhB,EAF7B,EAE6BA,UAAWiN,EAFxC,EAEwCA,UAAWtD,EAFnD,EAEmDA,MAAOC,EAF1D,EAE0DA,OAEzDkgB,EAAezB,YAAW,CAAE1e,QAAOC,WAAY5I,EAAWwJ,GAAa,GAC7E,IAAKsf,EAAc,OAAO,KAE1B,IAAMua,E,qVAAc,EAChB16B,MAAOmgB,EAAangB,MACpBC,OAAQkgB,EAAalgB,QAClB3C,GAGD41B,EAAUhZ,EAAgB,2BAA6BA,EAAcre,KAAO,KAC5EkuB,EAAe3jB,YAAO/O,EAAYA,EAAUd,MAAQ,MACpD05B,EAAM7pB,YAAO/P,GAEb65B,EAAYnG,EAAelJ,YAAmBxpB,GAAa2a,QAAQkhB,GACnEyH,EAAQ10B,YAAc3C,GACtBhM,EAAS24B,EAAM,4BAAQA,IAAKA,EAAKltB,KAAMO,IAAgB,KAE7D,OACI,yBACI8b,UAAWC,IAAW,YAAa,CAC/B,gBAA0B,YAATtc,EACjB,kBAAmBwF,EACnB,cAAeA,EACf,oBAAqBlB,EACrBsrB,QAAS/Y,IAEbtc,MAAOo9B,EACP/mB,QAASiG,GACRqW,EACG0K,EACI,yBAAKvb,UAAU,oBAAoB6Q,IAAKA,EAAKG,IAAI,KAEjD,2BACIG,IAAKh2B,KAAK2/B,SACV9a,UAAU,iCACVwb,OAAQ7Q,GAAgBmJ,EACxB2H,OAAK,EACLC,UAAQ,EACRtK,MAAI,EACJuK,aAAW,EACX/6B,MAAO06B,EAAe16B,MACtBC,OAAQy6B,EAAez6B,QACtB3I,GAIT,oCACI,yBACI8nB,UAAWC,IAAW,oBAAqB,CACvC,gBAAiB6Q,EACjB,sBAAuBD,IAAQlG,GAAgBmG,IAEnDD,IAAKlG,GAAgBmJ,EACrB9C,IAAI,KAER,yBAAKhR,UAAU,kBAAkBtiB,YAAYzG,KAGrD,kBAAC,IAAD,CACInD,KAAMmD,EACNqH,UAAQ,EACR4rB,QAAM,EACN2B,cAAY,EACZnB,KAAM,yBAAK1K,UAAU,kBAAkB5W,EAAE,qB,GA7MrCiM,IAAMC,WA+N9BwL,EAAUvL,aAAe,CACrB/X,KAAMkE,IACND,YAAa8d,IACbqc,IAAI,GAGOpmB,kBAAkBsL,I,6BC3PjC,4BASe4E,gBACX,0BACImW,UAAU,oCACVtkB,EAAE,idAEN,c,uEC8EWukB,EADA,I,WAlFX,aAAc,oBACV3gC,KAAK4gC,KAAO,IAAI5oC,IAAI,CAChB,CAAC,MAAO,iiBACR,CAAC,MAAO,W,gDAIZ2oC,GACA,OAAO3gC,KAAK4gC,KAAK9mC,IAAI6mC,K,0BAGrBA,EAAUE,GACV7gC,KAAK4gC,KAAKloC,IAAIioC,EAAUE,K,6BAGrBF,GACH,MAAiB,QAAbA,EACO,EAEP,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOG,SAASH,GACpD,EAEP,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOG,SAASH,GAC/I,EAEM,QAAbA,EACO,EAGJ,I,gCAGDI,EAAaJ,GACnB,IAAMK,GAAUD,EAAYpc,KAAKsc,IAAI,GAAMjhC,KAAKkhC,OAAOP,KAAYr+B,QAAQ,GAC3E,MAAM,GAAN,OAAU0+B,EAAV,YAAoBhhC,KAAKlG,IAAI6mC,Q,wGCzErC,IAAIQ,EAAa,IAAInpC,IAwBrB,SAASsZ,EAAiB1V,GACtB,QAAKA,MACAA,EAAQC,UAENslC,EAAWvnC,IAAIgC,EAAQC,QAAQ,WAAaD,EAAQshB,IAAM,IAwFrE,SAASC,EAAyBvhB,GAA4B,IAAnBid,EAAkB,wDACzD,IAAKjd,EAAS,OAAO,KACrB,IAAKA,EAAQC,QAAS,OAAO,KAE7B,IAAMulC,EAAaxlC,EAAQ6L,iBAAmBrC,IAAUmR,UAClDlb,EAAO0O,IAAUjQ,IAAI8B,EAAQgB,SAC7BykC,EAAmC,uBAAvBhmC,EAAKmN,KAAK,UAAqCnN,EAAKmN,KAAKmM,WAEnEuI,EAAiCthB,EAAjCshB,IAAKzV,EAA4B7L,EAA5B6L,eAAgB5L,EAAYD,EAAZC,QAC7B,GAAIqhB,EAAM,EACN,OAAQrhB,EAAQ,UACZ,IAAK,eACD,OAAIulC,EACO,mEAIP,oCACI,kBAAC/B,EAAA,EAAD,CAAen9B,OAAQuF,EAAgBoR,SAAUA,IAChD,iEAIb,IAAK,eACD,OAAIuoB,EACO,mEAIP,oCACI,kBAAC/B,EAAA,EAAD,CAAen9B,OAAQuF,EAAgBoR,SAAUA,IAChD,iEAIb,QACI,OAAIuoB,EACO,qEAIP,oCACI,kBAAC/B,EAAA,EAAD,CAAen9B,OAAQuF,EAAgBoR,SAAUA,IAChD,mEAOrB,OAAQhd,EAAQ,UACZ,IAAK,8BAAgC,IACzBmS,EAAUjE,IAAUjQ,IAAI8B,EAAQgB,SAAhCoR,MAER,OAAIozB,EACM,yBAAN,OAA6BpzB,EAA7B,QAIA,oCACI,kBAACqxB,EAAA,EAAD,CAAen9B,OAAQuF,EAAgBoR,SAAUA,IADrD,6BAEwB7K,EAFxB,SAMR,IAAK,wBACD,IAAM0I,EAAU7a,EAAQylC,gBACnB19B,IAAI,SAAA/B,GAAC,OAAI,kBAACw9B,EAAA,EAAD,CAAextB,IAAKhQ,EAAGK,OAAQL,EAAGgX,SAAUA,MACrDiE,OAAO,SAACC,EAAaC,EAASzT,EAAOg4B,GAClC,IAAMC,EAAYj4B,IAAUg4B,EAAMtjC,OAAS,EAAI,QAAU,KACzD,OAAuB,OAAhB8e,EAAuB,CAACC,GAAxB,sBAAuCD,GAAvC,CAAoDykB,EAAWxkB,KACvE,MAEP,OAAIokB,EAC0C,IAAnCvlC,EAAQylC,gBAAgBrjC,QAAgBpC,EAAQylC,gBAAgB,KAAOl8B,IAAUmR,UACpF,uBAEA,oCACK,aACAG,GAK6B,IAAnC7a,EAAQylC,gBAAgBrjC,QAAgBpC,EAAQylC,gBAAgB,KAAO1lC,EAAQ6L,eAClF,oCACI,kBAAC43B,EAAA,EAAD,CAAen9B,OAAQuF,EAAgBoR,SAAUA,IAChD,qBAGL,oCACI,kBAACwmB,EAAA,EAAD,CAAen9B,OAAQuF,EAAgBoR,SAAUA,IAChD,UACAnC,GAIb,IAAK,yBACD,OAAI2qB,EACO,wBAGPD,EACO,0BAIP,oCACI,kBAAC/B,EAAA,EAAD,CAAen9B,OAAQuF,EAAgBoR,SAAUA,IADrD,wBAMR,IAAK,yBAA2B,IACpB7K,EAAUnS,EAAVmS,MAER,OAAIqzB,EACM,mCAAN,OAAuCrzB,EAAvC,QAGAozB,EACM,iCAAN,OAAqCpzB,EAArC,QAIA,oCACI,kBAACqxB,EAAA,EAAD,CAAen9B,OAAQuF,EAAgBoR,SAAUA,IADrD,qCAEgC7K,EAFhC,SAMR,IAAK,0BACD,OAAIozB,EACOvlC,EAAQsJ,UAAYC,IAAUmR,UACjC,qBAEA,oCACK,eACD,kBAAC8oB,EAAA,EAAD,CAAen9B,OAAQrG,EAAQsJ,QAAS0T,SAAUA,KAKvDhd,EAAQsJ,UAAYsC,EACvB,oCACI,kBAAC43B,EAAA,EAAD,CAAen9B,OAAQuF,EAAgBoR,SAAUA,IAChD,mBAGL,oCACI,kBAACwmB,EAAA,EAAD,CAAen9B,OAAQuF,EAAgBoR,SAAUA,IAChD,YACD,kBAACwmB,EAAA,EAAD,CAAen9B,OAAQrG,EAAQsJ,QAAS0T,SAAUA,KAI9D,IAAK,yBACD,OAAIwoB,EACO,wBAGPD,EACO,0BAIP,oCACI,kBAAC/B,EAAA,EAAD,CAAen9B,OAAQuF,EAAgBoR,SAAUA,IAChD,wBAIb,IAAK,wBACD,OAAIuoB,EACO,uCAIP,oCACI,kBAAC/B,EAAA,EAAD,CAAen9B,OAAQuF,EAAgBoR,SAAUA,IAChD,qCAIb,IAAK,oBAAsB,IACfqE,EAAQrhB,EAARqhB,IACFukB,EA/QlB,SAAsBvkB,GAClB,GAAIA,EAAM,GAAI,CACV,IAAMwkB,EAAkB,IAARxkB,EAAY,SAAW,UACvC,MAAM,GAAN,OAAUA,EAAV,YAAiBwkB,GAErB,GAAIxkB,EAAM,KAAS,CACf,IAAMkQ,EAAmC,IAAzBzI,KAAKC,MAAM1H,EAAM,IAAY,SAAW,UACxD,MAAM,GAAN,OAAUA,EAAV,YAAiBkQ,GAErB,GAAIlQ,EAAM,MAAc,CACpB,IAAMoQ,EAAsC,IAA9B3I,KAAKC,MAAM1H,EAAM,GAAK,IAAY,OAAS,QACzD,MAAM,GAAN,OAAUA,EAAV,YAAiBoQ,GAErB,GAAIpQ,EAAM,OAAkB,CACxB,IAAMykB,EAA0C,IAAnChd,KAAKC,MAAM1H,EAAM,GAAK,GAAK,IAAY,MAAQ,OAC5D,MAAM,GAAN,OAAUA,EAAV,YAAiBykB,GAErB,OAAY,SAARzkB,EACO,SAGL,GAAN,OAAUA,EAAV,YA0P0B0kB,CAAa1kB,GAE/B,OAAIA,GAAO,EACHkkB,EACO,uCAIP,oCACI,kBAAC/B,EAAA,EAAD,CAAen9B,OAAQuF,EAAgBoR,SAAUA,IAChD,qCAKTuoB,EACM,sCAAN,OAA6CK,GAI7C,oCACI,kBAACpC,EAAA,EAAD,CAAen9B,OAAQuF,EAAgBoR,SAAUA,IADrD,0CAEwC4oB,IAIhD,IAAK,yBACD,MAAO,yCAEX,IAAK,uBACD,MAAO,iCAEX,IAAK,2BACD,OACI,oCACI,kBAACpC,EAAA,EAAD,CAAen9B,OAAQuF,EAAgBoR,SAAUA,IAChD,yBAIb,IAAK,6BACD,OAAOhd,EAAQoR,KAEnB,IAAK,mBACD,IAAM40B,EAAch+B,IAAa/J,IAAI8B,EAAQgB,QAASf,EAAQimC,iBAC9D,GACID,GACAA,EAAYhmC,SACqB,gBAAjCgmC,EAAYhmC,QAAQ,UACpBgmC,EAAYhmC,QAAQK,KACtB,CAAC,IACSA,EAAS2lC,EAAYhmC,QAArBK,KAER,OAAIklC,EACM,cAAN,OAAqBvlC,EAAQkmC,MAA7B,mBAA0C7lC,EAAK8R,MAA/C,QAIA,oCACI,kBAACqxB,EAAA,EAAD,CAAen9B,OAAQ2/B,EAAYp6B,eAAgBoR,SAAUA,IADjE,kBAEgBhd,EAAQkmC,MAFxB,mBAEqC7lC,EAAK8R,MAF1C,SAOR,OAAIozB,EACM,cAAN,OAAqBvlC,EAAQkmC,OAI7B,oCACI,kBAAC1C,EAAA,EAAD,CAAen9B,OAAQuF,EAAgBoR,SAAUA,IADrD,kBAEgBhd,EAAQkmC,QAIhC,IAAK,8BACD,MAAO,kCAEX,IAAK,0BACD,IAAM1mC,EAAO0O,IAAUjQ,IAAI8B,EAAQgB,SAE7BolC,EAAuBnmC,EAAQomC,MAChCr+B,IAAI,SAAA/B,GAAC,OA1UtB,SAAsC2G,GAClC,OAAQA,EAAK,UACT,IAAK,6BACD,MAAO,UAEX,IAAK,mCACD,MAAO,iBAEX,IAAK,mCACD,MAAO,iBAEX,IAAK,kCACD,MAAO,QAEX,IAAK,kCACD,MAAO,gBAEX,IAAK,sCACD,MAAO,oBAEX,IAAK,8BACD,MAAO,WAEX,IAAK,0CACD,MAAO,wBAEX,IAAK,qCACD,MAAO,mBAEX,IAAK,iCACD,MAAO,eAEX,IAAK,qCACD,MAAO,oBAEX,IAAK,2CACD,MAAO,yBAEX,IAAK,iCACD,MAAO,eAIf,MAAO,GA+Re05B,CAA6BrgC,KACtCib,OAAO,SAACC,EAAaC,GAClB,OAAuB,OAAhBD,EAAuB,CAACC,GAAxB,sBAAuCD,GAAvC,CAAoD,KAAMC,KAClE,MAEP,OACI,oCACI,kBAACqiB,EAAA,EAAD,CAAen9B,OAAQ7G,EAAKmN,KAAKrD,QAAS0T,SAAUA,IACnD,sCACAmpB,GAIb,IAAK,2BACD,IAAM3mC,EAAO0O,IAAUjQ,IAAI8B,EAAQgB,SAE7BulC,EAAiBt+B,IAAa/J,IAAI8B,EAAQgB,QAASf,EAAQumC,oBACjE,GACID,GACAA,EAAetmC,SACqB,mBAApCsmC,EAAetmC,QAAQ,UACvBsmC,EAAetmC,QAAQwmC,QACzB,CAAC,IACSA,EAAYF,EAAetmC,QAA3BwmC,QAER,OACI,qFAC+CC,EAASC,UAChD1mC,EAAQ2mC,aACR3mC,EAAQ8kC,UAHhB,QAKI,kBAACtB,EAAA,EAAD,CAAen9B,OAAQ7G,EAAKmN,KAAKrD,QAAS0T,SAAUA,IALxD,eAMawpB,EAAQr0B,QAK7B,OACI,qFAC+Cs0B,EAASC,UAChD1mC,EAAQ2mC,aACR3mC,EAAQ8kC,UAHhB,QAKI,kBAACtB,EAAA,EAAD,CAAen9B,OAAQ7G,EAAKmN,KAAKrD,QAAS0T,SAAUA,KAIhE,IAAK,8BACD,MAAO,qBAEX,IAAK,oBACD,IAAM9L,EA/UlB,SAA0BnR,EAASid,GAC/B,IAAKjd,EAAS,OAAO,KADoB,IAGjCgB,EAA4BhB,EAA5BgB,QAAS6K,EAAmB7L,EAAnB6L,eAEjB,GAAuB,IAAnBA,EACA,OAAO,kBAAC43B,EAAA,EAAD,CAAen9B,OAAQuF,EAAgBoR,SAAUA,IAG5D,IAAMxd,EAAO0O,IAAUjQ,IAAI8C,GAC3B,OAAKvB,EAEEA,EAAK2S,MAFM,KAqUKy0B,CAAiB7mC,EAASid,GACnC6pB,EAAgB7+B,IAAa/J,IAAI8B,EAAQgB,QAASf,EAAQ8iB,YAChE,IAAK+jB,IAAkBA,EAAc7mC,QACjC,OACI,oCACKkR,EACA,qBAKb,IAAI41B,EAAgB,oBACpB,GAAIrxB,EAAiBoxB,GACjBC,EAAgB,iCAEhB,OAAQD,EAAc7mC,QAAQ,UAC1B,IAAK,mBACD8mC,EAAgB,gBAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,cACDA,EAAgB,iBAChB,MAEJ,IAAK,iBACDA,EAAgB,oBAChB,MAEJ,IAAK,kBACDA,EAAgB,iBAChB,MAEJ,IAAK,sBACDA,EAAgB,kBAChB,MAEJ,IAAK,sBACDA,EAAgB,kBAChB,MAEJ,IAAK,cACDA,EAAgB,iBAChB,MAEJ,IAAK,iBACDA,EAAgB,qBAChB,MAEJ,IAAK,kBACDA,EAAgB,gBAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,cACDA,EAAgB,iBAChB,MAEJ,IAAK,iBACDA,EAAgB,oBAChB,MAEJ,IAAK,cACD,IACM11B,EAAOy1B,EAAc7mC,QAAQoR,KAAKA,KAEpC01B,EADA11B,EAAKhP,QAFS,GAGD,sBAAegP,EAAf,QAEA,sBAAeA,EAAK4N,UAAU,EAL7B,IAKD,WAGjB,MAEJ,IAAK,qBACD8nB,EAAgB,8BAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,mBACDA,EAAgB,0BAChB,MAEJ,IAAK,mBACDA,EAAgB,0BAM5B,OACI,oCACK51B,EACA41B,GAIb,IAAK,yBACD,OAAIvB,EACO,yBAIP,oCACI,kBAAC/B,EAAA,EAAD,CAAen9B,OAAQuF,EAAgBoR,SAAUA,IAChD,uBAIb,IAAK,8BAAgC,IACzB7K,EAAUnS,EAAVmS,MAER,OAAIqzB,EACO,kBAGPD,EACM,yBAAN,OAA6BpzB,EAA7B,QAIA,oCACI,kBAACqxB,EAAA,EAAD,CAAen9B,OAAQuF,EAAgBoR,SAAUA,IADrD,6BAEwB7K,EAFxB,SAMR,IAAK,qBACD,MAAO,sBAEX,IAAK,0BACD,MAAM,6DAAN,OAAoEnS,EAAQ+mC,YAA5E,KAIR,MAAM,IAAN,OAAWhnC,EAAQC,QAAQ,SAA3B,KAtkBJslC,EAAWzoC,IAAI,8BAA+B,+BAC9CyoC,EAAWzoC,IAAI,wBAAyB,yBACxCyoC,EAAWzoC,IAAI,yBAA0B,0BACzCyoC,EAAWzoC,IAAI,yBAA0B,0BACzCyoC,EAAWzoC,IAAI,0BAA2B,2BAC1CyoC,EAAWzoC,IAAI,yBAA0B,0BACzCyoC,EAAWzoC,IAAI,wBAAyB,yBACxCyoC,EAAWzoC,IAAI,oBAAqB,qBACpCyoC,EAAWzoC,IAAI,yBAA0B,0BACzCyoC,EAAWzoC,IAAI,uBAAwB,wBACvCyoC,EAAWzoC,IAAI,2BAA4B,4BAC3CyoC,EAAWzoC,IAAI,6BAA8B,8BAC7CyoC,EAAWzoC,IAAI,mBAAoB,oBACnCyoC,EAAWzoC,IAAI,8BAA+B,+BAC9CyoC,EAAWzoC,IAAI,0BAA2B,2BAC1CyoC,EAAWzoC,IAAI,2BAA4B,4BAC3CyoC,EAAWzoC,IAAI,8BAA+B,+BAC9CyoC,EAAWzoC,IAAI,oBAAqB,qBACpCyoC,EAAWzoC,IAAI,yBAA0B,0BACzCyoC,EAAWzoC,IAAI,8BAA+B,+BAC9CyoC,EAAWzoC,IAAI,qBAAsB,sBACrCyoC,EAAWzoC,IAAI,0BAA2B,4B,+BCpC1C,6IASO,SAASwmC,EAAQx/B,EAAKo/B,GACzB,OAAKp/B,EAEDo/B,EAAap/B,EAAI0qB,WAAW,WAAa1qB,EAAM,UAAYA,EAIxDA,EAAI0qB,WAAW,QAAU1qB,EAAM,UAAYA,EANjC,KASd,SAASu/B,EAAUJ,EAAan/B,GACnC,QAAIm/B,GAAeA,IAAgBn/B,KAgChC,SAAuBA,GAC1B,QAAKA,GAEEmjC,EAAWnJ,KAAKh6B,GA/BnBojC,CAAcpjC,GAOf,SAASqiB,EAAcriB,EAAKo/B,GAC/B,IAAKp/B,EAAK,OAAO,KAEjB,IAAMuD,EAAOi8B,EAAQx/B,EAAKo/B,GAE1B,IACI,IAAIiE,EAAcC,UAAU//B,GAEtBggC,EAASF,EAAYxG,MAAM,yCAAyC,GAG1E,OAFAwG,EAAcA,EAAY9gB,QAAQghB,EAAQC,IAASC,UAAUF,IAG/D,MAAO/nC,GACLD,QAAQoF,IAAI,gCAAiCX,EAAKxE,GAGtD,OAAO,KAGX,IAAM2nC,EAAa,SAQnB,IAAMO,EAAuB,IAAIC,OAC7B,6JAOEC,EAAe,IAAID,OACrB,8JAOEE,EAAiB,IAAIF,OAAO,uBAG3B,SAASG,EAAY5yB,GAGxB,IAAM6yB,EAAU7yB,EAAMgW,OACtB,IAAK6c,EACD,OAAO,KAGX,IAAMlH,EAAQkH,EAAQlH,MAAM6G,GAC5B,IAAK7G,EAAO,CACR,IAAMmH,EAAcD,EAAQlH,MAAM+G,GAClC,OAAKI,GAAqC,IAAtBA,EAAYn6B,MAIzB,UAAYk6B,EAHR,KAIR,GAAoB,IAAhBlH,EAAMhzB,MACb,OAAO,KAGX,IAAMo6B,EAAgBF,EAAQlH,MAAMgH,GACpC,OAAOI,GAGX,SAAwB/yB,GACpB,MAAO,CAAC,OAAQ,QAAS,MAAMhP,KAAK,SAAAC,GAAC,OAAuC,IAAnC+O,EAAMhF,cAAc6W,QAAQ5gB,KAJ7C+hC,CAAeD,EAAc,IAAMF,EAAU,O,iLC9EnEra,G,mBACF,WAAY5Q,GAAQ,IAAD,uBACf,4CAAMA,KAmDVqrB,uBAAyB,SAAAtrC,GAAW,IAAD,EACD,EAAKigB,MAA3B7b,EADuB,EACvBA,OAAQE,EADe,EACfA,UAEZF,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,WACjD,EAAKic,SAAS,CACVgrB,QAAQ,EACRtY,SAAS,EACTI,YAAa,KA3DN,EAgEnBmY,wBAA0B,SAAAxrC,GAAW,IAAD,EACO,EAAKigB,MAApC7b,EADwB,EACxBA,OAAQE,EADgB,EAChBA,UADgB,EACL2uB,QAEvB7uB,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,UACjD,EAAKic,SAAS,CAAE0S,SAAS,IAEzB,EAAK1S,SAAS,CAAE0S,SAAS,KAtEd,EA0EnBwY,yBAA2B,SAAAzrC,GAAW,IAAD,EACH,EAAKigB,MAA3B7b,EADyB,EACzBA,OAAQE,EADiB,EACjBA,UAEZF,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,WACjD,EAAKic,SAAS,CAAE0S,SAAS,KA9Ed,EAkFnByY,0BAA4B,SAAA1rC,GAAW,IAAD,EACJ,EAAKigB,MAA3B7b,EAD0B,EAC1BA,OAAQE,EADkB,EAClBA,UAEZF,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,UAC5C,EAAKqc,MAAM4qB,QACZ,EAAKhrB,SAAS,CACVgrB,QAAQ,EACRlY,YAAa,EACbJ,SAAS,IAGV,EAAKtS,MAAM4qB,QAClB,EAAKhrB,SAAS,CACVgrB,QAAQ,EACRlY,YAAa,EACbJ,SAAS,KAjGF,IAGP7uB,EAAsB6b,EAAtB7b,OAAQE,EAAc2b,EAAd3b,UAERkuB,EAA2BmZ,IAA3BnZ,KAAMnvB,EAAqBsoC,IAArBtoC,QAAS4vB,EAAY0Y,IAAZ1Y,QACjBsY,EAASloC,GAAWA,EAAQgB,UAAYD,GAAUf,EAAQnC,KAAOoD,EANxD,OAQf,EAAKqc,MAAQ,CACT4qB,OAAQA,EACRtY,UAASsY,GAAStY,EAClBI,YAAakY,GAAU/Y,EAAOA,EAAKa,YAAc,EACjDtH,SAAUwf,GAAU/Y,EAAOA,EAAKzG,SAAW,GAZhC,E,mFAgBG+K,EAAWC,EAAW4F,GAAc,IAAD,EACFl1B,KAAKkZ,MAAhD4qB,EAD6C,EAC7CA,OAAQtY,EADqC,EACrCA,QAASI,EAD4B,EAC5BA,YAAatH,EADe,EACfA,SAEtC,OAAIgL,EAAUwU,SAAWA,IAIrBxU,EAAU9D,UAAYA,IAItB8D,EAAU1D,cAAgBA,GAI1B0D,EAAUhL,WAAaA,M,0CAQ3B4f,IAAYjrC,GAAG,0BAA2B+G,KAAKikC,2BAC/CC,IAAYjrC,GAAG,wBAAyB+G,KAAK+jC,yBAC7CG,IAAYjrC,GAAG,yBAA0B+G,KAAKgkC,0BAC9CE,IAAYjrC,GAAG,uBAAwB+G,KAAK6jC,0B,6CAI5CK,IAAY/qC,IAAI,0BAA2B6G,KAAKikC,2BAChDC,IAAY/qC,IAAI,wBAAyB6G,KAAK+jC,yBAC9CG,IAAY/qC,IAAI,yBAA0B6G,KAAKgkC,0BAC/CE,IAAY/qC,IAAI,uBAAwB6G,KAAK6jC,0B,+BAqDvC,IAAD,EACiE7jC,KAAKwY,MAAnE7b,EADH,EACGA,OAAQE,EADX,EACWA,UAAWd,EADtB,EACsBA,MAAOsjB,EAD7B,EAC6BA,UAAWrR,EADxC,EACwCA,MAAOiO,EAD/C,EAC+CA,KAAMnP,EADrD,EACqDA,QADrD,EAEuB9M,KAAKkZ,MAAzBsS,EAFH,EAEGA,QAASsY,EAFZ,EAEYA,OACjB,IAAK/nC,EAAO,OAAO,KAHd,IAKGoB,EAAiDpB,EAAjDoB,sBAAuBmnB,EAA0BvoB,EAA1BuoB,SAAiB3rB,EAASoD,EAAhBA,MAEnCooC,EAAapd,YAAiBhrB,GAC9BqoC,EAAgBtd,YAAmB/qB,GAEzC,OACI,yBAAK8oB,UAAWC,IAAW,QAAS,WAAY,CAAE,cAAe9W,KAC7D,kBAAC,IAAD,CACIlR,UAAWK,EACXxE,KAAMA,EACN0mB,UAAWA,EACXkQ,KAAM,kBAAC,IAAD,MACNqB,aAAcpF,EAAU,kBAAC,IAAD,MAAgB,kBAAC,IAAD,QAE5C,yBAAK3G,UAAU,iBACX,yBAAKA,UAAU,kBACX,uBAAGA,UAAU,gBAAgBzL,QAASiG,EAAWrR,MAAOm2B,GACnDA,IAGT,yBAAKtf,UAAU,eAAe9hB,MAAO,CAAEshC,QAASP,EAAS,EAAI,IACxDM,GAEL,kBAAC,IAAD,CACIvf,UAAU,eACVloB,OAAQA,EACRE,UAAWA,EACXynB,SAAUA,EACVvhB,MAAO,CAAEshC,QAASP,EAAS,EAAI,KAEnC,kBAAC,IAAD,CACInnC,OAAQA,EACRE,UAAWA,EACXynB,SAAUA,EACV3rB,KAAMA,EACNsjB,KAAMnP,EAAU,KAAOmP,U,GA/I3B/B,IAAMC,YA8JXiP,O,6BClLf,4BASemB,gBACX,0BACImW,UAAU,oCACVtkB,EAAE,sWAEN,U,oICCEkoB,G,kNACFprB,MAAQ,CACJye,QAAQ,G,EAaZ4M,oCAAsC,SAAAhsC,GAAW,IACrCuE,EAAc,EAAK0b,MAAnB1b,UACR,GAAKA,EAAL,CAEA,IAAMnE,EAAOmE,EAAUd,MACvB,GAAKrD,EAAL,CAL4C,IAOpCoG,EAAWxG,EAAXwG,OAEJpG,EAAKc,KAAOsF,GAIhB,EAAKg1B,iB,EAGTkE,WAAa,WACT,EAAKnf,SAAS,CAAE6e,QAAQ,K,mFA1BxB3zB,IAAU/K,GAAG,oCAAqC+G,KAAKukC,qCACvDvgC,IAAU/K,GAAG,iCAAkC+G,KAAKukC,uC,6CAIpDvgC,IAAU7K,IAAI,oCAAqC6G,KAAKukC,qCACxDvgC,IAAU7K,IAAI,iCAAkC6G,KAAKukC,uC,+BAuB/C,IAAD,EACqEvkC,KAAKwY,MAAvEmH,EADH,EACGA,cAAe7iB,EADlB,EACkBA,UAAWnE,EAD7B,EAC6BA,KAAM42B,EADnC,EACmCA,KAAMqB,EADzC,EACyCA,aAAcvR,EADvD,EACuDA,UACpDsY,EAAW33B,KAAKkZ,MAAhBye,OAEFgB,EAAUhZ,EAAgB,2BAA6BA,EAAcre,KAAO,KAC5EkuB,EAAe3jB,YAAO/O,EAAYA,EAAUd,MAAQ,MACpDq8B,EAAa7I,GAAgBmI,EAC7BjC,EAAMlG,GAAgBmJ,EAE5B,OACI,yBACI9T,UAAWC,IAAW,gBAAiB,CAAE,uBAAwB4Q,GAAO,CAAE0C,QAAS/Y,IACnFjG,QAASiG,GACR1mB,GACG,kBAAC,IAAD,CACIA,KAAMA,EACN62B,aAAckG,EACdvyB,UAAQ,EACR4rB,QAAM,EACN2B,cAAY,EACZC,OAAQ,EACRpB,KAAMA,EACNqB,aAAsC,oBAAjBA,EAA8BA,EAAa8E,GAAO9E,IAG9E8E,GAAO,yBAAK7Q,UAAU,aAAa6Q,IAAKA,EAAK8C,OAAQx4B,KAAKi4B,WAAYrC,WAAW,EAAOC,IAAI,MAC3FwC,GAAc,yBAAKxT,UAAU,kC,GA7DpB3K,IAAMC,YA4ElBmqB,O,0HC5ETE,G,mBACF,WAAYhsB,GAAQ,IAAD,uBACf,4CAAMA,KAqEVisB,2BAA6B,SAAAlsC,GAAW,IAAD,EACK,EAAKigB,MAArC7b,EAD2B,EAC3BA,OAAQE,EADmB,EACnBA,UAAWynB,EADQ,EACRA,SADQ,EAEgB,EAAKpL,MAAtCwrB,EAFiB,EAE3BpgB,SAA0Bwf,EAFC,EAEDA,OAAQnrC,EAFP,EAEOA,KAE1C,GAAIgE,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,UAAW,CAC5D,IAAMuf,EAAIsoB,GAAkBpgB,EAE5B,EAAKxL,SAAS,CACV6rB,aAAcpsC,EAAOqY,MACrBg0B,SAAS,EACTC,WAAY,EAAKC,cAAc1oB,EAAI7jB,EAAOqY,MAAOwL,EAAG0nB,EAAQnrC,OAhFrD,EAqFnBosC,wBAA0B,SAAAxsC,GAAW,IAAD,EACQ,EAAKigB,MAArC7b,EADwB,EACxBA,OAAQE,EADgB,EAChBA,UAAWynB,EADK,EACLA,SADK,EAEmB,EAAKpL,MAAtCwrB,EAFc,EAExBpgB,SAA0Bwf,EAFF,EAEEA,OAAQnrC,EAFV,EAEUA,KAE1C,GAAIgE,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,UAAW,CAC5D,IAAMuf,EAAIsoB,GAAkBpgB,EAE5B,EAAKxL,SAAS,CACV6rB,aAAc,EACdC,SAAS,EACTC,WAAY,EAAKC,cAAc1oB,EAAI7jB,EAAOqY,MAAOwL,EAAG0nB,EAAQnrC,OA/FrD,EAoGnBkrC,uBAAyB,SAAAtrC,GAAW,IAAD,EACS,EAAKigB,MAArC7b,EADuB,EACvBA,OAAQE,EADe,EACfA,UAAWynB,EADI,EACJA,SADI,EAEN,EAAKpL,MAAdvgB,GAFe,EAEvBmrC,OAFuB,EAEfnrC,MAEhB,GAAIgE,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,UAAW,CAC5D,IAAM6nC,EAAiBnsC,EAAO+rB,UAAY,GAAK/rB,EAAO+rB,SAAW0gB,IAAWzsC,EAAO+rB,SAAWA,EAC9F,EAAKxL,SAAS,CACVgrB,QAAQ,EACRlY,YAAa,EACbiZ,WAAY,EAAKC,cAAc,EAAGJ,GAAgB,EAAO/rC,OA7GlD,EAkHnBssC,wBAA0B,SAAA1sC,GAAW,IAAD,EACQ,EAAKigB,MAArC7b,EADwB,EACxBA,OAAQE,EADgB,EAChBA,UAAWynB,EADK,EACLA,SADK,EAEgB,EAAKpL,MAA7C4qB,EAFwB,EAExBA,OAAQnrC,EAFgB,EAEhBA,KAAMgsC,EAFU,EAEVA,aAAcC,EAFJ,EAEIA,QAEpC,GAAIjoC,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,UAAW,CAC5D,IAAM6nC,EAAiBnsC,EAAO+rB,UAAY,GAAK/rB,EAAO+rB,SAAW0gB,IAAWzsC,EAAO+rB,SAAWA,EACxFyG,EAAO6Z,EAAUD,EAAeD,EAAiBnsC,EAAOqzB,YAE9D,EAAK9S,SAAS,CACV8S,YAAarzB,EAAOqzB,YACpBtH,SAAUogB,EACVG,WAAY,EAAKC,cAAc/Z,EAAM2Z,EAAgBZ,EAAQnrC,OA7HtD,EAkInBsrC,0BAA4B,SAAA1rC,GAAW,IAAD,EACM,EAAKigB,MAArC7b,EAD0B,EAC1BA,OAAQE,EADkB,EAClBA,UAAWynB,EADO,EACPA,SADO,EAEI,EAAKpL,MAAnC4qB,EAF0B,EAE1BA,OAAQlY,EAFkB,EAElBA,YAAajzB,EAFK,EAELA,KAEzBgE,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,UACjD,EAAKic,SAAS,CACVgrB,QAAQ,EACRlY,YAAakY,EAASlY,EAAc,EACpCiZ,WAAYf,EAAS,EAAK5qB,MAAM2rB,WAAa,EAAKC,cAAc,EAAGxgB,GAAU,EAAM3rB,KAEhFmrC,GACP,EAAKhrB,SAAS,CACVgrB,QAAQ,EACRlY,YAAa,EACbiZ,WAAY,EAAKC,cAAc,EAAGxgB,GAAU,EAAO3rB,MAhJ5C,EAqJnBC,aAAe,SAAAL,GACX,IAAMg2B,EAAc,EAAKrV,MAAMvgB,KACzB61B,EAAWj2B,EAAOI,KAEpB41B,GAAeA,EAAY90B,KAAO+0B,EAAS/0B,IAC3C,EAAKqf,SAAS,CAAEngB,KAAM61B,EAAUE,SAAUH,KA1J/B,EA8JnBuW,cAAgB,SAAClZ,EAAatH,EAAUwf,EAAQnrC,GAC5C,IAAMk3B,EAAyBl3B,EAAKgB,OAAShB,EAAKgB,MAAME,yBAGlD4qB,GAFuB9rB,EAAKwC,QAAUxC,EAAKwC,OAAOC,uBAEjCspB,YAAkBC,KAAKC,MAAMN,GAAY,KAC1D4gB,EAAoBxgB,YAAkBC,KAAKC,MAAMgH,GAAe,IAEtE,OAAOkY,GAAUjU,EAAV,UAAsCqV,EAAtC,cAA6DzgB,GAA7D,UAAmFA,IArK3E,IAGP7oB,EAAkBsoC,IAAlBtoC,QAASmvB,EAASmZ,IAATnZ,KAHF,EAI+B,EAAKvS,MAA3C7b,EAJO,EAIPA,OAAQE,EAJD,EAICA,UAAWynB,EAJZ,EAIYA,SAAU3rB,EAJtB,EAIsBA,KAE/BmrC,EAASloC,GAAWA,EAAQgB,UAAYD,GAAUf,EAAQnC,KAAOoD,EACjE+uB,EAAckY,GAAU/Y,EAAOA,EAAKa,YAAc,EAClDuZ,EAAgBrB,GAAU/Y,GAAQA,EAAKzG,SAAWyG,EAAKzG,SAAWA,EAClEiK,EAAcvqB,IAAUlK,IAAInB,EAAKc,KAAOd,EAT/B,OAWf,EAAKugB,MAAQ,CACT4qB,OAAQA,EACRlY,YAAaA,EACb+Y,aAAc,EACdrgB,SAAU6gB,EACVN,WAAY,EAAKC,cAAclZ,EAAatH,EAAUwf,EAAQvV,GAE9DG,SAAU,KACV/1B,KAAM41B,GAnBK,E,mFAuBGc,EAAWC,GAAY,IACjC8V,EAAUplC,KAAKwY,MAAf4sB,MADgC,EAEOplC,KAAKkZ,MAA5C4qB,EAFgC,EAEhCA,OAAQe,EAFwB,EAExBA,WAAYlsC,EAFY,EAEZA,KAAM+1B,EAFM,EAENA,SAElC,OAAIW,EAAU+V,QAAUA,IAIpB9V,EAAUuV,aAAeA,IAIzBvV,EAAUwU,SAAWA,IAIrBxU,EAAU32B,OAASA,GAInB22B,EAAUZ,WAAaA,O,0CAQ3B1qB,IAAU/K,GAAG,aAAc+G,KAAKpH,cAEhCsrC,IAAYjrC,GAAG,0BAA2B+G,KAAKikC,2BAC/CC,IAAYjrC,GAAG,wBAAyB+G,KAAKilC,yBAC7Cf,IAAYjrC,GAAG,uBAAwB+G,KAAK6jC,wBAC5CK,IAAYjrC,GAAG,2BAA4B+G,KAAKykC,4BAChDP,IAAYjrC,GAAG,wBAAyB+G,KAAK+kC,2B,6CAI7C/gC,IAAU7K,IAAI,aAAc6G,KAAKpH,cAEjCsrC,IAAY/qC,IAAI,0BAA2B6G,KAAKikC,2BAChDC,IAAY/qC,IAAI,wBAAyB6G,KAAKilC,yBAC9Cf,IAAY/qC,IAAI,uBAAwB6G,KAAK6jC,wBAC7CK,IAAY/qC,IAAI,2BAA4B6G,KAAKykC,4BACjDP,IAAY/qC,IAAI,wBAAyB6G,KAAK+kC,2B,+BAqGxC,IAAD,EACmB/kC,KAAKwY,MAArBxK,EADH,EACGA,MAAOiO,EADV,EACUA,KADV,EAEgCjc,KAAKkZ,MAAlC4qB,EAFH,EAEGA,OAAQnrC,EAFX,EAEWA,KAAMksC,EAFjB,EAEiBA,WACtB,IAAKlsC,EAAM,OAAO,KAElB,IAAM0sC,EAAsB1sC,EAAKgB,OAAShB,EAAKgB,MAAMoS,sBAC/Cu5B,EAAoB3sC,EAAKwC,QAAUxC,EAAKwC,OAAO+Q,oBAC/C2jB,EAAyBl3B,EAAKgB,OAAShB,EAAKgB,MAAME,yBAGlDwI,GAFuB1J,EAAKwC,QAAUxC,EAAKwC,OAAOC,uBAE3CmH,YAAY5J,IACrBu2B,EAAe,KACfmW,EACAnW,EAAepjB,YAAkBnT,GAC1B2sC,IACPpW,EAAejjB,YAAgBtT,IAEnC,IAAM4sC,EAAarW,EAAY,UAAMA,EAAN,cAAwB7sB,GAAxB,UAAoCA,GAC7DmjC,EAAU,GAQhB,OAPK3V,GACD2V,EAAQtlC,KAAKqlC,GAEZF,GACDG,EAAQtlC,KAAK2kC,GAIb,yBAAKhgB,UAAU,iBACTif,GAAU,8BAAO91B,GAClB,8BAAOw3B,EAAQtjB,KAAK,OACpBjG,O,GAvMS/B,IAAMC,YAsNjBqqB,O,6YCpNTve,E,2MASFwf,2BAA6B,SAAAltC,GAAW,IAC5BwG,EAAWxG,EAAXwG,OAD2B,EAEc,EAAKyZ,MAA9Crc,EAF2B,EAE3BA,SAAUsJ,EAFiB,EAEjBA,MAAOC,EAFU,EAEVA,OAAQC,EAFE,EAEFA,KAAME,EAFJ,EAEIA,MAEjCrI,EAAaC,YAActB,EAAUsJ,EAAOC,EAAQC,EAAME,GAC1DlN,EAAOqL,IAAUtG,gBAAgBF,GAClC7E,GAEDA,EAAKc,KAAOsF,GACZ,EAAKg1B,e,EAIbtb,YAAc,SAAAhX,GACVA,EAAMiX,mB,mFArBN1U,IAAU/K,GAAG,2BAA4B+G,KAAKylC,8B,6CAI9CzhC,IAAU7K,IAAI,2BAA4B6G,KAAKylC,8B,+BAoBzC,IAAD,EACyEzlC,KAAKwY,MAA3Erc,EADH,EACGA,SAAUsJ,EADb,EACaA,MAAOC,EADpB,EACoBA,OAAQC,EAD5B,EAC4BA,KAAME,EADlC,EACkCA,MAAO2C,EADzC,EACyCA,KAAMzF,EAD/C,EAC+CA,MAAOiL,EADtD,EACsDA,MAAOlB,EAD7D,EAC6DA,QAClE,IAAK3Q,EAAU,OAAO,KAEtB,IAAMqB,EAAaC,YAActB,EAAUsJ,EAAOC,EAAQC,EAAME,GAC1DlN,EAAOqL,IAAUtG,gBAAgBF,GACjCk4B,EAAM7pB,YAAOlT,GAEX6kB,EAAwBrhB,EAAxBqhB,UAAWC,EAAathB,EAAbshB,SACb1gB,EAAM,qCAAiC0gB,EAAjC,YAA6CD,GAEnDkoB,E,qVAAa,EACfjgC,QACAC,UACG3C,GAGP,OACI,yBACI8hB,UAAWC,IAAW,WAAY,CAC9B,mBAA6B,YAATtc,EACpB,iBAA2B,UAATA,EAClB,iBAAkBwF,EAClB,mBAAoBlB,IAExB/J,MAAO2iC,GACP,uBAAGziC,KAAMlG,EAAQ2E,OAAO,SAASma,IAAI,sBAAsBzC,QAASpZ,KAAKyY,aACrE,yBAAKoM,UAAU,oBACX,yBAAKA,UAAU,iBAAiB+Q,WAAW,EAAOC,IAAK94B,EAAQ24B,IAAKA,IACpE,yBAAK7Q,UAAU,iBACX,kBAAC,IAAD,CAAUK,SAAS,QAAQF,MAAM,oB,GAxDtC9K,IAAMC,WA6E7B8L,EAAS7L,aAAe,CACpB3U,MAAOO,IACPN,OAAQO,IACRN,KAAMC,IACNC,MAAOC,KAGImgB,O,4YCnFT2D,E,2MASF+b,iCAAmC,SAAAptC,GAAW,IAClCuE,EAAc,EAAK0b,MAAMlc,MAAzBQ,UACAiC,EAAWxG,EAAXwG,OAEHjC,GAEDA,EAAUd,OAASc,EAAUd,MAAMvC,KAAOsF,GAC1C,EAAKg1B,e,mFAdT/vB,IAAU/K,GAAG,iCAAkC+G,KAAK2lC,oC,6CAIpD3hC,IAAU7K,IAAI,iCAAkC6G,KAAK2lC,oC,+BAc/C,IAAD,EAC2D3lC,KAAKwY,MAA7DlS,EADH,EACGA,YAAa+Y,EADhB,EACgBA,UAAWrR,EAD3B,EAC2BA,MAAOlB,EADlC,EACkCA,QAAStE,EAD3C,EAC2CA,KAAMzF,EADjD,EACiDA,MADjD,EAEgE/C,KAAKwY,MAAMlc,MAAxEqjB,EAFH,EAEGA,cAAe7iB,EAFlB,EAEkBA,UAAWR,EAF7B,EAE6BA,MAAOmJ,EAFpC,EAEoCA,MAAOC,EAF3C,EAE2CA,OAAQ4e,EAFnD,EAEmDA,SAElDsB,EAAezB,YAAW,CAAE1e,QAAOC,WAAY5I,EAAWwJ,GAChE,IAAKsf,EAAc,OAAO,KAE1B,IAAMggB,E,qVAAU,EACZngC,MAAOmgB,EAAangB,MACpBC,OAAQkgB,EAAalgB,QAClB3C,GAGD41B,EAAUhZ,EAAgB,2BAA6BA,EAAcre,KAAO,KAC5EkuB,EAAe3jB,YAAO/O,EAAYA,EAAUd,MAAQ,MACpD25B,EAAYnG,EAAelJ,YAAmBxpB,GAAa2a,QAAQkhB,GAEzE,OACI,yBACI9T,UAAWC,IAAW,QAAS,CAC3B,YAAsB,YAATtc,EACb,cAAewF,EACf,gBAAiBlB,EACjBsrB,QAAS/Y,IAEbtc,MAAO6iC,EACPxsB,QAASiG,GACT,yBACIwF,UAAWC,IAAW,gBAAiB,CACnC,gBAAiB6Q,EACjB,sBAAuBnG,GAAgBmG,IAE3CD,IAAKlG,GAAgBmJ,EACrB9C,IAAI,KAER,yBAAKhR,UAAU,cACX,kBAAC,IAAD,OAEJ,yBAAKA,UAAU,cAAcH,YAAkBJ,GAAY,IAAM/hB,YAAYjG,S,GA1DzE4d,IAAMC,WAyE1ByP,EAAMxP,aAAe,CACjB/X,KAAMkE,IACND,YAAa8d,KAGFwF,O,yGCpFTic,E,YACF,WAAYrtB,GAAQ,IAAD,uBACf,4CAAMA,KAiBVstB,6BAA+B,SAAAvtC,GAAW,IAAD,EACP,EAAKigB,MAA3B7b,EAD6B,EAC7BA,OAAQE,EADqB,EACrBA,UAEZF,IAAWpE,EAAOqE,SAAWC,IAActE,EAAOomB,YAClD,EAAK7F,SAAS,CAAEitB,SAAUjoB,YAAgBnhB,EAAQE,MAtBvC,MAGe,EAAK2b,MAA3B7b,EAHO,EAGPA,OAAQE,EAHD,EAGCA,UAHD,OAKf,EAAKqc,MAAQ,CACT6sB,SAAUjoB,YAAgBnhB,EAAQE,IANvB,E,iFAWfgH,IAAa5K,GAAG,6BAA8B+G,KAAK8lC,gC,6CAInDjiC,IAAa1K,IAAI,6BAA8B6G,KAAK8lC,gC,+BAW9C,IAAD,EACwB9lC,KAAKwY,MAA1B+W,EADH,EACGA,KAAMyW,EADT,EACSA,WAGd,OAFqBhmC,KAAKkZ,MAAlB6sB,SAEUC,EAAazW,M,GA/BbrV,IAAMC,WA0ChC0rB,EAAYzrB,aAAe,CACvBmV,KAAM,KACNyW,WAAY,MAGDH,O,+GC7CTI,G,kNACF/sB,MAAQ,CACJoE,MAAO,KACP4oB,iBAAkB,M,EAiCtBC,kBAAoB,SAAA/pC,GAAY,IAEpB3C,EADkB2C,EAAlBA,QACA3C,GAERT,IAAgBmI,KAAK,CACjB,QAAS,mBACT/E,QAAS,CAAE,QAAS,cAAe3C,QACpC8H,KAAK,SAAAT,GACA,EAAK0X,MAAMpc,UAAYA,GACvB,EAAK0c,SAAS,CACVwE,MAAOxc,EAAOslC,OAAOlkB,KAAK,U,kFA1BvBkT,EAAWC,EAAWC,GAAW,IACxCl5B,EAAY4D,KAAKwY,MAAjBpc,QAEJA,GAAWA,IAAYg5B,EAAUh5B,SACjC4D,KAAKmmC,kBAAkB/pC,K,0CAIV,IACTA,EAAY4D,KAAKwY,MAAjBpc,QAEJA,GACA4D,KAAKmmC,kBAAkB/pC,K,+BAoBrB,IACEA,EAAY4D,KAAKwY,MAAjBpc,QACAkhB,EAAUtd,KAAKkZ,MAAfoE,MAER,OAAKlhB,EAGD,yBAAKyoB,UAAU,mBACX,yBAAKA,UAAU,yBAAyBvH,GACxC,kBAAC,IAAD,CACIlhB,QAASA,EACTkK,YAAa+/B,KACbtpC,OAAQ2sB,IAAkByI,WARjB,Q,gDAlDO3Z,EAAOU,GAAQ,IACnC9c,EAAYoc,EAAZpc,QACA8pC,EAAqBhtB,EAArBgtB,iBAER,OAAI9pC,GAAW8pC,EACJ,CACHA,iBAAkB9pC,EAClBkhB,MAAO,MAIR,S,GAjBcpD,IAAMC,YA2EpB8rB,O,oCCzFf,4BASe1b,gBACX,uBAAGmW,UAAU,iCACT,0BACItkB,EAAE,2KACFkqB,OAAO,eACPC,YAAY,MACZC,eAAe,QACfC,KAAK,SAET,4BAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,MACxB,4BAAQF,GAAG,KAAKC,GAAG,IAAIC,EAAE,OAE7B,mB,+BCrBJ,2GASO,SAASC,EAAclqC,EAAQE,EAAWiqC,GAC7C9tC,IAAgBmI,KAAK,CACjB,QAAS,gBACTvE,QAASD,EACTgiB,WAAY9hB,EACZkqC,WAAYD,IAIb,SAASE,EAAiBrqC,EAAQE,GACrC7D,IAAgBmI,KAAK,CACjB,QAAS,gBACTvE,QAASD,EACTgiB,WAAY9hB,EACZkqC,WAAY,KAIb,SAASE,EAAStqC,EAAQE,GAC7B7D,IAAgBmI,KAAK,CACjB,QAAS,WACTvE,QAASD,EACTgiB,WAAY9hB,EACZqqC,aAAc,S,0HCnBhBC,G,mBACF,WAAY3uB,GAAQ,IAAD,uBACf,4CAAMA,KAsDV4uB,mBAAqB,SAAA7uC,GAAW,IACpB2J,EAAW,EAAKsW,MAAhBtW,OACFxG,EAAO0J,IAAUtL,IAAIoI,GAEvBA,IAAW3J,EAAO4M,SAClB,EAAK2T,SAAS,CAAE9E,OAAQO,YAAc7Y,GAAO2rC,SAAU7xB,YAAa9Z,MA5DzD,IAGPwG,EAAW,EAAKsW,MAAhBtW,OACFxG,EAAO0J,IAAUtL,IAAIoI,GAJZ,OAMf,EAAKgX,MAAQ,CACTc,WAAY9X,EACZ8R,OAAQO,YAAc7Y,GACtB2rC,SAAU7xB,YAAa9Z,IATZ,E,mFA4BG2zB,EAAWC,GAAY,IACjCptB,EAAWlC,KAAKwY,MAAhBtW,OADgC,EAEXlC,KAAKkZ,MAA1BlF,EAFgC,EAEhCA,OAAQqzB,EAFwB,EAExBA,SAEhB,OAAIhY,EAAUntB,SAAWA,IAIrBotB,EAAUtb,SAAWA,GAIrBsb,EAAU+X,WAAaA,K,0CAQ3BjiC,IAAUnM,GAAG,mBAAoB+G,KAAKonC,sB,6CAItChiC,IAAUjM,IAAI,mBAAoB6G,KAAKonC,sB,+BAYjC,IAAD,EACwBpnC,KAAKkZ,MAA1BlF,EADH,EACGA,OAAQqzB,EADX,EACWA,SAEhB,OACI,yBAAKxiB,UAAWC,IAAW,eAAgB,iBAAkB,CAAE,qBAAsBuiB,KAChFrzB,M,gDAxDmBwE,EAAOU,GACnC,GAAIV,EAAMtW,SAAWgX,EAAMc,WAAY,CAAC,IAC5B9X,EAAWsW,EAAXtW,OACFxG,EAAO0J,IAAUtL,IAAIoI,GAE3B,MAAO,CACH8X,WAAY9X,EACZ8R,OAAQO,YAAc7Y,GACtB2rC,SAAU7xB,YAAa9Z,IAI/B,OAAO,S,GA1BUwe,IAAMC,YA4EhBgtB,O,8qBC+GT1vC,EAAQ,I,YA7LV,aAAe,IAAD,8BACV,+CAOJC,MAAQ,WACJ,EAAK0lB,KAAO,MATF,EAYd9kB,SAAW,SAAAC,GACP,OAAQA,EAAO,UACX,IAAK,2BAA6B,IACtBa,EAAwBb,EAAxBa,oBACR,IAAKA,EAAqB,MAE1B,OAAQA,EAAoB,UACxB,IAAK,2BACD,EAAK1B,WApBX,EAgCdoB,eAAiB,SAAAP,GACb,OAAQA,EAAO,UACX,IAAK,+BACD,EAAKM,KAAK,+BAAgCN,GAC1C,MAEJ,IAAK,sBACD,EAAKG,IAAI,CACL8P,KAAM,CACF,QAAS,kBACT8+B,wBAAwB,GAE5B7tC,GAAIuZ,KAAKI,MACTiK,SAAU,GACVmG,QAAS,GACT+jB,cAAc,IAGlB,EAAK1uC,KAAK,sBAAuBN,GACjC,MAEJ,IAAK,kCAAoC,IAC7B6kB,EAD4B,eAC5BA,KACFoqB,EAAcpqB,GAAQA,EAAKmqB,aAEjC,EAAKtQ,OAAO,EAAK7Z,KAAM,CAAEmqB,cAAeC,IAExC,EAAK3uC,KAAK,kCAAmCN,GAC7C,MAEJ,IAAK,6CAA+C,IACxC6kB,EADuC,eACvCA,KACA5U,EAAS4U,EAAT5U,KACR,GAAsB,oBAAlBA,EAAK,SAAgC,CACrC,IAEMi/B,EAAO,KAAQj/B,EAAR,CAAc8+B,yBAFElqB,GAAQA,EAAK5U,KAAK8+B,0BAI/C,EAAKrQ,OAAO,EAAK7Z,KAAM,CAAE5U,KAAMi/B,IAGnC,EAAK5uC,KAAK,6CAA8CN,GACxD,MAEJ,IAAK,6BAGD,GAAsB,oBAHS,eACvB6kB,KACA5U,KACC,SAAgC,CAGrC,EAAKyuB,OAAO,EAAK7Z,KAAM,CAAE5U,KAFT,CAAE,QAAS,eAAgBk/B,mBAAoB,SAG5D,CAGH,EAAKzQ,OAAO,EAAK7Z,KAAM,CAAE5U,KAFT,CAAE,QAAS,kBAAmB8+B,wBAAwB,KAK1E,EAAKzuC,KAAK,6BAA8BN,GACxC,MAEJ,IAAK,+BAAiC,IAC1BkB,EAAOlB,EAAPkB,GACA+pB,EAAY,EAAKpG,KAAjBoG,QAER,EAAKyT,OAAO,EAAK7Z,KAAM,CACnBoG,QAASA,EAAQ5f,IAAI,SAAA/B,GAAC,OAAKA,EAAEpI,KAAOA,EAAT,KAAmBoI,EAAnB,CAAsB4hB,WAAW,IAAjC,KAA+C5hB,EAA/C,CAAkD4hB,WAAW,QAG5F,EAAK5qB,KAAK,+BAAgCN,GAC1C,MAEJ,IAAK,2BAA6B,IACtB8kB,EAAa9kB,EAAb8kB,SAER,EAAK4Z,OAAO,EAAK7Z,KAAM,CAAEC,aAEzB,EAAKxkB,KAAK,2BAA4BN,GACtC,MAEJ,IAAK,yBAA2B,IACpBkB,EAAalB,EAAbkB,GAAIwT,EAAS1U,EAAT0U,KACJuW,EAAY,EAAKpG,KAAjBoG,QAER,EAAKyT,OAAO,EAAK7Z,KAAM,CAAEoG,QAASA,EAAQ5f,IAAI,SAAA/B,GAAC,OAAKA,EAAEpI,KAAOA,EAAT,KAAmBoI,EAAnB,CAAsBoL,SAAtB,KAAoCpL,OAExF,EAAKhJ,KAAK,yBAA0BN,GACpC,MAEJ,IAAK,4BAA8B,IACvBovC,EAAWpvC,EAAXovC,OACAnkB,EAAY,EAAKpG,KAAjBoG,QAER,EAAKyT,OAAO,EAAK7Z,KAAM,CAAEoG,QAAQ,GAAD,mBAAMA,GAAN,CAAemkB,MAC/C,EAAK9uC,KAAK,4BAA6BN,GACvC,MAEJ,IAAK,+BAAiC,IAC1BkB,EAAOlB,EAAPkB,GACA+pB,EAAY,EAAKpG,KAAjBoG,QAER,EAAKyT,OAAO,EAAK7Z,KAAM,CAAEoG,QAASA,EAAQ1hB,OAAO,SAAAD,GAAC,OAAIA,EAAEpI,KAAOA,MAC/D,EAAKZ,KAAK,+BAAgCN,GAC1C,MAEJ,IAAK,yBACD,EAAKG,IAAI,MAET,EAAKG,KAAK,yBAA0BN,KA3IlC,EAmJdQ,iBAAmB,WACfC,IAAgBC,GAAG,SAAU,EAAKX,UAClCU,IAAgBC,GAAG,eAAgB,EAAKH,iBArJ9B,EAwJdI,oBAAsB,WAClBF,IAAgBG,IAAI,SAAU,EAAKb,UACnCU,IAAgBG,IAAI,eAAgB,EAAKL,iBAvJzC,EAAKpB,QAEL,EAAKqB,mBALK,E,oEA6JP6uC,EAASC,GACZ7nC,KAAKtH,IAAI+xB,OAAOwM,OAAO,GAAI2Q,EAASC,M,0BAGpCzqB,GACApd,KAAKod,KAAOA,I,4CAIZ,IAAKpd,KAAKod,KAAM,OAAO,KACvB,IAAK0qB,YAAY9nC,KAAKod,MAAO,OAAO,KAFlB,MAGgCpd,KAAKod,KAA/CC,EAHU,EAGVA,SAAUmG,EAHA,EAGAA,QAAShb,EAHT,EAGSA,KAAM++B,EAHf,EAGeA,aAEjC,MAAsB,iBAAlB/+B,EAAK,WACLA,EAAKk/B,kBAAoBlkB,EAAQ6D,UAAU,SAAAxlB,GAAC,OAAIA,EAAE4hB,aAElB,IAA5Bjb,EAAKk/B,mBACE,KAIR,CACH,QAAS,mBACTrqB,WACAmG,QAASA,EAAQ1hB,OAAO,SAAAD,GAAC,OAAI4V,QAAQ5V,EAAEoL,QAAOrJ,IAAI,SAAA/B,GAAC,OAAIA,EAAEoL,OACzDs6B,eACA/+B,OACA+a,WAAW,O,GAzLCphB,MA+LxBzB,OAAO0c,KAAO3lB,EACCA,O,6BC1Mf,4EASO,SAASqwC,EAAY1qB,GACxB,IAAKA,EAAM,OAAO,EADY,IAGtBC,EAAsBD,EAAtBC,SAAUmG,EAAYpG,EAAZoG,QAClB,IAQJ,SAAyBnG,GACrB,QAAKA,GAEEA,EAASpf,QAAU8pC,IAXrBC,CAAgB3qB,GAAW,OAAO,EAEvC,IAAM4qB,EAAmBzkB,EAAQ1hB,OAAO,SAAAD,GAAC,OAAI4V,QAAQ5V,EAAEoL,QACvD,QAAIg7B,EAAiBhqC,QAAU,IAExBgqC,EAAiB/3B,MAAMg4B,GASlC,SAASA,EAAcP,GACnB,QAAKA,MACAA,EAAO16B,MAEL06B,EAAO16B,KAAKhP,QAAUkqC,KAG1B,SAASC,EAAYhrB,GACxB,IAAKA,EAAM,OAAO,EADY,IAGtBC,EAAsBD,EAAtBC,SAAUmG,EAAYpG,EAAZoG,QAClB,QAAInG,GAEGmG,EAAQ5hB,KAAK,SAAAC,GAAC,OAAI4V,QAAQ5V,EAAEoL,U,6BC0RvC,IAAMi2B,EAAW,IA/TjB,WAkBIljC,KAAKqoC,MAAQ,CAETC,OAAQ,SAASC,GAMb,IALA,IAGI33B,EACA43B,EAJAC,EAAS,GACT1qC,EAAI,EACJ2+B,EAAM6L,EAAMtqC,OAGTF,EAAI2+B,GAAK,CAEZ,GAAyB,SAAZ,OADb9rB,EAAQ23B,EAAMG,WAAW3qC,OACQ,CAE7B,GADAyqC,EAAQD,EAAMG,WAAW3qC,KACA,SAAZ,MAAR6S,IAAmD,SAAZ,MAAR43B,GAChC,MAAM,IAAIG,WAAW,2CAEzB/3B,IAAkB,KAARA,IAAkB,KAAe,KAAR43B,GAAiB,MAExDC,EAAOvoC,KAAK0Q,GAEhB,OAAO63B,GAEXG,OAAQ,SAASL,GAKb,IAJA,IAGI33B,EAHA63B,EAAS,GACT1qC,EAAI,EACJ2+B,EAAM6L,EAAMtqC,OAETF,EAAI2+B,GAAK,CAEZ,GAAyB,SAAZ,OADb9rB,EAAQ23B,EAAMxqC,OAEV,MAAM,IAAI4qC,WAAW,wCAErB/3B,EAAQ,QACRA,GAAS,MACT63B,EAAOvoC,KAAK65B,OAAO8O,aAAej4B,IAAU,GAAM,KAAS,QAC3DA,EAAQ,MAAkB,KAARA,GAEtB63B,EAAOvoC,KAAK65B,OAAO8O,aAAaj4B,IAEpC,OAAO63B,EAAOvmB,KAAK,MAK3B,IAGI4mB,EAAO,GACPC,EAAO,IACPC,EAAO,EACPC,EAAO,GACPC,EAAO,GACPC,EAAS,WAgBb,SAASC,EAAahtB,EAAGitB,GACrB,OAAOjtB,EAAI,GAAK,IAAMA,EAAI,MAAgB,GAARitB,IAAc,GAKpD,SAASC,EAAMC,EAAOC,EAAWC,GAC7B,IAAIp4B,EAIJ,IAHAk4B,EAAQE,EAAY9kB,KAAKC,MAAM2kB,EAAQR,GAAQQ,GAAS,EACxDA,GAAS5kB,KAAKC,MAAM2kB,EAAQC,GAEvBn4B,EAAI,EAAGk4B,GAAUT,EAAOE,GAAQC,GAAS,EAAG53B,GAAKy3B,EAClDS,EAAQ5kB,KAAKC,MAAM2kB,GAAST,EAAOE,IAEvC,OAAOrkB,KAAKC,MAAMvT,GAAMy3B,EAAOE,EAAO,GAAKO,GAAUA,EAAQL,IAcjElpC,KAAKsoC,OAAS,SAASC,EAAOmB,GAE1B,IAIIC,EAAGC,EAAK7rC,EAAG8rC,EAAMC,EAAOC,EAAGC,EAAIC,EAAMC,EAAG74B,EAAG84B,EAAOl8B,EAAGyuB,EA5CvC0N,EAwCd3B,EAAS,GACT4B,EAAa,GACbC,EAAe/B,EAAMtqC,OAiBzB,IAXA0rC,EA9DY,IA+DZ5rC,EAAI,EACJ8rC,EA/De,IAqEfC,EAAQvB,EAAMgC,YApEF,MAqEA,IAAGT,EAAQ,GAElBC,EAAI,EAAGA,EAAID,IAASC,EAAG,CAExB,GADIL,IAAcW,EAAW5B,EAAOxqC,QAAUsqC,EAAMG,WAAWqB,GAAK,GAAK,IACrExB,EAAMG,WAAWqB,IAAM,IACvB,MAAM,IAAIpB,WAAW,yBAEzBF,EAAOvoC,KAAKqoC,EAAMG,WAAWqB,IAMjC,IAAKC,EAAKF,EAAQ,EAAIA,EAAQ,EAAI,EAAGE,EAAKM,GAAgB,CAOtD,IAAKL,EAAOlsC,EAAGmsC,EAAI,EAAG74B,EAAIy3B,GAAQz3B,GAAKy3B,EAAM,CACzC,GAAIkB,GAAMM,EACN,MAAM3B,WAAW,yBAIrB,IAFAwB,GAjFUC,EAiFW7B,EAAMG,WAAWsB,MAhFlC,GAAK,GAAKI,EAAK,GAAKA,EAAK,GAAK,GAAKA,EAAK,GAAKA,EAAK,GAAK,GAAKA,EAAK,GAAKtB,IAkF7DA,EACT,MAAMH,WAAW,yBAErB,GAAIwB,EAAQxlB,KAAKC,OAAOukB,EAASprC,GAAKmsC,GAClC,MAAMvB,WAAW,wBAIrB,GAFA5qC,GAAKosC,EAAQD,EAETC,GADJl8B,EAAIoD,GAAKw4B,EAAOb,EAAO33B,GAAKw4B,EAAOZ,EAAOA,EAAO53B,EAAIw4B,GAEjD,MAEJ,GAAIK,EAAIvlB,KAAKC,MAAMukB,GAAUL,EAAO76B,IAChC,MAAM06B,WAAW,wBAErBuB,GAAKpB,EAAO76B,EAQhB,GAJA47B,EAAOP,EAAMvrC,EAAIksC,EADjBL,EAAMnB,EAAOxqC,OAAS,EACe,IAATgsC,GAIxBtlB,KAAKC,MAAM7mB,EAAI6rC,GAAOT,EAASQ,EAC/B,MAAMhB,WAAW,wBAErBgB,GAAKhlB,KAAKC,MAAM7mB,EAAI6rC,GACpB7rC,GAAK6rC,EAIDF,GACAW,EAAWhpB,OAAOtjB,EAAG,EAAGwqC,EAAMG,WAAWsB,EAAK,GAAK,GAAK,IAG5DvB,EAAOpnB,OAAOtjB,EAAG,EAAG4rC,GACpB5rC,IAEJ,GAAI2rC,EACA,IAAK3rC,EAAI,EAAG2+B,EAAM+L,EAAOxqC,OAAQF,EAAI2+B,EAAK3+B,IAClCssC,EAAWtsC,KACX0qC,EAAO1qC,GAAKg8B,OAAO8O,aAAaJ,EAAO1qC,IAClCysC,cACA9B,WAAW,IAI5B,OAAO1oC,KAAKqoC,MAAMO,OAAOH,IAK7BzoC,KAAK4oC,OAAS,SAASL,EAAOmB,GAG1B,IAAIC,EAAGJ,EAAO5N,EAAG9uB,EAAGg9B,EAAME,EAAGhqB,EAAG0qB,EAAGp5B,EAAGpD,EAAGy8B,EAAKL,EAE1CX,IAEAW,EAAarqC,KAAKqoC,MAAMC,OAAOC,IAKnC,IAAI+B,GAFJ/B,EAAQvoC,KAAKqoC,MAAMC,OAAOC,EAAM38B,gBAEP3N,OAEzB,GAAIyrC,EAEA,IAAKK,EAAI,EAAGA,EAAIO,EAAcP,IAC1BM,EAAWN,GAAKxB,EAAMwB,IAAMM,EAAWN,GAI/C,IA3HkBY,EAAKtB,EA2HnBZ,EAAS,GAQb,IALAkB,EA5KY,IA6KZJ,EAAQ,EACRM,EA7Ke,GAgLVE,EAAI,EAAGA,EAAIO,IAAgBP,EACxBxB,EAAMwB,GAAK,KACXtB,EAAOvoC,KAAK65B,OAAO8O,aAAawB,GArItBM,EAqIgDpC,EAAMwB,GArIjDV,EAqIqDgB,EAAWN,IApIvFY,IAAQA,EAAM,GAAK,KAAO,MACVtB,GAAQsB,EAAM,GAAK,KAAO,IAmImDpC,EAAMwB,KAanG,IATApO,EAAI9uB,EAAI47B,EAAOxqC,OAKX4O,EAAI,GAAG47B,EAAOvoC,KA1LN,KA8LLy7B,EAAI2O,GAAc,CAIrB,IAAKvqB,EAAIopB,EAAQY,EAAI,EAAGA,EAAIO,IAAgBP,GACxCW,EAAMnC,EAAMwB,KACDJ,GAAKe,EAAM3qB,IAAGA,EAAI2qB,GAMjC,GAAI3qB,EAAI4pB,EAAIhlB,KAAKC,OAAOukB,EAASI,IAAU5N,EAAI,IAC3C,MAAMgN,WAAW,yBAKrB,IAHAY,IAAUxpB,EAAI4pB,IAAMhO,EAAI,GACxBgO,EAAI5pB,EAECgqB,EAAI,EAAGA,EAAIO,IAAgBP,EAAG,CAG/B,IAFAW,EAAMnC,EAAMwB,IAEFJ,KACAJ,EAAQJ,EAAQ,OAAOyB,MAAM,wBAGvC,GAAIF,GAAOf,EAAG,CAEV,IAAKc,EAAIlB,EAAOl4B,EAAIy3B,IAEZ2B,GADJx8B,EAAIoD,GAAKw4B,EAAOb,EAAO33B,GAAKw4B,EAAOZ,EAAOA,EAAO53B,EAAIw4B,IAD7Bx4B,GAAKy3B,EAG7BL,EAAOvoC,KAAK65B,OAAO8O,aAAaO,EAAan7B,GAAMw8B,EAAIx8B,IAAM66B,EAAO76B,GAAK,KACzEw8B,EAAI9lB,KAAKC,OAAO6lB,EAAIx8B,IAAM66B,EAAO76B,IAErCw6B,EAAOvoC,KAAK65B,OAAO8O,aAAaO,EAAaqB,EAAGf,GAAgBW,EAAWN,GAAK,EAAI,KACpFF,EAAOP,EAAMC,EAAO5N,EAAI,EAAGA,GAAK9uB,GAChC08B,EAAQ,IACN5N,KAIR4N,IACAI,EAEN,OAAOlB,EAAOvmB,KAAK,KAGvBliB,KAAK6qC,QAAU,SAAS5H,GAGpB,IAFA,IAAI6H,EAAe7H,EAAO32B,MAAM,KAC5Bs9B,EAAM,GACD7rC,EAAI,EAAGA,EAAI+sC,EAAa7sC,SAAUF,EAAG,CAC1C,IAAIu8B,EAAIwQ,EAAa/sC,GACrB6rC,EAAI1pC,KAAKo6B,EAAEiC,MAAM,iBAAmB,OAAS2G,EAAS0F,OAAOtO,GAAKA,GAEtE,OAAOsP,EAAI1nB,KAAK,MAEpBliB,KAAKmjC,UAAY,SAASF,GAGtB,IAFA,IAAI6H,EAAe7H,EAAO32B,MAAM,KAC5Bs9B,EAAM,GACD7rC,EAAI,EAAGA,EAAI+sC,EAAa7sC,SAAUF,EAAG,CAC1C,IAAIu8B,EAAIwQ,EAAa/sC,GACrB6rC,EAAI1pC,KAAKo6B,EAAEiC,MAAM,SAAW2G,EAASoF,OAAOhO,EAAE5I,MAAM,IAAM4I,GAE9D,OAAOsP,EAAI1nB,KAAK,OAKTghB,O,0ICnTT6H,G,mBACF,WAAYvyB,GAAQ,IAAD,uBACf,4CAAMA,KA2CV9gB,MAAQ,WAAO,IACH4sB,EAAa,EAAK9L,MAAlB8L,SAGM,IAFI,EAAKpL,MAAftI,OAGJ,EAAKkI,SAAS,CACVgrB,QAAQ,EACRlY,YAAa,IAGjBmF,WAAW,WACiB,EAAK7X,MAArB0S,aAEJ,EAAK9S,SAAS,CACVlI,MAAO,EAAKo6B,SAAS,EAAG1mB,GAAU,MAG3C2mB,MAEH,EAAKnyB,SAAS,CACVgrB,QAAQ,EACRlY,YAAa,EACbhb,MAAO,EAAKo6B,SAAS,EAAG1mB,GAAU,MAlE3B,EAuEnBuf,uBAAyB,SAAAtrC,GAAW,IAAD,EACD,EAAKigB,MAA3B7b,EADuB,EACvBA,OAAQE,EADe,EACfA,UAEZF,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,WACjD,EAAKnF,SA3EM,EA+EnButC,wBAA0B,SAAA1sC,GAAW,IAAD,EACQ,EAAKigB,MAArC7b,EADwB,EACxBA,OAAQE,EADgB,EAChBA,UAAWynB,EADK,EACLA,SADK,EAEH,EAAKpL,MAA1B4qB,EAFwB,EAExBA,OAAQoH,EAFgB,EAEhBA,SAEhB,GAAIvuC,IAAWpE,EAAOoE,QAClBE,IAActE,EAAOsE,UAAzB,CAEA,IAAM6nC,EAAiBnsC,EAAO+rB,UAAY,GAAK/rB,EAAO+rB,SAAW0gB,IAAWzsC,EAAO+rB,SAAWA,EACxF1T,EAAQ,EAAKo6B,SAASzyC,EAAOqzB,YAAa8Y,EAAgBZ,GAE5DoH,EACA,EAAKpyB,SAAS,CACV8S,YAAarzB,EAAOqzB,YACpBtH,SAAUogB,IAGd,EAAK5rB,SAAS,CACV8S,YAAarzB,EAAOqzB,YACpBtH,SAAUogB,EACV9zB,YAlGO,EAuGnBqzB,0BAA4B,SAAA1rC,GAAW,IAAD,EACM,EAAKigB,MAArC7b,EAD0B,EAC1BA,OAAQE,EADkB,EAClBA,UAAWynB,EADO,EACPA,SADO,EAEQ,EAAKpL,MAAvC4qB,EAF0B,EAE1BA,OAAQlY,EAFkB,EAElBA,YAAasf,EAFK,EAELA,SAE7B,GAAIvuC,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,UAAW,CAC5D,IAAM6nC,EAAiBnsC,EAAO+rB,UAAY,GAAK/rB,EAAO+rB,SAAW0gB,IAAWzsC,EAAO+rB,SAAWA,EAC1F1T,EAAQ,EAAKsI,MAAMtI,MAClBs6B,IACDt6B,EAAQ,EAAKo6B,SAASlH,EAASlY,EAAc,EAAG8Y,GAAgB,IAGpE,EAAK5rB,SAAS,CACVgrB,QAAQ,EACRlY,YAAakY,EAASlY,EAAc,EACpChb,eAEGkzB,GACP,EAAKpsC,SAxHM,EA4HnBszC,SAAW,SAACpf,EAAatH,EAAUwf,GAC/B,OAAOA,EAASlY,EAActH,EAAW,GA7H1B,EAgInB6mB,gBAAkB,SAAA1pC,GACdA,EAAMiX,kBAEN,EAAKI,SAAS,CACVoyB,UAAU,KApIC,EAwInBE,sBAAwB,WAAO,IAAD,EACI,EAAK5yB,MAA3B7b,EADkB,EAClBA,OAAQE,EADU,EACVA,UADU,EAEA,EAAKqc,MAAvBtI,EAFkB,EAElBA,MAFkB,EAEXkzB,SAGf9qC,IAAgB8G,aAAa,CACzB,QAAS,wBACTnD,SACAE,YACA+T,UAGJ,EAAKkI,SAAS,CACVoyB,UAAU,MArJC,EAyJnBG,aAAe,SAAC5pC,EAAOmP,GAAW,IAAD,EACC,EAAK4H,MAA3B7b,EADqB,EACrBA,OAAQE,EADa,EACbA,UADa,EAEA,EAAKqc,MAA1B4qB,EAFqB,EAErBA,OAAQoH,EAFa,EAEbA,SACXpH,IAEDoH,GACAlyC,IAAgB8G,aAAa,CACzB,QAAS,2BACTnD,SACAE,YACA+T,UAIR,EAAKkI,SAAS,CACVlI,YAxKW,IAGPhV,EAAkBsoC,IAAlBtoC,QAASmvB,EAASmZ,IAATnZ,KAHF,EAIyB,EAAKvS,MAArC7b,EAJO,EAIPA,OAAQE,EAJD,EAICA,UAAWynB,EAJZ,EAIYA,SAErBwf,EAASloC,GAAWA,EAAQgB,UAAYD,GAAUf,EAAQnC,KAAOoD,EACjE+uB,EAAckY,GAAU/Y,EAAOA,EAAKa,YAAc,EAClDuZ,EAAgBrB,GAAU/Y,GAAQA,EAAKzG,SAAWyG,EAAKzG,SAAWA,EARzD,OAUf,EAAKpL,MAAQ,CACT4qB,OAAQA,EACRlY,YAAaA,EACbtH,SAAU6gB,EACVv0B,MAAO,EAAKo6B,SAASpf,EAAauZ,EAAerB,IAdtC,E,mFAkBGzU,EAAWC,GAAY,IAAD,EACdtvB,KAAKkZ,MAAvB4qB,EADgC,EAChCA,OAAQlzB,EADwB,EACxBA,MAEhB,OAAI0e,EAAU1e,QAAUA,GAIpB0e,EAAUwU,SAAWA,I,0CAQzBI,IAAYjrC,GAAG,0BAA2B+G,KAAKikC,2BAC/CC,IAAYjrC,GAAG,wBAAyB+G,KAAKilC,yBAC7Cf,IAAYjrC,GAAG,uBAAwB+G,KAAK6jC,0B,6CAI5CK,IAAY/qC,IAAI,0BAA2B6G,KAAKikC,2BAChDC,IAAY/qC,IAAI,wBAAyB6G,KAAKilC,yBAC9Cf,IAAY/qC,IAAI,uBAAwB6G,KAAK6jC,0B,+BAmIvC,IAAD,EACwB7jC,KAAKwY,MAA1BqM,EADH,EACGA,UAAW9hB,EADd,EACcA,MACX6N,EAAU5Q,KAAKkZ,MAAftI,MAER,OACI,yBAAKiU,UAAWC,IAAW,oBAAqBD,GAAY9hB,MAAOA,GAC/D,kBAAC,IAAD,CACI8hB,UAAU,8BACVlL,QAAS,CACL2xB,MAAO,0BACPC,MAAO,0BACPzH,OAAQ,4BAEZ0H,IAAK,EACL/kB,IAAK,EACLglB,KAAM,IACN76B,MAAOA,EACP86B,SAAU1rC,KAAKqrC,aACfM,kBAAmB3rC,KAAKorC,sBACxBQ,YAAa5rC,KAAKmrC,uB,GAhMRjxB,IAAMC,YA6MrB4wB,O,uPCnMTc,EAAc,CAChB5a,OAAQ,8BAGNpH,E,YACF,WAAYrR,GAAQ,IAAD,uBACf,4CAAMA,KAmGVknB,gBAAkB,WACd,IAAMlT,EAAS,EAAKmT,SAAS3iB,QAC7B,GAAIwP,EACA,IACI,EAAK+G,SACL,EAAKK,eACJ,EAAKb,iBACL,EAAKG,wBACL,EAAKX,OAGH,CACH,GAAI,EAAKrZ,MAAM4qB,OACX,OAGJtX,EAAO+I,aANP/I,EAAO0H,QA9GA,EAyHnB5B,iCAAmC,SAAA/5B,GAC/B,EAAKg6B,OAAS9a,QAAQ+a,IAAiBC,cAEvC,EAAKiN,mBA5HU,EA+HnBzM,wCAA0C,SAAA16B,GACtC,EAAK26B,uBAAyBzb,QAAQob,IAAiBM,2BAEvD,EAAKuM,mBAlIU,EAqInB5M,iCAAmC,SAAAv6B,GAC/B,EAAKw6B,gBAAkBtb,QAAQob,IAAiBG,oBAEhD,EAAK0M,mBAxIU,EA2InBhM,0BAA4B,SAAAn7B,GACxB,EAAKq7B,cAAgBr7B,EAAOo7B,QAE5B,EAAK+L,mBA9IU,EAiJnBpM,6BAA+B,SAAA/6B,GAAW,IAAD,EACP,EAAKigB,MAA3B7b,EAD6B,EAC7BA,OAAQE,EADqB,EACrBA,UACVgV,EAAG,UAAMlV,EAAN,YAAgBE,GAEzB,EAAK02B,OAASh7B,EAAOoL,SAAS/J,IAAIiY,GAElC,EAAK6tB,mBAvJU,EA0JnBoM,iCAAmC,SAAAvzC,GAAW,IAAD,EACX,EAAKigB,MAA3B7b,EADiC,EACjCA,OAAQE,EADyB,EACzBA,UACZF,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,YAClC,EAAK8iC,SAAS3iB,SAEzB,EAAKlE,SAAS,CAAEizB,UAAWxzC,EAAOuzB,QAAU,WACxC,EAAKkgB,qBAhKF,EAsKnB/G,wBAA0B,SAAA1sC,GAAW,IAAD,EACF,EAAKigB,MAA3B7b,EADwB,EACxBA,OAAQE,EADgB,EAChBA,UACZF,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,YAClC,EAAK8iC,SAAS3iB,SAEzB,EAAKlE,SAAS,CACV8S,YAAarzB,EAAOqzB,YACpBqgB,cAAe1zC,EAAO+rB,aA7KnB,EAmLnBuf,uBAAyB,SAAAtrC,GAAW,IAAD,EACD,EAAKigB,MAA3B7b,EADuB,EACvBA,OAAQE,EADe,EACfA,UAEZF,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,WACjD,EAAKic,SACD,CACIgrB,QAAQ,EACRiI,UAAW,KACXngB,YAAa,GAEjB,WACI,IAAMY,EAAS,EAAKmT,SAAS3iB,QACxBwP,IAEL,EAAKwf,iBAEAtrC,OAAOm0B,UACRrI,EAAO+I,YApMR,EA2MnB0O,0BAA4B,SAAA1rC,GAAW,IAAD,EACJ,EAAKigB,MAA3B7b,EAD0B,EAC1BA,OAAQE,EADkB,EAClBA,UACE,EAAK2b,MAAM/Z,UAArBnC,MAEJK,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,UAC7C,EAAKqc,MAAM4qB,QAEX,EAAKhrB,SAAS,CACVgrB,QAAQ,EACRlY,YAAa,OAGd,EAAK1S,MAAM4qB,QAClB,EAAKhrB,SACD,CACIgrB,QAAQ,EACRiI,UAAW,KACXngB,YAAa,GAEjB,WACI,IAAMY,EAAS,EAAKmT,SAAS3iB,QACxBwP,IAEL,EAAKwf,iBAEAtrC,OAAOm0B,UACRrI,EAAO+I,YArOR,EA4OnB2W,4BAA8B,SAAA3zC,GAAW,IAC7B+D,EAAU,EAAKkc,MAAM/Z,UAArBnC,MACAyC,EAAWxG,EAAXwG,OAEHzC,GAEDA,EAAM7C,KAAOsF,GACb,EAAK+Z,SACD,CACI4c,IAAK7pB,YAAOvP,IAEhB,WACI,EAAK0vC,oBAxPF,EA8PnBG,qCAAuC,SAAA5zC,GAAW,IACtCuE,EAAc,EAAK0b,MAAM/Z,UAAzB3B,UACR,GAAKA,EAAL,CAF6C,IAIrCiC,EAAWxG,EAAXwG,OAEJjC,EAAUd,OAASc,EAAUd,MAAMvC,KAAOsF,GAC1C,EAAKg1B,gBArQM,EAyQnBqY,cAAgB,aAtQZ,EAAKzM,SAAWzlB,IAAM0a,YACtB,EAAKyX,UAAYnyB,IAAM0a,YAJR,IAMPj4B,EAAsB6b,EAAtB7b,OAAQE,EAAc2b,EAAd3b,UACRP,EAAUkc,EAAM/Z,UAAhBnC,MAEAyuB,EAA+BmZ,IAA/BnZ,KAAMnvB,EAAyBsoC,IAAzBtoC,QAASovB,EAAgBkZ,IAAhBlZ,YACjB8Y,EAASloC,GAAWA,EAAQgB,UAAYD,GAAUf,EAAQnC,KAAOoD,EAVxD,OAYf,EAAKqc,MAAQ,CACT4qB,OAAQA,EACRiI,UAAWjI,EAAS9Y,EAAc,KAClC0K,IAAK7pB,YAAOvP,GACZsvB,YAAakY,GAAU/Y,EAAOA,EAAKa,YAAc,EACjDqgB,cAAenI,GAAU/Y,EAAOA,EAAKzG,SAAW,GAGpD,EAAKsP,cAAgBlzB,OAAOm0B,SAC5B,EAAKtB,QAAS,EACd,EAAKR,gBAAkBtb,QAAQob,IAAiBG,oBAChD,EAAKE,uBAAyBzb,QAAQob,IAAiBM,2BACvD,EAAKZ,OAAS9a,QAAQ+a,IAAiBC,cAxBxB,E,8EA2BD,IAAD,EACczyB,KAAKkZ,MAAxB6yB,EADK,EACLA,UAAWrW,EADN,EACMA,IAEblJ,EAASxsB,KAAK2/B,SAAS3iB,QAC7B,GAAKwP,EAEL,GAAIuf,EAEAvf,EAAOuf,UAAYA,MAFvB,CAMA,IAAMjgB,EAASU,EAAOuf,UACtB,GAAIjgB,EAEeA,EAAOwgB,YAEfryC,QAAQ,SAAAqxC,GAEXA,EAAMiB,SAIV/f,EAAOuf,YAEPvf,EAAOuf,UAAY,MAGvB,IAAMhvC,EAASiD,KAAKqsC,UAAUrvB,QACzBjgB,GAEDA,EAAO24B,MAAQA,IACf34B,EAAO24B,IAAMA,EACblJ,EAAOggB,W,0CAKXxsC,KAAKgsC,iBAELhoC,IAAU/K,GAAG,qCAAsC+G,KAAKmsC,sCACxDnoC,IAAU/K,GAAG,4BAA6B+G,KAAKksC,6BAE/CroC,IAAa5K,GAAG,6BAA8B+G,KAAKszB,8BAEnDT,IAAiB55B,GAAG,0BAA2B+G,KAAK0zB,2BACpDb,IAAiB55B,GAAG,iCAAkC+G,KAAK8yB,kCAC3DD,IAAiB55B,GAAG,wCAAyC+G,KAAKizB,yCAClET,IAAiBv5B,GAAG,iCAAkC+G,KAAKsyB,kCAE3D4R,IAAYjrC,GAAG,0BAA2B+G,KAAKikC,2BAC/CC,IAAYjrC,GAAG,iCAAkC+G,KAAK8rC,kCACtD5H,IAAYjrC,GAAG,wBAAyB+G,KAAKilC,yBAC7Cf,IAAYjrC,GAAG,uBAAwB+G,KAAK6jC,0B,6CAI5C7/B,IAAU7K,IAAI,qCAAsC6G,KAAKmsC,sCACzDnoC,IAAU7K,IAAI,4BAA6B6G,KAAKksC,6BAEhDroC,IAAa1K,IAAI,6BAA8B6G,KAAKszB,8BAEpDT,IAAiB15B,IAAI,0BAA2B6G,KAAK0zB,2BACrDb,IAAiB15B,IAAI,iCAAkC6G,KAAK8yB,kCAC5DD,IAAiB15B,IAAI,wCAAyC6G,KAAKizB,yCACnET,IAAiBr5B,IAAI,iCAAkC6G,KAAKsyB,kCAE5D4R,IAAY/qC,IAAI,0BAA2B6G,KAAKikC,2BAChDC,IAAY/qC,IAAI,iCAAkC6G,KAAK8rC,kCACvD5H,IAAY/qC,IAAI,wBAAyB6G,KAAKilC,yBAC9Cf,IAAY/qC,IAAI,uBAAwB6G,KAAK6jC,0B,+BAoLvC,IAAD,EACiD7jC,KAAKwY,MAAtC7b,GADhB,EACG2J,YADH,EACgB3J,QAAQE,EADxB,EACwBA,UAAWwiB,EADnC,EACmCA,UADnC,EAE0Crf,KAAKkZ,MAA5C4qB,EAFH,EAEGA,OAAQlY,EAFX,EAEWA,YAAaqgB,EAFxB,EAEwBA,cAFxB,EAGiDjsC,KAAKwY,MAAM/Z,UAAzDkhB,EAHH,EAGGA,cAAe7iB,EAHlB,EAGkBA,UAAWR,EAH7B,EAG6BA,MAAOgoB,EAHpC,EAGoCA,SAGzC,IADgBzgB,IAAa/J,IAAI6C,EAAQE,GAC3B,OAAO,KAErB,IAAMkG,EAAQ,CAAE0C,MAAO,IAAKC,OAAQ,KACpC,IAAK3C,EAAO,OAAO,KAEnB,IAAM41B,EAAUhZ,EAAgB,2BAA6BA,EAAcre,KAAO,KAC5EkuB,EAAe3jB,YAAO/O,EAAYA,EAAUd,MAAQ,MACpD05B,EAAM7pB,YAAOvP,GACbq5B,EAAYnG,EAAelJ,YAAmBxpB,GAAa2a,QAAQkhB,GAErE7H,EAAW,EACf,GAAImb,GAAiBrgB,EAAa,CAC9B,IAAM6gB,EAAe7gB,EAAc,IACnCkF,EAAW4b,YAAOD,EAAeR,EAAiB,IAAK,EAAG,KAG9D,OACI,yBACIpnB,UAAWC,IAAW,aAAc,CAAE,qBAAsBgf,IAC5D/gC,MAAOA,EACPqW,QAASiG,GACRqW,EACG,oCACI,2BACIM,IAAKh2B,KAAK2/B,SACV9a,UAAWC,IAAW,6BAA8B,oBACpDub,OAAQ7Q,GAAgBmJ,EACxB2H,OAAK,EACLC,UAAQ,EACRtK,MAAI,EACJuK,aAAW,EACX/6B,MAAO1C,EAAM0C,MACbC,OAAQ3C,EAAM2C,OACdinC,UAAW3sC,KAAKosC,eAChB,4BAAQpW,IAAKh2B,KAAKqsC,UAAW3W,IAAK,KAAMltB,KAAK,eAEjD,yBAAKqc,UAAU,qBACX,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CACIlL,QAASkyB,EACT3a,QAAQ,SACRtgB,MAAOkgB,EACPzuB,KAAM,IACN8uB,UAAW,KAGnB,yBAAKtM,UAAU,kBACVH,YAAkBof,EAASnf,KAAKC,MAAMgH,GAAetH,GACtD,kBAAC,IAAD,CAAa3nB,OAAQA,EAAQE,UAAWA,EAAW0yB,KAAM,gBAE7D,yBAAK1K,UAAU,oBACX,kBAAC,IAAD,SAKZ,oCACI,yBAAKA,UAAU,oBACX,yBACIA,UAAWC,IAAW,oBAAqB,CACvC,gBAAiB6Q,EACjB,sBAAuBD,IAAQlG,GAAgBmG,IAEnD5yB,MAAOA,EACP2yB,IAAKlG,GAAgBmJ,EACrB9C,IAAI,MAGZ,yBAAKhR,UAAU,kBACVH,YAAkBJ,GAAY,IAAM/hB,YAAYjG,GACjD,kBAAC,IAAD,CAAaK,OAAQA,EAAQE,UAAWA,EAAW0yB,KAAM,gBAE7D,yBAAK1K,UAAU,oBACX,kBAAC,IAAD,QAIZ,kBAAC,IAAD,CAAclsB,KAAM2D,EAAO6G,UAAQ,EAAC4rB,QAAM,EAAC2B,cAAY,EAACnB,KAAM,kBAAC,IAAD,a,GAzWtDrV,IAAMC,WAwX9B0P,EAAUzP,aAAe,CACrB/X,KAAMkE,IACND,YAAa8d,KAGFyF,O,8IC3YTC,G,wLACQ,IAAD,EACqE9pB,KAAKwY,MAAvE7b,EADH,EACGA,OAAQE,EADX,EACWA,UAAWyB,EADtB,EACsBA,UAAW+gB,EADjC,EACiCA,UAAWrR,EAD5C,EAC4CA,MAAOiO,EADnD,EACmDA,KAAMnP,EADzD,EACyDA,QAC9D,IAAKxO,EAAW,OAAO,KAFlB,IAIGgmB,EAA0BhmB,EAA1BgmB,SAAiB3rB,EAAS2F,EAAhBC,MAElB,OACI,yBAAKsmB,UAAWC,IAAW,aAAc,WAAY,CAAE,cAAe9W,KAClE,kBAAC,IAAD,CAAerR,OAAQA,EAAQE,UAAWA,EAAWlE,KAAMA,EAAM0mB,UAAWA,IAC5E,yBAAKwF,UAAU,sBACX,kBAAC,IAAD,CAAiBloB,OAAQA,EAAQE,UAAWA,EAAWynB,SAAUA,IACjE,yBAAKO,UAAU,mBACX,kBAAC,IAAD,CAAaloB,OAAQA,EAAQE,UAAWA,EAAWynB,SAAUA,EAAU3rB,KAAMA,IAC7E,kBAAC,IAAD,CAAagE,OAAQA,EAAQE,UAAWA,EAAW0yB,KAAM,gBACvDziB,GAAWmP,S,GAfb/B,IAAMC,YA8Bf2P,O,oIC9BT8iB,G,mBACF,WAAYp0B,GAAQ,IAAD,uBACf,4CAAMA,KA6BVqrB,uBAAyB,SAAAtrC,GAAW,IAAD,EACD,EAAKigB,MAA3B7b,EADuB,EACvBA,OAAQE,EADe,EACfA,UAEZF,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,WACjD,EAAKic,SAAS,CACVgrB,QAAQ,EACRtY,SAAS,EACTI,YAAa,KArCN,EA0CnBmY,wBAA0B,SAAAxrC,GAAW,IAAD,EACF,EAAKigB,MAA3B7b,EADwB,EACxBA,OAAQE,EADgB,EAChBA,UAEZF,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,UACjD,EAAKic,SAAS,CAAE0S,SAAS,IAEzB,EAAK1S,SAAS,CAAE0S,SAAS,KAhDd,EAoDnBwY,yBAA2B,SAAAzrC,GAAW,IAAD,EACH,EAAKigB,MAA3B7b,EADyB,EACzBA,OAAQE,EADiB,EACjBA,UAEZF,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,WACjD,EAAKic,SAAS,CAAE0S,SAAS,KAxDd,EA4DnByY,0BAA4B,SAAA1rC,GAAW,IAAD,EACJ,EAAKigB,MAA3B7b,EAD0B,EAC1BA,OAAQE,EADkB,EAClBA,UAEZF,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,UAC5C,EAAKqc,MAAM4qB,QACZ,EAAKhrB,SAAS,CACVgrB,QAAQ,EACRlY,YAAa,EACbJ,SAAS,IAGV,EAAKtS,MAAM4qB,QAClB,EAAKhrB,SAAS,CACVgrB,QAAQ,EACRlY,YAAa,EACbJ,SAAS,KA3EF,IAGP7uB,EAAsB6b,EAAtB7b,OAAQE,EAAc2b,EAAd3b,UAERkuB,EAA2BmZ,IAA3BnZ,KAAMnvB,EAAqBsoC,IAArBtoC,QAAS4vB,EAAY0Y,IAAZ1Y,QACjBsY,EAASloC,GAAWA,EAAQgB,UAAYD,GAAUf,EAAQnC,KAAOoD,EANxD,OAQf,EAAKqc,MAAQ,CACT4qB,OAAQA,EACRtY,UAASsY,GAAStY,EAClBI,YAAakY,GAAU/Y,EAAOA,EAAKa,YAAc,EACjDtH,SAAUwf,GAAU/Y,EAAOA,EAAKzG,SAAW,GAZhC,E,iFAiBf4f,IAAYjrC,GAAG,0BAA2B+G,KAAKikC,2BAC/CC,IAAYjrC,GAAG,wBAAyB+G,KAAK+jC,yBAC7CG,IAAYjrC,GAAG,yBAA0B+G,KAAKgkC,0BAC9CE,IAAYjrC,GAAG,uBAAwB+G,KAAK6jC,0B,6CAI5CK,IAAY/qC,IAAI,0BAA2B6G,KAAKikC,2BAChDC,IAAY/qC,IAAI,wBAAyB6G,KAAK+jC,yBAC9CG,IAAY/qC,IAAI,yBAA0B6G,KAAKgkC,0BAC/CE,IAAY/qC,IAAI,uBAAwB6G,KAAK6jC,0B,+BAqDvC,IAAD,EACuB7jC,KAAKwY,MAAzB7f,EADH,EACGA,KAAM0mB,EADT,EACSA,UACNmM,EAAYxrB,KAAKkZ,MAAjBsS,QAER,OACI,kBAAC,IAAD,CACI1uB,UAAW,KACXnE,KAAMA,EACN0mB,UAAWA,EACXkQ,KAAM,kBAAC,IAAD,MACNqB,aAAcpF,EAAU,kBAAC,IAAD,MAAgB,kBAAC,IAAD,Y,GA3F5BtR,IAAMC,YAwGnByyB,O,gDCxHf,4BASeriB,gBACX,0BAAMnO,EAAE,2nCACR,U,8LCkDEywB,E,WACF,WAAYC,GAAY,oBACpB9sC,KAAK8sC,UAAYA,EACjB9sC,KAAKwI,KAAO,EACZxI,KAAK+sC,UAAY,EACjB/sC,KAAKgtC,KAAO,EACZhtC,KAAKitC,SAAW,EAChBjtC,KAAKktC,WAAY,EACjBltC,KAAKmtC,eAAgB,EAErBntC,KAAK6B,EAAI,EACT7B,KAAKm6B,EAAI,EACTn6B,KAAKotC,SAAW,EAChBptC,KAAKqtC,MAAQ,EACbrtC,KAAKstC,MAAQ,E,iDAGZC,GACDA,EAAIC,UAAYxtC,KAAK+sC,UAEH,IAAd/sC,KAAKwI,MACL+kC,EAAIE,YACJF,EAAIG,IAAI1tC,KAAK6B,EAAG7B,KAAKm6B,EAAGn6B,KAAKitC,SAAU,EAAa,EAAVtoB,KAAKgpB,IAAQ,GACvDJ,EAAI9G,SAEJ8G,EAAIK,OACJL,EAAIM,UAAU7tC,KAAK6B,EAAG7B,KAAKm6B,GAC3BoT,EAAIO,OAAQ9tC,KAAKotC,SAAWzoB,KAAKgpB,GAAM,KA7DnD,SAAmBJ,EAAK1rC,EAAGs4B,EAAG10B,EAAOC,EAAQqoC,EAAQtH,EAAMH,GAOvD,GANsB,qBAAXA,IACPA,GAAS,GAES,qBAAXyH,IACPA,EAAS,GAES,kBAAXA,EACPA,EAAS,CAAEC,GAAID,EAAQE,GAAIF,EAAQG,GAAIH,EAAQI,GAAIJ,OAChD,CACH,IAAIK,EAAgB,CAAEJ,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC/C,IAAK,IAAInB,KAAQoB,EACbL,EAAOf,GAAQe,EAAOf,IAASoB,EAAcpB,GAGrDO,EAAIE,YACJF,EAAIc,OAAOxsC,EAAIksC,EAAOC,GAAI7T,GAC1BoT,EAAIe,OAAOzsC,EAAI4D,EAAQsoC,EAAOE,GAAI9T,GAClCoT,EAAIgB,iBAAiB1sC,EAAI4D,EAAO00B,EAAGt4B,EAAI4D,EAAO00B,EAAI4T,EAAOE,IACzDV,EAAIe,OAAOzsC,EAAI4D,EAAO00B,EAAIz0B,EAASqoC,EAAOG,IAC1CX,EAAIgB,iBAAiB1sC,EAAI4D,EAAO00B,EAAIz0B,EAAQ7D,EAAI4D,EAAQsoC,EAAOG,GAAI/T,EAAIz0B,GACvE6nC,EAAIe,OAAOzsC,EAAIksC,EAAOI,GAAIhU,EAAIz0B,GAC9B6nC,EAAIgB,iBAAiB1sC,EAAGs4B,EAAIz0B,EAAQ7D,EAAGs4B,EAAIz0B,EAASqoC,EAAOI,IAC3DZ,EAAIe,OAAOzsC,EAAGs4B,EAAI4T,EAAOC,IACzBT,EAAIgB,iBAAiB1sC,EAAGs4B,EAAGt4B,EAAIksC,EAAOC,GAAI7T,GAC1CoT,EAAIiB,YACA/H,GACA8G,EAAI9G,OAEJH,GACAiH,EAAIjH,SAgCAmI,CAAUlB,GAAMvtC,KAAKitC,UAAW,EAAmB,EAAhBjtC,KAAKitC,SAAc,EAAG,GAAG,GAAM,GAClEM,EAAImB,a,6BAILC,GACH,IAAMC,EAAWD,EAAK,GAGtB,GAFA3uC,KAAK6B,GAAK7B,KAAKqtC,MAAQuB,EACvB5uC,KAAKm6B,GAAKn6B,KAAKstC,MAAQsB,EACA,IAAnB5uC,KAAKktC,UAAiB,CAEC,IAAnBltC,KAAKktC,WACLltC,KAAKqtC,OAFE,GAEYuB,EAAW,IAC1B5uC,KAAKqtC,OAHF,KAIHrtC,KAAKktC,UAAY,KAGrBltC,KAAKqtC,OAPE,GAOYuB,EAAW,IAC1B5uC,KAAKqtC,QARF,KASHrtC,KAAKktC,UAAY,SAIP,IAAdltC,KAAKgtC,KACDhtC,KAAKqtC,MAAQ,IACbrtC,KAAKqtC,OAAoB,IAAXuB,EACV5uC,KAAKqtC,OAAS,IACdrtC,KAAKqtC,MAAQ,EACbrtC,KAAKktC,UAAYltC,KAAKmtC,gBAI1BntC,KAAKqtC,MAAQ,IACbrtC,KAAKqtC,OAAoB,IAAXuB,EACV5uC,KAAKqtC,OAAS,IACdrtC,KAAKqtC,MAAQ,EACbrtC,KAAKktC,UAAYltC,KAAKmtC,gBAKtC,IACM0B,EAAc7uC,KAAKstC,OADb,GAiBZ,OAfIttC,KAAKstC,OAFG,GAGRttC,KAAKstC,OAAU,EAAM,EAAOsB,EAAW5uC,KAAK8sC,UAAUgC,UAEtD9uC,KAAKstC,OAAU,EAAM,EAAOsB,EAE5BC,GAAe7uC,KAAKstC,OAPZ,IAQRttC,KAAK8sC,UAAUiC,mBAED,IAAd/uC,KAAKwI,OACLxI,KAAKotC,UAAuB,GAAXwB,EACb5uC,KAAKotC,SAAW,MAChBptC,KAAKotC,UAAY,MAIlBptC,KAAKm6B,GAAKn6B,KAAK8sC,UAAUkC,wB,KAIxC,SAAShlB,EAAawhB,EAAK/kB,GAGvB,OAFA+kB,EAAM7mB,KAAK6C,KAAKgkB,GAChB/kB,EAAM9B,KAAKC,MAAM6B,GACV9B,KAAKC,MAAMD,KAAK6M,UAAY/K,EAAM+kB,IAAQA,E,IAG/CyD,E,WAGF,WAAYC,GAAU,oBAClBlvC,KAAKkvC,QAAUA,EACflvC,KAAKmvC,eAAiB,GACtBnvC,KAAKovC,mBAAqB,GAC1BpvC,KAAKqvC,UAAY,GACjBrvC,KAAK8uC,UAAY,EACjB9uC,KAAK+uC,iBAAmB,E,gEAIxB,OAAO/uC,KAAKkvC,QAAQI,OAAOC,e,yCAI3B,OAAOvvC,KAAKkvC,QAAQI,OAAOE,c,qCAGhBC,GACX,IAAMC,EAAW,IAAI7C,EAAS7sC,MAU9B,GATA0vC,EAAS3C,UAAYkC,EAAUU,OAAO3lB,EAAa,EAAGilB,EAAUU,OAAO1xC,SACvEyxC,EAASlnC,KAAOwhB,EAAa,EAAG,GAChC0lB,EAAS1C,KAAOhjB,EAAa,EAAG,GAChC0lB,EAASvC,cAAgB,EAAInjB,EAAa,EAAG,GACvB,IAAlB0lB,EAASlnC,KACTknC,EAASzC,SAAW,EAAoB,EAAhBtoB,KAAK6M,SAE7Bke,EAASzC,SAAW,EAAoB,EAAhBtoB,KAAK6M,SAE7Bie,EACAC,EAASvV,GAAKxV,KAAK6M,SAAWxxB,KAAKgvC,oBAAsB,IACzDU,EAAS7tC,EAAI,EAAImoB,EAAa,EAAGhqB,KAAK4vC,mBAAqB,IAC3DF,EAASxC,UAAYwC,EAASvC,kBAC3B,CACH,IAAM0C,EAAU,EAAI7lB,EAAa,EAAG,IAC9B8lB,EAAU9vC,KAAKgvC,oBAAsB,EACrB,IAAlBU,EAAS1C,KACT0C,EAAS7tC,GAAKguC,EAEdH,EAAS7tC,EAAI7B,KAAK4vC,mBAAqBC,EAE3CH,EAAStC,SAA2B,IAAhBzoB,KAAK6M,SACzBke,EAASrC,OAA2B,IAAlBqC,EAAS1C,KAAa,GAAK,IAAM,IAAsB,EAAhBroB,KAAK6M,UAC9Dke,EAASpC,QAAU,EAAoB,EAAhB3oB,KAAK6M,UAC5Bke,EAASvV,EAAI2V,EAAU,EAAI9lB,EAAa,EAAa,EAAV8lB,GAG/C,OAAOJ,I,8BAIP,IAAI1vC,KAAK+vC,QAAT,CAIA/vC,KAAKqvC,UAAY,GACjBrvC,KAAK+vC,SAAU,EACf/vC,KAAKgwC,aAAc,EACnBhwC,KAAK+uC,iBAAmB,EACxB/uC,KAAK8uC,UAAY,EACjB9uC,KAAKiwC,eAAiB,EACtB,IAAK,IAAIz3C,EAAI,EAAGA,EAAIwH,KAAKmvC,eAAgB32C,IACrCwH,KAAKqvC,UAAUnvC,KAAKF,KAAKkwC,gBAAe,IAG5ClwC,KAAKmwC,U,kCAIL,IAAInwC,KAAKgwC,YAAT,CAGAhwC,KAAKgwC,aAAc,EACnB,IAAK,IAAIx3C,EAAI,EAAGA,EAAIwH,KAAKovC,mBAAoB52C,IACzCwH,KAAKqvC,UAAUnvC,KAAKF,KAAKkwC,gBAAe,O,6BAIxC,IAAD,OACGE,EAAUp9B,KAAKI,MACjBu7B,EAAKyB,EAAUpwC,KAAKiwC,eACxBjwC,KAAKiwC,eAAiBG,EAClBzB,EAAK,KACLA,EAAK,IAGT3uC,KAAKkvC,QAAQmB,UAAU,EAAG,EAAGrwC,KAAK4vC,mBAAoB5vC,KAAKgvC,qBAC3D,IAAK,IAAIx2C,EAAI,EAAGoiC,EAAI56B,KAAKqvC,UAAUpxC,OAAQzF,EAAIoiC,EAAGpiC,IAAK,CACnD,IAAM83C,EAAItwC,KAAKqvC,UAAU72C,GACzB83C,EAAEH,KAAKnwC,KAAKkvC,SACRoB,EAAE/3C,OAAOo2C,KACT3uC,KAAKqvC,UAAUhuB,OAAO7oB,EAAG,GACzBA,IACAoiC,KAGJ56B,KAAK+uC,kBAAoB/uC,KAAKmvC,eAAiB,GAAKnvC,KAAK8uC,UAAY,KACrE9uC,KAAKuwC,YACLvwC,KAAK8uC,WAAcH,EAAK,GAAQ,IAC5B3uC,KAAK8uC,UAAY,KACjB9uC,KAAK8uC,UAAY,KAGrB9uC,KAAKqvC,UAAUpxC,OACfyC,OAAO8vC,sBAAsB,kBAAM,EAAKL,UAExCnwC,KAAK+vC,SAAU,EACf/vC,KAAKkvC,QAAQmB,UAAU,EAAG,EAAGrwC,KAAK4vC,mBAAoB5vC,KAAKgvC,0B,KA7GjEC,EACKU,OAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,W,IA2L7Dc,E,YAzEX,WAAYj4B,GAAQ,IAAD,8BACf,4CAAMA,KAqCVk4B,SAAW,WACP,IAAMpB,EAAS,EAAKqB,UAAU3zB,QACzBsyB,IAELA,EAAOpsC,aAAa,QAAS,EAAK0tC,WAAWpB,YAAc,IAC3DF,EAAOpsC,aAAa,SAAU,EAAK0tC,WAAWrB,aAAe,MAxC7D,EAAKoB,UAAYz2B,IAAM0a,YAHR,E,iFAOf50B,KAAK6wC,mB,6CAIL7wC,KAAK8wC,qB,uCAIL,IAAMxB,EAAStvC,KAAK2wC,UAAU3zB,QAC9B,GAAKsyB,EAAL,CAEA,IAAMsB,EAAatB,EAAOsB,WACrBA,IAEL5wC,KAAK4wC,WAAaA,EAClBtB,EAAOpsC,aAAa,QAASlD,KAAK4wC,WAAWpB,YAAc,IAC3DF,EAAOpsC,aAAa,SAAUlD,KAAK4wC,WAAWrB,aAAe,IAC7D7uC,OAAOqwC,iBAAiB,SAAU/wC,KAAK0wC,c,yCAIvC,IAAMpB,EAAStvC,KAAK2wC,UAAU3zB,QACzBsyB,IAEcA,EAAOsB,aAG1B5wC,KAAK4wC,WAAa,KAClBlwC,OAAOswC,oBAAoB,SAAUhxC,KAAK0wC,c,8BAY1C,IAAMnD,EAAMvtC,KAAK2wC,UAAU3zB,QAAQi0B,WAAW,MAE5B,IAAIhC,EAAU1B,GACtBzyB,U,+BAIV,OACI,4BACIkb,IAAKh2B,KAAK2wC,UACV5tC,MAAO,CACH4tB,OAAQ,EACRugB,SAAU,WACV5wB,KAAM,EACN6wB,IAAK,EACL1rC,MAAO,OACPC,OAAQ,OACR0rC,cAAe,c,GAjEFl3B,IAAMC,W,mCCtQxBoQ,cACX,0BAAMnO,EAAE,+bACR,S,6CCwCWi1B,G,wLAnCD,IAAD,EAC6CrxC,KAAKwY,MAA/C84B,EADH,EACGA,OAAQC,EADX,EACWA,YAAaC,EADxB,EACwBA,OAAQ9F,EADhC,EACgCA,SAErC,OACI,yBAAK7mB,UAAWC,IAAW,aAAc,CAAE,oBAAqB0sB,KAC5D,kBAACC,EAAA,EAAD,CACIzsB,MAAM,UACNrL,QAAS,CACLC,KAAM,kBACN83B,aAAc,kBACdC,SAAU,4BAEdC,iBAAkB,CAAEj4B,QAAS,CAAEk4B,MAAO,+BACtCC,QAASR,GAAUC,EACnB7F,SAAUA,EACVqG,YAAa,kBAAC,IAAD,CAAwBp4B,QAAS,CAAEC,KAAM23B,EAAc,kBAAoB,UAE3FA,GACG,kBAACS,EAAA,EAAD,CACI3vC,KAAM,GACN8uB,UAAW,IACXxX,QAAS,CAAEC,KAAM,2BAA4B83B,aAAc,0B,GAtB3Dx3B,IAAMC,Y,QCmHf83B,G,mBArHX,WAAYz5B,GAAQ,IAAD,uBACf,4CAAMA,KA8DV05B,gBAAkB,WACd,EAAKC,gBAEL,EAAKC,OAAS5B,sBAAsB,EAAK6B,mBAlE1B,EAqEnBF,cAAgB,WACP,EAAKC,SAEVE,qBAAqB,EAAKF,QAC1B,EAAKA,OAAS,OAzEC,EA4EnBC,iBAAmB,WAAO,IAAD,EACW,EAAKn5B,MAA7Bq5B,EADa,EACbA,UAAWC,EADE,EACFA,KAAMC,EADJ,EACIA,GAEnBC,EAAa1/B,KAAKI,MAAQm/B,EAEhC,GAAIG,GAAcC,IACd,EAAK75B,SAAS,CAAE85B,SAAUH,IAC1B,EAAKN,oBACF,CACH,IAAMS,EAAWJ,EAAO7tB,KAAKC,OAAQ6tB,EAAKD,GAAQE,EAAcC,KAChE,EAAK75B,SAAS,CAAE85B,aAChB,EAAKR,OAAS5B,sBAAsB,EAAK6B,oBApF7C,EAAKD,OAAS,KAHC,IAKPxhC,EAAU4H,EAAV5H,MALO,OAOf,EAAKsI,MAAQ,CACTs5B,KAAM5hC,EACN6hC,GAAI7hC,EACJgiC,SAAUhiC,EAEViiC,eAAgBjiC,GAZL,E,mFAgBGye,EAAWC,EAAW4F,GAAc,IAAD,EACpBl1B,KAAKwY,MAA9Bs6B,EAD6C,EAC7CA,OAAQ1N,EADqC,EACrCA,MAAOx0B,EAD8B,EAC9BA,MACfgiC,EAAa5yC,KAAKkZ,MAAlB05B,SAER,OAAIE,IAAWzjB,EAAUyjB,SAIrB1N,IAAU/V,EAAU+V,QAIpBx0B,IAAUye,EAAUze,OAIpBgiC,IAAatjB,EAAUsjB,a,yCAqBZxd,EAAWC,EAAWC,GACjCF,EAAUxkB,QAAU5Q,KAAKwY,MAAM5H,OAC/B5Q,KAAKkyC,oB,6CAKTlyC,KAAKmyC,kB,+BA+BC,IAAD,EAC+BnyC,KAAKwY,MACjCo6B,GAFH,EACGtB,OADH,EACWwB,OADX,EACmB15B,QACHpZ,KAAKkZ,MAAlB05B,UAER,OACI,yBAAK/tB,UAAU,mBAQX,oCAAG+tB,EAAW,S,gDAjEMp6B,EAAOU,GACnC,OAAIV,EAAM5H,QAAUsI,EAAM25B,eACf,CACHN,UAAWv/B,KAAKI,MAChBo/B,KAAMt5B,EAAM05B,SACZH,GAAIj6B,EAAM5H,MAEViiC,eAAgBr6B,EAAM5H,OAIvB,S,GAnDcsJ,IAAMC,YCM7B44B,G,kNACFC,eAAiB,SAAC/+B,GAA2B,IAApBhG,EAAmB,uDAAf,SAAA4D,GAAG,OAAIA,GACxBohC,EAAkB,EAAKz6B,MAAvBy6B,cACR,OAAIA,EAAsB,KAErBh/B,EACS,IAAVA,EAAoB,SAEjBA,EAAQ,SAHIhG,EAAE,WAAWrC,e,EAMpC6M,YAAc,SAAAhX,GAAU,IAAD,EACe,EAAK+W,MAA/By6B,EADW,EACXA,cAAeC,EADJ,EACIA,OAClBD,IAELxxC,EAAMiX,kBAENw6B,M,wEAGM,IAAD,EACkFlzC,KAAKwY,MAApFmvB,EADH,EACGA,OAAQ+D,EADX,EACWA,SAAUuH,EADrB,EACqBA,cAAeH,EADpC,EACoCA,OAAQK,EAD5C,EAC4CA,cAAellC,EAD3D,EAC2DA,EAAGzF,EAD9D,EAC8DA,KAAM4qC,EADpE,EACoEA,UACzE,IAAKzL,EAAQ,OAAO,KAFf,IAIG16B,EAAmF06B,EAAnF16B,KAAMomC,EAA6E1L,EAA7E0L,YAAaC,EAAgE3L,EAAhE2L,gBAAiB7vB,EAA+CkkB,EAA/ClkB,UAAW8vB,EAAoC5L,EAApC4L,eAAgB7vB,EAAoBikB,EAApBjkB,gBAEnE9S,EAAQ,IAKZ,OAJIyiC,IACAziC,EAASyiC,EAAcF,EAAiB,KAIxC,yBAAKtuB,UAAU,cAAczL,QAASpZ,KAAKyY,aACvC,yBACIoM,UAAWC,IACP,sBACAmuB,EAAgB,yBAA2B,yBAE/C,yBAAKpuB,UAAU,2BAA2B7W,MAAOhO,KAAKgzC,eAAeK,EAAaplC,IAC9E,kBAAC,EAAD,CAAgB2C,MAAO0iC,EAAiBhC,OAAQ7tB,EAAWqvB,OAAQA,IACnE,kBAAC,EAAD,CACItB,QAASyB,EACT3B,OAAQ7tB,GAAa8vB,EACrBhC,YAAa7tB,EACbgoB,SAAUA,KAEZjoB,GAAa2vB,IACX,yBACIvuB,UAAWC,IACP,mBACA,CAAE,2BAAqC,YAATtc,GAC9B,CAAE,6BAAuC,cAATA,KAE1B,cAATA,EACG,kBAACgrC,EAAA,EAAD,CAAW3uB,UAAU,0BAErB,kBAAC4uB,EAAD,CAAW5uB,UAAU,2BAIjC,yBAAKA,UAAU,oBAAoB5X,KAG3C,kBAACymC,EAAA,EAAD,CACI/5B,QAAS,CACLC,KAAM,4BACN+5B,IAAK7uB,IACD,2BACA,CAAE,mCAA6C,YAATtc,GACtC,CAAE,qCAA+C,cAATA,KAGhDwc,MAAM,UACNkM,QAAQ,cACRtgB,MAAOqiC,EAAgB,EAAItuB,KAAK8B,IAAI,IAAK7V,U,GA1EpCsJ,IAAMC,YA0FhBE,gBAAkB04B,G,gHChG3Ba,G,+LACQ,IAAD,EACyB5zC,KAAKwY,MAA3BjP,EADH,EACGA,MAAOk2B,EADV,EACUA,WAEToU,EAAU,UAAM,GAAuB,GAAlBlvB,KAAKmvB,IAAIvqC,GAApB,KACVwqC,EAAY,UAAM,GAAuB,GAAlBpvB,KAAKqvB,IAAIzqC,GAApB,KAElB,OACI,yBAAKsb,UAAU,oBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,2BAA2B9hB,MAAO,CAAE0C,MAAOouC,KAC1D,yBAAKhvB,UAAU,2BAA2B9hB,MAAO,CAAE0C,MAAOsuC,EAAcE,WAAY,MAEvFxU,GACG,yBAAK5a,UAAU,mBACX,yBAAKA,UAAU,6BAA6B9hB,MAAO,CAAE0C,MAAOsuC,a,GAlB9D75B,IAAMC,YAiCpCy5B,EAAgBx5B,aAAe,CAC3BqlB,YAAY,GAGDmU,Q,SCGAM,G,kNAnCX96B,QAAU,WAAO,IACLlX,EAAW,EAAKsW,MAAhBtW,OACHA,IAEL2W,YAAS3W,GAAQ,GAEjB6uB,WAAW,WACP/3B,IAAgB8G,aAAa,CACzB,QAAS,kCAEd,K,wEAGG,IAAD,EACqBE,KAAKwY,MAAvBjP,EADH,EACGA,MAAOrH,EADV,EACUA,OAETrG,EAAUqG,EACZ,kBAACs9B,EAAA,EAAD,CAAMt9B,OAAQA,EAAQu9B,YAAY,IAElC,kBAAC,EAAD,CAAiBl2B,MAAOA,EAAOk2B,YAAY,IAG/C,OACI,kBAAC0U,EAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAU,iBAAiBzL,QAASpZ,KAAKoZ,SACrDvd,O,GAzBcqe,IAAMC,Y,kBCG/Bk6B,G,yBACF,WAAY77B,GAAQ,IAAD,uBACf,4CAAMA,KA4DV87B,eAAiB,WAAO,IACZ3M,EAAW,EAAKnvB,MAAhBmvB,OACA1zB,EAAU,EAAKiF,MAAfjF,MAEFsgC,EAAYtgC,EACZugC,EAAW7vB,KAAK6mB,IAAI7D,EAAO0L,YAAap/B,EAAQwgC,KAEtD,EAAK37B,SACD,CACI7I,OAAQskC,EACRtgC,MAAOugC,GAEX,WACI,EAAKE,aAAaH,EAAWC,GAAU,MA1EhC,EA+EnBG,eAAiB,SAAAlzC,GACbA,EAAMkX,iBACNlX,EAAMiX,kBAFgB,IAIdivB,EAAW,EAAKnvB,MAAhBmvB,OAEF1zB,EACF0zB,GAAUA,EAAO0L,aAAeuB,IAC1BjN,EAAO0L,YACPuB,IAAkCC,IAE5C,EAAK/7B,SAAS,CACVg8B,OAAQ,EAAK57B,MAAM47B,OAAOpjB,MAAM,EAAGzd,GACnChE,OAAQ,EACRgE,WA7FW,IAGP0zB,EAAW,EAAKnvB,MAAhBmvB,OAEF1zB,EACF0zB,GAAUA,EAAO0L,aAAeuB,IAC1BjN,EAAO0L,YACPuB,IAAkCC,IAR7B,OAUf,EAAK37B,MAAQ,CACT47B,OAAQ,GACR7kC,OAAQ,EACRgE,SAbW,E,kHAiBAhE,EAAQgE,EAAO8gC,G,kGACkB/0C,KAAKwY,MAA7C7b,E,EAAAA,OAAQE,E,EAAAA,UAAWm4C,E,EAAAA,SAAUrN,E,EAAAA,OAC7BmN,EAAW90C,KAAKkZ,MAAhB47B,SACJ7gC,GAAS,G,wDAEPoY,EAAQpY,EAAQhE,E,SAEDjX,IAAgBmI,KAAK,CACtC,QAAS,gBACTvE,QAASD,EACTgiB,WAAY9hB,EACZo4C,UAAWD,EACX/kC,SACAoc,U,UANEvrB,E,OAUFd,KAAKwY,MAAMmvB,SAAWA,E,mDAIpBlwC,EAAQuM,IAAUhK,WACxB4N,YAAiBnQ,EAAOqJ,EAAOo0C,UAE/Bl1C,KAAK8Y,SACD,CACIg8B,OAAO,GAAD,mBAAMA,GAAN,YAAiBh0C,EAAOo0C,YAFtC,qBAII,4BAAA18C,EAAA,qDACQsI,EAAOo0C,SAASj3C,OAASouB,GAAS0oB,IAC5BI,EAAUllC,EAASnP,EAAOo0C,SAASj3C,OAEzC,EAAKy2C,aAAaS,EAASlhC,GAAO,IAJ1C,0C,oJAUa,IAAD,EACUjU,KAAKkZ,MAAvBjJ,EADQ,EACRA,OAAQgE,EADA,EACAA,MAEhBjU,KAAK00C,aAAazkC,EAAQgE,GAAO,K,+BAuC3B,IAAD,EACyBjU,KAAKwY,MAA3BmvB,EADH,EACGA,OAAQyN,EADX,EACWA,OAAQnnC,EADnB,EACmBA,EADnB,EAEqBjO,KAAKkZ,MAAvB47B,EAFH,EAEGA,OAAQ7gC,EAFX,EAEWA,MAERhH,EAAuC06B,EAAvC16B,KAAMomC,EAAiC1L,EAAjC0L,YAAaC,EAAoB3L,EAApB2L,gBAC3B,GAAoB,IAAhBD,EACA,OAAO,KAIX,IADA,IAAMgC,EAAU,GACPt3C,EAAI,EAAGA,EAAIkW,EAAOlW,IAAK,CAC5B,IAAMmE,EAASnE,EAAI+2C,EAAO72C,OAAS62C,EAAO/2C,GAAK,KAC/Cs3C,EAAQn1C,KAAK,kBAAC,EAAD,CAAkB2R,IAAG,UAAK9T,EAAL,mBAAiBmE,GAAUqH,MAAOxL,EAAGmE,OAAQA,KAGnF,IAAMozC,EACA,UACOjC,EAFM+B,EACG,IAAhB/B,EAAA,qBAGgB,IAAhBA,EAAA,kBAIFkC,EAAiB,KACfC,EAAgBnC,EAAcp/B,EACpC,GAAIuhC,EAAgB,EAAG,CACnB,IAAMC,EACA,UACOD,EAFIJ,EACO,IAAlBI,EAAA,qBAGkB,IAAlBA,EAAA,kBAIND,EACI,kBAACx7B,EAAA,EAAD,CACIJ,QAAS,CAAEC,KAAM,8BACjBoL,MAAM,UACN0wB,WAAS,EACTt8B,QAASpZ,KAAKs0C,gBACbrmC,EAAE,eAAegU,QAAQ,OAAQwzB,IAI9C,IAAME,EACF1hC,EAAQ2gC,IAAkCC,KAC1CxB,EAAcuB,IAElB,OACI,oCACI,yBAAK/vB,UAAU,+BACX,yBAAKA,UAAU,8BAAf,UAAgD5X,EAAhD,mBAA0DqmC,EAA1D,MACCqC,EACG,uBAAGv8B,QAASpZ,KAAK20C,gBAAiB1mC,EAAE,iBAEpC,yBAAK4W,UAAU,6BAA6BywB,IAGnDD,EACAE,O,GA7Jer7B,IAAMC,YA2KvBE,gBAAkBg6B,G,SC7K3BuB,G,kNASFC,+BAAiC,SAAAt9C,IAE7BghB,EADoB,EAAKf,MAAjBe,Y,EAIZP,YAAc,SAAAvX,GACVA,EAAMkX,iBACNlX,EAAMiX,mBAGNa,EADoB,EAAKf,MAAjBe,Y,EAIZd,YAAc,SAAAhX,GACVA,EAAMkX,iBACNlX,EAAMiX,mB,EAGVo9B,kBAAoB,SAAAr0C,GAChBA,EAAMkX,iBACNlX,EAAMiX,mB,mFA3BNq9B,IAAU98C,GAAG,+BAAgC+G,KAAK61C,kC,6CAIlDE,IAAU58C,IAAI,+BAAgC6G,KAAK61C,kC,+BA0B7C,IAAD,EACkC71C,KAAKwY,MAApC7b,EADH,EACGA,OAAQE,EADX,EACWA,UAAWugB,EADtB,EACsBA,KAAMnP,EAD5B,EAC4BA,EACjC,GAAKmP,EAAL,CAFK,IAIGoG,EAA4BpG,EAA5BoG,QAAShb,EAAmB4U,EAAnB5U,KAAM6U,EAAaD,EAAbC,SACjB+3B,EAAS5sC,GAA0B,iBAAlBA,EAAK,SAE5B,OACI,kBAAC6Q,EAAA,EAAD,CACIM,QAAS,CACLC,KAAM,wBACNo8B,UAAW,6BACXC,MAAO,0BAEX38B,mBAAoB,EACpB1Y,MAAM,EACNwY,QAASpZ,KAAKyY,YACdy9B,cAAel2C,KAAK81C,kBACpBv8B,QAASvZ,KAAKgZ,YACdQ,kBAAgB,sBAChB,kBAACC,EAAA,EAAD,CAAahgB,GAAG,sBAA+BwU,EAATmnC,EAAW,cAAmB,gBACpE,kBAAC17B,EAAA,EAAD,CAAeC,QAAS,CAAEC,KAAM,yBAC5B,yBAAKiL,UAAU,yBAAyBxH,GACvCmG,EAAQ5f,IAAI,SAAC/B,EAAG9D,GAAJ,OACT,kBAAC,EAAD,CACI8T,IAAK9T,EACLq3C,OAAQA,EACRz4C,OAAQA,EACRE,UAAWA,EACXm4C,SAAUj3C,EACV4pC,OAAQ9lC,a,GA9DJqY,IAAMC,YA6EvBE,iBAAkBu7B,GCvE3BpsB,G,YACF,WAAYhR,GAAQ,IAAD,8BACf,4CAAMA,KA4BV29B,yBAA2B,SAACliC,GAA2B,IAApBhG,EAAmB,uDAAf,SAAA4D,GAAG,OAAIA,GAC1C,OAAKoC,EACS,IAAVA,EAAoB,WAEjBA,EAAQ,WAHIhG,EAAE,YA9BN,EAoCnBmoC,aAAe,SAAA30C,GACXA,EAAMkX,iBACNlX,EAAMiX,kBAFc,MAIgB,EAAKF,MAAjC7b,EAJY,EAIZA,OAAQE,EAJI,EAIJA,UAAWugB,EAJP,EAIOA,KAC3B,GAAKA,EAAL,CALoB,IAOZ5U,EAAS4U,EAAT5U,KACR,GAAKA,IAED,EAAK6tC,YAAYj5B,IAIhB5U,EAAK8+B,uBAAV,CAIA,IAAMR,EAAY,GAClB1pB,EAAKoG,QAAQvpB,QAAQ,SAAC4H,EAAG0H,GACjB1H,EAAE0xC,gBACFzM,EAAU5mC,KAAKqJ,KAIlBu9B,EAAU7oC,QAIf4oC,YAAclqC,EAAQE,EAAWiqC,MAjElB,EAoEnBwP,WAAa,SAAA/sC,GAAU,IAAD,EACkB,EAAKiP,MAAjC7b,EADU,EACVA,OAAQE,EADE,EACFA,UAAWugB,EADT,EACSA,KAC3B,GAAKA,EAAL,CAFkB,IAIV5U,EAAS4U,EAAT5U,KACHA,IAEiB,oBAAlBA,EAAK,UAAkCA,EAAK8+B,wBAC5ClqB,EAAKoG,QAAQja,GAAOgqC,gBAAkBn2B,EAAKoG,QAAQja,GAAOgqC,eAC1D,EAAKxf,eAEL8S,YAAclqC,EAAQE,EAAW,CAAC0M,OA/EvB,EAmInBgtC,kBAAoB,SAAA90C,GAChBA,EAAMkX,iBACNlX,EAAMiX,kBAFmB,IAIjB0E,EAAS,EAAK5E,MAAd4E,KAER,EAAKtE,SAAS,CACV09B,gBAAiBp5B,KA1IN,EA8InBq5B,mBAAqB,WACjB,EAAK39B,SAAS,CACV09B,gBAAiB,QA7IrB,EAAKE,aAAex8B,IAAM0a,YAC1B,EAAK1b,MAAQ,GAJE,E,gFAOAkc,EAAWC,EAAWC,GAAW,IAAD,EACXt1B,KAAKwY,MAAjC7b,EADuC,EACvCA,OAAQE,EAD+B,EAC/BA,UAAWugB,EADoB,EACpBA,KAE3B,GAAIA,GAA+B,iBAAvBA,EAAK5U,KAAK,YAEuB,IADd4sB,EAAnBhY,KACK5U,KAAKk/B,oBAA6D,IAAjCtqB,EAAK5U,KAAKk/B,mBAA0B,CAC9E,IAAMoF,EAAY9sC,KAAK02C,aAAa15B,QACpC,IAAK8vB,EAAW,OAEZ1vB,EAAKoG,QAAQpG,EAAK5U,KAAKk/B,mBAAmBjkB,UAC1CqpB,EAAUhyB,QAEV9hB,IAAgB8G,aAAa,CACzB,QAAS,2BACTnD,SACAE,iB,kCA6DRugB,GACR,IAAKA,EAAM,OAAO,EADJ,IAGNoG,EAAqCpG,EAArCoG,QAASD,EAA4BnG,EAA5BmG,UACjB,OAD6CnG,EAAjBmqB,eAKrBhkB,GAAaC,EAAQ5hB,KAAK,SAAAC,GAAC,OAAIA,EAAE4hB,e,oCAG9Bla,EAAO6T,GACjB,IAAM6kB,EAAQ,CAAC,UAAW,UAAW,aAIrC,IAAK7kB,EAAM,OAAO6kB,EAHI,GAKtB,IAAM0F,EAASvqB,EAAKoG,QAAQja,GAC5B,IAAKo+B,EAAQ,OAAO1F,EANE,GAOtB,IAAK0F,EAAOlkB,UAAW,OAAOwe,EAPR,GAFC,IAWfz5B,EAAS4U,EAAT5U,KACR,IAAKA,EAAM,OAAOy5B,EAVI,GAWtB,GAAsB,iBAAlBz5B,EAAK,SAA6B,OAAOy5B,EAXvB,GAFC,IAefyF,EAAsBl/B,EAAtBk/B,kBACR,OAA2B,IAAvBA,EAAiCzF,EAdf,GAgBfyF,IAAsBn+B,EAAQ04B,EAff,GAesCA,EAdpC,K,yCAiBT14B,EAAO6T,GACtB,IAAKA,EAAM,OAAO,EAGlB,IADeA,EAAKoG,QAAQja,GACf,OAAO,EAJQ,IAMpBf,EAAS4U,EAAT5U,KACR,IAAKA,EAAM,OAAO,EAClB,GAAsB,iBAAlBA,EAAK,SAA6B,OAAO,EARjB,IAUpBk/B,EAAsBl/B,EAAtBk/B,kBACR,OAA2B,IAAvBA,GAEGA,IAAsBn+B,I,+BAoBvB,IAAD,SACwCvJ,KAAKwY,MAA1C7b,EADH,EACGA,OAAQE,EADX,EACWA,UAAWugB,EADtB,EACsBA,KAAMnP,EAD5B,EAC4BA,EAAGgO,EAD/B,EAC+BA,KAC5Bu6B,EAAoBx2C,KAAKkZ,MAAzBs9B,gBACAn5B,EAA+FD,EAA/FC,SAAUmG,EAAqFpG,EAArFoG,QAASmzB,EAA4Ev5B,EAA5Eu5B,kBAAmBnuC,EAAyD4U,EAAzD5U,KAAM+a,EAAmDnG,EAAnDmG,UAAWgkB,EAAwCnqB,EAAxCmqB,aAAcqP,EAA0Bx5B,EAA1Bw5B,sBAEzE/oC,EAAWI,EAAE,gBACjB,IAAKsV,EACD,OAAQ/a,EAAK,UACT,IAAK,kBACDqF,EAA0BI,EAAfs5B,EAAiB,gBAAqB,cACjD,MAEJ,IAAK,eACD15B,EAA0BI,EAAfs5B,EAAiB,oBAAyB,YAOjE,IADgB1jC,IAAa/J,IAAI6C,EAAQE,GAC3B,OAAO,KAErB,IAAMu4C,EAAS5sC,GAA0B,iBAAlBA,EAAK,SACtByqC,GAAiB1vB,GAAaC,EAAQtT,MAAM,SAAArO,GAAC,OAAKA,EAAE4hB,YACpDozB,GAActzB,GAAaC,EAAQ5hB,KAAK,SAAAC,GAAC,OAAIA,EAAE4hB,YAC/C0vB,EAAgBxuB,KAAK8B,IAAL,MAAA9B,KAAI,YAAQnB,EAAQ5f,IAAI,SAAA/B,GAAC,OAAIA,EAAEwxC,gBAC/CyD,EAAkB92C,KAAKq2C,YAAYj5B,GACnC25B,EAAcvuC,EAAK8+B,yBAA2BuP,GAAeC,EAC7DE,EAAgBF,GAAmBtzB,EAAQ5hB,KAAK,SAAAC,GAAC,OAAIA,EAAE0xC,iBACzD0D,EAAe,GAKnB,OAJIL,IACAK,EAAeL,EAAsBhzC,IAAI,SAAAnK,GAAE,OAAI,kBAAC8rB,EAAA,EAAD,CAAU1T,IAAKpY,EAAI2jB,MAAI,EAAClb,OAAQzI,OAI/E,yBAAKorB,UAAU,QACVuwB,GAAU,kBAAC,EAAD,CAAoBpf,IAAKh2B,KAAK02C,eACzC,yBAAK7xB,UAAU,iBACX,yBAAKA,UAAU,uBAAuBxH,GACtC,yBAAKwH,UAAU,0BACX,0BAAM9hB,MAAO,CAAEm0C,YAAa,IAAMrpC,GACjCopC,IAGT,yBAAKpyB,UAAU,gBACVrB,EAAQ5f,IAAI,SAAC/B,EAAG0H,GAAJ,OACT,kBAAC,EAAD,CACIsI,IAAKtI,EACLf,KAAM,EAAK2uC,cAAc5tC,EAAO6T,GAChCg2B,UAAW,EAAKgE,mBAAmB7tC,EAAO6T,GAC1CuqB,OAAQ9lC,EACRoxC,cAAeA,EACfH,OAAQvvB,EACR4vB,cAAeA,EACfD,OAAQ,kBAAM,EAAKoD,WAAW/sC,SAIzCwtC,EACG,kBAACh9B,EAAA,EAAD,CACI27B,WAAS,EACT1wB,MAAM,UACNrL,QAAS,CACLC,KAAM,cACNy9B,YAAa,kBACb1F,SAAU,4BAEdC,iBAAkB,CAAEj4B,QAAS,CAAEk4B,MAAO,+BACtCF,UAAWqF,EACX59B,QAAS09B,EAAkB92C,KAAKu2C,kBAAoBv2C,KAAKo2C,cACtCnoC,EAAlB6oC,EAAoB,kBAAuB,oBAGhD,yBAAKjyB,UAAU,oBACV7kB,KAAKm2C,yBAAyBQ,EAAmB1oC,GACjDgO,GAGRxE,QAAQ++B,IACL,kBAAC,GAAD,CACI75C,OAAQA,EACRE,UAAWA,EACXugB,KAAMo5B,EACNj9B,QAASvZ,KAAKy2C,0B,GAxOnBv8B,IAAMC,WAuPVE,kBAAkBmP,K,0HCrQlBe,cACX,uBAAG+sB,SAAS,WACR,0BAAMl7B,EAAE,kUACR,0BACIA,EAAE,iTACFqqB,KAAK,UACL1jC,MAAO,CAAEw0C,aAAc,UACvBlT,QAAQ,UAGhB,Y,2BCwFWmT,G,mBA7FX,WAAYh/B,GAAQ,IAAD,uBACf,4CAAMA,KAkBV5f,aAAe,SAAAL,GACX,IAAMg2B,EAAc,EAAKrV,MAAMvgB,KACzB61B,EAAWj2B,EAAOI,KAEpB41B,GAAeA,EAAY90B,KAAO+0B,EAAS/0B,IAC3C,EAAKqf,SAAS,CAAEngB,KAAM61B,EAAUE,SAAUH,KAxB/B,IAGP51B,EAAS,EAAK6f,MAAd7f,KAHO,OAIf,EAAKugB,MAAQ,CACTkW,cAAez2B,EACf+1B,SAAU,KACV/1B,KAAMqL,IAAUlK,IAAInB,EAAKc,KAAOd,GAPrB,E,iFAYfqL,IAAU/K,GAAG,aAAc+G,KAAKpH,gB,6CAIhCoL,IAAU7K,IAAI,aAAc6G,KAAKpH,gB,4CA2Bfy2B,EAAWC,GAAY,IACjC8V,EAAUplC,KAAKwY,MAAf4sB,MADgC,EAEbplC,KAAKkZ,MAAxBvgB,EAFgC,EAEhCA,KAAM+1B,EAF0B,EAE1BA,SAEd,OAAIW,EAAU+V,QAAUA,IAIpB9V,EAAU32B,OAASA,GAInB22B,EAAUZ,WAAaA,K,+BAOrB,IACEzS,EAASjc,KAAKwY,MAAdyD,KACAtjB,EAASqH,KAAKkZ,MAAdvgB,KACR,IAAKA,EAAM,OAAO,KAElB,IAAM0sC,EAAsB1sC,EAAKgB,OAAShB,EAAKgB,MAAMoS,sBAC/Cu5B,EAAoB3sC,EAAKwC,QAAUxC,EAAKwC,OAAO+Q,oBAE/C7J,EAAOE,YAAY5J,GACrBu2B,EAAe,KACfmW,EACAnW,EAAepjB,YAAkBnT,GAC1B2sC,IACPpW,EAAejjB,YAAgBtT,IAGnC,IAAM4sC,EAAarW,EAAY,UAAMA,EAAN,YAAsB7sB,GAAtB,UAAkCA,GAEjE,OACI,yBAAKwiB,UAAU,mBACX,8BAAO0gB,GACNtpB,M,gDAvDmBzD,EAAOU,GAAQ,IACnCvgB,EAAS6f,EAAT7f,KACAy2B,EAAkBlW,EAAlBkW,cAER,OAAIz2B,GAAQy2B,GAAiBz2B,EAAKc,KAAO21B,EAAc31B,GAC5C,CACH21B,cAAez2B,EACf+1B,SAAU,KACV/1B,KAAMqL,IAAUlK,IAAInB,EAAKc,KAAOd,GAIjC,S,GAzCcuhB,IAAMC,YCI7BoP,G,wLACQ,IAAD,EACgEvpB,KAAKwY,MAAlEvc,EADH,EACGA,SAAUojB,EADb,EACaA,UAAW5Z,EADxB,EACwBA,MAAOC,EAD/B,EAC+BA,OAAQuW,EADvC,EACuCA,KAAMjO,EAD7C,EAC6CA,MAAOlB,EADpD,EACoDA,QACzD,IAAK7Q,EAAU,OAAO,KAFjB,IAIG0jB,EAAwC1jB,EAAxC0jB,cAAe7iB,EAAyBb,EAAzBa,UAAWkL,EAAc/L,EAAd+L,UAC5BrP,EAAOsD,EAASA,SAEhB8G,EAAQ0C,GAASC,EAAS,CAAED,QAAOC,UAAW,KASpD,OACI,yBAAKmf,UAAWC,IAAW,WAAY,CAAE,cAAe9W,IAAUjL,MAAOA,GACrE,kBAACuhC,EAAA,EAAD,CACI3kB,cAAeA,EACf7iB,UAAWA,EACXnE,KAAMA,EACN0mB,UAAWA,EACXkQ,KAAM,kBAACkoB,EAAA,EAAD,MACN7mB,aAhBa,SAAA2a,GAAK,OAC1BA,EAAQ,KACJ,yBAAK1mB,UAAU,+BACX,kBAAC,EAAD,CAAcA,UAAU,0BAA0B6yB,QAAQ,cAC1D,yBAAK7yB,UAAU,0BAA0BzY,YAAapE,QAc1D,yBAAK6c,UAAU,oBACX,yBAAKA,UAAU,kBACX,uBACIA,UAAU,gBACVzL,QAASiG,EACTrR,MAAOhG,EACP2vC,YAAW3vC,EACX4vC,WAAU,IAAMxrC,YAAapE,IAC5BA,IAGT,kBAAC,EAAD,CAAgBrP,KAAMA,EAAMsjB,KAAMnP,EAAU,KAAOmP,U,GAtChD/B,IAAMC,YAsDdoP,O,wfCvEfsuB,EAAOC,QAAU,WACf,OAAO,IAAIC,OAAO,IAA0B,oC,gvEC0B/BC,MAff,SAAmCC,GAAmB,IAC5CC,EAD2C,iLAGzC,OACI,kBAAC,mBAAD,CAAkBC,SAAUC,KACxB,kBAACH,EAAqBj4C,KAAKwY,YALM,GACd0B,IAAMC,WAWzC,OAFA+9B,EAAqBG,YAArB,oCAAgEC,YAAeL,GAA/E,KAEOC,G,sFCfI3tB,cACX,0BAAMnO,EAAE,kjBACR,S,mCCGEm8B,G,mBACF,WAAY//B,GAAQ,IAAD,uBACf,4CAAMA,KAmBV4uB,mBAAqB,SAAA7uC,GAAW,IACpB2J,EAAW,EAAKgX,MAAhBhX,OAER,GADoB3J,EAAZ4M,UACQjD,EAAhB,CAEA,IAAMxG,EAAO0J,IAAUtL,IAAIoI,GACtBxG,GAEL,EAAKod,SAAS,CAAE0/B,OAAQhjC,YAAa9Z,OAzBrC,IAAMwG,EAASkI,YAAcoO,EAAM7b,QAC7BjB,EAAO0J,IAAUtL,IAAIoI,GAJZ,OAMf,EAAKgX,MAAQ,CACThX,SACAs2C,OAAQhjC,YAAa9Z,IARV,E,iFAaf0J,IAAUnM,GAAG,mBAAoB+G,KAAKonC,sB,6CAItChiC,IAAUjM,IAAI,mBAAoB6G,KAAKonC,sB,+BAcjC,IAAD,EACwBpnC,KAAKwY,MAA1BnW,EADH,EACGA,KAAMo2C,EADT,EACSA,WAEd,OADmBz4C,KAAKkZ,MAAhBs/B,OAIJ,yBAAK3zB,UAAU,gBAAgB9hB,MAAO,CAAE0C,MAAOpD,EAAMqD,OAAQrD,IACzD,yBAAKwiB,UAAU,qBAAqB9hB,MAAO,CAAE21C,QAASD,IAClD,yBAAK5zB,UAAU,8BALP,S,GAnCD3K,IAAMC,YAqDjCo+B,EAAan+B,aAAe,CACxB/X,KAAM,GACNo2C,WAAY,GAGDF,Q,0BCpDTI,G,mBACF,WAAYngC,GAAQ,IAAD,8BACf,4CAAMA,KAoCVogC,uBAAyB,SAAArgD,GACrB,EAAKw7B,eAtCU,EAyCnB6D,uBAAyB,SAAAr/B,GACF,EAAKigB,MAAhB7b,SAEOpE,EAAOoE,SAElB,EAAKuc,MAAMye,OACX,EAAK7e,SAAS,CAAE6e,QAAQ,IAExB,EAAK5D,gBAjDM,EAqDnB8D,kBAAoB,SAAAt/B,GAAW,IACnBoE,EAAW,EAAK6b,MAAhB7b,OACAC,EAAmBrE,EAAnBqE,QAASZ,EAAUzD,EAAVyD,MAEjB,GAAIY,IAAYD,IAEZ,EAAKuc,MAAMye,OACX,EAAK7e,SAAS,CAAE6e,QAAQ,IAExB,EAAK5D,cAGL/3B,GAAO,CACP,IAAMvE,EAAQuM,IAAUhK,WACxByQ,YAAgBhT,EAAOkF,KAnEZ,EAuEnBm7B,kBAAoB,SAAAv/B,GAAW,IACnBoE,EAAW,EAAK6b,MAAhB7b,OACYpE,EAAZqE,UAEQD,GAEhB,EAAKo3B,eA7EU,EAgFnBgE,aAAe,SAAAt2B,GAAU,IAAD,EACS,EAAK+W,MAA1B7b,EADY,EACZA,OAAQq7B,EADI,EACJA,SACXA,IAELv2B,EAAMiX,kBACNsf,EAASr7B,KArFM,EAwFnBs7B,WAAa,WACT,EAAKnf,SAAS,CAAE6e,QAAQ,KAtFxB,EAAKze,MAAQ,CACTye,QAAQ,GAJG,E,mFAQGtI,EAAWC,GAAY,IACjC3yB,EAAWqD,KAAKwY,MAAhB7b,OACAg7B,EAAW33B,KAAKkZ,MAAhBye,OAER,OAAItI,EAAU1yB,SAAWA,GAIrB2yB,EAAUqI,SAAWA,I,0CAQzB5tB,IAAU9Q,GAAG,mCAAoC+G,KAAK44C,wBACtD7uC,IAAU9Q,GAAG,kBAAmB+G,KAAK63B,mBACrC9tB,IAAU9Q,GAAG,kBAAmB+G,KAAK83B,mBACrC9zB,IAAU/K,GAAG,uBAAwB+G,KAAK43B,0B,6CAI1C7tB,IAAU5Q,IAAI,mCAAoC6G,KAAK44C,wBACvD7uC,IAAU5Q,IAAI,kBAAmB6G,KAAK63B,mBACtC9tB,IAAU5Q,IAAI,kBAAmB6G,KAAK83B,mBACtC9zB,IAAU7K,IAAI,uBAAwB6G,KAAK43B,0B,+BA0DrC,IAAD,EACoF53B,KAAKwY,MAAtF7b,EADH,EACGA,OAAQk8C,EADX,EACWA,WAAY5jC,EADvB,EACuBA,kBAAmB+iB,EAD1C,EAC0CA,SAAU9tB,EADpD,EACoDA,MAAOiuB,EAD3D,EAC2DA,OAAQhuB,EADnE,EACmEA,IAAK9H,EADxE,EACwEA,KAAM4L,EAD9E,EAC8EA,EAC3E0pB,EAAW33B,KAAKkZ,MAAhBye,OAEJ50B,EAAQ,KAQZ,GAPIV,IACAU,EAAQ,CACJ0C,MAAOpD,EACPqD,OAAQrD,IAIZiU,YAAqB3Z,GACrB,OACI,yBACIkoB,UAAWC,IACP,YACA,CAAE,aAAc5a,GAChB,CAAE,cAAeiuB,GACjB,CAAE,WAAYhuB,IAElBpH,MAAOA,EACPqW,QAASpZ,KAAK+3B,cACd,yBAAKlT,UAAWC,IAAW,aAAc,eAAgB,CAAEsT,QAASJ,KAChE,yBAAKnT,UAAU,uBACX,kBAACi0B,EAAA,EAAD,CAAoB5zB,SAAU/a,EAAM,QAAU,eAOlE,GAAI8E,YAAStS,IAAWsY,EACpB,OACI,yBACI4P,UAAWC,IACP,YACA,CAAE,aAAc5a,GAChB,CAAE,cAAeiuB,GACjB,CAAE,WAAYhuB,IAElBpH,MAAOA,EACPqW,QAASpZ,KAAK+3B,cACd,yBAAKlT,UAAWC,IAAW,aAAc,eAAgB,CAAEsT,QAASJ,KAChE,yBAAKnT,UAAU,uBACX,kBAAC,EAAD,CAAoBK,SAAU/a,EAAM,QAAU,eAOlE,IAAM9O,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,KArDb,IAuDGW,EAAUX,EAAVW,MAEFoZ,EAAUD,YAAe9Z,EAAM4S,GAC/BynB,EAAM7pB,YAAO7P,EAAQA,EAAMkO,MAAQ,MACnCmuB,EAAa3C,GAAOiC,EAEpBW,EAAS,qBAAkB3T,KAAK4T,IAAI57B,GAAU,EAAK,GAEzD,OACI,yBACIkoB,UAAWC,IACP,YADiB,eAEdwT,GAAaD,GAChB,CAAED,QAASJ,GACX,CAAE,cAAeG,GACjB,CAAE,aAAcjuB,GAChB,CAAE,WAAYC,IAElBpH,MAAOA,EACPqW,QAASpZ,KAAK+3B,eACZM,GACE,yBAAKxT,UAAU,cACX,0BAAMA,UAAU,aAAazP,IAGpCsgB,GAAO,yBAAK7Q,UAAU,aAAa6Q,IAAKA,EAAK8C,OAAQx4B,KAAKi4B,WAAYrC,WAAW,EAAOC,IAAI,KAC5FgjB,GAAc3iC,YAAcvZ,IAAW,kBAAC,EAAD,CAAcA,OAAQA,S,GA9KvDwd,cA4LvBw+B,EAASv+B,aAAe,CACpBnF,mBAAmB,EACnB4jC,YAAY,GAGDx+B,oBAAkBs+B,GCtM3BI,G,wLACQ,IAAD,EACqC/4C,KAAKwY,MAAvC7b,EADH,EACGA,OAAQq8C,EADX,EACWA,SAAUhhB,EADrB,EACqBA,SAAU/pB,EAD/B,EAC+BA,EAE9BgrC,EAAa1hC,YAAkB5a,GAAQ,EAAMsR,GAEnD,OACI,yBACI4W,UAAWC,IAAW,sBAAuB,CAAE,+BAAgCk0B,IAC/E5/B,QAAS4e,GACT,yBAAKnT,UAAU,4BACX,yBAAKA,UAAU,oCACX,kBAAC,EAAD,CAAUloB,OAAQA,KAErBq8C,GAAY,yBAAKn0B,UAAU,kCAC5B,yBACIA,UAAWC,IACP,2BACAk0B,EAAW,oCAAsC,yCAGzD,yBAAKn0B,UAAU,mCAEnB,yBAAKA,UAAU,6BAA6Bo0B,Q,GAvB5B/+B,IAAMC,YAmCvBE,gBAAkB0+B,GC3C1B,SAAeG,EAAtB,kC,2CAAO,WAAoBjsC,GAApB,SAAAzU,EAAA,kEAEKkK,UAAUy2C,UAFf,gCAGWz2C,UAAUy2C,UAAUC,UAAUnsC,GAHzC,iCAIY,GAJZ,uDAOChS,QAAQC,MAAM,sDAAd,MAPD,iCAUIm+C,EAAQpsC,IAVZ,wD,sBAaP,SAASosC,EAAQpsC,GACb,IAAIqsC,EACAC,EACJ,IAqBI,IApBAD,EAAUr9C,SAAS6G,cAAc,aACzB02C,iBAAkB,EAC1BF,EAAQG,UAAW,EACnBH,EAAQ1oC,MAAQ3D,EAChBqsC,EAAQv2C,MAAM22C,IAAM,QACpBJ,EAAQv2C,MAAMmuC,SAAW,QACzBoI,EAAQv2C,MAAMouC,IAAM,EACpBmI,EAAQv2C,MAAM42C,KAAO,mBACrBL,EAAQv2C,MAAM62C,WAAa,MAC3BN,EAAQv2C,MAAM82C,iBAAmB,OACjCP,EAAQv2C,MAAM+2C,cAAgB,OAC9BR,EAAQv2C,MAAMg3C,aAAe,OAC7BT,EAAQv2C,MAAMi3C,WAAa,OAE3B/9C,SAASmH,KAAKC,YAAYi2C,GAE1BA,EAAQW,QACRX,EAAQY,WAERX,EAAat9C,SAASk+C,YAAY,SAE9B,MAAM,IAAIvP,MAEd,OAAO,EACT,SACE3vC,QAAQC,MAAM,uDAAwDq+C,GA1B1E,QA4BQD,GACAr9C,SAASmH,KAAKG,YAAY+1C,GAIlC,OAAO,E,YC/CPc,EAAgB,KAwCpB,SAASC,EAAiBC,GACtB,IAAKA,EAAQ,OAAO,EADU,IAGtB1pC,EAAU0pC,EAAV1pC,MACR,QAAKA,GAEkB,OAAhBA,EAAMA,MAGjB,SAAS2pC,EAAiBhS,GACtB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMtqC,OAAQ,OAAO,KAE1B,IAAMu8C,EAAgBC,IAAY3gD,IAAI,oBAChC4gD,EAAkBD,IAAY3gD,IAAI,8BAExC,KAD0BugD,EAAiBG,IAAkBH,EAAiBK,IACtD,OAAO,KAE/BN,EAAgBA,GAvDT,IAAIpiyBV,IADA,IAAIywC,EAAS,GACJ1qC,EAAI,EAAGA,EAAIwqC,EAAMtqC,OAAQF,IAAK,CACnC,IAAIq8C,EAAcxgD,IAAI2uC,EAAMxqC,IAGxB,OAAO,KAFP0qC,GAAU2R,EAActgD,IAAIyuC,EAAMxqC,IAM1C,MAAkB,KAAX0qC,EAAgB,KAAOA,EAGlC,IAAIkS,EAAa,KAwCjB,SAASC,EAAcrS,GACnB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMtqC,OAAQ,OAAO,KAE1B08C,EAAaA,GAzCN,IAAI3iywC,EAAS,GACJ1qC,EAAI,EAAGA,EAAIwqC,EAAMtqC,OAAQF,IAAK,CACnC,IAAI48C,EAAW/gD,IAAI2uC,EAAMxqC,IAGrB,OAAO,KAFP0qC,GAAUkS,EAAW7gD,IAAIyuC,EAAMxqC,IAMvC,MAAkB,KAAX0qC,EAAgB,KAAOA,E,wCCxG5BoS,I,mBACF,WAAYriC,GAAQ,IAAD,8BACf,4CAAMA,KAmBVsb,YApBmB,qBAoBL,0CAAAt7B,EAAA,4DACV,EAAKsiD,uBAECC,EAAW,GACXC,EAAkBhiD,KAAgBmI,KAAK,CACzC,QAAS,WACT85C,aAAc,sBACdC,eAAgB,EAChB7uB,MAAO,MAEX0uB,EAAS76C,KAAK86C,GAERG,EAAuBniD,KAAgBmI,KAAK,CAC9C,QAAS,oBACTgE,QAASC,IAAUmR,UACnB6kC,OAAO,IAEXL,EAAS76C,KAAKi7C,GAjBJ,SAmB2B76C,QAAQo5C,IAAIqB,EAASn3C,IAAI,SAAA/B,GAAC,OAAIA,EAAEzB,MAAM,SAAA2gB,GAAC,OAAI,UAnBtE,mCAmBHs6B,EAnBG,KAmBIC,EAnBJ,KAqBV,EAAKxiC,SAAS,CACVyiC,QAASF,EAAMG,SACfF,cAAeA,IAGb7jD,EAAQuM,IAAUhK,WACxB2Q,YAAiBlT,EAAO4jD,EAAMG,UA3BpB,0CApBK,EAkDnBV,qBAlDmB,qBAkDI,kCAAAtiD,EAAA,0DACY,EAAKggB,MAA5B7b,EADW,EACXA,OAAQ+G,EADG,EACHA,WACX/G,EAFc,oDAGd+G,EAHc,sDAIfA,EAAWzF,OAAS,GAJL,oDAKd6Y,YAAana,GALC,oDAMd+Y,YAAgB/Y,GANF,oEAQE3D,KAAgBmI,KAAK,CACtC,QAAS,uBACTvE,QAASD,EACTgiB,WAAYjb,EAAW,GACvB+3C,WAAW,IAZI,QAQb36C,EARa,OAenB,EAAKgY,SAAS,CACV4iC,kBAAmB56C,IAhBJ,0CAlDJ,EAsEnBkY,YAAc,WACV2iC,YAAQ,OAvEO,EA0EnBC,eAAiB,WAAO,IACZ3tC,EAAM,EAAKuK,MAAXvK,EACAytC,EAAsB,EAAKxiC,MAA3BwiC,kBAER,GAAKA,GACAA,EAAkBG,KAAvB,CAEA,IAAMhqC,EAAG,oBAAgB6pC,EAAkBG,MACrCjgD,EAAUqS,EAAE,cAGlBirC,EAAKwC,EAAkBG,MAEvB,EAAKC,sBAAsBjqC,EAAKjW,EAJjB,QAnFA,EA0FnBkgD,sBAAwB,SAACjqC,EAAKjW,EAASiV,GACnC,GAAKgB,EAAL,CAD8C,IAGtCkqC,EAAoB,EAAKvjC,MAAzBujC,gBACR,GAAKA,EAAL,CAIIlpB,KAAiBmpB,mBAAmBnqC,EAAKoqC,IAAqC,IAAsBprC,IAEpGkrC,EAAgBngD,EAAS,CACrBsgD,iBAAkBD,IAClBprC,OAAQ,CACJ,kBAACkU,EAAA,EAAD,CACIlT,IAAI,QACJoT,aAAW,QACXD,MAAM,UACNH,UAAU,4BACVzL,QAAS,kBAAMyZ,KAAiBspB,sBAAsBtqC,KACtD,kBAAC2hC,EAAA,EAAD,aA7GD,EAoHnB4I,oBAAsB,SAACz/C,EAAQ+G,GAC3B,GAA0B,IAAtBA,EAAWzF,OAAc,OAAO,KAEpC,IAAMrC,EAAUiI,KAAa/J,IAAI6C,EAAQ+G,EAAW,IACpD,IAAK9H,EAAS,OAAO,KAJqB,IAMlCioB,EAA8BjoB,EAA9BioB,iBAAkBhoB,EAAYD,EAAZC,QAC1B,IAAKgoB,GAAyC,2BAArBhoB,EAAQ,SAAuC,CAAC,IAC7DG,EAAUH,EAAVG,MACR,IAAKA,EAAO,OAAO,KAFiD,IAI5DgC,EAAUhC,EAAVgC,MACR,GAAIA,GAASA,EAAMC,OACf,OAAOD,EAAMA,EAAMC,OAAS,GAIpC,OAAO,MArIQ,EAwInBo+C,WAAa,WACT,EAAKrjC,cACLsjC,cAFe,MAIqC,EAAK9jC,MAAjD7b,EAJO,EAIPA,OAAQ+G,EAJD,EAICA,WAAY64C,EAJb,EAIaA,oBAC5B,GAAK5/C,GAAW+G,GAAe64C,EAA/B,CAEA,IAAMtvC,EAAO,EAAKuvC,aAAa,EAAKC,WAAWz/B,SAE/C,EAAK0/B,YAAYziD,QAAQ,SAAA0iD,GACrB,GAAIJ,EAwCA,OAvCItvC,IACI,YAAasvC,EACbA,EAAoBzvC,QAAU,CAC1B,QAAS,gBACTG,OACA6C,SAAU,MAGd9W,KAAgBmI,KAAK,CACjB,QAAS,cACTvE,QAAS+/C,EACTj1C,oBAAqB,EACrBk1C,uBAAuB,EACvBC,iBAAiB,EACjB3V,aAAc,KACd4V,sBAAuB,CACnB,QAAS,mBACT7vC,KAAM,CACF,QAAS,gBACTA,OACA6C,SAAU,MAEditC,0BAA0B,EAC1BC,aAAa,WAM7BhkD,KAAgBmI,KAAK,CACjB,QAAS,cACTvE,QAAS+/C,EACTj1C,oBAAqB,EACrBk1C,uBAAuB,EACvBC,iBAAiB,EACjB3V,aAAc,KACd4V,sBAAuBP,IAM/B,IAAMl6C,EAAO,EAAK+5C,oBAAoBz/C,EAAQ+G,GAC9C,GAAIrB,EAAJ,CAAW,IACCoD,EAAyBpD,EAAzBoD,MAAOC,EAAkBrD,EAAlBqD,OAAQ1J,EAAUqG,EAAVrG,MAEvBhD,KAAgBmI,KAAK,CACjB,QAAS,cACTvE,QAAS+/C,EACTj1C,oBAAqB,EACrBk1C,uBAAuB,EACvBC,iBAAiB,EACjB3V,aAAc,KACd4V,sBAAuB,CACnB,QAAS,oBACT9gD,MAAO,CACH,QAAS,cACTvC,GAAIuC,EAAMvC,IAEdqD,UAAW,KACX+rB,uBAAwB,GACxBpjB,MAAOA,EACPC,OAAQA,EACRoH,QAAS,CACL,QAAS,gBACTG,OACA6C,SAAU,MAEdoN,IAAK,UAObjQ,GACAjU,KAAgBmI,KAAK,CACjB,QAAS,cACTvE,QAAS+/C,EACTj1C,oBAAqB,EACrBk1C,uBAAuB,EACvBC,iBAAiB,EACjB3V,aAAc,KACd4V,sBAAuB,CACnB,QAAS,mBACT7vC,KAAM,CACF,QAAS,gBACTA,OACA6C,SAAU,MAEditC,0BAA0B,EAC1BC,aAAa,KAKzBhkD,KAAgBmI,KAAK,CACjB,QAAS,kBACTvE,QAAS+/C,EACTM,aAActgD,EACdqF,YAAa0B,EACbk5C,uBAAuB,EACvBC,iBAAiB,EACjBK,UAAU,QA1PH,EA+PnBC,sBAAwB,SAAAxgD,GAChB,EAAK+/C,YAAY9iD,IAAI+C,GACrB,EAAK+/C,YAAY3iD,OAAO4C,GAExB,EAAK+/C,YAAYhkD,IAAIiE,EAAQA,GAKjC,EAAKo3B,eAxQU,EA2QnByoB,aAAe,SAAAlD,GAAY,IACf8D,EAAc9D,EAAd8D,UAMR,MALkB,SAAdA,GAAsC,oBAAdA,IACxB9D,EAAQ8D,UAAY,MAEF9D,EAAdz3B,WAhRO,EAqRnBw7B,oBAAsB,SAAA57C,GACI,KAAlBA,EAAM67C,SACN77C,EAAMkX,kBAvRK,EA2RnB4kC,kBA3RmB,qBA2RC,gDAAA/kD,EAAA,0DACmB,EAAK0gB,MAAhCqiC,EADQ,EACRA,QAASD,EADD,EACCA,cAEXhC,EAAU,EAAKkE,UAAUxgC,QAHf,oDAOE,UADVogC,EAAc9D,EAAd8D,YACkC,oBAAdA,IACxB9D,EAAQ8D,UAAY,MAGlBv7B,EAAY,EAAK26B,aAAalD,GAAS1yB,OAX7B,wBAaZ,EAAK9N,SAAS,CAAE2kC,WAAY,KAAMC,cAAe,GAAIC,oBAAqB,KAb9D,kCAiBVC,EAAYhD,EAAc/4B,GAC1Bg8B,EAAetD,EAAiB14B,GAEhCi8B,EAAcxC,EACd,CAACA,EAAc7hD,IAAIyiB,OAAOq/B,EAAQz5C,OAAO,SAAAD,GAAC,OAAIA,IAAMy5C,EAAc7hD,IAAMoe,YAAgBhW,MACxF05C,EAEAmC,EAAgBI,EAAYh8C,OAC9B,SAAAD,GAAC,OACG,EAAKk8C,cAAcl8C,EAAGggB,IACrB+7B,GAAa,EAAKG,cAAcl8C,EAAG+7C,IACnCC,GAAgB,EAAKE,cAAcl8C,EAAGg8C,KAG/C,EAAK/kC,SAAS,CAAE2kC,WAAY57B,EAAW67B,kBA/BvB,UAiCK1kD,KAAgBmI,KAAK,CACtC,QAAS,sBACTgrB,MAAOtK,EACPwK,MAAO,MApCK,WAiCVvrB,EAjCU,OAuCZ,EAAKoY,MAAMukC,aAAe57B,EAvCd,mDA2ChB,EAAK/I,SAAS,CACV6kC,oBAAqB78C,EAAO06C,WA5ChB,0CA3RD,EA2UnBwC,kBAAoB,SAAAv8C,GAChB,IAAMw8C,EAAYx8C,EAAMy8C,cAAcC,QAAQ,cAC1CF,IACAx8C,EAAMkX,iBACN1c,SAASk+C,YAAY,cAAc,EAAO8D,KA/U/B,EAmVnBG,mBAAqB,WACjB,IAAM9E,EAAU,EAAKmD,WAAWz/B,QAChC,GAAKs8B,EAAL,CAFuB,IAIf8D,EAAc9D,EAAd8D,UACU,SAAdA,GAAsC,oBAAdA,IACxB9D,EAAQ8D,UAAY,QAzVT,EA6VnBiB,mBAAqB,SAAA58C,GACjB,IAAMw8C,EAAYx8C,EAAMy8C,cAAcC,QAAQ,cAC1CF,IACAx8C,EAAMkX,iBACN1c,SAASk+C,YAAY,cAAc,EAAO8D,KAjW/B,EAqWnBF,cAAgB,SAACphD,EAAQ8gD,GAAgB,IAC7BxvC,EAAM,EAAKuK,MAAXvK,EACAqtC,EAAkB,EAAKpiC,MAAvBoiC,cAER,GAAIA,GAAiB3+C,IAAW2+C,EAAc7hD,KAE2B,KADvD4c,YAAa1Z,GAAQ,EAAMsR,IAAM,IACrCqwC,oBAAoB77B,QAAQg7B,EAAW7xC,eAC7C,OAAO,EAKf,OAAsE,KADvDyK,YAAa1Z,GAAQ,EAAOsR,IAAM,IACtCqwC,oBAAoB77B,QAAQg7B,EAAW7xC,iBAKsB,KADvD8J,YAAgB/Y,IAAW,IAC/B2hD,oBAAoB77B,QAAQg7B,EAAW7xC,gBAtXrC,EA6XnB2yC,eAAiB,WACbxtB,WAAW,WACH,EAAKysB,UAAUxgC,SACC,EAAKwgC,UAAUxgC,QAEvBi9B,SAEb,MAjYH,EAAK/gC,MAAQ,CACTqiC,QAAS,GACTD,cAAe,MAGnB,EAAKkC,UAAYtjC,IAAM0a,YACvB,EAAK6nB,WAAaviC,IAAM0a,YAExB,EAAK8nB,YAAc,IAAI1kD,IAXR,E,iFAefgI,KAAK8zB,cAEL9zB,KAAKu+C,mB,+BAsXC,IAAD,OACGtwC,EAAMjO,KAAKwY,MAAXvK,EADH,EASDjO,KAAKkZ,MANLqiC,EAHC,EAGDA,QACAkC,EAJC,EAIDA,WACAC,EALC,EAKDA,cACAC,EANC,EAMDA,oBACArC,EAPC,EAODA,cACAI,EARC,EAQDA,kBAOEL,GAJcC,EACd,CAACA,EAAc7hD,IAAIyiB,OAAOq/B,EAAQz5C,OAAO,SAAAD,GAAC,OAAIA,IAAMy5C,EAAc7hD,IAAMoe,YAAgBhW,MACxF05C,GAEoB33C,IAAI,SAAA/B,GAAC,OAC3B,kBAAC,EAAD,CACIgQ,IAAKhQ,EACLlF,OAAQkF,EACRm3C,SAAU,EAAK0D,YAAY9iD,IAAIiI,GAC/Bm2B,SAAU,kBAAM,EAAKmlB,sBAAsBt7C,QAI7C28C,EAAmB,IAAIxmD,KAAK0lD,GAAiB,IAAI95C,IAAI,SAAA/B,GAAC,MAAI,CAACA,EAAGA,MAC9D48C,GAAmBd,GAAuB,IAAI77C,OAChD,SAAAD,GAAC,OAAIA,IAAMy5C,EAAc7hD,IAAMoe,YAAgBhW,KAAO28C,EAAiB5kD,IAAIiI,KAGzE68C,GAAchB,GAAiB,IAChCxhC,OAAOuiC,GACP76C,IAAI,SAAA/B,GAAC,OACF,kBAAC,EAAD,CACIgQ,IAAKhQ,EACLlF,OAAQkF,EACRm3C,SAAU,EAAK0D,YAAY9iD,IAAIiI,GAC/Bm2B,SAAU,kBAAM,EAAKmlB,sBAAsBt7C,QAIvD,OACI,kBAAC,IAAD,CACIjB,MAAI,EACJ2Y,QAASvZ,KAAKgZ,YACdQ,kBAAgB,uBAChBmlC,mBAAiB,6BACjB95B,UAAU,kBACV,kBAAC,IAAD,CAAaprB,GAAG,wBAAwBwU,EAAE,gBAC1C,yBACI+nB,IAAKh2B,KAAKw9C,UACV/jD,GAAG,wBACH+/C,iBAAe,EACfoF,gCAA8B,EAC9BC,YAAa5wC,EAAE,UACf6wC,UAAW9+C,KAAKq9C,oBAChB0B,QAAS/+C,KAAKu9C,kBACdyB,QAASh/C,KAAKg+C,oBAElB,yBAAKn5B,UAAU,0BACX,yBAAKA,UAAU,uBAAuBw2B,GACrCoC,GAAc,yBAAK54B,UAAU,8BAA8B65B,IAE/D1+C,KAAK08C,YAAYr6C,KAAO,GACrB,yBACI2zB,IAAKh2B,KAAKy8C,WACVhjD,GAAG,yBACH+/C,iBAAe,EACfoF,gCAA8B,EAC9BC,YAAa5wC,EAAE,gBACf8wC,QAAS/+C,KAAKo+C,mBACdY,QAASh/C,KAAKq+C,qBAGtB,kBAACvkC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQX,QAASpZ,KAAKgZ,YAAagM,MAAM,WACpC/W,EAAE,WAENjO,KAAK08C,YAAYr6C,KAAO,GACrB,kBAAC0X,EAAA,EAAD,CAAQX,QAASpZ,KAAKq8C,WAAYr3B,MAAM,UAAUi6B,WAAS,GACtDhxC,EAAE,UAGTjO,KAAK08C,YAAYr6C,MAAQq5C,GACvB,kBAAC3hC,EAAA,EAAD,CAAQX,QAASpZ,KAAK47C,eAAgB52B,MAAM,WACvC/W,EAAE,mB,GA5dHiM,IAAMC,YAgfnB+kC,GALCC,YACZ9kC,cACA+kC,eAGWF,CAAQrE,I,mHCvgBRtwB,eACX,0BAAMnO,EAAE,ulBACR,a,kFCFWmO,eACX,0BAAMnO,EAAE,2zCACR,e,yCCFWmO,eACX,0BAAMnO,EAAE,+PACR,YCIE3C,I,kNAyBFm/B,uBAAyB,SAAArgD,GACrB,EAAKw7B,e,EAGT+D,kBAAoB,SAAAv/B,GAAW,IACnBoE,EAAW,EAAK6b,MAAhB7b,OAEJpE,EAAOqE,UAAYD,GAEvB,EAAKo3B,e,qFAjCa1E,EAAWC,GAAY,IAAD,EAClBtvB,KAAKwY,MAAnB7b,EADgC,EAChCA,OAAQsR,EADwB,EACxBA,EAEhB,OAAIohB,EAAU1yB,SAAWA,GAIrB0yB,EAAUphB,IAAMA,I,0CAQpBlE,IAAU9Q,GAAG,mCAAoC+G,KAAK44C,wBACtD7uC,IAAU9Q,GAAG,kBAAmB+G,KAAK83B,qB,6CAIrC/tB,IAAU5Q,IAAI,mCAAoC6G,KAAK44C,wBACvD7uC,IAAU5Q,IAAI,kBAAmB6G,KAAK83B,qB,+BAehC,IAAD,EACoC93B,KAAKwY,MAAtCvK,EADH,EACGA,EAAGtR,EADN,EACMA,OAAQsY,EADd,EACcA,kBAEboqC,EAAajnC,YAAezb,GAC5BqR,EAAQqI,YAAa1Z,EAAQsY,EAAmBhH,GAEtD,OACI,yBAAK4W,UAAU,gBACX,0BAAMA,UAAU,qBAAqB7W,GACpCqxC,GAAc,kBAAC,GAAD,CAAmBx6B,UAAU,2B,GA9ClC3K,IAAMC,YAyDhCV,GAAYW,aAAe,CACvBnF,mBAAmB,GAGRoF,qBAAkBZ,I,oBCqIlB6lC,I,mBAhMX,WAAY9mC,GAAQ,IAAD,uBACf,4CAAMA,KA8DV4uB,mBAAqB,SAAA7uC,GAAW,IACpBoE,EAAW,EAAK6b,MAAhB7b,OACFtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,GAAKtB,GACAA,EAAKmN,KAAV,CAEA,IAAI+2C,GAAiB,EACrB,OAAQlkD,EAAKmN,KAAK,UACd,IAAK,qBACD,IAAMoM,EAAWd,KAAgBe,YAAYxZ,EAAKmN,KAAKuL,gBACvD,GAAIa,GAAYA,EAAS8B,QACN9B,EAAS8B,QAAQ8oC,KAAK,SAAA39C,GAAC,OAAIA,EAAEsD,UAAY5M,EAAO4M,YAE3Do6C,GAAiB,GAGzB,MAEJ,IAAK,kBAML,IAAK,iBACGlkD,EAAKmN,KAAKrD,UAAY5M,EAAO4M,UAC7Bo6C,GAAiB,GASzBA,GACA,EAAKA,eAAe5iD,KAnGT,EAuGnB4iD,eAAiB,SAAA5iD,GACb,EAAKmc,SAAS,CACVjL,SAAU+F,YAA6BjX,GACvC0qC,SAAU9xB,YAAkC5Y,MA1GjC,EA8GnB8iD,qBAAuB,SAAAlnD,GAAW,IACtBoE,EAAW,EAAK6b,MAAhB7b,OACFtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,GAAKtB,EAAL,CAH6B,IAKrBmN,EAASnN,EAATmN,KACHA,KAGDA,GACmB,oBAAlBA,EAAK,UAAoD,mBAAlBA,EAAK,UAC7CA,EAAKrD,UAAY5M,EAAO4M,SAExB,EAAKo6C,eAAe5iD,MA3HT,EA+HnB+iD,2BAA6B,SAAAnnD,GAAW,IAC5BoE,EAAW,EAAK6b,MAAhB7b,OACFtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,GAAKtB,EAAL,CAHmC,IAK3BmN,EAASnN,EAATmN,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKuL,iBAAmBxb,EAAOwb,gBACjF,EAAKwrC,eAAe5iD,KAxIT,EA4InBgjD,2BAA6B,SAAApnD,GAAW,IAC5BoE,EAAW,EAAK6b,MAAhB7b,OACFtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,GAAKtB,EAAL,CAHmC,IAK3BmN,EAASnN,EAATmN,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKkM,gBAAkBnc,EAAOmc,eAChF,EAAK6qC,eAAe5iD,KArJT,EAyJnBijD,mBAAqB,SAAArnD,GAAW,IACpBoE,EAAW,EAAK6b,MAAhB7b,OACFtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,GAAKtB,EAAL,CAH2B,IAKnBmN,EAASnN,EAATmN,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKuL,iBAAmBxb,EAAO6+B,YAAY39B,IAC7F,EAAK8lD,eAAe5iD,KAlKT,EAsKnBkjD,mBAAqB,SAAAtnD,GAAW,IACpBoE,EAAW,EAAK6b,MAAhB7b,OACFtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,GAAKtB,EAAL,CAH2B,IAKnBmN,EAASnN,EAATmN,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKkM,gBAAkBnc,EAAOic,WAAW/a,IAC3F,EAAK8lD,eAAe5iD,KA/KT,IAGPA,EAAW,EAAK6b,MAAhB7b,OAHO,OAKf,EAAKuc,MAAQ,CACT4mC,WAAYnjD,EACZkR,SAAU+F,YAA6BjX,GACvC0qC,SAAU9xB,YAAkC5Y,IARjC,E,mFA0BG0yB,EAAWC,GAAY,IACjC3yB,EAAWqD,KAAKwY,MAAhB7b,OADgC,EAETqD,KAAKkZ,MAA5BrL,EAFgC,EAEhCA,SAAUw5B,EAFsB,EAEtBA,SAElB,OAAIhY,EAAU1yB,SAAWA,IAIrB2yB,EAAUzhB,WAAaA,GAIvByhB,EAAU+X,WAAaA,K,0CAQ3BjiC,IAAUnM,GAAG,mBAAoB+G,KAAKonC,oBACtCtzB,KAAgB7a,GAAG,mBAAoB+G,KAAK4/C,oBAC5CnrC,KAAgBxb,GAAG,mBAAoB+G,KAAK6/C,oBAC5Cz6C,IAAUnM,GAAG,qBAAsB+G,KAAKy/C,sBACxC3rC,KAAgB7a,GAAG,2BAA4B+G,KAAK0/C,4BACpDjrC,KAAgBxb,GAAG,2BAA4B+G,KAAK2/C,8B,6CAIpDv6C,IAAUjM,IAAI,mBAAoB6G,KAAKonC,oBACvCtzB,KAAgB3a,IAAI,mBAAoB6G,KAAK4/C,oBAC7CnrC,KAAgBtb,IAAI,mBAAoB6G,KAAK6/C,oBAC7Cz6C,IAAUjM,IAAI,qBAAsB6G,KAAKy/C,sBACzC3rC,KAAgB3a,IAAI,2BAA4B6G,KAAK0/C,4BACrDjrC,KAAgBtb,IAAI,2BAA4B6G,KAAK2/C,8B,+BAuH/C,IACYI,EAAqB//C,KAAKwY,MAApC3K,SADH,EAE0B7N,KAAKkZ,MAA5BrL,EAFH,EAEGA,SAAUw5B,EAFb,EAEaA,SAElB,OACI,yBAAKxiB,UAAWC,IAAW,gBAAiB,CAAE,uBAAwBuiB,KACjE0Y,EAAmBA,EAAmB,KAAO,KAC7ClyC,M,gDA9KmB2K,EAAOU,GACnC,GAAIV,EAAM7b,SAAWuc,EAAM4mC,WAAY,CAAC,IAC5BnjD,EAAW6b,EAAX7b,OAER,MAAO,CACHmjD,WAAYnjD,EACZkR,SAAU+F,YAA6BjX,GACvC0qC,SAAU9xB,YAAkC5Y,IAIpD,OAAO,S,GAxBYud,IAAMC,YCC3B6lC,I,mBACF,WAAYxnC,GAAQ,IAAD,uBACf,4CAAMA,KAYVC,YAAc,WAAO,IAAD,EACa,EAAKD,MAA1B7b,EADQ,EACRA,OAAQq7B,EADA,EACAA,SACXA,GAELA,EAASr7B,IAjBM,IAGPA,EAAW,EAAK6b,MAAhB7b,OAHO,OAIf,EAAKuc,MAAQ,CACT7d,KAAM0O,IAAUjQ,IAAI6C,IALT,E,mFASG0yB,EAAWC,GAC7B,OAAOD,EAAU1yB,SAAWqD,KAAKwY,MAAM7b,S,+BAUjC,IAAD,EACqFqD,KAAKwY,MAAvF7b,EADH,EACGA,OAAQkR,EADX,EACWA,SAAUoyC,EADrB,EACqBA,aAAcxgB,EADnC,EACmCA,WAAYxqB,EAD/C,EAC+CA,kBAAmB9K,EADlE,EACkEA,IAAK+1C,EADvE,EACuEA,UAEtEC,EAAkBlxC,YAAStS,GAEjC,OACI,yBAAKkoB,UAAWC,IAAW,OAAQ,CAAE,WAAY3a,IAAQiP,QAASpZ,KAAKyY,aACnE,yBAAKoM,UAAU,gBACX,kBAAC,EAAD,CAAU1a,IAAKA,EAAKxN,OAAQA,EAAQq7B,SAAUioB,EAAchrC,kBAAmBA,IAC9EirC,GACG,yBAAKr7B,UAAU,sBACX,yBAAKA,UAAU,kBACX,kBAAC,GAAD,CAAaloB,OAAQA,EAAQsY,kBAAmBA,KAEnDwqB,KAAgB0gB,IAAoBlrC,IACjC,yBAAK4P,UAAU,mBACX,kBAAC,GAAD,CAAcloB,OAAQA,EAAQkR,SAAUA,Y,GArCzDqM,IAAMC,YA0DzB6lC,GAAK5lC,aAAe,CAChBnF,mBAAmB,EACnBwqB,YAAY,EACZygB,WAAW,GAGAF,UCxEAz1B,eACX,0BAAMnO,EAAE,0tBACR,QCIEgkC,I,mBACF,WAAY5nC,GAAQ,qEACVA,I,sEAGA,IAAD,EAC+CxY,KAAKwY,MAAjD7b,EADH,EACGA,OAAQsR,EADX,EACWA,EAAGoyC,EADd,EACcA,WAAYjnC,EAD1B,EAC0BA,QAASG,EADnC,EACmCA,QAEpC+mC,EAAOryC,EAAE,YAOb,OANIiI,YAAcvZ,GACd2jD,EAAOryC,EAAE,QACF0E,YAAchW,KACrB2jD,EAAOryC,EAAE,gBAIT,yBAAK4W,UAAU,iBACVw7B,GACG,kBAACt7B,EAAA,EAAD,CAAYF,UAAU,qBAAqBzL,QAASG,GAChD,kBAAC,GAAD,OAGR,yBAAKsL,UAAU,oCAAoCzL,QAASA,GACxD,0BAAMyL,UAAU,yBAAyBy7B,KAE3CD,GACE,kBAACt7B,EAAA,EAAD,CAAYF,UAAU,sBAAsBzL,QAASG,GACjD,kBAACi6B,EAAA,EAAD,Y,GA3BQt5B,IAAMC,YAmCvBE,iBAAkB+lC,I,oSC7B1B,SAASG,GAAgB5jD,EAAQ6jD,GACpCxnD,KAAgBmI,KAAK,CACjB,QAAS,kBACTvE,QAASD,EACTmS,UAAW0xC,IAIZ,SAASC,GAAmB9jD,EAAQ+jD,GACvC1nD,KAAgBmI,KAAK,CACjB,QAAS,qBACTvE,QAASD,EACTgkD,UAAWD,IAIZ,SAASE,GAA2BjkD,EAAQkkD,GAC/C7nD,KAAgBmI,KAAK,CACjB,QAAS,6BACTvE,QAASD,EACTuV,oBAAqB2uC,IAItB,SAASC,GAA+BnkD,EAAQokD,GACnD,IAAM1lD,EAAO0O,IAAUjQ,IAAI6C,GAC3B,GAAKtB,IAE6BA,EAA1BiX,uBAGYD,YAAY1V,KACZokD,GAApB,CAIA,IAAMC,EAAUD,EAAUE,IAAkBC,IACtCC,E,uVAAuB,IACtB9lD,EAAKiX,sBADiB,CAEzBC,sBAAsB,EACtBC,SAAUwuC,IAGdhoD,KAAgBmI,KAAK,CACjB,QAAS,8BACTvE,QAASD,EACT2V,sBAAuB6uC,KAIxB,SAAeC,GAAtB,mC,6CAAO,WAA+BzkD,GAA/B,2BAAAnE,EAAA,wDACUuR,IAAUjQ,IAAI6C,GADxB,wDAIGo+C,EAAW,GAEXsG,EAAeroD,KAAgBmI,KAAK,CACtC,QAAS,sBACTvE,QAASD,EACTmF,OAAQ,CAAE,QAAS,6BACnBw/C,cAAc,IAEb//C,KAAK,SAAAT,GACF,OAAOA,EAASA,EAAOmT,MAAQ,IAElC7T,MAAM,WACH,OAAO,IAEf26C,EAAS76C,KAAKmhD,GAERE,EAAevoD,KAAgBmI,KAAK,CACtC,QAAS,sBACTvE,QAASD,EACTmF,OAAQ,CAAE,QAAS,6BACnBw/C,cAAc,IAEb//C,KAAK,SAAAT,GACF,OAAOA,EAASA,EAAOmT,MAAQ,IAElC7T,MAAM,WACH,OAAO,IAEf26C,EAAS76C,KAAKqhD,GAERC,EAAkBxoD,KAAgBmI,KAAK,CACzC,QAAS,sBACTvE,QAASD,EACTmF,OAAQ,CAAE,QAAS,gCACnBw/C,cAAc,IAEb//C,KAAK,SAAAT,GACF,OAAOA,EAASA,EAAOmT,MAAQ,IAElC7T,MAAM,WACH,OAAO,IAEf26C,EAAS76C,KAAKshD,GAERC,EAAezoD,KAAgBmI,KAAK,CACtC,QAAS,sBACTvE,QAASD,EACTmF,OAAQ,CAAE,QAAS,6BACnBw/C,cAAc,IAEb//C,KAAK,SAAAT,GACF,OAAOA,EAASA,EAAOmT,MAAQ,IAElC7T,MAAM,WACH,OAAO,IAEf26C,EAAS76C,KAAKuhD,GAERC,EAAa1oD,KAAgBmI,KAAK,CACpC,QAAS,sBACTvE,QAASD,EACTmF,OAAQ,CAAE,QAAS,2BACnBw/C,cAAc,IAEb//C,KAAK,SAAAT,GACF,OAAOA,EAASA,EAAOmT,MAAQ,IAElC7T,MAAM,WACH,OAAO,IAEf26C,EAAS76C,KAAKwhD,GAERC,EAA2B3oD,KAAgBmI,KAAK,CAClD,QAAS,sBACTvE,QAASD,EACTmF,OAAQ,CAAE,QAAS,iCACnBw/C,cAAc,IAEb//C,KAAK,SAAAT,GACF,OAAOA,EAASA,EAAOmT,MAAQ,IAElC7T,MAAM,WACH,OAAO,IAEf26C,EAAS76C,KAAKyhD,GAxFX,UA0FUrhD,QAAQo5C,IAAIqB,GA1FtB,oF,oCC0BQ6G,G,YAjFX,WAAYppC,GAAQ,IAAD,uBACf,4CAAMA,KAqCVqpC,iCAAmC,SAAAtpD,GAAW,IAClCqE,EAAYrE,EAAZqE,QACAD,EAAW,EAAK6b,MAAhB7b,OAEHC,GACDA,IAAYD,GAEhB,EAAKmc,SAAS,CAAEioC,QAAS1uC,YAAY1V,MA7CtB,EAgDnBmlD,kCAAoC,SAAAvpD,GAAW,IACnCoE,EAAW,EAAK6b,MAAhB7b,OACFtB,EAAO0O,IAAUjQ,IAAI6C,GAE3B,OAAQpE,EAAOwpD,MAAM,UACjB,IAAK,sCAC0B,uBAAvB1mD,EAAKmN,KAAK,UAA4D,uBAAvBnN,EAAKmN,KAAK,UACzD,EAAKsQ,SAAS,CAAEioC,QAAS1uC,YAAY1V,KAEzC,MAEJ,IAAK,wCAC0B,oBAAvBtB,EAAKmN,KAAK,UAAyD,mBAAvBnN,EAAKmN,KAAK,UACtD,EAAKsQ,SAAS,CAAEioC,QAAS1uC,YAAY1V,OA7DlC,EAoEnBqlD,2BAA6B,WACzB,EAAKlpC,SAAS,CAAEioC,SAAU,EAAK7nC,MAAM6nC,UACrC,EAAKkB,wCAtEU,EAyEnBC,4BAA8B,WAI1BpB,GAHmB,EAAKtoC,MAAhB7b,OACY,EAAKuc,MAAjB6nC,UA3EO,IAGPpkD,EAAW6b,EAAX7b,OAHO,OAKf,EAAKuc,MAAQ,CACT4mC,WAAYnjD,EACZokD,QAAS1uC,YAAY1V,IAGzB,EAAKslD,qCAAuCE,aACxC,EAAKD,4BACLE,KAZW,E,iFA6Bfr4C,IAAU9Q,GAAG,iCAAkC+G,KAAK6hD,kCACpDnvC,KAAkBzZ,GAAG,kCAAmC+G,KAAK8hD,qC,6CAI7D/3C,IAAU5Q,IAAI,iCAAkC6G,KAAK6hD,kCACrDnvC,KAAkBvZ,IAAI,kCAAmC6G,KAAK8hD,sC,gDAnBlCtpC,EAAOU,GACnC,GAAIV,EAAM7b,SAAWuc,EAAM4mC,WAAY,CAAC,IAC5BnjD,EAAW6b,EAAX7b,OAER,MAAO,CACHmjD,WAAYnjD,EACZokD,QAAS1uC,YAAY1V,IAG7B,OAAO,S,GA1Baud,IAAMC,WCI5BkoC,G,iLACQ,IACEp0C,EAAMjO,KAAKwY,MAAXvK,EACA8yC,EAAY/gD,KAAKkZ,MAAjB6nC,QAER,OACI,kBAAC5M,GAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAU,YAAYzL,QAASpZ,KAAKgiD,4BACjD,kBAACM,GAAA,EAAD,KAAgBvB,EAAwC,kBAAC,KAAD,MAA9B,kBAAC,KAAD,OAC1B,kBAACwB,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYvxB,QAAQ,UAAUwxB,QAAM,GAC/Bz0C,EAAE,oBAIf,kBAAC00C,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ59B,MAAM,UAAU0mB,SAAU1rC,KAAKgiD,2BAA4BlQ,SAAUiP,U,GAhB7Da,IAuBrBvnC,iBAAkBgoC,I,yECjB3BQ,I,mBACF,WAAYrqC,GAAQ,IAAD,uBACf,4CAAMA,KAoBVsqC,gBAAkB,WACd,EAAKhqC,SAAS,CAAEiqC,UAAW,EAAK7pC,MAAM6pC,YAtBvB,EAyBnBC,kBAAoB,WAChB,IAAMC,EAAgBpwB,KAAiBqwB,YAC/BvmD,EAAW,EAAK6b,MAAhB7b,OACJsmD,IAAkBtmD,GAGlB3D,KAAgBmqD,UAAUxmD,IA/Bf,EAmCnBymD,YAAc,WAAO,IACTzmD,EAAW,EAAKuc,MAAhBvc,OAEFtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,GAAKtB,GACAA,EAAKmN,KAAV,CALgB,IAORrD,EAAY9J,EAAKmN,KAAjBrD,QACHA,GAELnM,KAAgBmI,KAAK,CACjB,QAASqsB,YAAcroB,GAAW,cAAgB,YAClDA,QAASA,MA/CE,IAGPxI,EAAW,EAAK6b,MAAhB7b,OAHO,OAIf,EAAKuc,MAAQ,CACT4mC,WAAYnjD,EACZomD,UAAU,GANC,E,sEAmDT,IAAD,EACiB/iD,KAAKwY,MAAnBvK,EADH,EACGA,EAAGtR,EADN,EACMA,OACHomD,EAAa/iD,KAAKkZ,MAAlB6pC,SAEF1nD,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,KAElB,IAAMgoD,EAAUltC,YAAYxZ,GACxB2mD,GAAY,GACXD,GAAWhoD,EAAKmN,OACjB86C,EAAY91B,YAAcnyB,EAAKmN,KAAKrD,UAExC,IAAMo+C,EAAWntC,YAAazZ,GACxB0kC,EAAY1uB,YAAchW,GAEhC,OACI,oCACI,kBAACw3C,GAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAU,YAAYzL,QAASpZ,KAAK8iD,iBACjD,kBAACR,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYvxB,QAAQ,UAAUwxB,QAAM,GAC/Bz0C,EAAE,WAId80C,EAAW,kBAAC,KAAD,MAAiB,kBAAC,KAAD,OAEjC,kBAACS,GAAA,EAAD,CAAUC,GAAIV,EAAUW,QAAQ,OAAOC,eAAa,GAChD,kBAACC,GAAA,EAAD,CAAMC,UAAU,MAAMC,gBAAc,IAC9BT,GACE,oCACI,kBAAClP,GAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAU,YAAYzL,QAASpZ,KAAKgjD,mBACjD,kBAACT,GAAA,EAAD,CACIwB,OAAK,EACLvB,QACI,kBAACC,GAAA,EAAD,CAAYvxB,QAAQ,UAAUwxB,QAAM,GAC/Bz0C,EAAE,mBAKnB,kBAACkmC,GAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAU,YAAYzL,QAASpZ,KAAKojD,aACjD,kBAACb,GAAA,EAAD,CACIwB,OAAK,EACLvB,QACI,kBAACC,GAAA,EAAD,CAAYz9B,MAAM,YAAYkM,QAAQ,UAAUwxB,QAAM,GACrCz0C,EAAZq1C,EAAc,UAAe,qBAOrDD,GAAWE,GACR,kBAACpP,GAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAU,aACvB,kBAAC09B,GAAA,EAAD,CACIwB,OAAK,EACLvB,QACI,kBAACC,GAAA,EAAD,CAAYz9B,MAAM,YAAYkM,QAAQ,UAAUwxB,QAAM,GACrCz0C,EAAZozB,EAAc,eAAoB,kBAMtDgiB,IAAYE,GACT,kBAACpP,GAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAU,aACvB,kBAAC09B,GAAA,EAAD,CACIwB,OAAK,EACLvB,QACI,kBAACC,GAAA,EAAD,CAAYz9B,MAAM,YAAYkM,QAAQ,UAAUwxB,QAAM,GACjDz0C,EAAE,wB,gDAnHXuK,EAAOU,GACnC,OAAIV,EAAM7b,SAAWuc,EAAM4mC,WAChB,CACHA,WAAYtnC,EAAM7b,OAClBomD,UAAU,GAIX,S,GAnBY7oC,IAAMC,Y,IA2IlBE,cAAkBwoC,I,OCpG3BmB,I,mBACF,WAAYxrC,GAAQ,IAAD,uBACf,4CAAMA,KA6FVknC,2BAA6B,SAAAnnD,GACzB,IAAM8C,EAAO0O,IAAUjQ,IAAI,EAAK0e,MAAM7b,QACjCtB,GAGDA,EAAKmN,MACkB,uBAAvBnN,EAAKmN,KAAK,UACVnN,EAAKmN,KAAKuL,iBAAmBxb,EAAOwb,gBAEpC,EAAKggB,eAvGM,EA2GnB4rB,2BAA6B,SAAApnD,GACzB,IAAM8C,EAAO0O,IAAUjQ,IAAI,EAAK0e,MAAM7b,QACjCtB,GAGDA,EAAKmN,MACkB,uBAAvBnN,EAAKmN,KAAK,UACVnN,EAAKmN,KAAKkM,gBAAkBnc,EAAOmc,eAEnC,EAAKqf,eApHM,EAwHnB0rB,qBAAuB,SAAAlnD,GACnB,IAAM8C,EAAO0O,IAAUjQ,IAAI,EAAK0e,MAAM7b,QACjCtB,KAGDA,EAAKmN,MACmB,oBAAvBnN,EAAKmN,KAAK,UAAyD,mBAAvBnN,EAAKmN,KAAK,UACvDnN,EAAKmN,KAAKrD,UAAY5M,EAAO4M,SAE7B,EAAK4uB,gBAjIM,EAqInBqT,mBAAqB,SAAA7uC,GACb,EAAKme,QAAQ9c,IAAIrB,EAAO4M,UACxB,EAAK4uB,eAvIM,EA2InBD,YAAc,WACV,EAAKmwB,oBA5IU,EA+InBA,iBAAmB,WAAO,IAAD,EACK,EAAKzrC,MAAvB7b,EADa,EACbA,OAAQic,EADK,EACLA,MAEVnhB,EAAQuM,IAAUhK,WAExB2Q,YAAiBlT,EAAO,CAACkF,IACzB,IAAM+Z,EAAUF,YAAoB7Z,GAAQiH,IAAI,SAAA/B,GAAC,OAAIA,EAAEsD,UACvDyC,YAAiBnQ,EAAOif,GAEpBkC,GACAjC,YAAgBha,IAzJL,EA6JnBunD,mBAAqB,WAAO,IAAD,EACD,EAAK1rC,MAAnBvK,EADe,EACfA,EAAGtR,EADY,EACZA,OACLgZ,EAAWD,YAAgB/Y,GACjC,GAAKgZ,EAAL,CAEA,IAAMwuC,EAAoB1J,IAAY3gD,IAAI,YAG1Co/C,GAFqBiL,EAAoBA,EAAkBvzC,MAAQ,yBAE/C+E,GAEpB,IAAM9D,EAAG,UAAMlV,EAAN,kBACHf,EAAUqS,EAAE,cAGlB,EAAK6tC,sBAAsBjqC,EAAKjW,EAFjB,QAzKA,EA8KnBkgD,sBAAwB,SAACjqC,EAAKjW,EAASiV,GACnC,GAAKgB,EAAL,CAD8C,IAGtCkqC,EAAoB,EAAKvjC,MAAzBujC,gBACR,GAAKA,EAAL,CAIIlpB,KAAiBmpB,mBAAmBnqC,EAAKoqC,IAAqC,IAAsBprC,IAEpGkrC,EAAgBngD,EAAS,CACrBsgD,iBAAkBD,IAClBprC,OAAQ,CACJ,kBAACkU,EAAA,EAAD,CACIlT,IAAI,QACJoT,aAAW,QACXD,MAAM,UACNH,UAAU,4BACVzL,QAAS,kBAAMyZ,KAAiBspB,sBAAsBtqC,KACtD,kBAAC2hC,EAAA,EAAD,aAjMD,EAwMnB4Q,gBAAkB,WAAO,IAAD,EACE,EAAK5rC,MAAnBvK,EADY,EACZA,EAAGtR,EADS,EACTA,OACL0nD,EAAczuC,YAAmBjZ,GACvC,GAAK0nD,EAAL,CAEAnL,EAAKrjC,aAAkBwuC,IAEvB,IAAMxyC,EAAG,UAAMlV,EAAN,eACHf,EAAUqS,EAAE,eAGlB,EAAK6tC,sBAAsBjqC,EAAKjW,EAFjB,QAjNA,EAsNnB0oD,kBAAoB,WAChB,EAAKC,mBAAmBvnC,QAAQwnC,UAAY,GAvN7B,EA0NnBC,iBAAmB,WAAO,IAAD,EACK,EAAKjsC,MAAvB7b,EADa,EACbA,OAAQic,EADK,EACLA,MACVvd,EAAO0O,IAAUjQ,IAAI6C,GACtBtB,GACAA,EAAKW,QAEV0oD,YAA6B,CAAE/nD,WAE3Bic,GACA5f,KAAgB8G,aAAa,CACzB,QAAS,2BACTnD,OAAQ,MArOD,EA0OnBgoD,eAAiB,WAAO,IAAD,EACO,EAAKnsC,MAAvB7b,EADW,EACXA,OAAQic,EADG,EACHA,MAEhBG,YAASpc,EAAQ,MAAM,GAEnBic,GACA5f,KAAgB8G,aAAa,CACzB,QAAS,2BACTnD,OAAQ,KAlPD,EAuPnBioD,eAAiB,SAAA1iD,GACb2W,YAAS3W,GAAQ,IAxPF,EA2PnB2iD,iBAAmB,WACf,OAAK,EAAKN,mBAEH,EAAKA,mBAAmBvnC,QAAQuyB,aAFF,GAzPrC,EAAKgV,mBAAqBrqC,IAAM0a,YAHjB,IAKPj4B,EAAW,EAAK6b,MAAhB7b,OALO,OAOf,EAAK+Z,QAAU,IAAI1e,IACnB,EAAKkhB,MAAQ,CACT4mC,WAAYnjD,GATD,E,qFAuBKy4B,EAAWC,GACZr1B,KAAKwY,MAAhB7b,OADmC,IAGrCikC,EAAO5gC,KAAKukD,mBAAmBvnC,QAYrC,MAViB,CACbwnC,UAF8C5jB,EAA1C4jB,UAGJM,aAH8ClkB,EAA/BkkB,aAIfC,aAJ8CnkB,EAAjBmkB,gB,4CAcf11B,EAAWC,GAAY,IAAD,EACctvB,KAAKwY,MAAnD7b,EADgC,EAChCA,OAAQyoC,EADwB,EACxBA,MAAO4f,EADiB,EACjBA,SAAUC,EADO,EACPA,iBAEjC,OAAI51B,EAAU1yB,SAAWA,IAIrB0yB,EAAU21B,WAAaA,IAIvB31B,EAAU41B,mBAAqBA,GAI/B51B,EAAU+V,QAAUA,M,yCAOThQ,EAAWC,EAAWC,GAAW,IACxC34B,EAAWqD,KAAKwY,MAAhB7b,OACJy4B,EAAUz4B,SAAWA,GACrBqD,KAAK8zB,cAGT,IAAM8M,EAAO5gC,KAAKukD,mBAAmBvnC,QAC7BwnC,EAA0ClvB,EAA1CkvB,UAA0ClvB,EAA/BwvB,aAA+BxvB,EAAjByvB,aAC7B3vB,EAAUz4B,SAAWA,EACrBikC,EAAK4jB,UAAYA,EAEjB5jB,EAAK4jB,UAAY,I,0CAKrBxkD,KAAK8zB,cAEL1uB,IAAUnM,GAAG,mBAAoB+G,KAAKonC,oBACtChiC,IAAUnM,GAAG,qBAAsB+G,KAAKy/C,sBACxC3rC,KAAgB7a,GAAG,2BAA4B+G,KAAK0/C,4BACpDjrC,KAAgBxb,GAAG,2BAA4B+G,KAAK2/C,8B,6CAIpDv6C,IAAUjM,IAAI,mBAAoB6G,KAAKonC,oBACvChiC,IAAUjM,IAAI,qBAAsB6G,KAAKy/C,sBACzC3rC,KAAgB3a,IAAI,2BAA4B6G,KAAK0/C,4BACrDjrC,KAAgBtb,IAAI,2BAA4B6G,KAAK2/C,8B,+BAsK/C,IAAD,SAgBD3/C,KAAKwY,MAdL6nC,EAFC,EAEDA,WACAx7B,EAHC,EAGDA,UACAloB,EAJC,EAIDA,OACA4c,EALC,EAKDA,QACA2rC,EANC,EAMDA,oBACAC,EAPC,EAODA,mBACAC,EARC,EAQDA,sBACAC,EATC,EASDA,kBAEAC,GAXC,EAUDC,kBAVC,EAWDD,oBACAE,EAZC,EAYDA,mBACAC,EAbC,EAaDA,uBACA7sC,EAdC,EAcDA,MACA3K,EAfC,EAeDA,EAfC,EAkBgCjO,KAAKwY,MAApCwsC,EAlBD,EAkBCA,SAAUC,EAlBX,EAkBWA,iBAEhBA,EAAmBA,GAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GApBlD,OAmBLD,EAAWA,GAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAGgEphD,IACnG,SAAC8hD,EAAI3nD,GAAL,OAAW2nD,EAAKT,EAAiBlnD,KAvBhC,mBAsBE4nD,EAtBF,KAsBcC,EAtBd,KAsB0BC,EAtB1B,KAsByCC,EAtBzC,KAsBqDC,EAtBrD,KAsB+DC,EAtB/D,KA0BC3qD,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EACD,OACI,yBAAKwpB,UAAU,gBACX,kBAAC,GAAD,CAAmBtL,QAASA,IAC5B,yBAAKyc,IAAKh2B,KAAKukD,mBAAoB1/B,UAAU,uBAKzD,IAAIohC,EAAqB,EACzB,GAAI/vC,YAAcvZ,GAAS,CACvB,IAAMiY,EAAWxP,IAAUyP,YAAYxZ,EAAKmN,KAAKrD,SACjD8gD,EAAqBrxC,EAAWA,EAASsxC,sBAAwBD,EAGrE,IAAMtwC,EAAWD,YAAgB/Y,GAC3B0nD,EAAczuC,YAAmBjZ,GACjCsZ,EAAMF,YAAWpZ,GACjB0mD,EAAUltC,YAAYxZ,GACtBge,EAAO1L,YAAStS,GAEhB+Z,EAAUF,YAAoB7Z,GAC9B4K,EAAQ,GACdvH,KAAK0W,QAAU,IAAI1e,IACnB0e,EAAQzc,QAAQ,SAAAksD,GACZ,IAAMzqD,EAAO0J,IAAUtL,IAAIqsD,EAAOhhD,SAC9BzJ,IACA,EAAKgb,QAAQhe,IAAIgD,EAAKjC,GAAIiC,EAAKjC,IAC/B8N,EAAMrH,KAAKxE,MAInB,IAGMzD,EAHcsP,EAAMoa,KAAK,SAAC9f,EAAGs4B,GAC/B,OAAOrM,YAAmBqM,GAAKrM,YAAmBjsB,KAE5B+B,IAAI,SAAAlI,GAAI,OAC9B,kBAACy4C,GAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAU,YAAYhT,IAAKnW,EAAKjC,IAC7C,kBAAC,KAAD,CAAMyI,OAAQxG,EAAKjC,GAAIu+B,SAAU,EAAK4sB,oBAItC5oD,EAAUX,EAAVW,MAEFH,EACF,oCACI,kBAAC,GAAD,CACIc,OAAQA,EACR0jD,WAAYA,EACZ9mC,QAASA,EACTH,QAASpZ,KAAKskD,oBAElB,yBAAKtuB,IAAKh2B,KAAKukD,mBAAoB1/B,UAAU,qBACzC,yBAAKA,UAAU,qBACX,kBAAC,GAAD,CACIloB,OAAQA,EACRwN,KAAK,EACLs1B,YAAY,EACZxqB,mBAAoB2D,EACpBqnC,aAAcjkD,EAAQgE,KAAKykD,iBAAmB,SAGpD9uC,GAAY0uC,GAAepuC,IACzB,oCACI,kBAAC2tC,GAAA,EAAD,KACKjuC,GACG,kBAACw+B,GAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAU,YAAYzL,QAASpZ,KAAKkkD,oBACjD,kBAAC5B,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYvxB,QAAQ,UAAUwxB,QAAM,GAC/B/sC,MAMpB0uC,GACG,oCACI,kBAAClQ,GAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAU,YAAYzL,QAASpZ,KAAKokD,iBACjD,kBAAC9B,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYvxB,QAAQ,UAAUwxB,QAAM,GAC/B7sC,aAAkBwuC,QAO1CpuC,GACG,kBAACk+B,GAAA,EAAD,CAAUtvB,UAAU,aAChB,kBAACy9B,GAAA,EAAD,KACI,kBAAC,KAAD,CAAkBz9B,UAAU,4BAEhC,kBAAC09B,GAAA,EAAD,CACIC,QAASvsC,EACTlT,MAAO,CAAE62C,WAAY,WAAYwM,SAAU,qBAOhEzrC,GAAQ0oC,GAAYzqC,IAAUyqC,IAC7B,oCACI,kBAACgD,GAAA,EAAD,MACA,kBAACzC,GAAA,EAAD,MACMjpC,GAAQ,kBAAC,GAAD,CAAuBhe,OAAQA,IAExCic,IAAUyqC,GACP,kBAAClP,GAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAU,YAAYzL,QAASpZ,KAAK2kD,gBACjD,kBAACpC,GAAA,EAAD,CACIwB,OAAK,EACLvB,QACI,kBAACC,GAAA,EAAD,CAAYz9B,MAAM,UAAUkM,QAAQ,UAAUwxB,QAAM,GAC/Cz0C,EAAE,eAAeu8B,qBAShDmb,EAAa,GACXC,EAAa,GACbC,EAAgB,GAChBC,EAAa,GACbC,EAAW,GACXC,EAAyB,GACzBC,EAAqB,IACrB,oCACI,kBAACI,GAAA,EAAD,MACA,kBAACzC,GAAA,EAAD,KACK+B,EAAa,GACV,kBAACxR,GAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAU,YAAYzL,QAASksC,GAC5C,kBAAChD,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYvxB,QAAQ,UAAUwxB,QAAM,GAChB,IAAfiD,EAAmB,UAAnB,UAAkCA,EAAlC,eAMpBC,EAAa,GACV,kBAACzR,GAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAU,YAAYzL,QAASosC,GAC5C,kBAAClD,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYvxB,QAAQ,UAAUwxB,QAAM,GAChB,IAAfkD,EAAmB,UAAnB,UAAkCA,EAAlC,eAMpBC,EAAgB,GACb,kBAAC1R,GAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAU,YAAYzL,QAASgsC,GAC5C,kBAAC9C,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYvxB,QAAQ,UAAUwxB,QAAM,GACb,IAAlBmD,EAAsB,SAAtB,UAAoCA,EAApC,cAMpBC,EAAa,GACV,kBAAC3R,GAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAU,YAAYzL,QAAS+rC,GAC5C,kBAAC7C,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYvxB,QAAQ,UAAUwxB,QAAM,GAChB,IAAfoD,EAAmB,eAAnB,UAAuCA,EAAvC,oBAMpBC,EAAW,GACR,kBAAC5R,GAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAU,YAAYzL,QAASisC,GAC5C,kBAAC/C,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYvxB,QAAQ,UAAUwxB,QAAM,GAClB,IAAbqD,EAAiB,gBAAjB,UAAsCA,EAAtC,qBAMpBC,EAAyB,GACtB,kBAAC7R,GAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAU,YAAYzL,QAASqsC,GAC5C,kBAACnD,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYvxB,QAAQ,UAAUwxB,QAAM,GACJ,IAA3BsD,EACK,kBADL,UAEQA,EAFR,uBAQpBC,EAAqB,GAClB,kBAAC9R,GAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAU,YAAYzL,QAAS8rC,GAC5C,kBAAC5C,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYvxB,QAAQ,UAAUwxB,QAAM,GACR,IAAvBuD,EACK,oBADL,UAEQA,EAFR,2BAWhChuD,EAAMgG,OAAS,GACZ,oCACI,kBAACooD,GAAA,EAAD,MACA,kBAACzC,GAAA,EAAD,KAAO3rD,MAO3B,OAAO2gB,EAAQ,oCAAG/c,GAAc,yBAAKgpB,UAAWC,IAAW,eAAgBD,IAAahpB,M,gDA7gB5D2c,EAAOU,GACnC,OAAIV,EAAM7b,SAAWuc,EAAM4mC,WAChB,CACHA,WAAYtnC,EAAM7b,QAInB,S,GArBWud,IAAMC,YAmjBjB+kC,GAPCC,YACZmH,cACAjsC,cACA+kC,eACAmH,cAGWrH,CAAQ8E,ICjlBRwC,I,wLApBD,IACEjtC,EAAYvZ,KAAKwY,MAAjBe,QAER,OACI,yBAAKsL,UAAU,iBACX,kBAACE,EAAA,EAAD,CAAYF,UAAU,qBAAqBzL,QAASG,GAChD,kBAAC,GAAD,OAEJ,yBAAKsL,UAAU,qCACX,0BAAMA,UAAU,yBAAhB,0B,GAVe3K,IAAMC,YCMnCssC,I,mBACF,WAAYjuC,GAAQ,IAAD,8BACf,4CAAMA,KA0BVuf,aAAe,SAAAp7B,GAAW,IACdic,EAAU,EAAKJ,MAAfI,MAERG,YAASpc,GAELic,GACA5f,KAAgB8G,aAAa,CACzB,QAAS,2BACTnD,OAAQ,KAhChB,EAAKuc,MAAQ,CACTqiC,QAAS,IAJE,E,iFAQE,IAAD,OACR5+C,EAAWqD,KAAKwY,MAAhB7b,OAEFuF,EAASkI,YAAczN,GACxBuF,GAELlJ,KAAgBmI,KAAK,CACjB,QAAS,oBACTgE,QAASjD,EACTg5C,eAAgB,EAChB7uB,MAAO,MACR9qB,KAAK,SAAAT,GACJ,IAAMrJ,EAAQuM,IAAUhK,WACxB2Q,YAAiBlT,EAAOqJ,EAAO06C,UAE/B,EAAK1iC,SAAS,CAAEyiC,QAASz6C,EAAO06C,e,+BAiB9B,IAAD,SACiCx7C,KAAKwY,MAAnCkuC,EADH,EACGA,UAAWntC,EADd,EACcA,QAASX,EADvB,EACuBA,MAGtByiC,EAFcr7C,KAAKkZ,MAAjBqiC,QAEc33C,IAAI,SAAA/B,GAAC,OACvB,kBAACsyC,GAAA,EAAD,CAAUC,QAAM,EAACviC,IAAKhQ,GAClB,kBAAC,GAAD,CAAMlF,OAAQkF,EAAGm2B,SAAU,EAAKD,kBAIlCl8B,EACF,oCACI,kBAAC,GAAD,CAAsB0d,QAASA,IAC/B,yBAAKsL,UAAU,wBAAwB9hB,MAAO,CAAE2jD,cAC3CrL,IAKb,OAAOziC,EAAQ,oCAAG/c,GAAc,yBAAKgpB,UAAU,oBAAoBhpB,O,GA5D9Cqe,IAAMC,YAuEnCssC,GAAersC,aAAe,CAC1BxB,OAAO,EACP8tC,UAAW,GAGAD,U,mEC9ETE,I,kNACFC,kBAAoB,SAAAnlD,GAAU,IAAD,EACc,EAAK+W,MAApC7b,EADiB,EACjBA,OAAQE,EADS,EACTA,WAEhB0c,EAHyB,EACEA,SAEnB9X,GAERsX,YAASpc,EAAQE,I,EAGrBgqD,cAAgB,SAAAplD,GAAU,IAAD,EACkB,EAAK+W,MAApC7b,EADa,EACbA,OAAQE,EADK,EACLA,WAEhB0c,EAHqB,EACMA,SAEnB9X,GAERqlD,YAAgBnqD,EAAQ,CAACE,K,EAG7BkqD,aAAe,SAAAtlD,GAAU,IAAD,EACmB,EAAK+W,MAApC7b,EADY,EACZA,OAAQE,EADI,EACJA,WAEhB0c,EAHoB,EACOA,SAEnB9X,GAERulD,YAAerqD,EAAQ,CAACE,K,wEAGlB,IAAD,EAC4EmD,KAAKwY,MAA9EvK,EADH,EACGA,EAAGtR,EADN,EACMA,OAAQE,EADd,EACcA,UAAW+D,EADzB,EACyBA,KAAM2Y,EAD/B,EAC+BA,QAAS0tC,EADxC,EACwCA,eAAgBC,EADxD,EACwDA,gBAEvDtrD,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,KAJhB,IAMGioB,EAAiFjoB,EAAjFioB,iBAAkBE,EAA+DnoB,EAA/DmoB,6BAA8BC,EAAiCpoB,EAAjCooB,6BAExD,OACI,kBAACmjC,GAAA,EAAD,CACIvmD,KAAMA,EACN2Y,QAASA,EACT6tC,gBAAgB,iBAChBH,eAAgBA,EAChBI,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhB3b,YAAa,SAAA7qB,GAAC,OAAIA,EAAErI,mBACpBU,QAAS,SAAA2H,GAAC,OAAIA,EAAErI,oBAChB,kBAAC+uC,GAAA,EAAD,KACKP,GAAmB,kBAACQ,GAAA,EAAD,CAAUtuC,QAASpZ,KAAK4mD,mBAAoB34C,EAAE,gBACjE4V,GAAoB,kBAAC6jC,GAAA,EAAD,CAAUtuC,QAASpZ,KAAK6mD,eAAgB54C,EAAE,aAC7D8V,GAAgCC,IAC9B,kBAAC0jC,GAAA,EAAD,CAAUtuC,QAASpZ,KAAK+mD,cAAe94C,EAAE,iB,GArDvCiM,IAAMC,YAsEjBE,iBAAkBssC,I,oBCLlBgB,I,kNAlEXzuC,MAAQ,CACJ0uC,aAAa,EACbtnC,KAAM,EACN6wB,IAAK,G,EAGT0W,sB,sCAAwB,WAAMpmD,GAAN,iBAAAjJ,EAAA,qDAChBiJ,IACAA,EAAMkX,iBACNlX,EAAMiX,mBAEc,EAAKQ,MAArB0uC,YAGJ,EAAK9uC,SAAS,CAAE8uC,aAAa,KAEvBtnC,EAAO7e,EAAMqmD,QACb3W,EAAM1vC,EAAMsmD,QAElB,EAAKjvC,SAAS,CACV8uC,aAAa,EACbtnC,OACA6wB,SAhBY,yC,wDAqBxB6W,uBAAyB,SAAAvmD,GACjBA,GACAA,EAAMiX,kBAGV,EAAKI,SAAS,CAAE8uC,aAAa,K,wEAGvB,IAAD,EAC0C5nD,KAAKwY,MAA5C7b,EADH,EACGA,OAAQE,EADX,EACWA,UAAWqqD,EADtB,EACsBA,gBADtB,EAE8BlnD,KAAKkZ,MAAhC0uC,EAFH,EAEGA,YAAatnC,EAFhB,EAEgBA,KAAM6wB,EAFtB,EAEsBA,IAErBv1C,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACzC,OAAKjB,EAGD,oCACI,yBAAKipB,UAAU,kBAAkBqxB,cAAel2C,KAAK6nD,uBAChD7+B,aAASptB,EAAS,kBAAMyjB,aAAU1iB,EAAQE,GAAW,MAE1D,kBAAC,GAAD,CACIF,OAAQA,EACRE,UAAWA,EACXoqD,eAAgB,CAAE9V,MAAK7wB,QACvB1f,KAAMgnD,EACNV,gBAAiBA,EACjB3tC,QAASvZ,KAAKgoD,0BAbL,S,GAzCA9tC,IAAMC,YCNpBoQ,eACX,0BAAMnO,EAAE,wjBACR,U,UCOE6rC,I,mBACF,WAAYzvC,GAAQ,IAAD,8BACf,4CAAMA,KAqBV0vC,aAAe,WACX,GAAI,EAAKC,eAAenrC,SACF,EAAKmrC,eAAenrC,QAAQ6E,UAC/B,CACX,EAAKsmC,eAAenrC,QAAQ6E,UAAY,GAD7B,IAGHumC,EAAa,EAAK5vC,MAAlB4vC,SACR,IAAKA,EAAU,OAGf,YADAA,EAAS,IATA,IAcTC,EAAkB,EAAK7vC,MAAvB6vC,cACAC,EAAe,EAAKpvC,MAApBovC,WAER,EAAKxvC,SAAS,CAAEwvC,YAAaA,IAEzBD,GACAA,KA1CW,EA8CnBE,cAAgB,SAAA9mD,GACU,KAAlBA,EAAM67C,SACN77C,EAAMkX,kBAhDK,EAoDnB6vC,YAAc,WACV,IAAMlP,EAAU,EAAK6O,eAAenrC,QACpC,GAAKs8B,EAAL,CAFgB,IAIR8D,EAAc9D,EAAd8D,UACU,SAAdA,GAAsC,oBAAdA,IACxB9D,EAAQ8D,UAAY,MANR,IAQRv7B,EAAcy3B,EAAdz3B,UAEAumC,EAAa,EAAK5vC,MAAlB4vC,SACHA,GAELA,EAASvmC,KAjEM,EAoEnB4mC,YAAc,SAAAhnD,GACV,IAAMw8C,EAAYx8C,EAAMy8C,cAAcC,QAAQ,cAC1CF,IACAx8C,EAAMkX,iBACN1c,SAASk+C,YAAY,cAAc,EAAO8D,KArE9C,EAAKkK,eAAiBjuC,IAAM0a,YAE5B,EAAK1b,MAAQ,CACTovC,YAAY,GAND,E,gFAUAlzB,EAAWC,EAAWC,GAAW,IAAD,OACvCgzB,EAAetoD,KAAKkZ,MAApBovC,WAEJA,GAAcA,IAAelzB,EAAUkzB,YACvCv3B,WAAW,WACH,EAAKo3B,eAAenrC,SACpB,EAAKmrC,eAAenrC,QAAQi9B,SAEjCtH,O,+BA0DD,IAAD,EAC4C3yC,KAAKwY,MAA9CvK,EADH,EACGA,EAAGD,EADN,EACMA,MAAOoL,EADb,EACaA,QAASG,EADtB,EACsBA,QAAS6uC,EAD/B,EAC+BA,SAC5BE,EAAetoD,KAAKkZ,MAApBovC,WAER,OACI,yBAAKzjC,UAAU,iBACTyjC,EAUE,oCACI,yBAAKzjC,UAAU,4BACX,yBACIprB,GAAG,yBACHu8B,IAAKh2B,KAAKmoD,eACVtJ,YAAa5wC,EAAE,UACfurC,iBAAe,EACfoF,gCAA8B,EAC9BE,UAAW9+C,KAAKuoD,cAChBxJ,QAAS/+C,KAAKwoD,YACdxJ,QAASh/C,KAAKyoD,gBAnB1B,oCACI,kBAAC1jC,EAAA,EAAD,CAAYF,UAAU,qBAAqBzL,QAASG,GAChD,kBAAC,GAAD,OAEJ,yBAAKsL,UAAU,oCAAoCzL,QAASA,GACxD,0BAAMyL,UAAU,yBAAyB7W,KAmBpDyJ,QAAQ2wC,IACL,kBAACrjC,EAAA,EAAD,CAAYF,UAAU,sBAAsB+mB,YAAa5rC,KAAKkoD,cAC1D,kBAACQ,GAAA,EAAD,CAAe9nD,KAAM0nD,EAAY/4B,KAAM,kBAAC,GAAD,MAAgBo5B,SAAU,kBAACnV,EAAA,EAAD,c,GA9GzDt5B,IAAMC,YA8HvBE,iBAAkB4tC,IC8VlBW,I,mBAjdX,WAAYpwC,GAAQ,IAAD,EACf,GADe,qBACX,6CAAeowC,EACf,MAAM,IAAI/uB,UAAU,uDAFT,OAOf,4CAAMrhB,KAyDVqwC,uBAAyB,SAAAtwD,GAAW,IAAD,EACI,EAAKigB,MAAhC7b,EADuB,EACvBA,OAAQmsD,EADe,EACfA,eADe,EAEE,EAAK5vC,MAA9BjhB,EAFuB,EAEvBA,MAAO8wD,EAFgB,EAEhBA,cAEPnsD,EAAkDrE,EAAlDqE,QAAS+hB,EAAyCpmB,EAAzComB,WAAyBqqC,GAAgBzwD,EAA7B0wD,YAA6B1wD,EAAhBywD,aAEpCptD,EAAUiI,KAAa/J,IAAI8C,EAAS+hB,GAG1C,GAAI/hB,IAAYD,EAAQ,CACpB,IAAK1E,EAAMgG,OAAQ,OACnB,IAAKirD,aAAQvqC,EAAY1mB,EAAM,GAAGwB,GAAIxB,EAAMA,EAAMgG,OAAS,GAAGxE,IAAI,GAAO,OAEzE,IAAM8P,EAAQtR,EAAMovB,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAOklB,IACxC,EAAKwqC,eAAeH,IACL,IAAXz/C,EAEA,EAAKuP,SAAS,CAAE7gB,MAAOmxD,aAAcnxD,EAAO2D,EAASykB,QAGrD,EAAKvH,SAAS,CAAE7gB,MAAM,GAAD,oBAAMA,EAAMy5B,MAAM,EAAGnoB,IAArB,CAA6B3N,GAA7B,aAAyC3D,EAAMy5B,MAAMnoB,EAAQ,QAGvE,IAAXA,GAGA,EAAKuP,SAAS,CAAE7gB,MAAOA,EAAM6J,OAAO,SAAAD,GAAC,OAAIA,EAAEpI,KAAOklB,WAGvD,GAAI/hB,IAAYksD,EAAgB,CACnC,IAAKC,EAAc9qD,OAAQ,OAC3B,IAAKirD,aAAQvqC,EAAYoqC,EAAc,GAAGtvD,GAAIsvD,EAAcA,EAAc9qD,OAAS,GAAGxE,IAAI,GAAO,OAEjG,IAAM8P,EAAQw/C,EAAc1hC,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAOklB,IAChD,EAAKwqC,eAAeH,IACL,IAAXz/C,EAEA,EAAKuP,SAAS,CACViwC,cAAeK,aAAcL,EAAentD,EAASykB,QAIzD,EAAKvH,SAAS,CACViwC,cAAc,GAAD,oBAAMA,EAAcr3B,MAAM,EAAGnoB,IAA7B,CAAqC3N,GAArC,aAAiDmtD,EAAcr3B,MAAMnoB,EAAQ,QAInF,IAAXA,GAGA,EAAKuP,SAAS,CAAEiwC,cAAeA,EAAcjnD,OAAO,SAAAD,GAAC,OAAIA,EAAEpI,KAAOklB,QAlH/D,EAwHnB0qC,mBAAqB,SAAA9wD,GAAW,IAAD,EACQ,EAAKigB,MAAhC7b,EADmB,EACnBA,OAAQmsD,EADW,EACXA,eADW,EAEM,EAAK5vC,MAA9BjhB,EAFmB,EAEnBA,MAAO8wD,EAFY,EAEZA,cAEPntD,EAAYrD,EAAZqD,QACAgB,EAAYhB,EAAZgB,QAER,GAAIA,IAAYD,GACX,EAAK2sD,eAAe1tD,GAAzB,CAEA,IAAMnE,EAAQuM,IAAUhK,WACxBsN,YAAoB7P,EAAO,CAACmE,IAExBgB,IAAYD,EACZ,EAAKmc,SAAS,CAAE7gB,MAAO,CAAC2D,GAASsgB,OAAOjkB,KACjC2E,IAAYksD,GACnB,EAAKhwC,SAAS,CAAEiwC,cAAe,CAACntD,GAASsgB,OAAO6sC,OAxIrC,EA4InBQ,uBAAyB,SAAAhxD,GAAW,IAAD,EACI,EAAKigB,MAAhC7b,EADuB,EACvBA,OAAQmsD,EADe,EACfA,eADe,EAEE,EAAK5vC,MAA9BjhB,EAFuB,EAEvBA,MAAO8wD,EAFgB,EAEhBA,cAEPnsD,EAAyBrE,EAAzBqE,QAASoF,EAAgBzJ,EAAhByJ,YAEX4B,EAAM,IAAI5L,IAAIgK,EAAY4B,IAAI,SAAA/B,GAAC,MAAI,CAACA,EAAGA,MACvC9B,EAAW,WACT,EAAKmZ,MAAMjhB,MAAMgG,OAAS,EAAKib,MAAM6vC,cAAc9qD,OAASurD,MAC5D,EAAKC,WAAW,EAAKC,SAIzB9sD,IAAYD,EACZ,EAAKmc,SAAS,CAAE7gB,MAAOA,EAAM6J,OAAO,SAAAD,GAAC,OAAK+B,EAAIhK,IAAIiI,EAAEpI,OAAQsG,GACrDnD,IAAYksD,GACnB,EAAKhwC,SAAS,CAAEiwC,cAAeA,EAAcjnD,OAAO,SAAAD,GAAC,OAAK+B,EAAIhK,IAAIiI,EAAEpI,OAAQsG,IA5JjE,EAgKnB+zB,YAAc,WACV,EAAK41B,OAAS,CACVC,SAAS,EACTC,WAAW,EACXC,kBAAkB,EAClB5xD,MAAO,GACP8wD,cAAe,GACfjnD,OAAQ,EAAKgoD,mBAEjB,EAAKL,WAAW,EAAKC,SAzKN,EA4KnBD,WA5KmB,sCA4KN,WAAOC,GAAP,6CAAAlxD,EAAA,wDAAeuxD,IAAf,iCACDptD,EAAW,EAAK6b,MAAhB7b,OACAitD,EAAsCF,EAAtCE,UAAW9nD,EAA2B4nD,EAA3B5nD,OAAQ7J,EAAmByxD,EAAnBzxD,OAAmByxD,EAAZC,QAFzB,qDAOLC,EAPK,wDASHI,EAAgB/xD,EAAMgG,OAAS,EAAIhG,EAAMA,EAAMgG,OAAS,GAAGxE,GAAK,EACtEiwD,EAAOC,SAAU,EAVR,UAWY3wD,KAAgBmI,KAAK,CACtC,QAAS,qBACTvE,QAASD,EACTwvB,MAAO,GACP1kB,eAAgB,EAChB2kB,gBAAiB49B,EACjB/5C,OAAQ,EACRoc,MAAOm9B,KACP1nD,WACDmoD,QAAQ,WACPP,EAAOC,SAAU,IArBZ,QAWH7oD,EAXG,OAwBT9H,KAAgBmI,KAAK,CACjB,QAAS,qBACTvE,QAASD,EACTwvB,MAAO,GACP1kB,eAAgB,EAChB2kB,gBAAiB49B,EACjB/5C,OAAQ,EACRoc,MAAoC,EAA7Bm9B,KACP1nD,WAGI6B,EAAa7C,EAAb6C,SACR+lD,EAAOE,UAAgC,IAApBjmD,EAAS1F,QAAyC,IAAzB0F,EAAS2oB,YACrDo9B,EAAOzxD,MAAQA,EAAMikB,OAAOvY,EAAS7B,OAAO,EAAKwnD,iBAC3CY,EAAoBH,GAAkBpmD,EAAS1F,OAAS,GAAK0F,EAAS1F,OAASurD,KAErF3lD,KAAaC,SAAShD,EAAO6C,UACvBlM,EAAQuM,IAAUhK,WACxBsN,YAAoB7P,EAAOqJ,EAAO6C,UAElC,EAAKmV,SAAS,CAAE7gB,MAAOyxD,EAAOzxD,QAE1ByxD,EAAOE,UACP,EAAKO,mBAAmBT,GAAQ,GACzBQ,GACP,EAAKT,WAAWC,GAAQ,GAjDnB,0CA5KM,wDAiOnBS,mBAjOmB,sCAiOE,WAAOT,GAAP,+CAAAlxD,EAAA,wDAAeuxD,IAAf,iCACTjB,EAAmB,EAAKtwC,MAAxBswC,eACAhnD,EAA4D4nD,EAA5D5nD,OAAQ6nD,EAAoDD,EAApDC,QAASE,EAA2CH,EAA3CG,iBAAiC5xD,EAAUyxD,EAAzBX,cAItCD,EANY,qDAOba,EAPa,qDAQbE,EARa,wDAUXG,EAAgB/xD,EAAMgG,OAAS,EAAIhG,EAAMA,EAAMgG,OAAS,GAAGxE,GAAK,EACtEiwD,EAAOC,SAAU,EAXA,UAYI3wD,KAAgBmI,KAAK,CACtC,QAAS,qBACTvE,QAASksD,EACT38B,MAAO,GACP1kB,eAAgB,EAChB2kB,gBAAiB49B,EACjB/5C,OAAQ,EACRoc,MAAOm9B,KACP1nD,WACDmoD,QAAQ,WACPP,EAAOC,SAAU,IAtBJ,WAYX7oD,EAZW,OAyBT6C,EAAa7C,EAAb6C,SACR+lD,EAAOX,cAAgB9wD,EAAMikB,OAAOvY,EAAS7B,OAAO,EAAKwnD,iBACzDI,EAAOG,iBAAuC,IAApBlmD,EAAS1F,QAAyC,IAAzB0F,EAAS2oB,YACtD49B,EAAoBH,GAAkBpmD,EAAS1F,OAAS,GAAK0F,EAAS1F,OAASurD,MAEjFE,EAAOG,iBA9BM,mDAgCjBhmD,KAAaC,SAASH,GAChBlM,EAAQuM,IAAUhK,WACxBsN,YAAoB7P,EAAOkM,GAE3B,EAAKmV,SAAS,CAAEiwC,cAAeW,EAAOX,gBAElCmB,GACA,EAAKC,mBAAmBT,GAAQ,GAvCnB,0CAjOF,wDA4QnBU,aAAe,WACX,GAAK,EAAKC,QAAV,CAEA,IAAMzpB,EAAO,EAAKypB,QAAQrtC,QAC1B,GAAK4jB,EAAL,CAJiB,IAMT8oB,EANS,gBAMTA,OAEJ9oB,EAAK4jB,UAAY5jB,EAAKmkB,cAAgBnkB,EAAKkkB,aAAewF,OACtDZ,IAAWA,EAAOE,UAClB,EAAKH,WAAWC,GAEhB,EAAKS,mBAAmBT,OAxRjB,EA6RnBpF,kBAAoB,WAChB,IAAM1jB,EAAO,EAAKypB,QAAQrtC,QACrB4jB,IAELA,EAAK4jB,UAAY,IAjSF,EAoSnB+F,mBAAqB,WACjB,GAAK,EAAKC,cAAV,CAEA,IAAM5pB,EAAO,EAAK4pB,cAAcxtC,QAChC,GAAK4jB,EAAL,CAJuB,IAMf6pB,EANe,gBAMfA,aACHA,GAED7pB,EAAK4jB,UAAY5jB,EAAKmkB,cAAgBnkB,EAAKkkB,aAAewF,OACrDG,EAAab,UAGd,EAAKc,qBAAqBD,GAF1B,EAAKE,aAAaF,OA/SX,EAsTnBE,aAtTmB,sCAsTJ,WAAOjB,GAAP,iDAAAlxD,EAAA,wDAAeuxD,IAAf,iCACHptD,EAAW,EAAK6b,MAAhB7b,OACAitD,EAA6CF,EAA7CE,UAAW9nD,EAAkC4nD,EAAlC5nD,OAAQ7J,EAA0ByxD,EAA1BzxD,MAAO0xD,EAAmBD,EAAnBC,QAASx9B,EAAUu9B,EAAVv9B,OAIvCy9B,EANO,qDAOPD,EAPO,wDASLK,EAAgB/xD,EAAMgG,OAAS,EAAIhG,EAAMA,EAAMgG,OAAS,GAAGxE,GAAK,EACtEiwD,EAAOC,SAAU,EAVN,UAWU3wD,KAAgBmI,KAAK,CACtC,QAAS,qBACTvE,QAASD,EACTwvB,QACA1kB,eAAgB,EAChB2kB,gBAAiB49B,EACjB/5C,OAAQ,EACRoc,MAAOm9B,KACP1nD,WACDmoD,QAAQ,WACPP,EAAOC,SAAU,IArBV,WAWL7oD,EAXK,OAwBH6C,EAAa7C,EAAb6C,SACR+lD,EAAOzxD,MAAQA,EAAMikB,OAAOvY,EAAS7B,OAAO,EAAKwnD,iBACjDI,EAAOE,UAAgC,IAApBjmD,EAAS1F,QAAyC,IAAzB0F,EAAS2oB,YAC/C49B,EAAoBH,GAAkBpmD,EAAS1F,OAAS,GAAK0F,EAAS1F,OAASurD,KAEjF,EAAKiB,eAAiBf,EA7Bf,mDA+BX7lD,KAAaC,SAASH,GAChBlM,EAAQuM,IAAUhK,WACxBsN,YAAoB7P,EAAOkM,GAE3B,EAAKmV,SAAS,CAAE8xC,YAAalB,EAAOzxD,MAAO4yD,oBAAqBnB,EAAOX,gBAEnEW,EAAOE,UACP,EAAKc,qBAAqBhB,GAAQ,GAC3BQ,GACP,EAAKS,aAAajB,GAAQ,GAxCnB,0CAtTI,wDAkWnBgB,qBAlWmB,sCAkWI,WAAOhB,GAAP,iDAAAlxD,EAAA,wDAAeuxD,IAAf,iCACXjB,EAAmB,EAAKtwC,MAAxBswC,eACAhnD,EAAmE4nD,EAAnE5nD,OAAQ6nD,EAA2DD,EAA3DC,QAAwB1xD,EAAmCyxD,EAAlDX,cAAsBc,EAA4BH,EAA5BG,iBAAkB19B,EAAUu9B,EAAVv9B,MAI5D28B,EANc,qDAOfa,EAPe,qDAQfE,EARe,wDAUbG,EAAgB/xD,EAAMgG,OAAS,EAAIhG,EAAMA,EAAMgG,OAAS,GAAGxE,GAAK,EACtEiwD,EAAOC,SAAU,EAXE,UAYE3wD,KAAgBmI,KAAK,CACtC,QAAS,qBACTvE,QAASksD,EACT38B,QACA1kB,eAAgB,EAChB2kB,gBAAiB49B,EACjB/5C,OAAQ,EACRoc,MAAOm9B,KACP1nD,WACDmoD,QAAQ,WACPP,EAAOC,SAAU,IAtBF,WAYb7oD,EAZa,OAyBX6C,EAAa7C,EAAb6C,SACR+lD,EAAOX,cAAgB9wD,EAAMikB,OAAOvY,EAAS7B,OAAO,EAAKwnD,iBACzDI,EAAOG,iBAAuC,IAApBlmD,EAAS1F,QAAyC,IAAzB0F,EAAS2oB,YACtD49B,EAAoBH,GAAkBpmD,EAAS1F,OAAS,GAAK0F,EAAS1F,OAASurD,KAEjF,EAAKiB,eAAiBf,EA9BP,mDAgCnB7lD,KAAaC,SAASH,GAChBlM,EAAQuM,IAAUhK,WACxBsN,YAAoB7P,EAAOkM,GAE3B,EAAKmV,SAAS,CAAE8xC,YAAalB,EAAOzxD,MAAO4yD,oBAAqBnB,EAAOX,gBAEnEmB,GACA,EAAKQ,qBAAqBhB,GAAQ,GAvCnB,0CAlWJ,wDA6YnBxB,aA7YmB,sCA6YJ,WAAMj7C,GAAN,eAAAzU,EAAA,wDACL2zB,EAAQlf,EAAOA,EAAK2Z,OAAS,GADxB,uBAGP,EAAKkkC,oBAHE,0BAOX,EAAKL,aAAe,CAChBt+B,QACAy9B,WAAW,EACXC,kBAAkB,EAClB5xD,MAAO,GACP8wD,cAAe,GACfjnD,OAAQ,EAAKgoD,mBAEjB,EAAKa,aAAa,EAAKF,cAAc,GAf1B,yCA7YI,wDA+ZnBK,kBAAoB,WAChB,EAAKL,aAAe,KACpB,EAAK3xC,SAAS,CAAE8xC,YAAa,GAAIC,oBAAqB,MAjavC,EAoanBvB,eAAiB,SAAA1tD,GACb,QAAKA,GAEE,EAAKutD,eAAevtD,EAAQC,UA9ZnC,EAAKwuD,QAAUnwC,IAAM0a,YACrB,EAAK41B,cAAgBtwC,IAAM0a,YAE3B,EAAK1b,MAAQ,CACTjhB,MAAO,GACP8wD,cAAe,GACf6B,YAAa,GACbC,oBAAqB,IAhBV,E,gFAPf,OAAO,O,+CAIP,OAAO,S,iDAwBP,OAAO,I,qCAGIhvD,GACX,MAAM,IAAI+uC,MAAM,sD,sCAGJhvC,GAAU,IACdktD,EAAmB9oD,KAAKwY,MAAxBswC,eACAlsD,EAAgBhB,EAAhBgB,QAASnD,EAAOmC,EAAPnC,GAEjB,OACI,kBAAC,GAAD,CACIoY,IAAG,kBAAajV,EAAb,uBAAmCnD,GACtCkD,OAAQC,EACRC,UAAWpD,EACXytD,gBAAiBtqD,IAAYksD,M,wCAMrC,MAAM,IAAIle,MAAM,uD,kCAIhB,MAAM,IAAIA,MAAM,iD,0CAIhB5qC,KAAK8zB,cAELjwB,KAAa5K,GAAG,uBAAwB+G,KAAKupD,wBAC7C1lD,KAAa5K,GAAG,uBAAwB+G,KAAK6oD,wBAC7ChlD,KAAa5K,GAAG,mBAAoB+G,KAAKqpD,sB,6CAIzCxlD,KAAa1K,IAAI,uBAAwB6G,KAAKupD,wBAC9C1lD,KAAa1K,IAAI,uBAAwB6G,KAAK6oD,wBAC9ChlD,KAAa1K,IAAI,mBAAoB6G,KAAKqpD,sB,+BA6WpC,IAAD,SACiCrpD,KAAKwY,MAAnCkuC,EADH,EACGA,UAAWntC,EADd,EACcA,QAASX,EADvB,EACuBA,MADvB,EAE8D5Y,KAAKkZ,MAAhEjhB,EAFH,EAEGA,MAAO8wD,EAFV,EAEUA,cAAe6B,EAFzB,EAEyBA,YAAaC,EAFtC,EAEsCA,oBACnCJ,EAAiBzqD,KAAjByqD,aAEF9mD,EAAW1L,EAAMikB,OAAO6sC,GAAenlD,IAAI,SAAA/B,GAAC,OAAI,EAAKkpD,gBAAgBlpD,KACrEmpD,EAAiBJ,EAAY1uC,OAAO2uC,GAAqBjnD,IAAI,SAAA/B,GAAC,OAAI,EAAKkpD,gBAAgBlpD,KAE7F,OACI,oCACI,kBAAC,GAAD,CACImM,MAAOhO,KAAKirD,YACZ7xC,QAASpZ,KAAKskD,kBACd/qC,QAASA,EACT6uC,SAAUpoD,KAAKkrD,YAAclrD,KAAKkoD,aAAe,KACjDG,cAAeroD,KAAK8qD,oBAExB,yBACI90B,IAAKh2B,KAAKqqD,QACVxlC,UAAWC,IAAW,oBAAqB9kB,KAAKmrD,oBAChDC,SAAUprD,KAAKoqD,aACfrnD,MAAO,CAAE2jD,UAAW9tC,EAAQ8tC,EAAY,OACvC/iD,GAEJ8T,QAAQgzC,IACL,yBACIz0B,IAAKh2B,KAAKwqD,cACV3lC,UAAWC,IAAW,2BAA4B9kB,KAAKqrD,0BACvDD,SAAUprD,KAAKuqD,oBACdS,Q,GAhdK9wC,IAAMC,YCP9BmxC,I,8LACazvD,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,+B,kCAMlB,OAAOoS,EAFOjO,KAAKwY,MAAXvK,GAEC,kB,GAZU26C,KAgB3B0C,GAAaC,UAAY,CACrB5uD,OAAQ6uD,KAAUlmC,OAAOmmC,WACzB3C,eAAgB0C,KAAUlmC,OAC1B/L,QAASiyC,KAAUE,KAAKD,WACxB7yC,MAAO4yC,KAAUG,KACjBjF,UAAW8E,KAAUlmC,QAGzBgmC,GAAalxC,aAAe,CACxBxB,OAAO,EACP8tC,UAAW,GAGArsC,qBAAkBixC,IC7B3BM,I,8LACa/vD,GACX,OAAOA,GAAgC,oBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,kC,kCAMlB,OAAOoS,EAFOjO,KAAKwY,MAAXvK,GAEC,sB,GAZa26C,KAgB9BgD,GAAgBL,UAAY,CACxB5uD,OAAQ6uD,KAAUlmC,OAAOmmC,WACzB3C,eAAgB0C,KAAUlmC,OAC1B/L,QAASiyC,KAAUE,KAAKD,WACxB7yC,MAAO4yC,KAAUG,KACjBjF,UAAW8E,KAAUlmC,QAGzBsmC,GAAgBxxC,aAAe,CAC3BxB,OAAO,EACP8tC,UAAW,GAGArsC,qBAAkBuxC,I,8BCiJlBC,I,kNAvKX3yC,MAAQ,CACJ0uC,aAAa,EACbtnC,KAAM,EACN6wB,IAAK,G,EAGT0W,sB,sCAAwB,WAAMpmD,GAAN,iBAAAjJ,EAAA,qDAChBiJ,IACAA,EAAMkX,iBACNlX,EAAMiX,mBAEc,EAAKQ,MAArB0uC,YAGJ,EAAK9uC,SAAS,CAAE8uC,aAAa,KAEvBtnC,EAAO7e,EAAMqmD,QACb3W,EAAM1vC,EAAMsmD,QAElB,EAAKjvC,SAAS,CACV8uC,aAAa,EACbtnC,OACA6wB,SAhBY,yC,wDAqBxB6W,uBAAyB,SAAAvmD,GACjBA,GACAA,EAAMiX,kBAGV,EAAKI,SAAS,CAAE8uC,aAAa,K,iFAGfp/C,GACd,QAAKA,IAGsB,sBAAvBA,EAAKA,KAAK,UACa,0BAAvBA,EAAKA,KAAK,UACa,+BAAvBA,EAAKA,KAAK,Y,sCAIF9I,GACZ,IACIA,EAAMA,EAAI0qB,WAAW,QAAU1qB,EAAM,UAAYA,EACjD,IAAMi/B,EAAaqE,UAAUtjC,GAEvBosD,EAAW,IAAInsD,IAAIg/B,GAAYmtB,SAASx/C,MAAM,KAC9C22B,EAAS6oB,EAAS7tD,QAAU,EAAI6tD,EAASA,EAAS7tD,OAAS,GAAK,IAAI0B,IAAIg/B,GAAYmtB,SAE1F,OAAO5oB,KAASC,UAAUF,GAC5B,MAAO/nC,GACLD,QAAQC,MAAM,QAAUwE,EAAM,KAAOxE,GAGzC,OAAO,O,+BAGD,IAAD,SACmD8E,KAAKwY,MAArD7b,EADH,EACGA,OAAQE,EADX,EACWA,UAAWkvD,EADtB,EACsBA,QAAS7E,EAD/B,EAC+BA,gBAD/B,EAE8BlnD,KAAKkZ,MAAhC0uC,EAFH,EAEGA,YAAatnC,EAFhB,EAEgBA,KAAM6wB,EAFtB,EAEsBA,IAErBv1C,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,KAErB,IAAIC,EAAU,KAPT,EAQiDkwD,GAAW,CAC7D/9C,MAAO,GACPgI,YAAa,GACbha,MAAO,KACP0D,IAAK,IAJHssD,EARD,EAQCA,YAAah2C,EARd,EAQcA,YAAaha,EAR3B,EAQ2BA,MAAOgS,EARlC,EAQkCA,MAAOtO,EARzC,EAQyCA,IAM9C,GAAIqsD,EACA/9C,EAAQA,GAAShO,KAAKisD,gBAAgBvsD,GAEtC7D,EACI,kBAACigB,GAAA,EAAD,CAAU+I,UAAU,kBAAkBnlB,IAAKA,GACtCssD,OAGN,CAAC,IACI/+C,EAASrR,EAAQC,QAAjBoR,KACR,GAAIA,EAAM,CAAC,IACC6C,EAAa7C,EAAb6C,SACJA,GAAYA,EAAS7R,OAAS,IAC9BpC,EAAUiU,EAAShO,OAAO9B,KAAKksD,mBAAmBtoD,IAAI,SAAA/B,GAClD,IAAM8Z,EAAad,aAAU5N,EAAKA,KAAMpL,EAAEoO,OAAQpO,EAAEoO,OAASpO,EAAE5D,QAC3DyB,EAAMic,EACNmjB,GAAO,EAEX,OAAQj9B,EAAE2G,KAAK,UACX,IAAK,wBAA0B,IACd2jD,EAAYtqD,EAAE2G,KAAnB9I,IACJysD,IACAzsD,EAAMysD,GAEV,MAEJ,IAAK,oBACD,MAEJ,IAAK,6BACDrtB,GAAO,EAMf,OAFA9wB,EAAQA,GAAS,EAAKi+C,gBAAgBvsD,IAAQ,IAG1C,kBAACoc,GAAA,EAAD,CAAU+I,UAAU,kBAAkBnlB,IAAKA,EAAKo/B,KAAMA,GACjDnjB,OAQzB,IAAM2c,EAAS,qBAAkB3T,KAAK4T,IAAIvqB,EAAM06B,WAAW,IAAM,EAAK,GAEtE,OACI,oCACI,yBAAK7jB,UAAU,cAAcqxB,cAAel2C,KAAK6nD,uBAC7C,yBAAKhjC,UAAWC,IAAW,oBAAqBwT,IAC3C1K,aAAe5f,GACfhS,GACG,kBAAC6pB,GAAA,EAAD,CACIvf,YAAa,GACb3J,OAAQA,EACRE,UAAWA,EACXb,MAAOA,EACPqjB,UAAWA,KACXqZ,cAAc,EACd31B,MAAO,CAAE0C,MAAO,GAAIC,OAAQ,GAAIwrC,SAAU,WAAYC,IAAK,EAAG7wB,KAAM,MAIhF,yBAAKuE,UAAU,uBACV7W,GAAS,yBAAK6W,UAAU,kBAAkB7W,GAC1CgI,GAAe,yBAAK6O,UAAU,wBAAwB7O,GACtDna,IAGT,kBAAC,GAAD,CACIc,OAAQA,EACRE,UAAWA,EACXoqD,eAAgB,CAAE9V,MAAK7wB,QACvB1f,KAAMgnD,EACNV,gBAAiBA,EACjB3tC,QAASvZ,KAAKgoD,8B,GAzJT9tC,IAAMC,YCJzBiyC,I,8LACavwD,GACX,IAAKA,EAAS,OAAO,EADD,IAGZQ,EAAmBR,EAAnBQ,SAAU4Q,EAASpR,EAAToR,KAClB,GAAI5Q,EAAU,OAAO,EACrB,IAAK4Q,EAAM,OAAO,EALE,IAOZ6C,EAAa7C,EAAb6C,SACR,QAAKA,GAEEA,EAAS0vC,KACZ,SAAA39C,GAAC,MACuB,sBAApBA,EAAE2G,KAAK,UACa,0BAApB3G,EAAE2G,KAAK,UACa,+BAApB3G,EAAE2G,KAAK,a,wCAKf,MAAO,CAAE,QAAS,6B,kCAMlB,OAAOyF,EAFOjO,KAAKwY,MAAXvK,GAEC,gB,sCAGGrS,GAAU,IACdktD,EAAmB9oD,KAAKwY,MAAxBswC,eACAlsD,EAAyBhB,EAAzBgB,QAASf,EAAgBD,EAAhBC,QAASpC,EAAOmC,EAAPnC,GAE1B,OACI,kBAAC,GAAD,CACIoY,IAAG,kBAAajV,EAAb,uBAAmCnD,GACtCkD,OAAQC,EACRC,UAAWpD,EACXsyD,QAASlwD,EAAQQ,SACjBgjB,UAAW,kBAAMA,aAAUziB,EAASnD,GAAI,IACxCytD,gBAAiBtqD,IAAYksD,Q,GAxCnBF,KA8C1BwD,GAAYb,UAAY,CACpB5uD,OAAQ6uD,KAAUlmC,OAAOmmC,WACzB3C,eAAgB0C,KAAUlmC,OAC1B/L,QAASiyC,KAAUE,KAAKD,WACxB7yC,MAAO4yC,KAAUG,KACjBjF,UAAW8E,KAAUlmC,QAGzB8mC,GAAYhyC,aAAe,CACvBxB,OAAO,EACP8tC,UAAW,GAGArsC,qBAAkB+xC,I,oBCzClBnE,I,mBApBX,WAAYzvC,GAAQ,qEACVA,I,sEAGA,IACEyS,EAAUjrB,KAAKwY,MAAfyS,MAER,OACI,yBAAKpG,UAAU,iBACX,kBAACE,EAAA,EAAD,CAAYF,UAAU,qBAAqBzL,QAAS6R,GAChD,kBAAC,GAAD,OAEJ,yBAAKpG,UAAU,qCACX,0BAAMA,UAAU,yBAAhB,sB,GAdY3K,IAAMC,YCEhCkyC,I,kNACFnzC,MAAQ,CACJtI,MAAO,G,EAGXy6B,aAAe,SAAC5pC,EAAOmP,GACnB,EAAKkI,SAAS,CAAElI,W,wEAGV,IAAD,EACsB5Q,KAAKwY,MAAxBe,EADH,EACGA,QAASX,EADZ,EACYA,MACThI,EAAU5Q,KAAKkZ,MAAftI,MAEF/U,EACF,oCACI,kBAAC,GAAD,CAAmBovB,MAAO1R,IAC1B,kBAAC+yC,GAAA,EAAD,CACI17C,MAAOA,EACP86B,SAAU1rC,KAAKqrC,aACfkhB,eAAe,UACfC,UAAU,UACVC,YAAU,EACVC,cAAc,MACdhX,WAAS,GACT,kBAACiX,GAAA,EAAD,CAAKC,MAAM,QAAQ7pD,MAAO,CAAE8pD,SAAU,UACtC,kBAACF,GAAA,EAAD,CAAKC,MAAM,OAAO7pD,MAAO,CAAE8pD,SAAU,UACrC,kBAACF,GAAA,EAAD,CAAKC,MAAM,QAAQ7pD,MAAO,CAAE8pD,SAAU,UACtC,kBAACF,GAAA,EAAD,CAAKC,MAAM,QAAQ7pD,MAAO,CAAE8pD,SAAU,YAKlD,OAAOj0C,EAAQ,oCAAG/c,GAAc,yBAAKgpB,UAAU,gBAAgBhpB,O,GAhC7Cqe,IAAMC,YA2ChCkyC,GAAYjyC,aAAe,CACvBxB,OAAO,EACP8tC,UAAW,GAGA2F,UC7CTS,I,mBACF,WAAYt0C,GAAQ,IAAD,uBACf,4CAAMA,KAuBVigB,wBAA0B,SAAAlgC,GAAW,IAAD,EACC,EAAK2gB,MAA9Bhb,EADwB,EACxBA,UAAWwI,EADa,EACbA,UACX3H,EAAWxG,EAAXwG,OAEJb,GAAaA,EAAUlC,OAASkC,EAAUlC,MAAMvC,KAAOsF,EACvD,EAAKg1B,cACErtB,GAAaA,EAAU1K,OAAS0K,EAAU1K,MAAMvC,KAAOsF,GAC9D,EAAKg1B,eA/BM,EAmCnB8zB,sBAnCmB,sCAmCK,WAAMpmD,GAAN,iBAAAjJ,EAAA,qDAChBiJ,IACAA,EAAMkX,iBACNlX,EAAMiX,mBAEc,EAAKQ,MAArB0uC,YAGJ,EAAK9uC,SAAS,CAAE8uC,aAAa,KAEvBtnC,EAAO7e,EAAMqmD,QACb3W,EAAM1vC,EAAMsmD,QAElB,EAAKjvC,SAAS,CACV8uC,aAAa,EACbtnC,OACA6wB,SAhBY,yCAnCL,wDAwDnB6W,uBAAyB,SAAAvmD,GACjBA,GACAA,EAAMiX,kBAGV,EAAKI,SAAS,CAAE8uC,aAAa,KA7Dd,IAGP5rD,EAA+Bwc,EAA/Bxc,MAAOqG,EAAwBmW,EAAxBnW,KAAM02B,EAAkBvgB,EAAlBugB,cAHN,OAKf,EAAK7f,MAAQ,CACT0uC,aAAa,EACbtnC,KAAM,EACN6wB,IAAK,EAELjzC,UAAWiI,aAAQnK,EAAMgC,MAAOqE,GAChCqE,UAAWP,aAAQnK,EAAMgC,MAAO+6B,GAChCpZ,cAAe3jB,EAAM2jB,eAZV,E,iFAiBf3b,IAAU/K,GAAG,wBAAyB+G,KAAKy4B,2B,6CAI3Cz0B,IAAU7K,IAAI,wBAAyB6G,KAAKy4B,2B,+BA2CtC,IAAD,EAC4Dz4B,KAAKwY,MAA9D7b,EADH,EACGA,OAAQE,EADX,EACWA,UAAWwiB,EADtB,EACsBA,UAAW6nC,EADjC,EACiCA,gBAAiBnkD,EADlD,EACkDA,MADlD,EAEmE/C,KAAKkZ,MAArEyG,EAFH,EAEGA,cAAejZ,EAFlB,EAEkBA,UAAWxI,EAF7B,EAE6BA,UAAW0pD,EAFxC,EAEwCA,YAAatnC,EAFrD,EAEqDA,KAAM6wB,EAF3D,EAE2DA,IAEhE,IAAKjzC,EAAW,OAAO,KAEvB,IAAMy6B,EAAUhZ,EAAgB,2BAA6BA,EAAcre,KAAO,KAC5Es3B,EAAW/sB,YAAOnF,EAAYA,EAAU1K,MAAQ,MAChD05B,EAAM7pB,YAAO3N,EAAUlC,OACX28B,GAAWrS,aAAmB5f,GAEhD,OACI,oCACI,yBACIme,UAAU,eACV9hB,MAAOA,EACPqW,QAASiG,EACT62B,cAAel2C,KAAK6nD,uBACpB,yBACIhjC,UAAU,uBACV9hB,MAAO,CAAEgqD,gBAAgB,OAAD,OAASn0B,GAAYD,EAArB,KAAiCq0B,eAAgB,UACxEt3B,IAAQkD,GACL,yBAAK/T,UAAU,4BAA4B9hB,MAAO,CAAEgqD,gBAAgB,OAAD,OAASr3B,EAAT,UAI/E,kBAAC,GAAD,CACI/4B,OAAQA,EACRE,UAAWA,EACXoqD,eAAgB,CAAE9V,MAAK7wB,QACvB1f,KAAMgnD,EACNV,gBAAiBA,EACjB3tC,QAASvZ,KAAKgoD,8B,GAjGR9tC,IAAMC,YAoHhC2yC,GAAY1yC,aAAe,CACvB/X,KAAMkE,IACNwyB,cAAeE,KAGJ6zB,UC3HTG,I,kMAEE,MAAO,uB,+CAIP,MAAO,8B,qCAGIpxD,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,+B,kCAMlB,OAAOoS,EAFOjO,KAAKwY,MAAXvK,GAEC,iB,sCAGGrS,GAAU,IACdktD,EAAmB9oD,KAAKwY,MAAxBswC,eACAlsD,EAAyBhB,EAAzBgB,QAASf,EAAgBD,EAAhBC,QAASpC,EAAOmC,EAAPnC,GAE1B,OACI,kBAAC,GAAD,CACIoY,IAAG,kBAAajV,EAAb,uBAAmCnD,GACtCkD,OAAQC,EACRC,UAAWpD,EACXuC,MAAOH,EAAQG,MACfqjB,UAAW,kBAAMA,aAAUziB,EAASnD,GAAI,IACxCytD,gBAAiBtqD,IAAYksD,Q,GAlClBF,KAwC3BqE,GAAa1B,UAAY,CACrB5uD,OAAQ6uD,KAAUlmC,OAAOmmC,WACzB3C,eAAgB0C,KAAUlmC,OAC1B/L,QAASiyC,KAAUE,KAAKD,WACxB7yC,MAAO4yC,KAAUG,KACjBjF,UAAW8E,KAAUlmC,QAGzB2nC,GAAa7yC,aAAe,CACxBxB,OAAO,EACP8tC,UAAW,GAGArsC,qBAAkB4yC,IClD3BC,I,kNACFh0C,MAAQ,CACJ0uC,aAAa,EACbtnC,KAAM,EACN6wB,IAAK,G,EAWTxL,iCAAmC,SAAAptC,GAAW,IAClCuE,EAAc,EAAK0b,MAAMlc,MAAzBQ,UACAiC,EAAWxG,EAAXwG,OAEHjC,GAEDA,EAAUd,OAASc,EAAUd,MAAMvC,KAAOsF,GAC1C,EAAKg1B,e,EAIb8zB,sB,sCAAwB,WAAMpmD,GAAN,iBAAAjJ,EAAA,qDAChBiJ,IACAA,EAAMkX,iBACNlX,EAAMiX,mBAEc,EAAKQ,MAArB0uC,YAGJ,EAAK9uC,SAAS,CAAE8uC,aAAa,KAEvBtnC,EAAO7e,EAAMqmD,QACb3W,EAAM1vC,EAAMsmD,QAElB,EAAKjvC,SAAS,CACV8uC,aAAa,EACbtnC,OACA6wB,SAhBY,yC,wDAqBxB6W,uBAAyB,SAAAvmD,GACjBA,GACAA,EAAMiX,kBAGV,EAAKI,SAAS,CAAE8uC,aAAa,K,mFA5C7B5jD,IAAU/K,GAAG,iCAAkC+G,KAAK2lC,oC,6CAIpD3hC,IAAU7K,IAAI,iCAAkC6G,KAAK2lC,oC,+BA2C/C,IAAD,EAC4D3lC,KAAKwY,MAA9D7b,EADH,EACGA,OAAQE,EADX,EACWA,UAAWwiB,EADtB,EACsBA,UAAWtc,EADjC,EACiCA,MAAOmkD,EADxC,EACwCA,gBADxC,EAE0ClnD,KAAKwY,MAAMlc,MAAlDqjB,EAFH,EAEGA,cAAe7iB,EAFlB,EAEkBA,UAAWwnB,EAF7B,EAE6BA,SAF7B,EAG8BtkB,KAAKkZ,MAAhC0uC,EAHH,EAGGA,YAAatnC,EAHhB,EAGgBA,KAAM6wB,EAHtB,EAGsBA,IAErBxY,EAAUhZ,EAAgB,2BAA6BA,EAAcre,KAAO,KAC5Es3B,EAAW/sB,YAAO/O,EAAYA,EAAUd,MAAQ,MAChD25B,EAAYiD,EAAWtS,aAAmBxpB,EAAW0pB,MAA6B/O,QAAQkhB,GAEhG,OACI,oCACI,yBACI9T,UAAU,eACV9hB,MAAOA,EACPqW,QAASiG,EACT62B,cAAel2C,KAAK6nD,uBACpB,yBAAKhjC,UAAU,wBACX,yBACIA,UAAWC,IAAW,uBAAwB,CAC1C,gBAAiB6Q,EACjB,sBAAuBiD,GAAYjD,IAEvC5yB,MAAO,CAAEgqD,gBAAgB,OAAD,OAASn0B,GAAYD,EAArB,QAE5B,yBAAK9T,UAAU,qBAAqBH,aAAkBJ,MAG9D,kBAAC,GAAD,CACI3nB,OAAQA,EACRE,UAAWA,EACXoqD,eAAgB,CAAE9V,MAAK7wB,QACvB1f,KAAMgnD,EACNV,gBAAiBA,EACjB3tC,QAASvZ,KAAKgoD,8B,GAxFR9tC,IAAMC,YA2GhC+yC,GAAY9yC,aAAe,CACvB/X,KAAMkE,IACNwyB,cAAeE,KAGJi0B,UCnHTC,I,kMAEE,MAAO,uB,+CAIP,MAAO,8B,qCAGItxD,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,+B,kCAMlB,OAAOoS,EAFOjO,KAAKwY,MAAXvK,GAEC,iB,sCAGGrS,GAAU,IACdktD,EAAmB9oD,KAAKwY,MAAxBswC,eACAlsD,EAAyBhB,EAAzBgB,QAASf,EAAgBD,EAAhBC,QAASpC,EAAOmC,EAAPnC,GAE1B,OACI,kBAAC,GAAD,CACIoY,IAAG,kBAAajV,EAAb,uBAAmCnD,GACtCkD,OAAQC,EACRC,UAAWpD,EACX6C,MAAOT,EAAQS,MACf+iB,UAAW,kBAAMA,aAAUziB,EAASnD,GAAI,IACxCytD,gBAAiBtqD,IAAYksD,Q,GAlClBF,KAwC3BuE,GAAa5B,UAAY,CACrB5uD,OAAQ6uD,KAAUlmC,OAAOmmC,WACzB3C,eAAgB0C,KAAUlmC,OAC1B/L,QAASiyC,KAAUE,KAAKD,WACxB7yC,MAAO4yC,KAAUG,KACjBjF,UAAW8E,KAAUlmC,QAGzB6nC,GAAa/yC,aAAe,CACxBxB,OAAO,EACP8tC,UAAW,GAGArsC,qBAAkB8yC,I,wCClD3BC,I,mBACF,WAAY50C,GAAQ,IAAD,8BACf,4CAAMA,KASVqvC,sBAVmB,sCAUK,WAAMpmD,GAAN,iBAAAjJ,EAAA,qDAChBiJ,IACAA,EAAMkX,iBACNlX,EAAMiX,mBAEc,EAAKQ,MAArB0uC,YAGJ,EAAK9uC,SAAS,CAAE8uC,aAAa,KAEvBtnC,EAAO7e,EAAMqmD,QACb3W,EAAM1vC,EAAMsmD,QAElB,EAAKjvC,SAAS,CACV8uC,aAAa,EACbtnC,OACA6wB,SAhBY,yCAVL,wDA+BnB6W,uBAAyB,SAAAvmD,GACjBA,GACAA,EAAMiX,kBAGV,EAAKI,SAAS,CAAE8uC,aAAa,KAjC7B,EAAK1uC,MAAQ,CACT0uC,aAAa,EACbtnC,KAAM,EACN6wB,IAAK,GANM,E,sEAuCT,IAAD,EACsEnxC,KAAKwY,MAAxE7b,EADH,EACGA,OAAQu+B,EADX,EACWA,KAAMr+B,EADjB,EACiBA,UAAWyB,EAD5B,EAC4BA,UAAW+gB,EADvC,EACuCA,UAAW6nC,EADlD,EACkDA,gBADlD,EAE8BlnD,KAAKkZ,MAAhC0uC,EAFH,EAEGA,YAAatnC,EAFhB,EAEgBA,KAAM6wB,EAFtB,EAEsBA,IAErBv1C,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,KAErB,IAAK0C,EAAW,OAAO,KAPlB,IASGyU,EAAyBnX,EAAzBmX,KAAMtL,EAAmB7L,EAAnB6L,eACR4lD,EAAa,IAAIr6C,KAAY,IAAPD,GAAau6C,mBAAmB,CAACpyB,EAAKxY,UAAW,CACzErP,IAAK,UACLk6C,MAAO,QACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGJrpC,EAA0BhmB,EAA1BgmB,SAAiB3rB,EAAS2F,EAAhBC,MAElB,OACI,oCACI,yBAAKsmB,UAAU,oBAAoBqxB,cAAel2C,KAAK6nD,uBACnD,kBAACjb,GAAA,EAAD,CAAejwC,OAAQA,EAAQE,UAAWA,EAAWlE,KAAMA,EAAM0mB,UAAWA,IAC5E,yBAAKwF,UAAU,sBACX,kBAACwa,GAAA,EAAD,CAAe1iC,OAAQA,EAAQE,UAAWA,EAAWqF,OAAQuF,IAC7D,yBAAKod,UAAU,mBACX,kBAAC2f,GAAA,EAAD,CACI7nC,OAAQA,EACRE,UAAWA,EACXynB,SAAUA,EACV3rB,KAAMA,EACNqV,MAAK,UAAKq/C,EAAL,QAET,kBAACxnB,GAAA,EAAD,CAAalpC,OAAQA,EAAQE,UAAWA,EAAW0yB,KAAM,kBAIrE,kBAAC,GAAD,CACI5yB,OAAQA,EACRE,UAAWA,EACXoqD,eAAgB,CAAE9V,MAAK7wB,QACvB1f,KAAMgnD,EACNV,gBAAiBA,EACjB3tC,QAASvZ,KAAKgoD,8B,GArFJ9tC,IAAMC,YAoGrBE,iBAAkB+yC,ICvG3BQ,I,8LACa/xD,GACX,OAAOA,GAAgC,qBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,mC,kCAMlB,OAAOoS,EAFOjO,KAAKwY,MAAXvK,GAEC,gB,kCAIT,OAAO,I,sCAGKrS,GAAU,IACdktD,EAAmB9oD,KAAKwY,MAAxBswC,eACAlsD,EAAyBhB,EAAzBgB,QAASf,EAAgBD,EAAhBC,QAASpC,EAAOmC,EAAPnC,GAE1B,OACI,kBAAC,GAAD,CACIoY,IAAG,kBAAajV,EAAb,uBAAmCnD,GACtCkD,OAAQC,EACRC,UAAWpD,EACX6E,UAAWzC,EAAQW,WACnB6iB,UAAW,kBAAMA,aAAUziB,EAASnD,GAAI,IACxCytD,gBAAiBtqD,IAAYksD,Q,GA9BdF,KAoC/BgF,GAAiBrC,UAAY,CACzB5uD,OAAQ6uD,KAAUlmC,OAAOmmC,WACzB3C,eAAgB0C,KAAUlmC,OAC1B/L,QAASiyC,KAAUE,KAAKD,WACxB7yC,MAAO4yC,KAAUG,KACjBjF,UAAW8E,KAAUlmC,QAGzBsoC,GAAiBxzC,aAAe,CAC5BxB,OAAO,EACP8tC,UAAW,GAGArsC,qBAAkBuzC,ICpC3BC,I,mBACF,WAAYr1C,GAAQ,IAAD,uBACf,4CAAMA,KA0CVs1C,qBAAuB,SAAAv1D,GAAW,IACtBqgB,EAAU,EAAKJ,MAAfI,MACAjc,EAAW,EAAKuc,MAAhBvc,OAEJic,GACAjc,IAAWpE,EAAOw1D,aAEtB,EAAKC,aAAe,KACpB,EAAKC,gBAAkB,KACvB,EAAKC,YAAc,KACnB,EAAKC,aAAe,KACpB,EAAKC,aAAe,KACpB,EAAKC,iBAAmB,KAExB,EAAKv1C,SAAS,CACVnc,OAAQpE,EAAOw1D,WACfjF,eAAgB,EAChBwF,WAAY,KACZC,mBAAmB,EACnBC,kBAAkB,EAClBC,qBAAqB,EACrBC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,EAClBC,sBAAsB,EACtB9J,SAAUj7C,IAAUglD,YAAYx2D,EAAOw1D,YACvC9I,iBAAkB,SAtEP,EA0EnBnxB,YAAc,SAAAn3B,GACV,EAAKqyD,iBAAiBryD,GACtB,EAAKsyD,qBAAqBtyD,GAE1B,IAAMX,EAAQkb,YAAiBva,GAC1BX,GACLgO,YAA8BrN,EAAQ,CAACX,KAhFxB,EAmFnBgzD,iBAnFmB,sCAmFA,WAAMryD,GAAN,eAAAnE,EAAA,qEACQ4oD,GAAgBzkD,GADxB,UACTqoD,EADS,OAEfj7C,IAAUmlD,YAAYvyD,EAAQqoD,GAE1BroD,IAAW,EAAKuc,MAAMvc,OAJX,iDAMf,EAAKmc,SAAS,CAAEksC,aAND,yCAnFA,wDA4FnBiK,qBA5FmB,sCA4FI,WAAMtyD,GAAN,qBAAAnE,EAAA,wDACdse,YAAana,GADC,oDAGbiY,EAAWH,KAAgBI,YAAYkC,YAAgBpa,IAH1C,oDAMmBoX,EAAmBa,EAAjDu6C,6BANW,kEASAn2D,KAAgBmI,KAAK,CACpC,QAAS,uBACT4S,iBACAqnC,OAAO,IAZQ,WASb//C,EATa,2EAiBI+lD,GAAgB/lD,EAAK5B,IAjBzB,WAiBburD,EAjBa,OAkBnBj7C,IAAUmlD,YAAY7zD,EAAK5B,GAAIurD,GAE3B,EAAK9rC,MAAMvc,SAAWA,EApBP,mDAsBnB,EAAKmc,SAAS,CAAEgwC,eAAgBztD,EAAK5B,GAAIwrD,iBAAkBl7C,IAAUglD,YAAY1zD,EAAK5B,MAtBnE,0CA5FJ,wDAqHnB21D,sBAAwB,WACpB,EAAKt2C,SAAS,CAAE61C,iBAAiB,KAtHlB,EAyHnBU,uBAAyB,WACrB,EAAKv2C,SAAS,CAAE61C,iBAAiB,KA1HlB,EA6HnBW,wBAA0B,WACtB,EAAKx2C,SAAS,CAAEy1C,mBAAmB,KA9HpB,EAiInBgB,0BAA4B,WACxB,EAAKz2C,SAAS,CAAEy1C,mBAAmB,KAlIpB,EAqInBiB,uBAAyB,WAAO,IACpB52C,EAAU,EAAKJ,MAAfI,MACe,EAAKM,MAApBo1C,WAGJ,EAAKx1C,SAAS,CAAEw1C,WAAY,OACrB11C,EACP5f,KAAgB8G,aAAa,CACzB,QAAS,2BACTnD,OAAQ,IAGZk2B,KAAiB48B,6BAA4B,IAjJlC,EAqJnBC,0BAA4B,WACxB,EAAK52C,SAAS,CAAE21C,qBAAqB,KAtJtB,EAyJnBkB,2BAA6B,WACzB,EAAK72C,SAAS,CAAE21C,qBAAqB,KA1JtB,EA6JnBmB,uBAAyB,WACrB,EAAK92C,SAAS,CAAE01C,kBAAkB,KA9JnB,EAiKnBqB,wBAA0B,WACtB,EAAK/2C,SAAS,CAAE01C,kBAAkB,KAlKnB,EAqKnBsB,2BAA6B,WACzB,EAAKh3C,SAAS,CAAEg2C,sBAAsB,KAtKvB,EAyKnBiB,4BAA8B,WAC1B,EAAKj3C,SAAS,CAAEg2C,sBAAsB,KA1KvB,EA6KnBkB,sBAAwB,WACpB,EAAKl3C,SAAS,CAAE41C,iBAAiB,KA9KlB,EAiLnBuB,uBAAyB,WACrB,EAAKn3C,SAAS,CAAE41C,iBAAiB,KAlLlB,EAqLnBwB,uBAAyB,WACrB,EAAKp3C,SAAS,CAAE81C,kBAAkB,KAtLnB,EAyLnBuB,wBAA0B,WACtB,EAAKr3C,SAAS,CAAE81C,kBAAkB,KA1LnB,EA6LnBwB,uBAAyB,WACrB,EAAKt3C,SAAS,CAAE+1C,kBAAkB,KA9LnB,EAiMnBwB,wBAA0B,WACtB,EAAKv3C,SAAS,CAAE+1C,kBAAkB,KA/LlC,EAAKyB,WAAap2C,IAAM0a,YAHT,IAKPhc,EAAUJ,EAAVI,MACAjc,EAAyBk2B,KAAzBl2B,OAAQi2B,EAAiBC,KAAjBD,aAND,OAQf,EAAK1Z,MAAQ,CACTvc,OAAQic,EAAQga,EAAej2B,EAC/BmsD,eAAgB,EAChBwF,WAAY,KACZC,mBAAmB,EACnBC,kBAAkB,EAClBC,qBAAqB,EACrBC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,EAClBC,sBAAsB,EACtB9J,SAAU,KACVC,iBAAkB,MArBP,E,iFA2BfjlD,KAAK8zB,YAAY9zB,KAAKkZ,MAAMvc,QAE5Bk2B,KAAiB55B,GAAG,qBAAsB+G,KAAK8tD,wB,6CAI/Cj7B,KAAiB15B,IAAI,qBAAsB6G,KAAK8tD,wB,yCAGjC14B,EAAWC,EAAWC,GAAW,IACxC34B,EAAWqD,KAAKkZ,MAAhBvc,OACJA,IAAW04B,EAAU14B,QACrBqD,KAAK8zB,YAAYn3B,K,+BA8JhB,MAEiCqD,KAAKwY,MAA1BqM,GAFZ,EAEGlL,QAFH,EAEYkL,WAAWjM,EAFvB,EAEuBA,MAFvB,EAiBD5Y,KAAKkZ,MAbLvc,EAJC,EAIDA,OACAqoD,EALC,EAKDA,SACA8D,EANC,EAMDA,eACA7D,EAPC,EAODA,iBACAqJ,EARC,EAQDA,WACAE,EATC,EASDA,iBACAC,EAVC,EAUDA,oBACAC,EAXC,EAWDA,gBACAC,EAZC,EAYDA,gBACAC,EAbC,EAaDA,iBACAC,EAdC,EAcDA,iBACAC,EAfC,EAeDA,qBACAP,EAhBC,EAgBDA,kBAGEtL,EAAgBtmD,GAAU2xD,EAC1B5H,EAAY1mD,KAAKswD,YAActwD,KAAKswD,WAAWtzC,QAAUhd,KAAKswD,WAAWtzC,QAAQ6nC,mBAAqB,EAExGhpD,EAAU,KAiHd,OAhHI8yD,EACA9yD,EACI,kBAAC,GAAD,CACIc,OAAQsmD,EACRrqC,MAAOA,EACP8tC,UAAWA,EACXntC,QAASvZ,KAAKqvD,yBAGfb,GACPxuD,KAAKguD,aAAehuD,KAAKguD,cACrB,kBAAC,GAAD,CACIrxD,OAAQsmD,EACR6F,eAAgBA,EAChBlwC,MAAOA,EACP8tC,UAAWA,EACXntC,QAASvZ,KAAK6vD,0BAItBh0D,EAAUmE,KAAKguD,cACRS,GACPzuD,KAAKiuD,gBAAkBjuD,KAAKiuD,iBACxB,kBAAC,GAAD,CACItxD,OAAQsmD,EACR6F,eAAgBA,EAChBlwC,MAAOA,EACP8tC,UAAWA,EACXntC,QAASvZ,KAAK2vD,6BAItB9zD,EAAUmE,KAAKiuD,iBACRS,GACP1uD,KAAKkuD,YAAcluD,KAAKkuD,aACpB,kBAAC,GAAD,CACIvxD,OAAQsmD,EACR6F,eAAgBA,EAChBlwC,MAAOA,EACP8tC,UAAWA,EACXntC,QAASvZ,KAAKiwD,yBAItBp0D,EAAUmE,KAAKkuD,aACRU,GACP5uD,KAAKmuD,aAAenuD,KAAKmuD,cACrB,kBAAC,GAAD,CACIxxD,OAAQsmD,EACR6F,eAAgBA,EAChBlwC,MAAOA,EACP8tC,UAAWA,EACXntC,QAASvZ,KAAKmwD,0BAItBt0D,EAAUmE,KAAKmuD,cACRU,GACP7uD,KAAKouD,aAAepuD,KAAKouD,cACrB,kBAAC,GAAD,CACIzxD,OAAQsmD,EACR6F,eAAgBA,EAChBlwC,MAAOA,EACP8tC,UAAWA,EACXntC,QAASvZ,KAAKqwD,0BAItBx0D,EAAUmE,KAAKouD,cACRU,GACP9uD,KAAKquD,iBAAmBruD,KAAKquD,kBACzB,kBAAC,GAAD,CACI1xD,OAAQsmD,EACR6F,eAAgBA,EAChBlwC,MAAOA,EACP8tC,UAAWA,EACXntC,QAASvZ,KAAK+vD,8BAItBl0D,EAAUmE,KAAKquD,kBAEfxyD,EADO0yD,EAEH,kBAAC,GAAD,CACI5xD,OAAQsmD,EACRrqC,MAAOA,EACP8tC,UAAWA,EACXntC,QAASvZ,KAAKuvD,4BAKlB,kBAAC,GAAD,CACIv5B,IAAKh2B,KAAKswD,WACV3zD,OAAQsmD,EACRrqC,MAAOA,EACPynC,WAAYiO,IAAe3xD,EAC3BqoD,SAAUA,EACVC,iBAAkBA,EAClBC,oBAAqBllD,KAAKsvD,wBAC1BnK,mBAAoBnlD,KAAK4vD,uBACzBxK,sBAAuBplD,KAAK0vD,0BAC5BnK,kBAAmBvlD,KAAKovD,sBACxB/J,kBAAmBrlD,KAAKgwD,sBACxB1K,mBAAoBtlD,KAAKkwD,uBACzB1K,mBAAoBxlD,KAAKowD,uBACzB3K,uBAAwBzlD,KAAK8vD,2BAC7Bv2C,QAASvZ,KAAKwvD,yBAKnB52C,EACH,oCAAG/c,GAEH,yBAAKgpB,UAAWC,IAAW,YAAa,CAAE,gBAAiBlM,GAASiM,IAAahpB,O,GAhVtEqe,IAAMC,YA2V7B0zC,GAASzzC,aAAe,CACpByK,UAAW,KACXlL,QAAS,KACTf,OAAO,GAGIi1C,U,qBC/WT0C,I,kNAeFx4B,aAAe,SAAAt2B,GACU,IAAjBA,EAAM2yC,QACNoc,e,qFAhBcnhC,EAAWC,EAAW4F,GAAc,IAAD,EAC5Bl1B,KAAKwY,MAAtBxK,EAD6C,EAC7CA,MAAOo3B,EADsC,EACtCA,MAEf,OAAI/V,EAAU+V,QAAUA,GAIpB/V,EAAUrhB,QAAUA,I,+BAalB,IAAD,EACgBhO,KAAKwY,MAAlBvK,EADH,EACGA,EAAGD,EADN,EACMA,MAEX,OACI,yBACIgoB,IAAKh2B,KAAKm4B,OACVtT,UAAU,SACV+mB,YAAa5rC,KAAK+3B,aAClBme,cAAel2C,KAAK81C,mBACpB,yBAAKjxB,UAAU,kBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,uBACX,kBAAC,KAAD,CAAaK,SAAS,eAIlC,yBAAKL,UAAU,wBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,qBAAqB5W,EAAE,oBAG/C,yBAAK4W,UAAU,mBACX,yBAAKA,UAAU,kBAAkB7W,W,GA7CvCkM,IAAMC,YCKtBT,ID0DSW,cAAkBk2C,I,kNCzB7BE,2BAA6B,SAAAl4D,GACN,EAAKigB,MAAhB7b,SAEOpE,EAAOoE,SAClB,EAAK+zD,aAAen4D,EAAOs4B,WAC3B,EAAKkD,gB,EAIb6kB,uBAAyB,SAAArgD,GACrB,EAAKw7B,e,EAGTz7B,SAAW,SAAAC,GACY,EAAKigB,MAAhB7b,SAEOpE,EAAOqE,SAEtB,EAAKm3B,e,qFAlDa1E,EAAWC,GAAY,IAAD,EAClBtvB,KAAKwY,MAAnB7b,EADgC,EAChCA,OAAQsR,EADwB,EACxBA,EAEhB,OAAIohB,EAAU1yB,SAAWA,GAIrB0yB,EAAUphB,IAAMA,I,0CAQpBlE,IAAU9Q,GAAG,mCAAoC+G,KAAK44C,wBACtD7uC,IAAU9Q,GAAG,2BAA4B+G,KAAKywD,4BAC9C1mD,IAAU9Q,GAAG,yBAA0B+G,KAAK1H,UAC5CyR,IAAU9Q,GAAG,wBAAyB+G,KAAK1H,UAC3CyR,IAAU9Q,GAAG,sBAAuB+G,KAAK1H,UACzCyR,IAAU9Q,GAAG,uBAAwB+G,KAAK1H,Y,6CAI1CyR,IAAU5Q,IAAI,mCAAoC6G,KAAK44C,wBACvD7uC,IAAU5Q,IAAI,2BAA4B6G,KAAKywD,4BAC/C1mD,IAAU5Q,IAAI,yBAA0B6G,KAAK1H,UAC7CyR,IAAU5Q,IAAI,wBAAyB6G,KAAK1H,UAC5CyR,IAAU5Q,IAAI,sBAAuB6G,KAAK1H,UAC1CyR,IAAU5Q,IAAI,uBAAwB6G,KAAK1H,Y,+BAwBrC,IAAD,EACiB0H,KAAKwY,MAAnB7b,EADH,EACGA,OAAQsR,EADX,EACWA,EAEhB,GAAIjO,KAAK0wD,aAAc,OAAO,yBAAK7rC,UAAU,kBAAkB,QAE/D,IAAMxpB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,yBAAKwpB,UAAU,kBAAkB,QAEnD,IAAI8rC,EAAiB,KACfpgD,EAAeH,YAAoBzT,GAKzC,GAJI4T,IACAogD,EAAiB,0BAAM9rC,UAAU,yBAAyBtU,KAGzDogD,EAAgB,CACjB,IAAMC,EAAQ74C,YAAapb,GAC3B,GAAIgX,YAAchX,GAAS,CACvB,IAAMsQ,EAAO2jD,EAAM3jD,MAAQ,OAE3B0jD,EACI,oCACI,0BAAM9rC,UAAU,wBAAwB5W,EAAE,SAAW,MACpDhB,IAMjB,IAAK0jD,EAAgB,CACjB,IAAM90D,EAAU+V,YAAsBvW,EAAM4S,IAAM,OAC5C4iD,EAAan/C,YAAyBrW,EAAM4S,GAClD0iD,EACI,oCACKE,GAAc,0BAAMhsC,UAAU,yBAAyBgsC,EAAzC,MACdh1D,GAKb,OAAO,yBAAKgpB,UAAU,kBAAkB8rC,O,GA7FpBz2C,IAAMC,YAiGnBE,iBAAkBX,IC3GlB6Q,eACX,uBAAGgc,YAAY,IAAIE,KAAK,OAAO6Q,SAAS,WACpC,0BAAMwZ,GAAG,OAAOC,GAAG,OAAOC,GAAG,IAAIC,GAAG,KAAKx3D,GAAG,UAAU8sC,YAAY,OAAO2qB,cAAc,UACvF,0BACI90C,EAAE,yfACFmqB,YAAY,OACZ2qB,cAAc,QACd1qB,eAAe,WAGvB,OC2HW2qB,I,kNAjFXV,2BAA6B,SAAAl4D,GACN,EAAKigB,MAAhB7b,SAEOpE,EAAOoE,SAClB,EAAK+zD,aAAen4D,EAAOs4B,WAC3B,EAAKkD,gB,EAIb6kB,uBAAyB,SAAArgD,GACrB,EAAKw7B,e,EAGTz7B,SAAW,SAAAC,GAAW,IACVoE,EAAW,EAAK6b,MAAhB7b,OAEJpE,EAAOqE,UAAYD,GAEvB,EAAKo3B,e,EAGT+tB,kCAAoC,SAAAvpD,GAAW,IACnCoE,EAAW,EAAK6b,MAAhB7b,OAEFtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,GAAKtB,EAEL,OAAQ9C,EAAOwpD,MAAM,UACjB,IAAK,sCAC0B,uBAAvB1mD,EAAKmN,KAAK,UAA4D,uBAAvBnN,EAAKmN,KAAK,UACzD,EAAKurB,cAET,MAEJ,IAAK,wCAC0B,oBAAvB14B,EAAKmN,KAAK,UAAyD,mBAAvBnN,EAAKmN,KAAK,UACtD,EAAKurB,gB,qFA5EC1E,EAAWC,GAAY,IACjC3yB,EAAWqD,KAAKwY,MAAhB7b,OAER,OAAI0yB,EAAU1yB,SAAWA,I,0CAQzBoN,IAAU9Q,GAAG,mCAAoC+G,KAAK44C,wBACtD7uC,IAAU9Q,GAAG,2BAA4B+G,KAAKywD,4BAC9C1mD,IAAU9Q,GAAG,yBAA0B+G,KAAK1H,UAC5CyR,IAAU9Q,GAAG,6BAA8B+G,KAAK1H,UAChDyR,IAAU9Q,GAAG,qBAAsB+G,KAAK1H,UACxCyR,IAAU9Q,GAAG,iCAAkC+G,KAAK1H,UACpDyR,IAAU9Q,GAAG,sBAAuB+G,KAAK1H,UACzCyR,IAAU9Q,GAAG,wBAAyB+G,KAAK1H,UAC3CyR,IAAU9Q,GAAG,uBAAwB+G,KAAK1H,UAC1CyR,IAAU9Q,GAAG,+BAAgC+G,KAAK1H,UAClDyR,IAAU9Q,GAAG,2BAA4B+G,KAAK1H,UAC9Coa,KAAkBzZ,GAAG,kCAAmC+G,KAAK8hD,qC,6CAI7D/3C,IAAU5Q,IAAI,mCAAoC6G,KAAK44C,wBACvD7uC,IAAU5Q,IAAI,2BAA4B6G,KAAKywD,4BAC/C1mD,IAAU5Q,IAAI,yBAA0B6G,KAAK1H,UAC7CyR,IAAU5Q,IAAI,6BAA8B6G,KAAK1H,UACjDyR,IAAU5Q,IAAI,qBAAsB6G,KAAK1H,UACzCyR,IAAU5Q,IAAI,iCAAkC6G,KAAK1H,UACrDyR,IAAU5Q,IAAI,sBAAuB6G,KAAK1H,UAC1CyR,IAAU5Q,IAAI,wBAAyB6G,KAAK1H,UAC5CyR,IAAU5Q,IAAI,uBAAwB6G,KAAK1H,UAC3CyR,IAAU5Q,IAAI,+BAAgC6G,KAAK1H,UACnDyR,IAAU5Q,IAAI,2BAA4B6G,KAAK1H,UAC/Coa,KAAkBvZ,IAAI,kCAAmC6G,KAAK8hD,qC,+BA+C9D,GAAI9hD,KAAK0wD,aAAc,OAAO,KADzB,IAGG/zD,EAAWqD,KAAKwY,MAAhB7b,OAEFtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,KANb,IAQGslD,EAA4BtlD,EAA5BslD,UAAWxuC,EAAiB9W,EAAjB8W,aAGbi/C,EAAyBr/C,YAA2BpV,GACpD00D,EAAkBp/C,YAAoBtV,GACtCokD,EAAU1uC,YAAY1V,GAE5B,OACI,qCAN0B,EAQrBy0D,GACG,yBAAKvsC,UAAU,gBACX,yBAAKA,UAAU,wBAAf,MAGPwsC,GACG,yBAAKxsC,UAAWC,IAAW,CAAE,qBAAsBi8B,GAAW,iBAC1D,0BAAMl8B,UAAU,qBAAqB1S,EAAe,EAAIA,EAAe,KAG9EwuC,IAAwC0Q,IAAoBD,GACzD,yBAAKvsC,UAAU,uBACX,kBAACysC,GAAD,CAASzsC,UAAU,mC,GAlHjB3K,IAAMC,YCXjBoQ,eACX,uBAAG+b,OAAO,OAAOC,YAAY,IAAIE,KAAK,OAAO6Q,SAAS,WAClD,uBAAG5W,UAAU,iCAAiC+F,KAAK,UAAU6Q,SAAS,WAClE,0BAAMl7B,EAAE,0iBAGhB,SCLWmO,eACX,uBAAGgc,YAAY,IAAIE,KAAK,OAAO6Q,SAAS,UAAU4Z,cAAc,QAAQ1qB,eAAe,SACnF,uBAAG9F,UAAU,kCACT,4BAAQ6F,YAAY,MAAMG,GAAG,KAAKC,GAAG,IAAIC,EAAE,MAC3C,0BAAMkqB,GAAG,KAAKC,GAAG,MAAMC,GAAG,KAAKC,GAAG,IAAI1qB,YAAY,QAClD,0BAAMuqB,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAI1qB,YAAY,UAGxD,WCTWhc,eACX,0BACImW,UAAU,kCACVtkB,EAAE,8iBAEN,QCLWmO,eACX,0BACImW,UAAU,kCACVtkB,EAAE,ylCAEN,aCgGWm1C,I,kNA3FXr4C,MAAQ,G,EAkCRs4C,oBAAsB,SAAAj5D,GAAW,IAAD,EACE,EAAKigB,MAA3B7b,EADoB,EACpBA,OAAQE,EADY,EACZA,UACR40D,EAA4Bl5D,EAA5Bk5D,eAAgB71D,EAAYrD,EAAZqD,QAExB,GAAIiB,IAAc40D,GACb71D,EAAL,CAL4B,IAOpBgB,EAA+BhB,EAA/BgB,QAASnD,EAAsBmC,EAAtBnC,GAAI4sB,EAAkBzqB,EAAlByqB,cACjB1pB,IAAWC,IAEf,EAAK80D,aAAej4D,EACpB,EAAKqf,SAAS,CAAE64C,aAActrC,O,EAGlCurC,uBAAyB,SAAAr5D,GAAW,IAAD,EACD,EAAKigB,MAA3B7b,EADuB,EACvBA,OAAQE,EADe,EACfA,UACRD,EAAyCrE,EAAzCqE,QAAS6d,EAAgCliB,EAAhCkiB,4BACTi3C,EAHuB,gBAGvBA,aAEJ/0D,IAAWC,IAEV80D,GAAgBA,GAAgBj3C,GAAgC5d,GAAa4d,IAC9E,EAAK3B,SAAS,CAAE64C,aAAc,KAAME,QAAQ,K,mFAnChD9nD,IAAU9Q,GAAG,uBAAwB+G,KAAK4xD,wBAE1C/tD,KAAa5K,GAAG,0BAA2B+G,KAAKwxD,qBAChD3tD,KAAa5K,GAAG,6BAA8B+G,KAAKwxD,uB,6CAInDznD,IAAU5Q,IAAI,uBAAwB6G,KAAK4xD,wBAE3C/tD,KAAa1K,IAAI,0BAA2B6G,KAAKwxD,qBACjD3tD,KAAa1K,IAAI,6BAA8B6G,KAAKwxD,uB,+BA6B9C,IAAD,EAC4BxxD,KAAKkZ,MAA9By4C,EADH,EACGA,aACR,OAFK,EACiBE,OAKlBF,EACiC,8BAA1BA,EAAa,SAChB,kBAAC,GAAD,CACI9sC,UAAU,SACV6yB,QAAQ,YACR30C,MAAO,CAAE0C,MAAO,GAAIC,OAAQ,GAAIg7B,UAAW,uBAG/C,kBAACoxB,GAAD,CACIjtC,UAAU,SACV6yB,QAAQ,YACR30C,MAAO,CAAE0C,MAAO,GAAIC,OAAQ,GAAIg7B,UAAW,oBAAqB4F,OAAQ,kBAK7E,kBAACyrB,GAAD,CAAUltC,UAAU,SAAS6yB,QAAQ,YAAY30C,MAAO,CAAE0C,MAAO,GAAIC,OAAQ,KAnBzE,kBAACssD,GAAD,CAAentC,UAAU,SAAS6yB,QAAQ,YAAY30C,MAAO,CAAE0C,MAAO,GAAIC,OAAQ,Q,gDA7DjE8S,EAAOU,GAAQ,IACnCvc,EAAsB6b,EAAtB7b,OAAQE,EAAc2b,EAAd3b,UAEVjB,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACnC80D,EAAe/1D,EAAUA,EAAQyqB,cAAgB,KAEvD,OAAI1pB,IAAWuc,EAAM4mC,YAAcjjD,IAAcqc,EAAM+4C,cAC5C,CACHnS,WAAYnjD,EACZs1D,cAAep1D,EACf80D,eACAE,OAAQt3C,aAAgB5d,EAAQE,IAIjC,S,GAlBMqd,IAAMC,YC6EZ+3C,I,kNAnDXzB,2BAA6B,SAAAl4D,GACN,EAAKigB,MAAhB7b,SAEOpE,EAAOoE,SAClB,EAAK+zD,aAAen4D,EAAOs4B,WAC3B,EAAKkD,gB,EAIb6kB,uBAAyB,SAAArgD,GACrB,EAAKw7B,e,EAGTz7B,SAAW,SAAAC,GACY,EAAKigB,MAAhB7b,SAEOpE,EAAOqE,SAEtB,EAAKm3B,e,qFAhDa1E,EAAWC,GAAY,IACjC3yB,EAAWqD,KAAKwY,MAAhB7b,OAER,OAAI0yB,EAAU1yB,SAAWA,I,0CAQzBoN,IAAU9Q,GAAG,mCAAoC+G,KAAK44C,wBACtD7uC,IAAU9Q,GAAG,2BAA4B+G,KAAKywD,4BAC9C1mD,IAAU9Q,GAAG,yBAA0B+G,KAAK1H,UAC5CyR,IAAU9Q,GAAG,wBAAyB+G,KAAK1H,UAC3CyR,IAAU9Q,GAAG,sBAAuB+G,KAAK1H,UACzCyR,IAAU9Q,GAAG,+BAAgC+G,KAAK1H,UAClDyR,IAAU9Q,GAAG,2BAA4B+G,KAAK1H,Y,6CAI9CyR,IAAU5Q,IAAI,mCAAoC6G,KAAK44C,wBACvD7uC,IAAU5Q,IAAI,2BAA4B6G,KAAKywD,4BAC/C1mD,IAAU5Q,IAAI,yBAA0B6G,KAAK1H,UAC7CyR,IAAU5Q,IAAI,wBAAyB6G,KAAK1H,UAC5CyR,IAAU5Q,IAAI,sBAAuB6G,KAAK1H,UAC1CyR,IAAU5Q,IAAI,+BAAgC6G,KAAK1H,UACnDyR,IAAU5Q,IAAI,2BAA4B6G,KAAK1H,Y,+BAyB/C,GAAI0H,KAAK0wD,aAAc,OAAO,KADzB,IAGG/zD,EAAWqD,KAAKwY,MAAhB7b,OAEFtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,KANb,IAQGsW,EAAiBtW,EAAjBsW,aACR,IAAKA,EAAc,OAAO,KAE1B,IAAMoB,EAAOW,YAAmBrY,GAChC,IAAK0X,EAAM,OAAO,KAZb,IAcGtZ,EAAoBkY,EAApBlY,GAAIihB,EAAgB/I,EAAhB+I,YAEZ,OACI,yBAAKmK,UAAU,eACVnK,GACG,oCACI,kBAAC,GAAD,CAAQ/d,OAAQA,EAAQE,UAAWpD,IACnC,oCAGPsZ,O,GA5EQmH,IAAMC,YCJhBoQ,eACX,0BAAMnO,EAAE,s7CACR,WCFWmO,eACX,0BAAMnO,EAAE,i3CACR,aCFWmO,eACX,0BAAMnO,EAAE,2uCACR,QCFWmO,eACX,0BAAMnO,EAAE,0+CACR,QCFWmO,eACX,0BAAMnO,EAAE,0pBACR,UCFWmO,eACX,0BAAMnO,EAAE,27BACR,QCFWmO,eACX,0BAAMnO,EAAE,k7DACR,SCFWmO,eACX,0BAAMnO,EAAE,qfACR,WCFWmO,eACX,0BAAMnO,EAAE,klCACR,U,WC0CE/C,G,YAGF,WAAYb,GAAQ,IAAD,uBACf,4CAAMA,KA2DVs1C,qBAAuB,SAAAv1D,GAAW,IACtBoE,EAAW,EAAK6b,MAAhB7b,OAEJA,IAAWpE,EAAO45D,gBAAkBx1D,IAAWpE,EAAOw1D,YACtD,EAAKh6B,eAhEM,EAoEnBgE,aAAe,SAAAt2B,GACU,IAAjBA,EAAM2yC,QACNr7B,YAAS,EAAKP,MAAM7b,SAtET,EA0EnBm5C,kBA1EmB,sCA0EC,WAAMr0C,GAAN,6BAAAjJ,EAAA,wDACZiJ,IACAA,EAAMkX,iBACNlX,EAAMiX,mBAEF/b,EAAW,EAAK6b,MAAhB7b,QACgB,EAAKuc,MAArB0uC,YANQ,gBASZ,EAAK9uC,SAAS,CAAE8uC,aAAa,IATjB,8BAWNwK,EAAgB,IAAIp/C,KAC1BqG,EAAO+4C,cAAgBA,EAEjB9xC,EAAO7e,EAAMqmD,QACb3W,EAAM1vC,EAAMsmD,QACZ1sD,EAAO0O,IAAUjQ,IAAI6C,GACnBgkD,EAActlD,EAAdslD,UAjBI,UAkBgB,EAAK0R,YAAY11D,GAlBjC,kDAkB6CgkD,EAlB7C,WAkBN2R,EAlBM,KAmBNC,EAAmBxjD,YAAmBpS,GAExC0c,EAAO+4C,gBAAkBA,EArBjB,mDAyBZ,EAAKt5C,SAAS,CACV8uC,aAAa,EACb0K,eACAC,mBACAjyC,OACA6wB,QA9BQ,0CA1ED,wDA6GnB6W,uBAAyB,SAAAvmD,GACjBA,GACAA,EAAMiX,kBAGV,EAAKI,SAAS,CAAE8uC,aAAa,KAlHd,EAqHnB4K,WAAa,SAAA/wD,GACT,EAAKumD,uBAAuBvmD,GADV,IAGV9E,EAAW,EAAK6b,MAAhB7b,OAERmkD,GAA+BnkD,GAAS0V,YAAY1V,KA1HrC,EA6HnB01D,YA7HmB,sCA6HL,WAAM11D,GAAN,qBAAAnE,EAAA,wDACJi6D,EAAqB5jD,YAAelS,GACpC89C,IAAY3gD,IAAI,kCAChB2gD,IAAY3gD,IAAI,yBAHZ,0CAIsB,GAJtB,cAMJ44D,EAAWp6C,YAAa3b,GANpB,SAOU3D,KAAgBmI,KAAK,CACrC,QAAS,WACT2N,UAAWD,YAAelS,GAAU,CAAE,QAAS,mBAAsB,CAAE,QAAS,gBAChFs+C,aAAc,sBACdC,eAAgB,EAChB7uB,MAAOomC,EAAmB7hD,MAAQ,KAZ5B,cAOJyqC,EAPI,OAeJsX,EAAYtX,EAAMG,SAAS1+B,OAAO,SAACjb,EAAGpI,GACxC,GAAI6e,YAAa7e,KAAQi5D,EAAU,OAAO7wD,EAE1C,IAAMxG,EAAO0O,IAAUjQ,IAAIL,GAE3B,OAAOoI,GAAKxG,GAAQA,EAAKslD,UAAY,EAAI,IAC1C,GArBO,kBAuBHgS,EAAYF,EAAmB7hD,OAvB5B,yCA7HK,wDAuJnBgiD,UAvJmB,sCAuJP,WAAMnxD,GAAN,mBAAAjJ,EAAA,wDACR,EAAKwvD,uBAAuBvmD,GAEpB9E,EAAW,EAAK6b,MAAhB7b,OACFtB,EAAO0O,IAAUjQ,IAAI6C,GAJnB,qDAMAgkD,EAActlD,EAAdslD,YAEW,EAAK0R,YAAY11D,GAR5B,iDAUR8jD,GAAmB9jD,GAASgkD,GAVpB,yCAvJO,wDAoKnBkS,cApKmB,sCAoKH,WAAMpxD,GAAN,eAAAjJ,EAAA,wDACZ,EAAKwvD,uBAAuBvmD,GAEpB9E,EAAW,EAAK6b,MAAhB7b,OACHoS,YAAmBpS,GAJZ,iDAMZ4jD,GAAgB5jD,EAAQ,CAAE,QAASkS,YAAelS,GAAU,eAAiB,oBANjE,yCApKG,wDA6KnBm2D,iBAAmB,WAAO,IAAD,EACC,EAAKt6C,MAAnB7b,EADa,EACbA,OAAQsR,EADK,EACLA,EACV5S,EAAO0O,IAAUjQ,IAAI6C,GAC3B,GAAKtB,EAAL,CAHqB,IAKbmN,EAASnN,EAATmN,KACR,OAAQA,EAAK,UACT,IAAK,qBACD,OAAOyF,EAAE,iBAEb,IAAK,kBACL,IAAK,iBACD,OAAOA,EAAE,eAEb,IAAK,qBACD,OAAIzF,EAAKmM,WACE1G,EAAE,mBAGNA,EAAE,oBAhMF,EAqMnB8kD,eAAiB,SAAAtxD,GACb,EAAKumD,uBAAuBvmD,GADN,IAGd9E,EAAW,EAAK6b,MAAhB7b,OAERoc,YAASpc,EAAQ,MAAM,IA1MR,EA6MnBq2D,WAAa,SAAAvxD,GACT,EAAKumD,uBAAuBvmD,GADV,IAGV9E,EAAW,EAAK6b,MAAhB7b,OAGR,GADiByV,YAAazV,GAChB,CACV,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAFD,IAIF6W,EAAoD7W,EAApD6W,oBAAqBP,EAA+BtW,EAA/BsW,aAA+BtW,EAAjB8W,aACxB,GAAKR,ECvQ7B,SAAsBhV,EAAQ+G,EAAYuvD,GAC7Cj6D,KAAgBmI,KAAK,CACjB,QAAS,eACTvE,QAASD,EACTqF,YAAa0B,EACbwvD,WAAYD,IDmQJE,CAAax2D,EAAQ,CAACgV,EAAalY,KAAK,GACjCyY,GACP0uC,GAA2BjkD,GAAQ,QAGvCikD,GAA2BjkD,GAAQ,IA3NvC,EAAKw7B,OAASje,IAAM0a,YAEpB,IAAMv5B,EAAO0O,IAAUjQ,IAAI,EAAK0e,MAAM7b,QALvB,OAMf,EAAKuc,MAAQ,CACT7d,OACAusD,aAAa,EACbtnC,KAAM,EACN6wB,IAAK,GAVM,E,mFAcG9hB,EAAWC,GAAY,IAAD,EACWtvB,KAAKwY,MAAhD7b,EADgC,EAChCA,OAAQsR,EADwB,EACxBA,EAAGujC,EADqB,EACrBA,OAAQ4hB,EADa,EACbA,aAAcrwD,EADD,EACCA,MACjC6kD,EAAgB5nD,KAAKkZ,MAArB0uC,YAER,OAAIv4B,EAAU1yB,SAAWA,IAKrB0yB,EAAUphB,IAAMA,IAKhBohB,EAAUmiB,SAAWA,IAKrBniB,EAAU+jC,eAAiBA,IAK3B9jC,EAAUs4B,cAAgBA,MAK1Bv4B,EAAUtsB,QAASA,GAASA,EAAMouC,MAAQ9hB,EAAUtsB,MAAMouC,W,0CAU9Dte,KAAiB55B,GAAG,qBAAsB+G,KAAK8tD,wB,6CAI/Cj7B,KAAiB15B,IAAI,qBAAsB6G,KAAK8tD,wB,+BAyK1C,IAAD,EACiE9tD,KAAKwY,MAAnE7b,EADH,EACGA,OAAQsY,EADX,EACWA,kBAAmBu8B,EAD9B,EAC8BA,OAAQvjC,EADtC,EACsCA,EAAiBlL,GADvD,EACyCqwD,aADzC,EACuDrwD,OADvD,EAE8D/C,KAAKkZ,MAAhE0uC,EAFH,EAEGA,YAAatnC,EAFhB,EAEgBA,KAAM6wB,EAFtB,EAEsBA,IAAKohB,EAF3B,EAE2BA,iBAAkBD,EAF7C,EAE6CA,aAElD,GAAI9gB,EAAQ,OAAO,KAEnB,IACQmP,EADK52C,IAAUjQ,IAAI6C,GACnBgkD,UAEF9J,EADgBhkB,KAAiBqwB,cACFvmD,EAC/BokD,EAAU1uC,YAAY1V,GACtB02D,EAAWjhD,YAAazV,GACxB22D,EAAazkD,YAAelS,GAClC,OACI,yBACIq5B,IAAKh2B,KAAKm4B,OACVtT,UAAWC,IAAW+xB,EAAa,gBAAkB,SAAU,CAAE,gBAAiBA,IAClFjL,YAAa5rC,KAAK+3B,aAClBme,cAAel2C,KAAK81C,kBACpB/yC,MAAOA,GACP,yBAAK8hB,UAAU,kBACX,kBAAC,EAAD,CAAUloB,OAAQA,EAAQw7B,QAAM,EAACljB,kBAAmBA,EAAmB4jC,YAAU,IACjF,yBAAKh0B,UAAU,wBACX,yBAAKA,UAAU,kBACX,kBAAC,GAAD,CAAaloB,OAAQA,IACrB,kBAAC,GAAD,CAAYA,OAAQA,KAExB,yBAAKkoB,UAAU,mBACX,kBAAC,GAAD,CAAeloB,OAAQA,IACvB,kBAAC,GAAD,CAAaA,OAAQA,OAIjC,kBAACwqD,GAAA,EAAD,CACIvmD,KAAMgnD,EACNruC,QAASvZ,KAAKgoD,uBACdZ,gBAAgB,iBAChBH,eAAgB,CAAE9V,MAAK7wB,QACvB+mC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhB3b,YAAa,SAAA7qB,GAAC,OAAIA,EAAErI,oBACpB,kBAAC+uC,GAAA,EAAD,CAAUruC,QAAS,SAAA2H,GAAC,OAAIA,EAAErI,oBACrB65C,GACG,kBAAC7K,GAAA,EAAD,CAAUtuC,QAASpZ,KAAK6yD,eACnBS,EACG,oCACI,kBAAChR,GAAA,EAAD,KACI,kBAACiR,GAAD,OAEJ,kBAAChR,GAAA,EAAD,CAAcC,QAASv0C,EAAE,gBAG7B,oCACI,kBAACq0C,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASv0C,EAAE,eAKxCqkD,GACG,kBAAC5K,GAAA,EAAD,CAAUtuC,QAASpZ,KAAK4yD,WACnBjS,EACG,oCACI,kBAAC2B,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASv0C,EAAE,mBAG7B,oCACI,kBAACq0C,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASv0C,EAAE,gBAKzC,kBAACy5C,GAAA,EAAD,CAAUtuC,QAASpZ,KAAK+yD,gBACnB78C,YAAcvZ,GACX,oCACI,kBAAC2lD,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASxiD,KAAK8yD,sBAGhC,oCACI,kBAACxQ,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASxiD,KAAK8yD,uBAIxC,kBAACpL,GAAA,EAAD,CAAUtuC,QAASpZ,KAAKwyD,YACnBzR,EACG,oCACI,kBAACuB,GAAA,EAAD,KACI,kBAACkR,GAAD,OAEJ,kBAACjR,GAAA,EAAD,CAAcC,QAASv0C,EAAE,kBAG7B,oCACI,kBAACq0C,GAAA,EAAD,KACI,kBAACmR,GAAD,OAEJ,kBAAClR,GAAA,EAAD,CAAcC,QAASv0C,EAAE,iBAIrC,kBAACy5C,GAAA,EAAD,CAAUtuC,QAASpZ,KAAKgzD,YACnBK,EACG,oCACI,kBAAC/Q,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASv0C,EAAE,iBAG7B,oCACI,kBAACq0C,GAAA,EAAD,KACI,kBAACoR,GAAD,OAEJ,kBAACnR,GAAA,EAAD,CAAcC,QAASv0C,EAAE,2B,GA1WxCkM,aA6XrBd,GAAOe,aAAe,CAClBo3B,QAAQ,EACRv8B,mBAAmB,GAGRoF,qBAAkBhB,IEnYlBs6C,I,wLAtCD,IAAD,EACgC3zD,KAAKwY,MAAlC7b,EADH,EACGA,OAAQ4M,EADX,EACWA,MAAO22C,EADlB,EACkBA,UAEnBlyC,EAAQ,KACRkyC,IACAlyC,EAAQqI,YAAa1Z,GAAQ,IAGjC,IAAMk3C,EAAU,UAAM,GAAuB,GAAlBlvB,KAAKmvB,IAAIvqC,GAApB,KACVwqC,EAAY,UAAM,GAAuB,GAAlBpvB,KAAKqvB,IAAIzqC,GAApB,KAElB,OACI,yBAAKsb,UAAU,sBACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,4BACf,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,kBACVq7B,EACGlyC,EAEA,yBAAK6W,UAAU,2BAA2B9hB,MAAO,CAAE0C,MAAOouC,MAGlE,yBAAKhvB,UAAU,mBACX,yBAAKA,UAAU,6BAA6B9hB,MAAO,CAAE0C,MAAOsuC,a,GAzBxD75B,IAAMC,Y,ujBCJtC,IAAMpX,GACW,SAAA2C,GAAM,MAAK,CACpBA,SACAwrC,SAAU,aAHZnuC,GAKI,SAACwG,EAAO7D,GAAR,MAAoB,CACtBA,SACA4a,KAAM,EACNC,MAAO,EACP4wB,IAAKzrC,EAAS6D,EACd2nC,SAAU,aAIL0iB,GAAb,YACI,WAAYp7C,GAAQ,IAAD,8BACf,4CAAMA,KA+CVq7C,kBAAoB,WAAO,IACf92D,EAAW,EAAKyb,MAAhBzb,OACAynD,EAAc,EAAKtrC,MAAnBsrC,UACAxnC,EAAY,EAAKqtC,QAAjBrtC,QACR,GAAKA,EAAL,CAEA,IAAM82C,EAAiBC,WAAWrzD,OAAOszD,iBAAiBh3C,EAAS,MAAMi3C,iBAAiB,WACpFC,EAAY,EAAKC,aAAap3D,EAAQ+2D,EAAgBtP,GAG5D,EAAK1rC,SAAL,IAAgBg7C,kBAAmBI,MA1DpB,EAwFnBE,kBAAoB,SAAA3yD,GAAU,IAAD,EACe,EAAK+W,MAArCzb,EADiB,EACjBA,OAAQs3D,EADS,EACTA,UAAWjJ,EADF,EACEA,SADF,EAEa,EAAKlyC,MAAnC46C,EAFiB,EAEjBA,eAAgBtP,EAFC,EAEDA,UAExB,GAAI7/B,KAAK4T,IAAI92B,EAAMC,OAAO8iD,UAAYA,IAAc6P,EAAW,CAC3D,IAAMH,EAAY,EAAKC,aAAap3D,EAAQ+2D,EAAgBryD,EAAMC,OAAO8iD,WAEzE,EAAK1rC,SAAL,IACI0rC,UAAW/iD,EAAMC,OAAO8iD,WACrB0P,IAIP9I,GACAA,EAAS3pD,IAtGE,EA8GnB6yD,cAAgB,SAAC/qD,EAAOuqD,EAAgBtP,GAAe,IAAD,EACb,EAAKhsC,MAAlC+7C,EAD0C,EAC1CA,cAAeF,EAD2B,EAC3BA,UAKvB,OAHgB9qD,EAAQ8qD,EAIV7P,EAAY+P,EAAgBF,IAHtB9qD,EAAQ,GAAK8qD,EAIhB7P,EAAYsP,EAAiBS,EAAgBF,GAnH9D,EAAKhK,QAAUnwC,IAAM0a,YAErB,EAAK1b,MAAQ,CACTsrC,UAAW,EACX0P,UAAW,IAAIl8D,IACfw8D,cAAe,GACfV,eAAgB,GATL,EADvB,gFAcuB1+B,EAAWC,EAAWC,GACjCF,EAAUr4B,SAAWiD,KAAKwY,MAAMzb,QAChCiD,KAAK6zD,sBAhBjB,4CAoB0BxkC,EAAWC,EAAW4F,GACxC,OAAO,IArBf,0CAwCQx0B,OAAOqwC,iBAAiB,SAAU/wC,KAAK6zD,mBAAmB,GAD1C,IAGR72C,EAAYhd,KAAKqqD,QAAjBrtC,QACHA,IACLA,EAAQ+zB,iBAAiB,SAAU/wC,KAAKo0D,mBAAmB,GAE3Dp0D,KAAK6zD,uBA9Cb,mCA8DiB92D,EAAQ+2D,EAAgBtP,GAAY,IAAD,OACtC0P,EAAY,IAAIl8D,IAChBw8D,EAAgB,GAQtB,OAPAz3D,EAAO9C,QAAQ,SAACC,EAAMqP,GACd,EAAK+qD,cAAc/qD,EAAOuqD,EAAgBtP,KAC1C0P,EAAUx7D,IAAI6Q,EAAOA,GACrBirD,EAAct0D,KAAKqJ,MAIpB,CAAE2qD,YAAWM,mBAxE5B,6CA4EQ9zD,OAAOswC,oBAAoB,SAAUhxC,KAAK6zD,mBADvB,IAGX72C,EAAYhd,KAAKqqD,QAAjBrtC,QACHA,GACLA,EAAQg0B,oBAAoB,SAAUhxC,KAAKo0D,qBAhFnD,yCAsFQ,OAFsBp0D,KAAKkZ,MAAnBg7C,YApFhB,mCA4GQ,OAAOl0D,KAAKqqD,UA5GpB,+BA2Hc,IAAD,EACgDrqD,KAAKwY,MAAlDqM,EADH,EACGA,UAAW9nB,EADd,EACcA,OAAQ03D,EADtB,EACsBA,WAAYJ,EADlC,EACkCA,UAC/BH,EAAcl0D,KAAKkZ,MAAnBg7C,UAEFj8D,GAAS8E,GAAU,IAAI6G,IAAI,SAAC1J,EAAMqP,GACpC,OAAO2qD,EAAUt6D,IAAI2P,IAAUkrD,EAAW,CAAElrD,QAAOxG,MAAOA,GAAWwG,EAAO8qD,OAKhF,OACI,yBAAKr+B,IAAKh2B,KAAKqqD,QAASxlC,UAAWA,GAC/B,yBAAK9hB,MAAOA,IAAmBhG,GAAU,IAAIkB,OAASo2D,IAAap8D,QAvInF,GAAqCiiB,IAAMC,WA6I3Cy5C,GAAgBx5C,aAAe,CAC3Brd,OAAQ,GACRs3D,UAAW,GACXE,cAAe,GAYJX,U,OC5KR,SAASc,GAAiBpb,GAC7B,GAAIA,EAAQqb,WAAaC,KAAKC,UAC1B,OAAOvb,EAGX,IAAK,IAAIv7C,EAAIu7C,EAAQ/2B,WAAWtkB,OAAS,EAAGF,GAAK,EAAGA,IAAK,CACrD,IAAM+2D,EAAWJ,GAAiBpb,EAAQ/2B,WAAWxkB,IACrD,GAAI+2D,EACA,OAAOA,EAIf,OAAO,KAGJ,SAASC,GAAWzb,GACvB,GAAKA,EAAL,CAEA,IAAMwb,EAAWJ,GAAiBpb,GAClC,GAAIwb,EAAU,CACV,IAAME,EAAQ/4D,SAASg5D,cACvBD,EAAME,SAASJ,EAAUA,EAAS72D,QAClC+2D,EAAMG,UAAS,GAEf,IAAMC,EAAY10D,OAAO20D,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAGvB1b,EAAQW,SAGL,SAASuK,GAAUlL,GAA+B,IAAtBkc,EAAqB,uDAAV,SACrClc,IAELA,EAAQkL,UAAY7/B,KAAK6mB,IAAI8N,EAAQkL,UAAW,KAChDzzB,WAAW,WACPuoB,EAAQmc,SAAS,CACbtkB,IAAK,EACLqkB,cAEL,K,ICvBDE,G,8LACoBrmC,EAAWC,EAAW4F,GAAc,IAAD,EACnBl1B,KAAKwY,MAA/B7b,EAD6C,EAC7CA,OAAQoG,EADqC,EACrCA,MAAOyuC,EAD8B,EAC9BA,OACvB,OAAIniB,EAAU1yB,SAAWA,IAKrB0yB,EAAUmiB,SAAWA,GAKrBniB,EAAUtsB,MAAMouC,MAAQpuC,EAAMouC,O,+BAS5B,IAAD,EAC6BnxC,KAAKwY,MAA/B7b,EADH,EACGA,OAAQ60C,EADX,EACWA,OAAQzuC,EADnB,EACmBA,MAExB,OACI,yBAAK8hB,UAAU,mBAAmB9hB,MAAOA,GACrC,kBAAC,GAAD,CAAQpG,OAAQA,EAAQ60C,OAAQA,S,GA3BnBt3B,IAAMC,WA+cpBw7C,G,YA7aX,WAAYn9C,GAAQ,IAAD,uBACf,4CAAMA,KAsGVo9C,wBAA0B,SAAAr9D,GAAW,IACzBs4B,EAAuBt4B,EAAvBs4B,WAAYl0B,EAAWpE,EAAXoE,OAEhBk0B,EACA,EAAKglC,YAAYn9D,IAAIiE,EAAQA,GAE7B,EAAKk5D,YAAY97D,OAAO4C,GAG5B,EAAKo3B,eAhHU,EAmHnBt7B,2BAA6B,SAAAF,GAAW,IACPu9D,EAAuBv9D,EAA5Ca,oBAER,EAAK0f,SAAS,CAAEg9C,sBAAsB,kBAAM,EAAKC,oBAtHlC,EAyHnBnd,uBAAyB,SAAArgD,GACrB,EAAKkxD,YAAW,IA1HD,EA8HnBsM,eA9HmB,qBA8HF,4BAAAv9D,EAAA,wDACLs9D,EAAuB,EAAK58C,MAA5B48C,oBACJE,aAAqBF,GAFZ,gCAGH9xD,IAAU3K,OAAO,kBAAM,EAAKowD,YAAW,KAHpC,yCA9HE,EAqInBwM,UAAY,WAAO,IACPC,EAAgB,EAAK19C,MAArB09C,YAEJA,GAAaA,KAxIF,EA2InBC,kBAAoB,SAAA59D,GAAW,IACnBiQ,EAAS,EAAKgQ,MAAdhQ,KACA6yC,EAAU,EAAKniC,MAAfmiC,MAGR,IAL0B,gBAIlBsO,QACR,CAL0B,IAOlB/sD,EAAmBrE,EAAnBqE,QAASw5D,EAAU79D,EAAV69D,MAEX/6D,EAAO0O,IAAUjQ,IAAI8C,GAC3B,GAAKvB,GAASA,EAAKyT,WAAazT,EAAKyT,UAAU,WAAatG,EAA5D,CAMA,IAFA,IAAM6tD,EAAa,GACb9a,EAAU,GACPx9C,EAAI,EAAGA,EAAIs9C,EAAMp9C,OAAQF,IAAK,CACnC,IAAI1C,EAAO0O,IAAUjQ,IAAIuhD,EAAMt9C,IAC/B,GAAI1C,GAAuB,MAAfA,EAAK+6D,MACb,OAAQ/6D,EAAKmN,KAAK,UACd,IAAK,qBAEkC,yBADhBsL,KAAgBha,IAAIuB,EAAKmN,KAAKuL,gBAClCC,OAAO,UAClBunC,EAAQr7C,KAAK7E,EAAK5B,IAEtB,MAEJ,IAAK,kBAIL,IAAK,iBACD8hD,EAAQr7C,KAAK7E,EAAK5B,IAClB,MAEJ,IAAK,qBAEkC,yBADhBgb,KAAgB3a,IAAIuB,EAAKmN,KAAKkM,eAClCV,OAAO,UAClBunC,EAAQr7C,KAAK7E,EAAK5B,KAQtC,GAAc,MAAV28D,EAEIx5D,IAAYqe,KAASioC,aAAgB7nD,EAAKsW,eAC1C3Y,KAAgBmqD,UAAU,GAC1BloC,KAASw0C,6BAA4B,SAGzC,GAAIpU,EAAMp9C,OAAS,EACMo9C,EAAMmE,KAAK,SAAA39C,GAAC,OAAIA,IAAMjF,KAOvCy5D,EAAWn2D,KAAKtD,QAGpBy5D,EAAWn2D,KAAKtD,GAKxB,EAAK05D,aAAa/a,EAAS8a,EAAY,WACnC,EAAKpS,iBAAiBoS,GACtB,EAAKJ,iBAlNM,EA+OnB7L,aAAe,WAEX,IAAMxpB,EAAO,EAAKypB,QAAQrtC,QAAQu5C,aAAav5C,QAC1C4jB,IAGDA,EAAK4jB,WAAagS,KAClB,EAAKC,aACE71B,EAAK4jB,UAAY5jB,EAAKmkB,cAAgBnkB,EAAKkkB,aAAelkB,EAAKmkB,cAEtE,EAAK0E,eAzPM,EA+VnBgL,WAAa,WAAmB13D,GAAY,IAA5BwM,EAA2B,EAA3BA,MAAOxG,EAAoB,EAApBA,MACblB,EAAI9E,EAAOwM,GAEjB,OAAO,kBAAC,GAAD,CAAgBsI,IAAKhQ,EAAGlF,OAAQkF,EAAG2vC,OAAQ,EAAKqkB,YAAYj8D,IAAIiI,GAAIkB,MAAOA,KA/VlF,EAAK8yD,YAAc,IAAI79D,IAEvB,EAAKqyD,QAAUnwC,IAAM0a,YALN,IAOPkhC,EAAuB76C,KAAvB66C,mBAPO,OASf,EAAK58C,MAAQ,CACT48C,qBACA7lD,OAAQ,EACRorC,MAAO,KACPqb,iBAAiB,GAbN,E,mFAiBGrnC,EAAWC,GAAY,IAAD,EAC8BtvB,KAAKwY,MAAnE4sB,EADgC,EAChCA,MAAOxkC,EADyB,EACzBA,KAAM+1D,EADmB,EACnBA,YAAaC,EADM,EACNA,aAAc3+D,EADR,EACQA,MAAO4+D,EADf,EACeA,WADf,EAEd72D,KAAKkZ,MAAvBmiC,EAFgC,EAEhCA,MAAOprC,EAFyB,EAEzBA,OAEf,OAAIof,EAAU+V,QAAUA,IAIpB/V,EAAUzuB,OAASA,IAInByuB,EAAUp3B,QAAUA,IAIpBo3B,EAAUwnC,aAAeA,IAIzBxnC,EAAUsnC,cAAgBA,IAI1BtnC,EAAUunC,eAAiBA,IAI3BtnC,EAAUrf,SAAWA,GAIrBqf,EAAU+rB,QAAUA,U,8CAOJjmB,EAAWC,GAAY,IAC1BuL,EAAS5gC,KAAKqqD,QAAvBrtC,QACR,OAAK4jB,EAEE,CAAE4jB,UAAW5jB,EAAK4jB,WAFP,CAAEA,UAAW,K,yCAKhBpvB,EAAWC,EAAWC,GAErC,GAD0Bt1B,KAAKqqD,QAAvBrtC,QAGcsY,EAAdkvB,Y,0CASRxkD,KAAK+1D,iBAEL96C,KAAShiB,GAAG,2BAA4B+G,KAAKvH,4BAE7CsR,IAAU9Q,GAAG,yBAA0B+G,KAAKm2D,mBAC5CpsD,IAAU9Q,GAAG,qBAAsB+G,KAAKm2D,mBACxCpsD,IAAU9Q,GAAG,wBAAyB+G,KAAKm2D,mBAC3CpsD,IAAU9Q,GAAG,wBAAyB+G,KAAKm2D,mBAC3CpsD,IAAU9Q,GAAG,kBAAmB+G,KAAKm2D,mBAErCpsD,IAAU9Q,GAAG,mCAAoC+G,KAAK44C,wBACtD7uC,IAAU9Q,GAAG,wBAAyB+G,KAAK41D,2B,6CAI3C36C,KAAS9hB,IAAI,2BAA4B6G,KAAKvH,4BAE9CsR,IAAU5Q,IAAI,yBAA0B6G,KAAKm2D,mBAC7CpsD,IAAU5Q,IAAI,qBAAsB6G,KAAKm2D,mBACzCpsD,IAAU5Q,IAAI,wBAAyB6G,KAAKm2D,mBAC5CpsD,IAAU5Q,IAAI,wBAAyB6G,KAAKm2D,mBAC5CpsD,IAAU5Q,IAAI,kBAAmB6G,KAAKm2D,mBAEtCpsD,IAAU5Q,IAAI,mCAAoC6G,KAAK44C,wBACvD7uC,IAAU5Q,IAAI,wBAAyB6G,KAAK41D,2B,mCAkHnCra,GAAqC,IAA5B8a,EAA2B,uDAAd,GAAIt2D,EAAU,uCACvC+2D,EAAiBvb,EAAQr/B,OAAOm6C,GAAY10C,KAAK,SAACnpB,EAAGqU,GACvD,OAAOkqD,aAAahtD,IAAUjQ,IAAI+S,GAAGupD,MAAOrsD,IAAUjQ,IAAItB,GAAG49D,SAG5DT,EAAYqB,iBAAiBh3D,KAAKkZ,MAAMmiC,MAAOyb,GAKpD92D,KAAK8Y,SAAS,CAAEuiC,MAAOyb,GAAkB/2D,GAJjCA,GAAUA,M,mCAkClBC,KAAK8Y,SAAS,CACV7I,OAAQ0U,KAAK8B,IAAIzmB,KAAKkZ,MAAMjJ,OAASgnD,IAAkB,O,uLAI9Ch1C,E,gCACLzZ,EAASxI,KAAKwY,MAAdhQ,K,EACkBxI,KAAKkZ,MAAvBjJ,E,EAAAA,UAAQorC,E,EAAAA,QAEHprC,EAAS,EAAIgnD,IAAmB5b,EAAMp9C,Q,uBAC/C+B,KAAK8Y,SAAS,CACV7I,OAAQA,EAASgnD,M,8BAKrBj3D,KAAK2pD,Q,wDAILuN,EAAc,sBACdC,EAAe,GACdl1C,GAAWo5B,GAASA,EAAMp9C,OAAS,IAC9B5C,EAAO0O,IAAUjQ,IAAIuhD,EAAMA,EAAMp9C,OAAS,OAE5Ci5D,EAAc77D,EAAK+6D,MACnBe,EAAe97D,EAAK5B,IAIf,iBAAT+O,GAAyBvN,QAAQoF,IAAI,2BACzCL,KAAK2pD,SAAU,E,UACM3wD,KAAgBmI,KAAK,CACtC,QAAS,WACT2N,UAAW,CAAE,QAAStG,GACtB0yC,eAAgBic,EAChBlc,aAAcic,EACd7qC,MAAO4qC,MACRhN,QAAQ,WACP,EAAKN,SAAU,EACF,iBAATnhD,GAAyBvN,QAAQoF,IAAI,0BACrC4hB,GACAjpB,KAAgB8G,aAAa,CAAE,QAAS,+B,SAV1CgB,E,QAoBK06C,SAASv9C,OAAS,GAAK6C,EAAO06C,SAAS,KAAO2b,GACrDr2D,EAAO06C,SAAS4b,QAGhBn1C,EACAjiB,KAAKq3D,aAAav2D,EAAO06C,SAAU,WAC/B,EAAKyI,iBAAiBnjD,EAAO06C,UAC7B,EAAKya,cAITj2D,KAAKs3D,YAAYx2D,EAAO06C,SAAU,WAE9B,EAAKyI,iBAAiBnjD,EAAO06C,Y,4IAKxBD,GACb,IAAM9jD,EAAQuM,IAAUhK,WACxB2Q,YAAiBlT,EAAO8jD,K,kCAGhBA,EAASx7C,GACjB,GAAuB,IAAnBw7C,EAAQt9C,OAAZ,CAD2B,IAQrBs5D,GAFYv3D,KAAKkZ,MAAfmiC,OAEmB,IAAIn/B,OAAOq/B,GACtCv7C,KAAK8Y,SAAS,CAAEuiC,MAAOkc,EAAUtnD,OAAQsnD,EAASt5D,OAAS,EAAIg5D,KAAoBl3D,QAP3EA,GAAUA,M,mCAUTs7C,EAAOt7C,GAChBC,KAAK8Y,SAAS,CAAEuiC,QAAOprC,OAAQ,GAAKlQ,K,oCAMpCykD,GAFaxkD,KAAKqqD,QAAQrtC,QAAQu5C,aAAav5C,W,+BAazC,IAAD,SACyDhd,KAAKwY,MAA3DhQ,EADH,EACGA,KAAM5H,EADT,EACSA,KAAMi2D,EADf,EACeA,WADf,KAC2BF,YAD3B,EACwCC,aACnB52D,KAAKkZ,OAAvBmiC,EAFH,EAEGA,MAFH,EAEUprC,OAGf,IAAKrP,EAAM,OAAO,KAElBZ,KAAKjD,OAAS,GAEd,GAAIs+C,EAAO,CAEPA,EAAMphD,QAAQ,SAAA4H,GACV,IAAMxG,EAAO0O,IAAUjQ,IAAI+H,GACvBxG,GAAQA,EAAKslD,WACE9+C,IAGvB7B,KAAKjD,OAASs+C,OAIX,GAAIwb,EAAY,CAEnBA,EAAW58D,QAAQ,SAAA4H,GACf,IAAMxG,EAAO0O,IAAUjQ,IAAI+H,GACvBxG,GAAQA,EAAKslD,WACE9+C,IAGvB7B,KAAKjD,OAAS85D,EAAWjzD,IAAI,SAAA/B,GAAC,OAAIA,EAAEpI,SAUvB,iBAAT+O,GACU20B,MAAMqV,KAAKrV,MAAM,KAAKv5B,IAAI,SAAC/B,EAAG0H,GAAJ,OAAc,kBAAC,GAAD,CAAmBsI,IAAKtI,EAAOA,MAAOA,MAIhG,OACI,kBAAC,GAAD,CACIysB,IAAKh2B,KAAKqqD,QACVxlC,UAAU,eACV9nB,OAAQiD,KAAKjD,OACbs3D,UAAW,GACXE,cAAe,GACfE,WAAY,SAAA5yD,GAAC,OAAI,EAAK4yD,WAAW5yD,EAAG,EAAK9E,SACzCquD,SAAUprD,KAAKoqD,kB,wCAxLHoN,EAAYnB,GAChC,GAAImB,EAAWv5D,SAAWo4D,EAAWp4D,OAAQ,CACzC,IAAK,IAAIF,EAAI,EAAGA,EAAIy5D,EAAWv5D,OAAQF,IACnC,GAAIy5D,EAAWz5D,KAAOs4D,EAAWt4D,GAAI,OAAO,EAGhD,OAAO,EAGX,OAAO,M,GA7OWmc,IAAMC,WC5C1Bo2C,G,iLACQ,IAAD,EACmDvwD,KAAKwY,MAArDvK,EADH,EACGA,EAAGwpD,EADN,EACMA,aAAcx/D,EADpB,EACoBA,MAAO4+D,EAD3B,EAC2BA,WAAYt9C,EADvC,EACuCA,QAE5C,OACI,oCACI,yBAAKsL,UAAU,iBACX,kBAACE,EAAA,EAAD,CAAYF,UAAU,qBAAqBzL,QAASG,GAChD,kBAAC,GAAD,OAEJ,yBAAKsL,UAAU,qCACX,0BAAMA,UAAU,yBAAyB5W,EAAE,oBAGnD,yBAAK4W,UAAU,mBACX,kBAAC,GAAD,CACIrc,KAAK,kBACLwtB,IAAKyhC,EACLZ,WAAYA,EACZj2D,MAAM,EACN3I,MAAOA,U,GApBTiiB,IAAMC,WA8BbE,iBAAkBk2C,ICrCpBmH,GACT,WAAY5Y,GAAY,oBACpB9+C,KAAK8+C,UAAYA,GA0CV6Y,GADC,I,WApCZ,aAAe,IAAD,gCAMdpP,cAAgB,SAAA9mD,GAAU,IACd6vB,EAAa,EAAbA,SACR,GAAKA,EAASrzB,OAAd,CAEA,IAAM25D,EAAUtmC,EAASA,EAASrzB,OAAS,GAC3C,GAAI25D,EAAS,KAID9Y,EAAc8Y,EAAd9Y,UACJA,GACAA,EAAUr9C,MAhBlBzB,KAAKsxB,SAAW,GAEhBr1B,SAAS80C,iBAAiB,UAAW/wC,KAAKuoD,e,gDAmB1CqP,GAEA53D,KAAKsxB,SAASpxB,KAAK03D,K,6BAGhBA,GAEH,IAAMruD,EAAQvJ,KAAKsxB,SAAS7O,QAAQm1C,IACrB,IAAXruD,GAEJvJ,KAAKsxB,SAASjQ,OAAO9X,EAAO,O,MCpCrBghB,eACX,0BAAMnO,EAAE,suBACR,UCSEy7C,I,kNACF3+C,MAAQ,CACJ0uC,aAAa,EACbzW,IAAK,EACL7wB,KAAM,G,EAGVw1B,kB,sCAAoB,WAAMr0C,GAAN,iBAAAjJ,EAAA,qDACZiJ,IACAA,EAAMkX,iBACNlX,EAAMiX,mBAEc,EAAKQ,MAArB0uC,YAGJ,EAAK9uC,SAAS,CAAE8uC,aAAa,KAEvBtnC,EAAO7e,EAAMqmD,QACb3W,EAAM1vC,EAAMsmD,QAElB,EAAKjvC,SAAS,CACV8uC,aAAa,EACbtnC,OACA6wB,SAhBQ,yC,wDAqBpB6W,uBAAyB,SAAAvmD,GACjBA,GACAA,EAAMiX,kBAGV,EAAKI,SAAS,CAAE8uC,aAAa,K,EAGjCb,aAAe,SAAAtlD,GACX,EAAKumD,0BAIL8P,EAFqB,EAAKt/C,MAAlBs/C,a,wEAKF,IAAD,EAC8C93D,KAAKwY,MAAhD7b,EADH,EACGA,OAAQq7B,EADX,EACWA,SAAU/iB,EADrB,EACqBA,kBAAmBhH,EADxC,EACwCA,EADxC,EAE8BjO,KAAKkZ,MAAhC0uC,EAFH,EAEGA,YAAazW,EAFhB,EAEgBA,IAAK7wB,EAFrB,EAEqBA,KAEpB24B,EAAa1hC,YAAkB5a,EAAQsY,EAAmBhH,GAEhE,OACI,oCACI,kBAACkmC,GAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAU,WAAWzL,QAAS4e,EAAUke,cAAel2C,KAAK81C,mBACzE,kBAAC,EAAD,CAAU3d,QAAM,EAACx7B,OAAQA,EAAQsY,kBAAmBA,EAAmB4jC,YAAU,IACjF,yBAAKh0B,UAAU,kBAAkBo0B,IAErC,kBAACkO,GAAA,EAAD,CACIvmD,KAAMgnD,EACNruC,QAASvZ,KAAKgoD,uBACdZ,gBAAgB,iBAChBH,eAAgB,CAAE9V,MAAK7wB,QACvB+mC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhB3b,YAAa,SAAA7qB,GAAC,OAAIA,EAAErI,oBACpB,kBAAC+uC,GAAA,EAAD,CAAUruC,QAAS,SAAA2H,GAAC,OAAIA,EAAErI,oBACtB,kBAACgvC,GAAA,EAAD,CAAUtuC,QAASpZ,KAAK+mD,cACpB,kBAACzE,GAAA,EAAD,KACI,kBAACyV,GAAD,OAEJ,kBAACxV,GAAA,EAAD,CAAcC,QAASv0C,EAAE,oB,GA3E/BiM,IAAM89C,gBA2F5BH,GAAQz9C,aAAe,CACnBnF,mBAAmB,GAGRoF,qBAAkBw9C,IChG3BI,I,kNACF/+C,MAAQ,CACJ0uC,aAAa,EACbzW,IAAK,EACL7wB,KAAM,G,EAGVw1B,kB,sCAAoB,WAAMr0C,GAAN,iBAAAjJ,EAAA,qDACZiJ,IACAA,EAAMkX,iBACNlX,EAAMiX,mBAEc,EAAKQ,MAArB0uC,YAGJ,EAAK9uC,SAAS,CAAE8uC,aAAa,KAEvBtnC,EAAO7e,EAAMqmD,QACb3W,EAAM1vC,EAAMsmD,QAElB,EAAKjvC,SAAS,CACV8uC,aAAa,EACbtnC,OACA6wB,SAhBQ,yC,wDAqBpB6W,uBAAyB,SAAAvmD,GACjBA,GACAA,EAAMiX,kBAGV,EAAKI,SAAS,CAAE8uC,aAAa,K,EAGjCb,aAAe,SAAAtlD,GACX,EAAKumD,0BAIL8P,EAFqB,EAAKt/C,MAAlBs/C,a,wEAKF,IAAD,EAC0B93D,KAAKwY,MAA5BvK,EADH,EACGA,EAAGtR,EADN,EACMA,OAAQyc,EADd,EACcA,QADd,EAE8BpZ,KAAKkZ,MAAhC0uC,EAFH,EAEGA,YAAazW,EAFhB,EAEgBA,IAAK7wB,EAFrB,EAEqBA,KAE1B,OACI,oCACI,kBAAC6zB,GAAA,EAAD,CACIC,QAAM,EACNvvB,UAAU,sBACVzL,QAASA,EACT88B,cAAel2C,KAAK81C,mBACpB,kBAAC,GAAD,CAAMn5C,OAAQA,KAElB,kBAACwqD,GAAA,EAAD,CACIvmD,KAAMgnD,EACNruC,QAASvZ,KAAKgoD,uBACdZ,gBAAgB,iBAChBH,eAAgB,CAAE9V,MAAK7wB,QACvB+mC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhB3b,YAAa,SAAA7qB,GAAC,OAAIA,EAAErI,oBACpB,kBAAC+uC,GAAA,EAAD,CAAUruC,QAAS,SAAA2H,GAAC,OAAIA,EAAErI,oBACtB,kBAACgvC,GAAA,EAAD,CAAUtuC,QAASpZ,KAAK+mD,cACpB,kBAACzE,GAAA,EAAD,KACI,kBAACyV,GAAD,OAEJ,kBAACxV,GAAA,EAAD,CAAcC,QAASv0C,EAAE,oB,GA5ErBiM,IAAM89C,gBA2FvB39C,iBAAkB49C,IC9BlBC,I,mBAhEX,WAAY1/C,GAAQ,IAAD,8BACf,4CAAMA,KA8BVs1C,qBAAuB,SAAAv1D,GAAW,IACtBw1D,EAA+Bx1D,EAA/Bw1D,WAAYoE,EAAmB55D,EAAnB45D,eAEpB,EAAKr5C,SAAS,CACVi1C,WAAYA,EACZoE,eAAgBA,KAjCpB,EAAKj5C,MAAQ,CACT60C,WAAY9yC,KAASioC,YACrBiP,eAAgB,MALL,E,mFASG9iC,EAAWC,GAAY,IACjC3yB,EAAWqD,KAAKwY,MAAhB7b,OAER,OAAI2yB,EAAUy+B,aAAepxD,GAIzB2yB,EAAU6iC,iBAAmBx1D,I,0CAQjCse,KAAShiB,GAAG,qBAAsB+G,KAAK8tD,wB,6CAIvC7yC,KAAS9hB,IAAI,qBAAsB6G,KAAK8tD,wB,+BAYlC,IAAD,EACuB9tD,KAAKwY,MAAzB7b,EADH,EACGA,OAAQyc,EADX,EACWA,QACI++C,EAAmBn4D,KAAKkZ,MAApC60C,WAEFp4C,EAAWD,YAAgB/Y,GAEjC,OACI,kBAACw3C,GAAA,EAAD,CACIC,QAAM,EACNvvB,UAAWC,IAAW,oBAAqB,CAAE,gBAAiBnoB,IAAWw7D,IACzE/+C,QAASA,GACT,yBAAKyL,UAAU,6BACX,kBAAC,GAAD,CAAMloB,OAAQA,EAAQkR,SAAU8H,EAAW,IAAMA,EAAW,a,GArDlDuE,IAAMC,Y,kPCK9Bi+C,G,YACF,WAAY5/C,GAAQ,IAAD,8BACf,4CAAMA,KA8BVs1C,qBAAuB,SAAAv1D,GACnB,EAAKugB,S,uVAAL,IACOvgB,KA9BP,EAAK2gB,MAAQ,CACT60C,WAAY9yC,KAASioC,YACrBmV,cAAep9C,KAASq9C,gBALb,E,mFASGjpC,EAAWC,GAAY,IAAD,EACVtvB,KAAKwY,MAA3B7b,EADgC,EAChCA,OAAQE,EADwB,EACxBA,UAEhB,OAAIyyB,EAAUy+B,aAAepxD,GAAU2yB,EAAU+oC,gBAAkBx7D,GAI/DyyB,EAAU6iC,iBAAmBx1D,GAAU2yB,EAAUipC,oBAAsB17D,I,0CAQ3Eoe,KAAShiB,GAAG,qBAAsB+G,KAAK8tD,wB,6CAIvC7yC,KAAS9hB,IAAI,qBAAsB6G,KAAK8tD,wB,+BASlC,IAAD,EACiD9tD,KAAKwY,MAAnD7b,EADH,EACGA,OAAQE,EADX,EACWA,UAAW27D,EADtB,EACsBA,WAAYp/C,EADlC,EACkCA,QAASnL,EAD3C,EAC2CA,EAC1CkqD,EAAiBn4D,KAAKkZ,MAAM60C,WAC5B0K,EAAoBz4D,KAAKkZ,MAAMm/C,cAC/Bz8D,EAAUiI,KAAa/J,IAAI6C,EAAQE,GAEjC4K,EAAmB7L,EAAnB6L,eAEFsL,EAAOD,YAAelX,GACtBi1D,EAAar/C,YAAqB5V,EAASqS,GAC3CyqD,EAAiBtnD,YAAyBxV,EAASqS,GACnDpS,EAAUiW,aAAWlW,EAASqS,IAAM,OACpC+qC,EAAWr8C,IAAWw7D,GAAkBt7D,IAAc47D,EAEtDE,EACFlxD,GAAkB+wD,EACd,kBAACjzC,GAAA,EAAD,CAAUrjB,OAAQuF,EAAgB0wB,QAAM,IAExC,kBAAC,EAAD,CAAUx7B,OAAQA,EAAQw7B,QAAM,IAGxC,OACI,kBAACgc,GAAA,EAAD,CAAUC,QAAM,EAACvvB,UAAWC,IAAW,gBAAiB,CAAE,gBAAiBk0B,IAAa5/B,QAASA,GAC7F,yBAAKyL,UAAU,kBACV8zC,EACD,yBAAK9zC,UAAU,wBACX,yBAAKA,UAAU,kBACV2zC,GAAcE,EACX,yBAAK7zC,UAAU,gBAAgB6zC,GAE/B,kBAAC,GAAD,CAAa/7D,OAAQA,IAEzB,yBAAKkoB,UAAU,eAAe9R,IAElC,yBAAK8R,UAAU,mBACX,yBAAKA,UAAU,kBAEP,qCACM2zC,GAAc3H,GACZ,0BAAMhsC,UAAU,yBAAyBgsC,EAAzC,MAEHh1D,Y,GA/Edqe,IAAMC,WAkGlBE,iBAAkB+9C,I,OC5FlBQ,OAff,YAAmE,IAA1Ch9C,EAAyC,EAAzCA,QAASi9C,EAAgC,EAAhCA,UAAWz/C,EAAqB,EAArBA,QAASD,EAAY,EAAZA,SAClD,OACI,yBAAK0L,UAAU,kBACX,yBAAKA,UAAWC,IAAW,uBAAwB,CAAE,iCAAkC+zC,KAAe1/C,GACrG1B,QAAQmE,IAAY,uBAAGxC,QAASA,GAAUwC,K,kkBCejDk9C,G,YACF,WAAYtgD,GAAQ,IAAD,8BACf,4CAAMA,KAmBV+vC,cAAgB,SAAA9mD,GACZ,OAAQA,EAAMoQ,KACV,IAAK,SACDpQ,EAAMkX,iBACNlX,EAAMiX,kBACNjX,EAAMC,OAAOyzB,OAEb,EAAKnc,gBA3BE,EAoDnB+/C,oBAAsB,SAAA1jB,GAIlB,IAHA,IAAM77C,EAAM,GACNoK,EAAM,IAAI5L,IAEP+F,EAAI,EAAGA,EAAIs3C,EAAQp3C,OAAQF,IAAK,CACrC,IAAI+C,EAASu0C,EAAQt3C,IAAMs3C,EAAQt3C,GAAGy9C,SACtC,GAAI16C,EACA,IAAK,IAAIipC,EAAI,EAAGA,EAAIjpC,EAAO7C,OAAQ8rC,IAC1BnmC,EAAIhK,IAAIkH,EAAOipC,MAChBnmC,EAAIlL,IAAIoI,EAAOipC,GAAIjpC,EAAOipC,IAC1BvwC,EAAI0G,KAAKY,EAAOipC,KAUhC,OAJAvwC,EAAImoB,KAAK,SAACnpB,EAAGqU,GACT,OAAOkqD,aAAahtD,IAAUjQ,IAAI+S,GAAGupD,MAAOrsD,IAAUjQ,IAAItB,GAAG49D,SAG1D58D,GAxEQ,EA2EnBikD,WA3EmB,sCA2EN,WAAMxwC,GAAN,2EAAAzU,EAAA,wDACT,EAAKwgE,UAAY,IAAIhmD,KACrB,EAAK/F,KAAOA,EACN+rD,EAAY,EAAKA,UACnBvhE,EAAQ,KAIJkF,EAAW,EAAK6b,MAAhB7b,OACA2+C,EAAkB,EAAKpiC,MAAvBoiC,cAEH3+C,EAXI,wBAYCo+C,EAAW,GACXke,EAAejgE,KAAgBmI,KAAK,CACtC,QAAS,cACTgrB,MAAOlf,EACPof,MAAO,MAEX0uB,EAAS76C,KAAK+4D,IAERrb,EAAYhD,EAAc3tC,KACf2wC,IAAc3wC,IACrBisD,EAAoBlgE,KAAgBmI,KAAK,CAC3C,QAAS,cACTgrB,MAAOyxB,EACPvxB,MAAO,MAEX0uB,EAAS76C,KAAKg5D,KAGZrb,EAAetD,EAAiBttC,KAClB4wC,IAAiB5wC,IAC3BksD,EAAuBngE,KAAgBmI,KAAK,CAC9C,QAAS,cACTgrB,MAAO0xB,EACPxxB,MAAO,MAEX0uB,EAAS76C,KAAKi5D,IArCb,UAwCiB74D,QAAQo5C,IAAIqB,EAASn3C,IAAI,SAAA/B,GAAC,OAAIA,EAAEzB,MAAM,SAAA2gB,GAAC,OAAI,UAxC5D,WAwCCs0B,EAxCD,OAyCC17C,EAAQ,EAAKo/D,oBAAoB1jB,GAEnC2jB,IAAc,EAAKA,UA3ClB,sDA+CD1d,IACQrtC,EAAM,EAAKuK,MAAXvK,EAEFwvC,EAAaxwC,EAAKu9B,gBAClB4uB,EAAuB,CAAC,iBAAkBnrD,EAAE,iBAAiBu8B,gBAG1C5oC,KAAK,SAAA8jD,GAAE,OAAIA,EAAG5kB,SAAS2c,MAC3CG,GAAawb,EAAqBx3D,KAAK,SAAA8jD,GAAE,OAAIA,EAAG5kB,SAAS8c,EAAUpT,mBAEpE7wC,EAAM0nB,OAAO,EAAG,EAAGi6B,EAAc7hD,KAIzC,EAAKqf,SAAS,CACVq4B,IAAK,KACLkoB,cAAe,KACf1/D,MAAOA,IAGXlC,EAAQuM,IAAUhK,WAClB2Q,YAAiBlT,EAAOkC,MAGxB2/D,GADIA,EAAcrsD,EAAK2Z,QACGwD,WAAW,KAAOkvC,EAAY79C,OAAO,GAAK69C,GACpDr7D,QAAUs7D,MAxErB,wBAyEKC,EAAiB,GAEjBC,EAAgBzgE,KAAgBmI,KAAK,CACvC,QAAS,oBACTgrB,MAAOmtC,IAEXE,EAAet5D,KAAKu5D,GAEhB7b,IAEA8b,GADIA,EAAmB9b,EAAUh3B,QACGwD,WAAW,KAAOsvC,EAAiBj+C,OAAO,GAAKi+C,GAC9Dz7D,QAAUs7D,MAAuBG,IAAqBJ,IACjEK,EAAqB3gE,KAAgBmI,KAAK,CAC5C,QAAS,oBACTgrB,MAAOutC,IAEXF,EAAet5D,KAAKy5D,IAzF3B,UA6F2Br5D,QAAQo5C,IAAI8f,EAAe51D,IAAI,SAAA/B,GAAC,OAAIA,EAAEzB,MAAM,SAAA2gB,GAAC,OAAI,UA7F5E,WA6FK64C,EA7FL,OA8FKC,EAAS,EAAKd,oBAAoBa,GAEpCZ,IAAc,EAAKA,UAhGtB,mDAoGD,EAAKlgD,SAAS,CACV+gD,WAGJpiE,EAAQuM,IAAUhK,WAClB2Q,YAAiBlT,EAAOoiE,GAzGvB,wBA2GD,EAAK/gD,SAAS,CACV+gD,OAAQ,OA5GX,WAiHLl2D,EAAW,IACXhH,EAlHK,kCAmHY3D,KAAgBmI,KAAK,CAClC,QAAS,qBACTvE,QAASD,EACTwvB,MAAOlf,EACPxF,eAAgB,EAChB2kB,gBAAiB,EACjBnc,OAAQ,EACRoc,MAAO,GACPvqB,OAAQ,OA3HP,QAmHL6B,EAnHK,gDA8HY3K,KAAgBmI,KAAK,CAClC,QAAS,iBACTgrB,MAAOlf,EACP6sD,YAAa,EACb5e,eAAgB,EAChB6e,kBAAmB,EACnB1tC,MAAO,KApIN,QA8HL1oB,EA9HK,kBAwITE,KAAaC,SAASH,EAASA,UAE3Bq2D,EAAc,KACbr9D,EA3II,4CA6I6B3D,KAAgBmI,KAAK,CAC/C,QAAS,qBACTzB,IAAKuN,IA/IR,QA6IKwxB,EA7IL,OAmJD56B,KAAaC,SAAS,CAAC26B,EAAgB7iC,UAEvCo+D,EAAcv7B,EArJb,mDAuJDxjC,QAAQoF,IAAI,mBAAqB4M,EAAO,yBAAxC,MAvJC,WA6JL+rD,IAAc,EAAKA,UA7Jd,mDA0KT,IAPA,EAAKlgD,SAAS,CACVnV,WACAq2D,gBAGE3e,EAAQ,IAAIrjD,IACZuP,EAAQ,IAAIvP,IACT+F,EAAI,EAAGA,EAAI4F,EAASA,SAAS1F,OAAQF,IAC1Cs9C,EAAM3iD,IAAIiL,EAASA,SAAS5F,GAAGnB,QAAS+G,EAASA,SAAS5F,GAAGnB,SACzD+G,EAASA,SAAS5F,GAAG0J,gBACrBF,EAAM7O,IAAIiL,EAASA,SAAS5F,GAAG0J,eAAgB9D,EAASA,SAAS5F,GAAG0J,gBAIxEuyD,IACQp9D,GADM,EACsBo9D,GAA5Bp9D,QAAS6K,EADJ,EACIA,eAEjB4zC,EAAM3iD,IAAIkE,EAASA,GACf6K,GACAF,EAAM7O,IAAI+O,EAAgBA,IAIlChQ,EAAQuM,IAAUhK,WAClB2Q,YAAiBlT,EAAD,aAAY4jD,EAAMxzC,SAClCD,YAAiBnQ,EAAD,aAAY8P,EAAMM,SA5LzB,yDA3EM,wDA0QnBisB,YA1QmB,qBA0QL,4CAAAt7B,EAAA,yDACS,EAAKggB,MAAhB7b,OADE,uBAGN,EAAKmc,SAAS,CACVq4B,IAAK,KACLkoB,cAAe,KACf1/D,MAAO,KACPkgE,OAAQ,KACRl2D,SAAU,KACVq2D,YAAa,OATX,iCAeJC,EAAajhE,KAAgBmI,KAAK,CACpC,QAAS,cACT+4D,SAAU,CAAE,QAAS,wBACrB7tC,MAAO,KACRjsB,MAAM,WACL,MAAO,CAAE,QAAS,QAASo7C,SAAU,MAGnC2e,EAAuBnhE,KAAgBmI,KAAK,CAC9C,QAAS,cACTgrB,MAAO,GACPE,MAAO,MACRjsB,MAAM,WACL,MAAO,CAAE,QAAS,QAASo7C,SAAU,MAGnCL,EAAuBniD,KAAgBmI,KAAK,CAC9C,QAAS,oBACTgE,QAASC,IAAUmR,UACnB6kC,OAAO,IACRh7C,MAAM,SAAAlF,MAnCC,SAqCwCoF,QAAQo5C,IAAI,CAC1DugB,EACAE,EACAhf,IAxCM,mCAqCHhK,EArCG,KAqCEkoB,EArCF,KAqCiB/d,EArCjB,KA2CV,EAAKxiC,SAAS,CACVq4B,MACAkoB,gBACA/d,gBACA3hD,MAAO,KACPkgE,OAAQ,KACRl2D,SAAU,KACVq2D,YAAa,OAGXviE,EAAQuM,IAAUhK,WACxB2Q,YAAiBlT,EAAO05C,EAAIqK,UAC5B7wC,YAAiBlT,EAAO4hE,EAAc7d,UAvD5B,0CA1QK,EAoUnB4e,yBAA2B,SAAA34D,GACvBA,EAAMiX,kBAEN1f,KAAgBmI,KAAK,CACjB,QAAS,4BAGb,EAAK2X,SAAS,CAAEugD,cAAe,QA3UhB,EA8UnBgB,oBAAsB,SAAC19D,EAAQE,EAAWy9D,EAAaC,GAAc,IACzDC,EAAoB,EAAKhiD,MAAzBgiD,gBAEJF,GACAthE,KAAgBmI,KAAK,CACjB,QAAS,uBACTvE,QAASD,IAIjB69D,EAAgB79D,EAAQE,EAAW09D,IAxVpB,EA2VnBnQ,aAAe,WACX,IAAMxpB,EAAO,EAAKypB,QAAQrtC,QAEtB4jB,EAAK4jB,UAAY5jB,EAAKmkB,cAAgBnkB,EAAKkkB,aAAewF,MAC1D,EAAKmQ,kBA/VM,EAmWnBC,UAAY,SAAA/2D,GACR,IAAM1F,EAAS0F,EAAWA,EAASA,SAAS1F,OAAS,EAMrD,MAAO,CACH67D,YALe77D,EAAS,EAAI0F,EAASA,SAAS1F,EAAS,GAAG8U,KAAO,EAMjEmoC,eALiBj9C,EAAS,EAAI0F,EAASA,SAAS1F,EAAS,GAAGrB,QAAU,EAMtEm9D,kBALoB97D,EAAS,EAAI0F,EAASA,SAAS1F,EAAS,GAAGxE,GAAK,IAxWzD,EAiXnBkhE,eAAiB,SAACh3D,EAAU7C,GACxB,OAAKA,GACAA,EAAO6C,SAAS1F,OAEhB0F,GACAA,EAASA,SAAS1F,OAEhB,CACHquB,YAAaxrB,EAAOwrB,YACpB3oB,SAAUA,EAASA,SAASuY,OAAOpb,EAAO6C,WALxB7C,EAHF6C,GAlXL,EA8XnB82D,eA9XmB,qBA8XF,4CAAAjiE,EAAA,yDACT,EAAKmxD,QADI,oDAGLhtD,EAAW,EAAK6b,MAAhB7b,OAEFq8D,EAAY,EAAKA,UAEfr1D,EAAa,EAAKuV,MAAlBvV,SAEFsM,EAAS,EAAKyqD,UAAU/2D,GAE9B,EAAKgmD,SAAU,EACX7oD,EAAS,IACTnE,EAbS,kCAcM3D,KAAgBmI,KAAK,CAChC,QAAS,qBACTvE,QAASD,EACTwvB,MAAO,EAAKlf,KACZxF,eAAgB,EAChB2kB,gBAAiBnc,EAAO8pD,kBACxB1tC,MAAO,GACPvqB,OAAQ,OArBH,QAcThB,EAdS,gDAwBM9H,KAAgBmI,KAAhB,IACX,QAAS,iBACTgrB,MAAO,EAAKlf,MACTgD,EAHQ,CAIXoc,MAAO,MA5BF,QAwBTvrB,EAxBS,kBA+Bb,EAAK6oD,SAAU,EAEf9sC,aAAwB/b,EAAQ6C,EAAWA,EAASA,SAAW,IAC/DE,KAAaC,SAAShD,EAAO6C,UAEzBq1D,IAAc,EAAKA,UApCV,mDA8Cb,IANA,EAAKlgD,SAAS,CACVnV,SAAU,EAAKg3D,eAAeh3D,EAAU7C,KAGtCu6C,EAAQ,IAAIrjD,IACZuP,EAAQ,IAAIvP,IACT+F,EAAI,EAAGA,EAAI+C,EAAO6C,SAAS1F,OAAQF,IACxCs9C,EAAM3iD,IAAIoI,EAAO6C,SAAS5F,GAAGnB,QAASkE,EAAO6C,SAAS5F,GAAGnB,SACrDkE,EAAO6C,SAAS5F,GAAG0J,gBACnBF,EAAM7O,IAAIoI,EAAO6C,SAAS5F,GAAG0J,eAAgB3G,EAAO6C,SAAS5F,GAAG0J,gBAIlEhQ,EAAQuM,IAAUhK,WACxB2Q,YAAiBlT,EAAD,aAAY4jD,EAAMxzC,SAClCD,YAAiBnQ,EAAD,aAAY8P,EAAMM,SAvDrB,0CA9XE,EAwbnB+yD,qBAAuB,SAAAn5D,GACnBA,EAAMiX,mBAzbS,EA4bnBM,YAAc,YAGVO,EAFoB,EAAKf,MAAjBe,YA7bO,EAkcnBshD,8BAlcmB,sCAkca,WAAMl+D,GAAN,eAAAnE,EAAA,wDACvBmE,EADuB,iEAGtB3D,KAAgBmI,KAAK,CACvB,QAAS,0BACTvE,QAASD,IALe,UAQpB08D,EAAkB,EAAKngD,MAAvBmgD,cARoB,iDAW5B,EAAKvgD,SAAS,CACVugD,cAAc,MAAMA,EAAP,CAAsB7d,SAAU6d,EAAc7d,SAAS15C,OAAO,SAAAD,GAAC,OAAIA,IAAMlF,QAZ9D,yCAlcb,wDAkdnBm+D,oBAldmB,sCAkdG,WAAMn+D,GAAN,eAAAnE,EAAA,wDACbmE,EADa,iEAGZ3D,KAAgBmI,KAAK,CACvB,QAAS,gBACTvE,QAASD,EACTu9D,SAAU,CACN,QAAS,0BAPC,UAWV/oB,EAAQ,EAAKj4B,MAAbi4B,IAXU,iDAclB,EAAKr4B,SAAS,CACVq4B,IAAI,MAAMA,EAAP,CAAYqK,SAAUrK,EAAIqK,SAAS15C,OAAO,SAAAD,GAAC,OAAIA,IAAMlF,QAf1C,yCAldH,sDAGf,EAAKo+D,gBAAkB,IAAIrD,GAAgB,EAAKnP,eAChD,EAAK8B,QAAUnwC,IAAM0a,YACrB,EAAK1b,MAAQ,GALE,E,iFAQE,IACTjM,EAASjN,KAAKwY,MAAdvL,KAERjN,KAAKg7D,oBAAoB/tD,GAEzBguD,GAAgBC,IAAIl7D,KAAK+6D,mB,6CAIzBE,GAAgBC,IAAIl7D,KAAK+6D,mB,yCAeV3lC,EAAWC,EAAWC,GAAW,IAAD,EACtBt1B,KAAKwY,MAAtB7b,EADuC,EACvCA,OAAQsQ,EAD+B,EAC/BA,KAEZmoB,EAAUnoB,OAASA,EACnBjN,KAAKg7D,oBAAoB/tD,GAClBmoB,EAAUz4B,SAAWA,GAC5BqD,KAAKg7D,oBAAoB/tD,K,0CAIbA,GAChB,IAAMqsD,EAAcrsD,EAAOA,EAAK2Z,OAAS,GAEpC0yC,EAGDt5D,KAAKy9C,WAAW6b,GAFhBt5D,KAAK8zB,gB,+BAubH,IAAD,SACiB9zB,KAAKwY,MAAnB7b,EADH,EACGA,OAAQsR,EADX,EACWA,EADX,EAEgEjO,KAAKkZ,MAAlEi4B,EAFH,EAEGA,IAAKkoB,EAFR,EAEQA,cAAe1/D,EAFvB,EAEuBA,MAAOkgE,EAF9B,EAE8BA,OAAQl2D,EAFtC,EAEsCA,SAAUq2D,EAFhD,EAEgDA,YAE/C3+D,EAAO0O,IAAUjQ,IAAI6C,GAErBw+D,EACFhqB,GAAOA,EAAIqK,SACLrK,EAAIqK,SAAS53C,IAAI,SAAA/B,GAAC,OACd,kBAAC,GAAD,CACIgQ,IAAKhQ,EACLlF,OAAQkF,EACRm2B,SAAU,kBAAM,EAAKqiC,oBAAoBx4D,EAAG,MAAM,GAAO,IACzDi2D,SAAU,kBAAM,EAAKgD,oBAAoBj5D,QAGjD,GAEJu5D,EACF/B,GAAiBA,EAAc7d,SACzB6d,EAAc7d,SAAS53C,IAAI,SAAA/B,GAAC,OACxB,kBAAC,GAAD,CACIgQ,IAAKhQ,EACLlF,OAAQkF,EACRuX,QAAS,kBAAM,EAAKihD,oBAAoBx4D,EAAG,MAAM,GAAM,IACvDi2D,SAAU,kBAAM,EAAK+C,8BAA8Bh5D,QAG3D,GAEJw5D,EAAa1hE,EACbA,EAAMiK,IAAI,SAAA/B,GAAC,OACP,kBAAC,GAAD,CACIgQ,IAAKhQ,EACLlF,OAAQkF,EACRuX,QAAS,kBAAM,EAAKihD,oBAAoBx4D,EAAG,MAAM,GAAM,QAG/D,GAEAy5D,EAAiB,IAAItjE,IACrBujE,EAAc1B,EACdA,EAAOj2D,IAAI,SAAA/B,GAGP,OAFAy5D,EAAe5iE,IAAImJ,EAAGA,GAGlB,kBAAC,GAAD,CACIgQ,IAAKhQ,EACLlF,OAAQkF,EACRuX,QAAS,kBAAM,EAAKihD,oBAAoBx4D,EAAG,MAAM,GAAM,QAInE,GAEA25D,EACFxB,GAAeA,EAAYp9D,UAAYo9D,EAAYp+D,UAAY0/D,EAAe1hE,IAAIogE,EAAYp9D,SAC1F,kBAAC,GAAD,CACIiV,IAAKmoD,EAAYp9D,QACjBD,OAAQq9D,EAAYp9D,QACpBwc,QAAS,kBAAM,EAAKihD,oBAAoBL,EAAYp9D,QAAS,MAAM,GAAM,MAE7E,KAEF6+D,EAAoB,IAAIzjE,IACxB0jE,EACF/3D,GAAYA,EAASA,SACfA,EAASA,SAASC,IAAI,SAAA/B,GAClB,IAAMgQ,EAAG,UAAMhQ,EAAEjF,QAAR,YAAmBiF,EAAEpI,IAG9B,OAFAgiE,EAAkB/iE,IAAImZ,EAAKA,GAGvB,kBAAC,GAAD,CACIA,IAAKA,EACLlV,OAAQkF,EAAEjF,QACVC,UAAWgF,EAAEpI,GACb++D,WAAY/gD,QAAQ9a,GACpByc,QAAS,kBAAM,EAAKihD,oBAAoBx4D,EAAEjF,QAASiF,EAAEpI,IAAI,GAAO,QAI5E,GAEJkiE,EACF3B,GACAA,EAAYp+D,UACX6/D,EAAkB7hE,IAAlB,UAAyBogE,EAAYp+D,QAAQgB,QAA7C,YAAwDo9D,EAAYp+D,QAAQnC,KACzE,kBAAC,GAAD,CACIoY,IAAG,UAAKmoD,EAAYp+D,QAAQgB,QAAzB,YAAoCo9D,EAAYp+D,QAAQnC,IAC3DkD,OAAQq9D,EAAYp+D,QAAQgB,QAC5BC,UAAWm9D,EAAYp+D,QAAQnC,GAC/B++D,YAAY,EACZp/C,QAAS,kBACL,EAAKihD,oBAAoBL,EAAYp+D,QAAQgB,QAASo9D,EAAYp+D,QAAQnC,IAAI,GAAO,MAG7F,KAEJwa,EAAQtQ,EAAWA,EAAS2oB,YAAc,EAE1C0tC,GACAA,EAAYp+D,UACX6/D,EAAkB7hE,IAAlB,UAAyBogE,EAAYp+D,QAAQgB,QAA7C,YAAwDo9D,EAAYp+D,QAAQnC,MAE7Ewa,IAGJ,IAAI2nD,EAAkB3tD,EAAE,cAKxB,OAJIgG,IACA2nD,EAA4B,IAAV3nD,EAAc,kBAAd,gBAA2CA,EAA3C,cAIlB,yBAAK+hB,IAAKh2B,KAAKqqD,QAASxlC,UAAU,SAASumC,SAAUprD,KAAKoqD,cACrD/uD,GACG,oCACI,yBAAKwpB,UAAU,wBACX,kBAAC,GAAD,KAAgB5W,EAAE,qBAClB,yBAAK4W,UAAU,uBACX,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CAAMloB,OAAQA,EAAQ8iC,YAAY,KAEtC,kBAAC1a,EAAA,EAAD,CACIF,UAAU,sBACVI,aAAW,SACX2mB,YAAa5rC,KAAKgZ,aAClB,kBAACw6B,EAAA,EAAD,SAIZ,yBAAK3uB,UAAU,kCAGtBs2C,EAASl9D,OAAS,GACf,oCACI,yBAAK4mB,UAAU,wBACX,kBAAC,GAAD,KAAgB5W,EAAE,cAClB,yBAAK4W,UAAU,wBAAwBumC,SAAUprD,KAAK46D,sBAClD,yBAAK/1C,UAAU,iCACds2C,EACD,yBAAKt2C,UAAU,mCAGvB,yBAAKA,UAAU,kCAGtBu2C,EAAmBn9D,OAAS,GACzB,yBAAK4mB,UAAU,wBACX,kBAAC,GAAD,CAAejJ,QAAS3N,EAAE,eAAgBmL,QAASpZ,KAAKo6D,0BACnDnsD,EAAE,WAENmtD,GAGRC,EAAWp9D,OAAS,GACjB,oCACI,yBAAK4mB,UAAU,wBACX,kBAAC,GAAD,KAAgB5W,EAAE,qBACjBotD,GAEL,yBAAKx2C,UAAU,kCAGtB02C,EAAYt9D,OAAS,GAClB,oCACI,yBAAK4mB,UAAU,wBACX,kBAAC,GAAD,KAAgB5W,EAAE,iBACjButD,EACAD,GAEL,yBAAK12C,UAAU,mCAGrBlhB,GAAaq2D,GAAeA,EAAYp+D,UACtC,yBAAKipB,UAAU,wBACX,kBAAC,GAAD,KAAgB+2C,GACfD,EACAD,Q,GAvpBJxhD,IAAMC,WAsqBZE,iBAAkBy+C,I,UC5rBlBvuC,eACX,0BAAMnO,EAAE,ypBACR,QCFWmO,eACX,0BAAMnO,EAAE,oiDACR,QCFWmO,eACX,0BAAMnO,EAAE,0uIACR,YCkBEy/C,G,YACF,WAAYrjD,GAAQ,IAAD,8BACf,4CAAMA,KAgBV/f,2BAA6B,SAAAF,GACzB,EAAKugB,SAAS,CAAEg9C,mBAAoBv9D,EAAOa,uBAlB5B,EAqBnB0iE,eAAiB,SAAAr6D,GAAU,IACfq0D,EAAuB,EAAK58C,MAA5B48C,mBACHE,aAAqBF,IAE1B,EAAKh9C,SAAS,CAAEijD,SAAUt6D,EAAMu6D,iBAzBjB,EA4BnBC,gBAAkB,WACd,EAAKnjD,SAAS,CAAEijD,SAAU,QA7BX,EAgCnBG,mBAhCmB,qBAgCE,sBAAA1jE,EAAA,qDACjB,EAAKyjE,kBADY,yCAhCF,EAsCnBE,eAAiB,SAAA16D,GACb,EAAKw6D,mBAvCU,EA0CnBG,eAAiB,SAAA36D,GACb,EAAKw6D,kBAELjjE,KAAgB8G,aAAa,CACzB,QAAS,uBACTc,MAAM,KA/CK,EAmDnBy7D,eAAiB,SAAA56D,GACb,EAAKw6D,kBAELzL,eAtDe,EAyDnB8L,YAzDmB,sCAyDL,WAAM76D,GAAN,eAAAjJ,EAAA,4DACV,EAAKyjE,kBADK,SAGSjjE,KAAgBmI,KAAK,CACpC,QAAS,oBACTgE,QAASC,IAAUmR,UACnB6kC,OAAO,IAND,UAGJ//C,EAHI,wDAUV0d,YAAS1d,EAAK5B,IAVJ,yCAzDK,wDAsEnB8iE,eAtEmB,sCAsEF,WAAM96D,GAAN,eAAAjJ,EAAA,4DACb,EAAKyjE,kBADQ,SAGMjjE,KAAgBmI,KAAK,CACpC,QAAS,oBACTgE,QAASC,IAAUmR,UACnB6kC,OAAO,IANE,UAGP//C,EAHO,wDAUbrC,KAAgB8G,aAAa,CACzB,QAAS,uBACTc,MAAM,EACNjE,OAAQtB,EAAK5B,KAbJ,yCAtEE,wDAuFnB+iE,WAAa,SAAA/6D,GACT,EAAKw6D,mBArFL,EAAK/iD,MAAQ,CACT48C,mBAAoB76C,KAASwhD,wBAC7BV,SAAU,MALC,E,iFAUf9gD,KAAShiB,GAAG,2BAA4B+G,KAAKvH,8B,6CAI7CwiB,KAAS9hB,IAAI,2BAA4B6G,KAAKvH,8B,+BA6ExC,IAAD,EAC6BuH,KAAKwY,MAA/BvK,EADH,EACGA,EAAGyuD,EADN,EACMA,UAAWnjD,EADjB,EACiBA,QADjB,EAEoCvZ,KAAKkZ,MAAtC6iD,EAFH,EAEGA,SAAUjG,EAFb,EAEaA,mBAEZ6G,GACDD,GAAa1G,aAAqBF,GAC/B,kBAAC8G,GAAA,EAAD,CACInjE,GAAG,YACHsiE,SAAUA,EACVn7D,KAAM6W,QAAQskD,GACdxiD,QAASvZ,KAAKi8D,gBACdY,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrB1V,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhB,kBAACG,GAAA,EAAD,CAAUtuC,QAASpZ,KAAKm8D,gBACpB,kBAAC7Z,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASv0C,EAAE,eAE7B,kBAACy5C,GAAA,EAAD,CAAUtuC,QAASpZ,KAAKo8D,gBACpB,kBAAC9Z,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASv0C,EAAE,eAE7B,kBAACy5C,GAAA,EAAD,CAAUtuC,QAASpZ,KAAKq8D,gBACpB,kBAAC/Z,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASv0C,EAAE,eAE7B,kBAACy5C,GAAA,EAAD,CAAUtuC,QAASpZ,KAAKs8D,aACpB,kBAACha,GAAA,EAAD,KACI,kBAAC0a,EAAD,OAEJ,kBAACza,GAAA,EAAD,CAAcC,QAASv0C,EAAE,YAE7B,kBAACy5C,GAAA,EAAD,CAAUtuC,QAASpZ,KAAKu8D,gBACpB,kBAACja,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASv0C,EAAE,eAE7B,kBAACy5C,GAAA,EAAD,CAAUtuC,QAASpZ,KAAKw8D,YACpB,kBAACla,GAAA,EAAD,KACI,kBAAC2a,GAAD,OAEJ,kBAAC1a,GAAA,EAAD,CAAcC,QAASv0C,EAAE,oBAGjC,KAER,OACI,oCACI,kBAAC8W,EAAA,EAAD,CACIm4C,YAAWnB,EAAW,cAAgB,KACtCoB,gBAAc,OACdt4C,UAAU,qBACVI,aAAW,OACX7L,QAASsjD,EAAYnjD,EAAUvZ,KAAK87D,gBACpC,kBAACpT,GAAA,EAAD,CAAe9nD,KAAM87D,EAAW/T,SAAU,kBAAC,GAAD,MAAmBp5B,KAAM,kBAAC,GAAD,SAEtEotC,O,GA/JYziD,IAAMC,WAqKpBE,iBAAkBwhD,ICrL3BuB,I,kNACF7U,cAAgB,SAAA9mD,GACZ,GAAsB,KAAlBA,EAAM67C,QACN77C,EAAMkX,sBACH,GAAsB,KAAlBlX,EAAM67C,QAAgB,CAAC,IAAD,EACC,EAAK9kC,MAA3BkzB,EADqB,EACrBA,SAAUnyB,EADW,EACXA,QAEZ+/B,EAAU73C,EAAMC,OACtB,IAAK43C,EAAS,OAEd,GAAIA,EAAQz3B,UAMR,OALApgB,EAAMiX,kBACNjX,EAAM47D,YAAYC,2BAElBhkB,EAAQz3B,UAAY,UAChB6pB,GAAUA,EAAS4N,EAAQz3B,YAI/BtI,IACA9X,EAAMiX,kBACNjX,EAAMC,OAAOyzB,OACb5b,O,EAKZivC,YAAc,SAAA/mD,GACV,IAAM63C,EAAU73C,EAAMC,OACtB,GAAK43C,EAAL,CAFmB,IAIX8D,EAAc9D,EAAd8D,UACU,SAAdA,GAAsC,oBAAdA,IACxB9D,EAAQ8D,UAAY,Q,EAI5BqL,YAAc,SAAAhnD,GACV,IAAMw8C,EAAYx8C,EAAMy8C,cAAcC,QAAQ,cAC1CF,IACAx8C,EAAMkX,iBACN1c,SAASk+C,YAAY,cAAc,EAAO8D,K,EAIlDsf,YAAc,SAAA97D,GAAU,IACZiqC,EAAa,EAAKlzB,MAAlBkzB,SAEF4N,EAAU73C,EAAMC,OACjB43C,GAED5N,GACAA,EAAS4N,EAAQz3B,Y,wEAIf,IAAD,EAC4B7hB,KAAKwY,MAA9BglD,EADH,EACGA,SAAUvvD,EADb,EACaA,EAAGwvD,EADhB,EACgBA,QAErB,OACI,yBAAK54C,UAAU,gBACX,yBACIprB,GAAG,kBACHu8B,IAAKwnC,EACL3e,YAAa5wC,EAAE,UACfurC,iBAAe,EACfoF,gCAA8B,EAC9BE,UAAW9+C,KAAKuoD,cAChBxJ,QAAS/+C,KAAKwoD,YACdxJ,QAASh/C,KAAKyoD,YACdiV,QAAS19D,KAAKu9D,YACdE,QAASA,IAEb,kBAAC,GAAD,CAAY54C,UAAU,2B,GAzEZ3K,IAAMC,YAsFjBE,iBAAkB+iD,IC2ClBO,I,mBA7HX,WAAYnlD,GAAQ,IAAD,8BACf,4CAAMA,KAuDV/f,2BAA6B,SAAAF,GACzB,EAAKugB,SAAS,CAAEg9C,mBAAoBv9D,EAAOa,uBAzD5B,EA4DnB8uD,aAAe,WAAO,IAAD,EACgB,EAAK1vC,MAA9B4vC,EADS,EACTA,SAAUE,EADD,EACCA,WACVwN,EAAuB,EAAK58C,MAA5B48C,mBACHE,aAAqBF,IAE1B1N,GAAUE,IAjEK,EAoEnBsV,uBAAyB,WAAO,IACpBC,EAAuB,EAAKrlD,MAA5BqlD,mBAEFvkB,EAAU,EAAK6O,eAAenrC,QACpC,GAAKs8B,EAAL,CAJ2B,IAMnB8D,EAAc9D,EAAd8D,UACU,SAAdA,GAAsC,oBAAdA,IACxB9D,EAAQ8D,UAAY,MAIxBygB,EAFsBvkB,EAAdz3B,aA9EO,EAmFnBipC,kBAAoB,WAChB,EAAK5C,gBApFU,EAuFnB4V,YAAc,WACV,EAAK5V,gBArFL,EAAKC,eAAiBjuC,IAAM0a,YAE5B,EAAK1b,MAAQ,CACT48C,mBAAoB76C,KAASwhD,wBAC7B77D,MAAM,GAPK,E,0EAWNurB,GAAQ,IACT0xC,EAAuB79D,KAAKwY,MAA5BqlD,mBAEFE,EAAc/9D,KAAKmoD,eAAenrC,QACxC,GAAI+gD,EAAa,CAEb,GADAA,EAAYl8C,UAAYsK,EACpB4xC,EAAYx7C,WAAWtkB,OAAS,EAAG,CACnC,IAAM+2D,EAAQ/4D,SAASg5D,cACvBD,EAAME,SAAS6I,EAAYx7C,WAAW,GAAIw7C,EAAYx7C,WAAW,GAAGtkB,QACpE+2D,EAAMG,UAAS,GAEf,IAAMC,EAAY10D,OAAO20D,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEvB+I,EAAY9jB,QACZ4jB,EAAmB1xC,M,yCAIRiJ,EAAWC,EAAWC,GAAW,IAAD,EAClBt1B,KAAKwY,MAA1B8vC,EADuC,EACvCA,WADuC,EAC3Br7C,KAEpB,GAAIq7C,IAAelzB,EAAUkzB,WAAY,CACrC,IAAMyV,EAAc/9D,KAAKmoD,eAAenrC,QACpCsrC,EACAv3B,WAAW,WACHgtC,GACAA,EAAY9jB,SAEjB+jB,KAEHD,EAAYl8C,UAAY,Q,0CAMhC5G,KAAShiB,GAAG,2BAA4B+G,KAAKvH,8B,6CAI7CwiB,KAAS9hB,IAAI,2BAA4B6G,KAAKvH,8B,+BAsCxC,IAGFoD,EAAU,KACV6gE,GAAY,EAchB,OAjBuB18D,KAAKwY,MAApB8vC,YAKJoU,GAAY,EACZ7gE,EACI,kBAAC,GAAD,CACI2hE,SAAUx9D,KAAKmoD,eACfzc,SAAU1rC,KAAK49D,uBACfrkD,QAASvZ,KAAK8qD,qBAItBjvD,EAAU,kBAAC,GAAD,CAAa2hE,SAAUx9D,KAAKmoD,eAAgBsV,QAASz9D,KAAK89D,cAIpE,yBAAKj5C,UAAU,iBACX,kBAAC,GAAD,CAAgB63C,UAAWA,EAAWnjD,QAASvZ,KAAK8qD,oBACnDjvD,O,GAjHWqe,IAAMC,Y,UC6CnB8jD,I,mBA/CX,WAAYzlD,GAAQ,IAAD,8BACf,4CAAMA,KAKV+vC,cAAgB,SAAA9mD,GAKZ,OAJAA,EAAMkX,iBACNlX,EAAMiX,kBACNjX,EAAMC,OAAOyzB,OAEL1zB,EAAMoQ,KACV,IAAK,SAAL,IACY0H,EAAY,EAAKf,MAAjBe,QACJA,GAASA,MAXrB,EAAKwhD,gBAAkB,IAAIrD,GAAgB,EAAKnP,eAHjC,E,gFAmBAnzB,EAAWC,EAAWC,GAAW,IACxC10B,EAASZ,KAAKwY,MAAd5X,KAEJw0B,EAAUx0B,OAASA,IACfA,EACAq6D,GAAgBC,IAAIl7D,KAAK+6D,iBAEzBE,GAAgBiD,OAAOl+D,KAAK+6D,oB,+BAK9B,IAAD,EAC+B/6D,KAAKwY,MAAjCW,EADH,EACGA,SAAUvY,EADb,EACaA,KAAM2Y,EADnB,EACmBA,QAExB,OACI,kBAAC4kD,GAAA,EAAD,CAAOC,UAAU,QAAQ3a,GAAI7iD,EAAMy9D,cAAY,EAAC1a,eAAa,GACzD,yBAAK9+B,UAAU,gBAAgBtL,EAAUW,IAAMokD,aAAanlD,EAAU,CAAEI,YAAaJ,Q,GArC3Ee,IAAMC,YCJjBoQ,eACX,0BAAMnO,EAAE,kiBACR,QCFWmO,eACX,0BAAMnO,EAAE,ssFACR,UCFWmO,eACX,0BAAMnO,EAAE,sbACR,Q,oBCQEmiD,G,2MACFrlD,MAAQ,CACJ6iD,SAAU,KACVn7D,MAAM,G,EAGVk7D,eAAiB,SAAAr6D,GACb,EAAKqX,SAAS,CAAEijD,SAAUt6D,EAAMu6D,iB,EAGpCC,gBAAkB,WACd,EAAKnjD,SAAS,CAAEijD,SAAU,Q,EAG9ByC,aAAe,WACX,EAAKvC,kBAEL,EAAKnjD,SAAS,CAAElY,MAAM,K,EAG1Bw9B,WAAa,WACT,EAAKplB,cACLhgB,KAAgBylE,U,EAGpBzlD,YAAc,WACV,EAAKF,SAAS,CAAElY,MAAM,K,wEAGhB,IACEqN,EAAMjO,KAAKwY,MAAXvK,EADH,EAEsBjO,KAAKkZ,MAAxB6iD,EAFH,EAEGA,SAAUn7D,EAFb,EAEaA,KAElB,OACI,oCACI,kBAACmkB,EAAA,EAAD,CACIm4C,YAAWnB,EAAW,cAAgB,KACtCoB,gBAAc,OACdt4C,UAAU,sBACVI,aAAW,OACX7L,QAASpZ,KAAK87D,gBACd,kBAAC4C,GAAD,OAEJ,kBAAC9B,GAAA,EAAD,CACInjE,GAAG,YACHsiE,SAAUA,EACVn7D,KAAM6W,QAAQskD,GACdxiD,QAASvZ,KAAKi8D,gBACdY,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrB1V,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAEhB,kBAACG,GAAA,EAAD,CAAUtuC,QAASpZ,KAAKw+D,cACpB,kBAAClc,GAAA,EAAD,KACI,kBAACqc,GAAD,OAEJ,kBAACpc,GAAA,EAAD,CAAcC,QAASv0C,EAAE,cAGjC,kBAAC,IAAD,CACIqL,mBAAoB,EACpB1Y,KAAMA,EACN2Y,QAASvZ,KAAKgZ,YACdQ,kBAAgB,qBAChB,kBAAC,IAAD,CAAa/f,GAAG,qBAAqBwU,EAAE,YACvC,kBAAC,KAAD,KACI,kBAAC4L,GAAA,EAAD,CAAmB9W,MAAO,CAAE62C,WAAY,aACnC3rC,EAAE,sBAGX,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQX,QAASpZ,KAAKgZ,YAAagM,MAAM,WACpC/W,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQX,QAASpZ,KAAKo+B,WAAYpZ,MAAM,WACnC/W,EAAE,c,GAlFEiM,IAAMC,WA6FxBE,iBAAkBkkD,ICvGlBh0C,eACX,0BAAMnO,EAAE,8yBACR,QCFWmO,eACX,0BAAMnO,EAAE,q7DACR,Y,qMCoBEwiD,I,mBACF,WAAYpmD,GAAQ,IAAD,8BACf,4CAAMA,KASV6yB,aAAe,SAAA5pC,GACX,EAAKqX,SAAS,CAAEtQ,KAAM/G,EAAMC,OAAOkP,QAEnCiiB,KAAiBh6B,KAAK,4BAA6B,CAC/C2P,KAAM/G,EAAMC,OAAOkP,MACnB4xC,QAAS,EAAKqc,SAAS,EAAK3lD,MAAM8L,UAfvB,EAmBnB85C,mBAAqB,SAAAr9D,GACjB,EAAKqX,SAAS,CAAEkM,MAAOvjB,EAAMC,OAAOkP,QAEpCiiB,KAAiBh6B,KAAK,4BAA6B,CAC/C2P,KAAM,EAAK0Q,MAAM1Q,KACjBg6C,QAAS,EAAKqc,SAASp9D,EAAMC,OAAOkP,UAxBzB,EA4BnBmuD,eAAiB,SAAAnuD,GACb,OAAQA,GACJ,KAAKouD,KAAI,KACL,MAAO,MACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAM,KACP,MAAO,QACX,KAAKC,KAAM,KACP,MAAO,QACX,IAAK,UACD,MAAO,OACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAW,KACZ,MAAO,aAGf,OAAO,MA9CQ,EAiDnBR,SAAW,SAAAjuD,GACP,OAAQA,GACJ,IAAK,MACD,OAAOouD,KACX,IAAK,SACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,OACD,MAAO,CAAEG,KAAM,WACnB,IAAK,SACD,OAAOF,KACX,IAAK,aACD,OAAOC,KAGf,OAAO,MAnEQ,EAsEnBrmD,YAAc,WACV,EAAKF,SAAS,CAAElY,MAAM,KAvEP,EA0EnBA,KAAO,WACH,EAAKkY,SAAS,CAAElY,MAAM,KAxEtB,EAAKsY,MAAQ,CACTtY,MAAM,EACN4H,KAAM,EAAKgQ,MAAM4sB,MAAMm6B,QAAQ/2D,KAC/Bwc,MAAO,EAAK+5C,eAAe,EAAKvmD,MAAM4sB,MAAMm6B,QAAQ/c,QAAQ8c,OANjD,E,sEA8ET,IACErxD,EAAMjO,KAAKwY,MAAXvK,EADH,EAEyBjO,KAAKkZ,MAA3B1Q,EAFH,EAEGA,KAAMwc,EAFT,EAESA,MAAOpkB,EAFhB,EAEgBA,KAErB,OACI,kBAAC,IAAD,CACI0Y,mBAAoB,EACpB1Y,KAAMA,EACN2Y,QAASvZ,KAAKgZ,YACdQ,kBAAgB,qBAChBmlC,mBAAiB,4BACjB,kBAAC,IAAD,CAAallD,GAAG,sBAAsBwU,EAAE,eACxC,kBAAC,KAAD,KACI,kBAACuxD,GAAA,EAAD,CAAa3b,UAAU,WAAWh/B,UAAU,qBACxC,kBAAC46C,GAAA,EAAD,CAAW9rC,SAAO,EAACkwB,UAAU,UACxB51C,EAAE,UAEP,kBAACyxD,GAAA,EAAD,CACIz6C,aAAW,QACXgF,KAAK,SACLpF,UAAU,qBACVjU,MAAOpI,EACPkjC,SAAU1rC,KAAKqrC,cACf,kBAACs0B,GAAA,EAAD,CAAkB/uD,MAAM,QAAQgvD,QAAS,kBAACnuB,GAAA,EAAD,CAAOzsB,MAAM,YAAc4nC,MAAM,UAC1E,kBAAC+S,GAAA,EAAD,CAAkB/uD,MAAM,OAAOgvD,QAAS,kBAACnuB,GAAA,EAAD,CAAOzsB,MAAM,YAAc4nC,MAAM,WAGjF,kBAAC4S,GAAA,EAAD,CAAa3b,UAAU,WAAWh/B,UAAU,qBACxC,kBAAC46C,GAAA,EAAD,CAAW9rC,SAAO,EAACkwB,UAAU,UACxB51C,EAAE,WAEP,kBAACyxD,GAAA,EAAD,CACIz6C,aAAW,SACXgF,KAAK,UACLpF,UAAU,qBACVjU,MAAOoU,EACP0mB,SAAU1rC,KAAK8+D,oBACf,kBAACa,GAAA,EAAD,CACI/uD,MAAM,MACNgvD,QACI,kBAACnuB,GAAA,EAAD,CACIzsB,MAAM,UACNrL,QAAS,CACLC,KAAM,sBAIlBgzC,MAAM,QAEV,kBAAC+S,GAAA,EAAD,CACI/uD,MAAM,SACNgvD,QACI,kBAACnuB,GAAA,EAAD,CACIzsB,MAAM,UACNrL,QAAS,CACLC,KAAM,yBAIlBgzC,MAAM,WAEV,kBAAC+S,GAAA,EAAD,CACI/uD,MAAM,QACNgvD,QACI,kBAACnuB,GAAA,EAAD,CACIzsB,MAAM,UACNrL,QAAS,CACLC,KAAM,wBAIlBgzC,MAAM,UAEV,kBAAC+S,GAAA,EAAD,CACI/uD,MAAM,QACNgvD,QACI,kBAACnuB,GAAA,EAAD,CACIzsB,MAAM,UACNrL,QAAS,CACLC,KAAM,wBAIlBgzC,MAAM,UAEV,kBAAC+S,GAAA,EAAD,CACI/uD,MAAM,OACNgvD,QACI,kBAACnuB,GAAA,EAAD,CACIzsB,MAAM,UACNrL,QAAS,CACLC,KAAM,uBAIlBgzC,MAAM,SAEV,kBAAC+S,GAAA,EAAD,CACI/uD,MAAM,SACNgvD,QACI,kBAACnuB,GAAA,EAAD,CACIzsB,MAAM,UACNrL,QAAS,CACLC,KAAM,yBAIlBgzC,MAAM,WAEV,kBAAC+S,GAAA,EAAD,CACI/uD,MAAM,aACNgvD,QACI,kBAACnuB,GAAA,EAAD,CACIzsB,MAAM,UACNrL,QAAS,CACLC,KAAM,8BAIlBgzC,MAAM,wB,GAtMZ1yC,IAAMC,YAyNjB+kC,GAPCC,YACZmH,cACAuZ,KACAxlD,cACAksC,cAGWrH,CAAQ0f,IC5NjBkB,I,kNACFrb,iBAAmB,WAAO,IACd9nD,EAAW,EAAK6b,MAAhB7b,OAEFtB,EAAO0O,IAAUjQ,IAAI6C,GACtBtB,GACAA,EAAKW,OAEV0oD,YAA6B,CAAE/nD,Y,wEAGzB,IAAD,EAUDqD,KAAKwY,MARL7b,EAFC,EAEDA,OACAsR,EAHC,EAGDA,EACAsL,EAJC,EAIDA,QACAwmD,EALC,EAKDA,cACAC,EANC,EAMDA,UACAC,EAPC,EAODA,gBACAC,EARC,EAQDA,kBACAC,EATC,EASDA,WAEE9kE,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,KAZb,IAcGW,EAAUX,EAAVW,MAER,OACI,oCACI,yBAAK6oB,UAAU,iBACX,kBAACE,EAAA,EAAD,CAAYF,UAAU,qBAAqBzL,QAASG,GAChD,kBAAC,GAAD,OAEJ,yBAAKsL,UAAU,qCACX,0BAAMA,UAAU,yBAAyB5W,EAAE,cAE/C,kBAAC,GAAD,OAEJ,yBAAK4W,UAAU,wBACX,yBAAKA,UAAU,qBACX,kBAAC,GAAD,CACIloB,OAAQA,EACRwN,KAAK,EACLs1B,YAAY,EACZxqB,mBAAmB,EACnBgrC,aAAcjkD,EAAQgE,KAAKykD,iBAAmB,QAGtD,kBAACtQ,GAAA,EAAD,CAAUtvB,UAAU,qBAAqBuvB,QAAM,EAACh7B,QAAS2mD,GACrD,kBAACzd,GAAA,EAAD,KACI,kBAAC8d,GAAD,OAEJ,kBAAC7d,GAAA,EAAD,CAAcC,QAASv0C,EAAE,kBAE7B,kBAACkmC,GAAA,EAAD,CAAUtvB,UAAU,qBAAqBuvB,QAAM,EAACh7B,QAAS4mD,GACrD,kBAAC1d,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASv0C,EAAE,sBAE7B,kBAACkmC,GAAA,EAAD,CAAUtvB,UAAU,qBAAqBuvB,QAAM,EAACh7B,QAAS6mD,GACrD,kBAAC3d,GAAA,EAAD,KACI,kBAACkR,GAAD,OAEJ,kBAACjR,GAAA,EAAD,CAAcC,QAASv0C,EAAE,oBAE7B,kBAACkmC,GAAA,EAAD,CAAUtvB,UAAU,qBAAqBuvB,QAAM,EAACh7B,QAAS8mD,GACrD,kBAAC5d,GAAA,EAAD,KACI,kBAAC+d,GAAD,OAEJ,kBAAC9d,GAAA,EAAD,CAAcC,QAASv0C,EAAE,sBAE7B,kBAACkmC,GAAA,EAAD,CAAU8K,WAAW,EAAOp6B,UAAU,qBAAqBuvB,QAAM,EAACh7B,QAAS+mD,GACvE,kBAAC7d,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASv0C,EAAE,qB,GA5E9BiM,IAAMC,YA8FVE,iBAAkBylD,I,UCtG3BQ,I,mBACF,WAAY9nD,GAAQ,IAAD,uBACf,4CAAMA,KAuEV+nD,qBAxEmB,qBAwEI,oCAAA/nE,EAAA,wDACXmE,EAAW,EAAK6b,MAAhB7b,OACAgZ,EAAa,EAAKuD,MAAlBvD,UACJ6qD,EAAc,EAAKC,YAAYzjD,QAAQpM,OAC3BwZ,WAAW,MAAQo2C,EAAYviE,OAAS,IACpDuiE,EAAcA,EAAY/kD,OAAO,IAEjC9F,IAAa6qD,GAA+B,KAAhBA,EAPb,gBAQf,EAAK1nD,SAAS,CACV4nD,cAAe,OATJ,wCAeM1nE,KAAgBmI,KAAK,CACtC,QAAS,oBACTvE,QAASD,EACTgZ,SAAU6qD,IAlBC,QAeT1/D,EAfS,QAuBX6/D,EAAe,EAAKF,YAAYzjD,QAAQpM,OAC3BwZ,WAAW,MAAQu2C,EAAa1iE,OAAS,IACtD0iE,EAAeA,EAAallD,OAAO,IAEnCklD,IAAiBH,GACjB,EAAK1nD,SAAS,CACV4nD,cAAe5/D,IA7BR,0CArEnB,EAAK8/D,aAAe1mD,IAAM0a,YAC1B,EAAKisC,YAAc3mD,IAAM0a,YACzB,EAAKksC,OAAS5mD,IAAM0a,YACpB,EAAK6rC,YAAcvmD,IAAM0a,YAEzB,IAAMl5B,EAAO0J,IAAUtL,IAAIsL,IAAUmR,WAC/BwqD,EAAe37D,IAAUyP,YAAYzP,IAAUmR,WATtC,OAWf,EAAK2C,MAAQ,CACTsM,UAAW9pB,EAAOA,EAAKuV,WAAa,GACpCwU,SAAU/pB,EAAOA,EAAK0pB,UAAY,GAClCnP,IAAK8qD,EAAeA,EAAa9qD,IAAM,GACvCN,SAAUja,EAAOA,EAAKia,SAAW,GACjC+qD,cAAe,MAhBJ,E,oFAqBf1gE,KAAKghE,UACLhhE,KAAKihE,SACLjhE,KAAKkhE,gB,oCAGM,IAAD,EAC0BlhE,KAAKkZ,MAAjCvD,EADE,EACFA,SAAU+qD,EADR,EACQA,cACdF,EAAcxgE,KAAKygE,YAAYzjD,QAAQpM,MACvC4vD,EAAYp2C,WAAW,MAAQo2C,EAAYviE,OAAS,IACpDuiE,EAAcA,EAAY/kD,OAAO,IAGjC9F,IAAa6qD,GACZE,GAC0B,8BAA3BA,EAAc,UAElB1nE,KAAgBmI,KAAK,CACjB,QAAS,cACTwU,SAAU6qD,M,gCAIP,IAAD,EAC0BxgE,KAAKkZ,MAA7BsM,EADF,EACEA,UAAWC,EADb,EACaA,SACb07C,EAAenhE,KAAK4gE,aAAa5jD,QAAQpM,MACzCwwD,EAAcphE,KAAK6gE,YAAY7jD,QAAQpM,MAEzCuwD,IAAiB37C,GAAa47C,IAAgB37C,GAIlDzsB,KAAgBmI,KAAK,CACjB,QAAS,UACT8P,WAAYkwD,EACZ/7C,UAAWg8C,M,+BAIT,IACEnrD,EAAQjW,KAAKkZ,MAAbjD,IACForD,EAASrhE,KAAK8gE,OAAO9jD,QAAQpM,MAC/BywD,IAAWprD,GAIfjd,KAAgBmI,KAAK,CACjB,QAAS,SACT8U,IAAKorD,M,+BAuCH,IAAD,EACwBrhE,KAAKwY,MAA5B7b,EADD,EACCA,OAAQsR,EADT,EACSA,EAAGsL,EADZ,EACYA,QADZ,EAEyDvZ,KAAKkZ,MAA3DsM,EAFH,EAEGA,UAAWC,EAFd,EAEcA,SAAUxP,EAFxB,EAEwBA,IAAKN,EAF7B,EAE6BA,SAAU+qD,EAFvC,EAEuCA,cAExC1rC,GAAW,EACXssC,EAAgBrzD,EAAE,YACtB,GAAIyyD,EACA,OAAQA,EAAc,UAClB,IAAK,4BACD1rC,GAAW,EACXssC,EAAgB,wBAChB,MAEJ,IAAK,4CACL,IAAK,iDACL,IAAK,yCACDtsC,GAAW,EACXssC,EAAgB,mBAChB,MAEJ,IAAK,0CACDtsC,GAAW,EACXssC,EAAgB,4BAQ5B,OACI,oCACI,yBAAKz8C,UAAU,iBACX,kBAACE,EAAA,EAAD,CAAYF,UAAU,qBAAqBzL,QAASG,GAChD,kBAAC,GAAD,OAEJ,yBAAKsL,UAAU,qCACX,0BAAMA,UAAU,yBAAyB5W,EAAE,kBAGnD,yBAAK4W,UAAU,wBACX,yBAAKA,UAAU,qBACX,kBAAC,GAAD,CACIloB,OAAQA,EACRujD,WAAW,EACX/1C,KAAK,EACLs1B,YAAY,EACZxqB,mBAAmB,EACnBgrC,aAAc,QAGtB,yBAAKp7B,UAAU,qBACX,kBAAC08C,GAAA,EAAD,CACI/D,SAAUx9D,KAAK4gE,aACf/7C,UAAU,qBACVqM,QAAQ,WACRwkB,WAAS,EACTkX,MAAO3+C,EAAE,aACTuzD,aAAch8C,IAElB,kBAAC+7C,GAAA,EAAD,CACI/D,SAAUx9D,KAAK6gE,YACfh8C,UAAU,qBACVqM,QAAQ,WACRwkB,WAAS,EACTkX,MAAO3+C,EAAE,YACTuzD,aAAc/7C,IAElB,kBAAC87C,GAAA,EAAD,CACI/D,SAAUx9D,KAAK8gE,OACfj8C,UAAU,qBACVqM,QAAQ,WACRwkB,WAAS,EACTkX,MAAO3+C,EAAE,OACTuzD,aAAcvrD,IAElB,yBAAK4O,UAAU,qBAAqB5W,EAAE,cAE1C,yBAAK4W,UAAU,iCACf,yBAAKA,UAAU,yBACX,kBAAC08C,GAAA,EAAD,CACI/D,SAAUx9D,KAAKygE,YACfvlE,MAAO85B,EACPnQ,UAAU,qBACVqM,QAAQ,WACRwkB,WAAS,EACTkX,MAAO0U,EACPE,aAAc7rD,EACd+1B,SAAU1rC,KAAKugE,uBAEnB,yBAAK17C,UAAU,qBAAf,4O,GAtME3K,IAAMC,YA4NjB+kC,GANCC,YACZmH,cACAjsC,cACAksC,cAGWrH,CAAQohB,ICvOR/1C,eACX,0BAAMnO,EAAE,uhCACR,Y,mBC4FWqlD,G,2MAxFXvoD,MAAQ,CACJye,QAAQ,G,EAWZ4M,oCAAsC,SAAAhsC,GAAW,IACrCmpE,EAAc,EAAKlpD,MAAnBkpD,UACR,GAAKA,EAAL,CAF4C,IAIpCzlE,EAAaylE,EAAbzlE,SACR,GAAKA,EAAL,CAL4C,IAOpCa,EAAcb,EAAda,UACR,GAAKA,EAAL,CAEA,IAAMnE,EAAOmE,EAAUd,MACvB,GAAKrD,EAAL,CAX4C,IAapCoG,EAAWxG,EAAXwG,OAEJpG,EAAKc,KAAOsF,GAIhB,EAAKg1B,mB,EAGTkE,WAAa,WACT,EAAKnf,SAAS,CAAE6e,QAAQ,K,EAG5Blf,YAAc,WAAO,IAAD,EACe,EAAKD,MAA5BkpD,EADQ,EACRA,UAAWtoD,EADH,EACGA,QAEfA,GACAA,EAAQsoD,I,mFArCZ19D,IAAU/K,GAAG,oCAAqC+G,KAAKukC,uC,6CAIvDvgC,IAAU7K,IAAI,oCAAqC6G,KAAKukC,uC,+BAqClD,IAAD,EAC6BvkC,KAAKwY,MAA/BkpD,EADH,EACGA,UAAW7qB,EADd,EACcA,WAGX56C,GAFW+D,KAAKkZ,MAAhBye,OAEa+pC,EAAbzlE,UACA0jB,EAA6B1jB,EAA7B0jB,cAAe7iB,EAAcb,EAAda,UAEjB67B,EAAUhZ,EAAgB,2BAA6BA,EAAcre,KAAO,KAC5Es3B,EAAW/sB,YAAO/O,EAAYA,EAAUd,MAAQ,MAEhD05B,EAAMkD,GAAYD,EAExB,OACI,yBAAK9T,UAAU,eAAezL,QAASpZ,KAAKyY,aACxC,yBACIoM,UAAU,uBACV9hB,MAAO,CACHgqD,gBAAgB,OAAD,OAASn0B,GAAYD,EAArB,KACfq0B,eAAgB,QAChB2U,mBAAoB,QAEvBjsC,IAAQkD,GACL,yBAAK/T,UAAU,4BAA4B9hB,MAAO,CAAEgqD,gBAAgB,OAAD,OAASr3B,EAAT,SAG1EmhB,GACG,oCACI,yBAAKhyB,UAAU,uBACf,yBAAKA,UAAU,8BAGtB5oB,GAAYA,EAASA,UAAY,kBAACqyB,GAAA,EAAD,CAAc31B,KAAMsD,EAASA,SAAUy0B,cAAc,S,GA9E/ExW,IAAMC,WCKxBynD,I,kNACF1oD,MAAQ,CACJ2oD,WAAY93D,IAAU23D,UAAY33D,IAAU23D,UAAUjoE,IAAM,G,EAehEgf,YAAc,SAAAipD,GACV,EAAK5oD,SAAS,CACV+oD,WAAYH,EAAUjoE,KAFH,IAKfwC,EAAaylE,EAAbzlE,SACR,GAAKA,EAAL,CAEsCA,EAA9Ba,UARe,IAQMnE,EAASsD,EAAnBA,SACnB,GAAKtD,EAAL,CAGA,IADYkT,YAAOlT,GACT,CACN,IAAMlB,EAAQuM,IAAUhK,WACxBuR,YAAsB9T,EAAOiqE,GAAW,GAG5C1oE,KAAgB8G,aAAa,CACzB,QAAS,6BACT4hE,iB,mFA9BJ1hE,KAAK8zB,gB,oCAGM,IACHzoB,EAAgBrL,KAAKwY,MAArBnN,YACR,GAAKA,EAAL,CAEA,IAAM5T,EAAQuM,IAAUhK,WACxBoR,YAAuB3T,EAAO4T,EAAYA,gB,+BA0BpC,IAAD,SAC+BrL,KAAKwY,MAAjCvK,EADH,EACGA,EAAG5C,EADN,EACMA,YAAakO,EADnB,EACmBA,QAChBsoD,EAAe7hE,KAAKkZ,MAApB2oD,WAEFC,EAAaz2D,EAAYA,YAAYvJ,OAAO,SAAAD,GAAC,MAAwB,4BAApBA,EAAE2G,KAAK,WAE9D,OACI,oCACI,yBAAKqc,UAAU,iBACX,kBAACE,EAAA,EAAD,CAAYF,UAAU,qBAAqBzL,QAASG,GAChD,kBAAC,GAAD,OAEJ,yBAAKsL,UAAU,qCACX,0BAAMA,UAAU,yBAAyB5W,EAAE,qBAGnD,yBAAK4W,UAAU,6DACVi9C,EAAWl+D,IAAI,SAAA/B,GAAC,OACb,kBAAC,GAAD,CACIgQ,IAAKhQ,EAAEpI,GACPioE,UAAW7/D,EACXg1C,WAAYh1C,EAAEpI,KAAOooE,EACrBzoD,QAAS,EAAKX,sB,GA9DbyB,IAAMC,YA2EpBE,iBAAkBunD,ICtE3BG,I,mBACF,WAAYvpD,GAAQ,IAAD,8BACf,4CAAMA,KASVwpD,iBAAmB,WACf,EAAKC,eAAejlD,QAAQpc,QAXb,EAkBnBkzB,YAAc,WACV96B,KAAgBmI,KAAK,CACjB,QAAS,iBACT+gE,gBAAgB,IACjB3gE,KAAK,SAAA8J,GAAW,OAAI,EAAKyN,SAAS,CAAEzN,mBAtBxB,EAyBnB82D,mBAAqB,WACZ,EAAKjpD,MAAM7N,aAEhB,EAAKyN,SAAS,CACVqpD,oBAAoB,KA7BT,EAiCnBC,oBAAsB,WAClB,EAAKtpD,SAAS,CACVqpD,oBAAoB,KAhCxB,EAAKjpD,MAAQ,CACT7N,YAAa,MAGjB,EAAK42D,eAAiB/nD,IAAM0a,YAPb,E,iFAef50B,KAAK8zB,gB,+BAwBC,IAAD,EACkB9zB,KAAKwY,MAApBvK,EADH,EACGA,EAAGsL,EADN,EACMA,QADN,EAEuCvZ,KAAKkZ,MAAzC7N,EAFH,EAEGA,YAAa82D,EAFhB,EAEgBA,mBAErB,OACI,oCACI,yBAAKt9C,UAAU,iBACX,kBAACE,EAAA,EAAD,CAAYF,UAAU,qBAAqBzL,QAASG,GAChD,kBAAC,GAAD,OAEJ,yBAAKsL,UAAU,qCACX,0BAAMA,UAAU,yBAAyB5W,EAAE,sBAGnD,yBAAK4W,UAAU,wBACX,yBAAKA,UAAU,wBACX,kBAACsvB,GAAA,EAAD,CACI8K,WAAW,EACXp6B,UAAU,qBACVuvB,QAAM,EACNh7B,QAASpZ,KAAKmiE,oBACd,kBAAC7f,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASv0C,EAAE,qBAE7B,kBAACkmC,GAAA,EAAD,CACI8K,WAAW,EACXp6B,UAAU,qBACVuvB,QAAM,EACNh7B,QAASpZ,KAAKgiE,kBACd,kBAAC1f,GAAA,EAAD,KACI,kBAAC+f,GAAD,OAEJ,kBAAC9f,GAAA,EAAD,CAAcC,QAASv0C,EAAE,mBAIrC,kBAAC,GAAD,CAAarN,KAAMuhE,EAAoB5oD,QAASvZ,KAAKoiE,qBACjD,kBAAC,GAAD,CAAgB/2D,YAAaA,KAEjC,kBAAC,GAAD,CAAa2qB,IAAKh2B,KAAKiiE,sB,GAjFjB/nD,IAAMC,YAiGb+kC,GANCC,YACZmH,cACAjsC,cACAksC,cAGWrH,CAAQ6iB,I,SCtGjBO,I,mBACF,WAAY9pD,GAAQ,IAAD,uBACf,4CAAMA,KAUV6yB,aAAe,SAAA3oB,GACX,EAAK5J,SAAS,CAAE4J,aAEhB1pB,KAAgB8G,aAAa,CAAE,QAAS,6BAA8B4iB,cAdvD,IAGPwY,EAAS1iB,EAAT0iB,KACFxY,EAAWwY,EAAOA,EAAKxY,SAAW,KAJzB,OAMf,EAAKxJ,MAAQ,CACTwJ,SAAUA,GAAY,MAPX,E,sEAiBT,IAAD,SACkB1iB,KAAKwY,MAApBvK,EADH,EACGA,EAAGsL,EADN,EACMA,QACHmJ,EAAa1iB,KAAKkZ,MAAlBwJ,SAGF6/C,GAFOC,KAAkBliB,MAAQ,CAAEmiB,eAAgB,KAElCA,eAAe7+D,IAAI,SAAA/B,GAAC,OACvC,yBAAKgQ,IAAKhQ,EAAEpI,GAAIorB,UAAU,gBAAgBzL,QAAS,kBAAM,EAAKiyB,aAAaxpC,EAAEpI,MACzE,kBAACg4C,GAAA,EAAD,CACIzsB,MAAM,UACNH,UAAU,wBACVitB,QAASpvB,IAAa7gB,EAAEpI,GACxBipE,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAACpgB,GAAA,EAAD,CAAc9oD,GAAG,UAAU+oD,QAAS3gD,EAAEooB,KAAM24C,UAAW/gE,EAAEghE,iBAIjE,OACI,oCACI,yBAAKh+C,UAAU,iBACX,kBAACE,EAAA,EAAD,CAAYF,UAAU,qBAAqBzL,QAASG,GAChD,kBAAC,GAAD,OAEJ,yBAAKsL,UAAU,qCACX,0BAAMA,UAAU,yBAAyB5W,EAAE,eAGnD,yBAAK4W,UAAU,wBAAwB09C,Q,GA9ChCroD,IAAMC,YA8Dd+kC,GANCC,YACZmH,cACAjsC,cACAksC,cAGWrH,CAAQojB,I,4kBC5DjB1gB,G,YACF,WAAYppC,GAAQ,IAAD,uBACf,4CAAMA,KAsDVsqD,cAAgB,SAAAC,GACZ,IAAMtwD,EAAW,EAAKyG,MAAM6pD,GAC5B,GAAKtwD,EAAL,CAFwB,IAKlBuwD,EAAW,MAAQvwD,EAAR,CAAkBD,SAAuB,IADrCC,EAAbD,SACsD,QAAqB,IAEnF,EAAKsG,SAAL,eAAiBiqD,EAAWC,MA9Db,EAiEnBC,kBAAoB,SAAAF,GAChB,IAAMtwD,EAAW,EAAKyG,MAAM6pD,GAC5B,GAAKtwD,EAAL,CAF4B,IAKtBuwD,EAAW,MAAQvwD,EAAR,CAAkBywD,cADVzwD,EAAjBywD,eAGR,EAAKpqD,SAAL,eAAiBiqD,EAAWC,MAxEb,EA2EnBG,oBAAsB,WAClB,EAAKrqD,SAAS,CAAEsqD,eAAgB,EAAKlqD,MAAMkqD,iBAzE3C,IAAMC,EAAsB5oB,IAAY3gD,IAAI,4CAH7B,OAKf,EAAKof,MAAQ,CACToqD,qBAAsB5wD,KAAkBD,SAAS3Y,IAAI,yCACrDypE,mBAAoB7wD,KAAkBD,SAAS3Y,IAAI,uCACnD0pE,qBAAsB9wD,KAAkBD,SAAS3Y,IAAI,yCACrDspE,eAAgBC,IAAwBA,EAAoBzyD,OATjD,E,oFAaK,IAAD,EACuE5Q,KAAKkZ,MAAvFoqD,EADW,EACXA,qBAAsBC,EADX,EACWA,mBAAoBC,EAD/B,EAC+BA,qBAAsBJ,EADrD,EACqDA,cACxEpjE,KAAKyjE,6BAA6B,wCAAyCH,GAC3EtjE,KAAKyjE,6BAA6B,sCAAuCF,GACzEvjE,KAAKyjE,6BAA6B,wCAAyCD,GAC3ExjE,KAAK0jE,uBAAuBN,K,+CAGN,IACdA,EAAkBpjE,KAAKkZ,MAAvBkqD,cAEFC,EAAsB5oB,IAAY3gD,IAAI,8CAClBupE,IAAwBA,EAAoBzyD,SAC7CwyD,GAEzBpqE,KAAgBmI,KAAK,CACjB,QAAS,YACT8oB,KAAM,2CACNrZ,MAAO,CACH,QAAS,qBACTA,OAAQwyD,O,mDAKSrhB,EAAOtvC,GAChC,GAAKsvC,GACAtvC,EAAL,CACA,IAAMkxD,EAAcjxD,KAAkBD,SAAS3Y,IAAIioD,GACnD,GAAK4hB,EAAL,CAJ0C,IAMlCnxD,EAA2BC,EAA3BD,SAAU0wD,EAAiBzwD,EAAjBywD,aACAU,EAA6CD,EAAvDnxD,SAAoCqxD,EAAmBF,EAAjCT,aAC1B1wD,IAAaoxD,GAAcV,IAAiBW,GAEhD7qE,KAAgBmI,KAAK,CACjB,QAAS,+BACT4gD,MAAO,CAAE,QAASA,GAClBzvC,sBAAuBG,Q,gCA4BrBA,GACN,QAAKA,GAIe,IAFCA,EAAbD,W,kCAKAC,GACR,QAAKA,GAEoBA,EAAjBywD,e,+BAKF,IAAD,SACkBljE,KAAKwY,MAApBvK,EADH,EACGA,EAAGsL,EADN,EACMA,QADN,EAEqFvZ,KAAKkZ,MAAvFoqD,EAFH,EAEGA,qBAAsBC,EAFzB,EAEyBA,mBAAoBC,EAF7C,EAE6CA,qBAAsBJ,EAFnE,EAEmEA,cAExE,OACI,oCACI,yBAAKv+C,UAAU,iBACX,kBAACE,EAAA,EAAD,CAAYF,UAAU,qBAAqBzL,QAASG,GAChD,kBAAC,GAAD,OAEJ,yBAAKsL,UAAU,qCACX,0BAAMA,UAAU,yBAAyB5W,EAAE,oBAGnD,yBAAK4W,UAAU,wBACX,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgB5W,EAAE,8BAClB,yBAAK4W,UAAU,gBAAgBzL,QAAS,kBAAM,EAAK0pD,cAAc,0BAC7D,kBAACgB,GAAA,EAAD,CACI9+C,MAAM,UACNH,UAAU,wBACVitB,QAAS9xC,KAAK+jE,UAAUT,GACxBZ,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAACpgB,GAAA,EAAD,CACI9oD,GAAG,UACH+oD,QAASv0C,EAAE,gCACX20D,UACI5iE,KAAK+jE,UAAUT,GACTr1D,EAAE,wBACFA,EAAE,4BAIpB,yBAAK4W,UAAU,gBAAgBzL,QAAS,kBAAM,EAAK6pD,kBAAkB,0BACjE,kBAACa,GAAA,EAAD,CACI9+C,MAAM,UACNH,UAAU,wBACVitB,QAAS9xC,KAAKgkE,YAAYV,GAC1BZ,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAACpgB,GAAA,EAAD,CACI9oD,GAAG,UACH+oD,QAASv0C,EAAE,kBACX20D,UACI5iE,KAAKgkE,YAAYV,GAAwBr1D,EAAE,kBAAoBA,EAAE,uBAKjF,yBAAK4W,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgB5W,EAAE,wBAClB,yBAAK4W,UAAU,gBAAgBzL,QAAS,kBAAM,EAAK0pD,cAAc,wBAC7D,kBAACgB,GAAA,EAAD,CACI9+C,MAAM,UACNH,UAAU,wBACVitB,QAAS9xC,KAAK+jE,UAAUR,GACxBb,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAACpgB,GAAA,EAAD,CACI9oD,GAAG,UACH+oD,QAASv0C,EAAE,0BACX20D,UACI5iE,KAAK+jE,UAAUR,GACTt1D,EAAE,wBACFA,EAAE,4BAIpB,yBAAK4W,UAAU,gBAAgBzL,QAAS,kBAAM,EAAK6pD,kBAAkB,wBACjE,kBAACa,GAAA,EAAD,CACI9+C,MAAM,UACNH,UAAU,wBACVitB,QAAS9xC,KAAKgkE,YAAYT,GAC1Bb,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAACpgB,GAAA,EAAD,CACI9oD,GAAG,UACH+oD,QAASv0C,EAAE,kBACX20D,UACI5iE,KAAKgkE,YAAYT,GAAsBt1D,EAAE,kBAAoBA,EAAE,uBAK/E,yBAAK4W,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgB5W,EAAE,0BAClB,yBAAK4W,UAAU,gBAAgBzL,QAAS,kBAAM,EAAK0pD,cAAc,0BAC7D,kBAACgB,GAAA,EAAD,CACI9+C,MAAM,UACNH,UAAU,wBACVitB,QAAS9xC,KAAK+jE,UAAUP,GACxBd,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAACpgB,GAAA,EAAD,CACI9oD,GAAG,UACH+oD,QAASv0C,EAAE,4BACX20D,UACI5iE,KAAK+jE,UAAUP,GACTv1D,EAAE,wBACFA,EAAE,4BAIpB,yBAAK4W,UAAU,gBAAgBzL,QAAS,kBAAM,EAAK6pD,kBAAkB,0BACjE,kBAACa,GAAA,EAAD,CACI9+C,MAAM,UACNH,UAAU,wBACVitB,QAAS9xC,KAAKgkE,YAAYR,GAC1Bd,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAACpgB,GAAA,EAAD,CACI9oD,GAAG,UACH+oD,QAASv0C,EAAE,kBACX20D,UACI5iE,KAAKgkE,YAAYR,GAAwBv1D,EAAE,kBAAoBA,EAAE,uBAKjF,yBAAK4W,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgB5W,EAAE,uBAClB,yBAAK4W,UAAU,gBAAgBzL,QAASpZ,KAAKmjE,qBACzC,kBAACW,GAAA,EAAD,CACI9+C,MAAM,UACNH,UAAU,wBACVitB,QAASsxB,EACTV,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAACpgB,GAAA,EAAD,CACI9oD,GAAG,UACH+oD,QAASv0C,EAAE,iBACX20D,UAA2B30D,EAAhBm1D,EAAkB,uBAA4B,mC,GA9O7DlpD,IAAMC,WAkQnB+kC,GANCC,YACZmH,cACAjsC,cACAksC,cAGWrH,CAAQ0C,IC9QRr3B,eACX,uBAAGmW,UAAU,kCAAkC4W,SAAS,WACpD,0BAAMl7B,EAAE,ygBAEZ,QCOE6nD,I,kNACF/qD,MAAQ,CACJ0uC,aAAa,EACbtnC,KAAM,EACN6wB,IAAK,G,EAGT2E,kBAAoB,SAAAr0C,GACZA,IACAA,EAAMkX,iBACNlX,EAAMiX,mBAHe,IAMjBwrD,EAAY,EAAK1rD,MAAjB0rD,QACR,GAAKA,IACDA,EAAQC,WAIZ,GAFwB,EAAKjrD,MAArB0uC,YAGJ,EAAK9uC,SAAS,CAAE8uC,aAAa,QAC1B,CACH,IAAMtnC,EAAO7e,EAAMqmD,QACb3W,EAAM1vC,EAAMsmD,QAElB,EAAKjvC,SAAS,CACV8uC,aAAa,EACbtnC,OACA6wB,U,EAKZ6W,uBAAyB,SAAAvmD,GACrB,EAAKqX,SAAS,CACV8uC,aAAa,EACbtnC,KAAM,EACN6wB,IAAK,K,EAIbizB,gBAAkB,SAAA3iE,GACd,EAAKumD,uBAAuBvmD,GADL,MAGU,EAAK+W,OAEtC6rD,EALuB,EAGfA,aAHe,EAGFH,U,wEAKf,IAAD,EACkBlkE,KAAKwY,MAApB0rD,EADH,EACGA,QAASj2D,EADZ,EACYA,EACjB,IAAKi2D,EAAS,OAAO,KAFhB,MAI8BlkE,KAAKkZ,MAAhCoH,EAJH,EAIGA,KAAM6wB,EAJT,EAISA,IAAKyW,EAJd,EAIcA,YAEfuc,EAUAD,EAVAC,WACAG,EASAJ,EATAI,iBACAC,EAQAL,EARAK,oBACAC,EAOAN,EAPAM,aACAC,EAMAP,EANAO,SACAC,EAKAR,EALAQ,eACAC,EAIAT,EAJAS,GACAC,EAGAV,EAHAU,OACAC,EAEAX,EAFAW,QACAC,EACAZ,EADAY,iBAEEC,GAAYZ,EAElB,OACI,oCACI,kBAAChwB,GAAA,EAAD,CAAUtvB,UAAU,qBAAqBuvB,QAAM,EAAC8B,cAAel2C,KAAK81C,mBAChE,yBAAKjxB,UAAU,WACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,eAAf,UAAiCy/C,EAAjC,YAAqDC,IACpDQ,GACG,yBAAKlgD,UAAU,gBAAgB/R,YAAe,CAAEC,KAAM+xD,MAG9D,yBAAKjgD,UAAU,qBAAf,UAAuC2/C,EAAvC,aAAwDC,EAAxD,YAAoEC,IACpE,yBAAK7/C,UAAU,qBAAf,UACQ8/C,EADR,OAEKC,GAAM,UAAOA,EAAP,MACNC,GAAO,UAAOA,MAI3B,kBAAC1d,GAAA,EAAD,CACIvmD,KAAMgnD,EACNruC,QAASvZ,KAAKgoD,uBACdZ,gBAAgB,iBAChBH,eAAgB,CAAE9V,MAAK7wB,QACvB+mC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhB3b,YAAa,SAAA7qB,GAAC,OAAIA,EAAErI,oBACpB,kBAAC+uC,GAAA,EAAD,CAAUruC,QAAS,SAAA2H,GAAC,OAAIA,EAAErI,oBACtB,kBAACgvC,GAAA,EAAD,CAAUtuC,QAASpZ,KAAKokE,iBACpB,kBAAC9hB,GAAA,EAAD,KACI,kBAAC0iB,GAAD,OAEJ,kBAACziB,GAAA,EAAD,CAAcC,QAASv0C,EAAE,uB,GAzG/BiM,IAAMC,YAuHbE,iBAAkB4pD,ICnH3BgB,I,kNACF/rD,MAAQ,CACJtY,MAAM,EACNskE,SAAS,EACThB,QAAS,M,EAGbE,gBAAkB,SAAAF,GACd,EAAKprD,SAAS,CACVlY,MAAM,EACNsjE,a,EAIRiB,wBAA0B,WACtB,EAAKrsD,SAAS,CACVosD,SAAS,K,EAIjBE,wBAA0B,WACtB,EAAKtsD,SAAS,CACVlY,MAAM,EACNsjE,QAAS,Q,EAIjBmB,uB,qBAAyB,8BAAA7sE,EAAA,wDACb8sE,EAAa,EAAK9sD,MAAlB8sD,SACApB,EAAY,EAAKhrD,MAAjBgrD,QAFa,wDAKrB,EAAKprD,SAAS,CACVlY,MAAM,EACNsjE,QAAS,OAPQ,SAUflrE,KAAgBmI,KAAK,CACvB,QAAS,mBACTokE,WAAYrB,EAAQzqE,KAZH,OAerB6rE,EAASA,SAAWA,EAASA,SAASxjE,OAAO,SAAAD,GAAC,OAAIA,EAAEpI,KAAOyqE,EAAQzqE,KACnE,EAAKs6B,cAhBgB,yC,EAmBzByxC,2BAA6B,WACzB,EAAK1sD,SAAS,CACVosD,SAAS,K,EAIjBO,0B,qBAA4B,4BAAAjtE,EAAA,4DAChB8sE,EAAa,EAAK9sD,MAAlB8sD,SAER,EAAKxsD,SAAS,CACVosD,SAAS,IAJW,SAOlBlsE,KAAgBmI,KAAK,CACvB,QAAS,8BARW,OAWxBmkE,EAASA,SAAWA,EAASA,SAASxjE,OAAO,SAAAD,GAAC,OAAKA,EAAEsiE,aACrD,EAAKpwC,cAZmB,yC,wEAelB,IAAD,SAC4B/zB,KAAKwY,MAA9BvK,EADH,EACGA,EAAGq3D,EADN,EACMA,SAAU/rD,EADhB,EACgBA,QADhB,EAEqBvZ,KAAKkZ,MAAvBtY,EAFH,EAEGA,KAAMskE,EAFT,EAESA,QAERloD,EAAUsoD,EAASA,SAAS9lB,KAAK,SAAA39C,GAAC,OAAIA,EAAEsiE,aACxCuB,EAAQJ,EAASA,SAASxjE,OAAO,SAAAD,GAAC,OAAKA,EAAEsiE,aAE/C,OACI,oCACI,yBAAKt/C,UAAU,iBACX,kBAACE,EAAA,EAAD,CAAYF,UAAU,qBAAqBzL,QAASG,GAChD,kBAAC,GAAD,OAEJ,yBAAKsL,UAAU,qCACX,0BAAMA,UAAU,yBAAyB5W,EAAE,oBAGnD,yBAAK4W,UAAU,wBACVpN,QAAQuF,IACL,yBAAK6H,UAAU,wBACX,kBAAC,GAAD,KAAgB5W,EAAE,mBAClB,kBAAC,GAAD,CAASi2D,QAASlnD,EAASqnD,YAAarkE,KAAKokE,kBAC5CsB,EAAMznE,OAAS,GACZ,kBAACk2C,GAAA,EAAD,CACItvB,UAAU,qBACVuvB,QAAM,EACNuxB,eAAa,EACbvsD,QAASpZ,KAAKmlE,yBACd,kBAAC7iB,GAAA,EAAD,KACI,kBAAC0iB,GAAD,CAAUhgD,MAAM,eAEpB,kBAACu9B,GAAA,EAAD,CACIqjB,uBAAwB,CAAE5gD,MAAO,aACjCw9B,QAASv0C,EAAE,4BAM9By3D,EAAMznE,OAAS,GACZ,oCACI,yBAAK4mB,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgB5W,EAAE,kBACjBy3D,EAAM9hE,IAAI,SAAA/B,GAAC,OACR,kBAAC,GAAD,CAASgQ,IAAKhQ,EAAEpI,GAAIyqE,QAASriE,EAAGwiE,YAAa,EAAKD,uBAMtE,kBAAC,IAAD,CACI9qD,mBAAoB,EACpB1Y,KAAMA,EACN2Y,QAASvZ,KAAKolE,wBACd5rD,kBAAgB,qBAChB,kBAAC,IAAD,CAAa/f,GAAG,qBAAqBwU,EAAE,YACvC,kBAAC,KAAD,KACI,kBAAC4L,GAAA,EAAD,CAAmB9W,MAAO,CAAE62C,WAAY,aACnC3rC,EAAE,0BAGX,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQX,QAASpZ,KAAKolE,wBAAyBpgD,MAAM,WAChD/W,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQX,QAASpZ,KAAKqlE,uBAAwBrgD,MAAM,WAC/C/W,EAAE,SAIf,kBAAC,IAAD,CACIqL,mBAAoB,EACpB1Y,KAAMskE,EACN3rD,QAASvZ,KAAKwlE,2BACdhsD,kBAAgB,qBAChB,kBAAC,IAAD,CAAa/f,GAAG,qBAAqBwU,EAAE,YACvC,kBAAC,KAAD,KACI,kBAAC4L,GAAA,EAAD,CAAmB9W,MAAO,CAAE62C,WAAY,aACnC3rC,EAAE,wBAGX,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQX,QAASpZ,KAAKwlE,2BAA4BxgD,MAAM,WACnD/W,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQX,QAASpZ,KAAKylE,0BAA2BzgD,MAAM,WAClD/W,EAAE,c,GA1JFiM,IAAMC,YA8KpB+kC,GANCC,YACZmH,cACAjsC,cACAksC,cAGWrH,CAAQ+lB,IC7LR16C,eACX,0BAAMnO,EAAE,81BACR,WCgBEypD,I,OAAc3rD,IAAM4rD,KAAK,YAAqC,IAAlC5jE,EAAiC,EAAjCA,OAAQkX,EAAyB,EAAzBA,QAAS2sD,EAAgB,EAAhBA,UAAgB,EACzB7rD,IAAM8rD,UAAS,GADU,mBACxDpe,EADwD,KAC3Cqe,EAD2C,OAEzC/rD,IAAM8rD,SAAS,GAF0B,mBAExD70B,EAFwD,KAEnD+0B,EAFmD,OAGvChsD,IAAM8rD,SAAS,GAHwB,mBAGxD1lD,EAHwD,KAGlD6lD,EAHkD,KAIvDl4D,EAAMm4D,cAANn4D,EAmBF+5C,EAAyB,WAC3Bie,GAAe,GACfE,EAAQ,GACRD,EAAO,IAYX,OACI,oCACI,kBAAC/xB,GAAA,EAAD,CAAUtvB,UAAU,qBAAqBuvB,QAAM,EAACh7B,QAXpC,WAChBA,EAAQlX,IAUkEg0C,cAlCpD,SAAAz0C,GAMtB,GALIA,IACAA,EAAMkX,iBACNlX,EAAMiX,mBAGNkvC,EACAqe,GAAe,OACZ,CAAC,IACIne,EAAqBrmD,EAArBqmD,QAASC,EAAYtmD,EAAZsmD,QAEjBke,GAAe,GACfE,EAAQre,GACRoe,EAAOne,MAsBH,kBAAC,KAAD,CAAM7lD,OAAQA,KAElB,kBAACilD,GAAA,EAAD,CACIvmD,KAAMgnD,EACNruC,QAASyuC,EACTZ,gBAAgB,iBAChBH,eAAgB,CAAE9V,MAAK7wB,QACvB+mC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhB3b,YAAa,SAAA7qB,GAAC,OAAIA,EAAErI,oBACpB,kBAAC+uC,GAAA,EAAD,CAAUruC,QAAS,SAAA2H,GAAC,OAAIA,EAAErI,oBACtB,kBAACgvC,GAAA,EAAD,CAAUtuC,QAzBJ,WAClB4uC,IACA+d,EAAU7jE,KAwBM,kBAACogD,GAAA,EAAD,KACI,kBAAC+jB,GAAD,OAEJ,kBAAC9jB,GAAA,EAAD,CAAcC,QAASv0C,EAAE,oBAc3Cq4D,G,2MAaFC,c,sCAAgB,WAAMrkE,GAAN,SAAA1J,EAAA,qEACNQ,KAAgBmI,KAAK,CACvB,QAAS,cACTgE,QAASjD,IAHD,yC,yIAXZlC,KAAK8zB,gB,oCAGM,IACHvsB,EAAUvH,KAAKwY,MAAfjR,MAEF9P,EAAQuM,IAAUhK,WAExB4N,YAAiBnQ,EAAO8P,EAAM2tC,Y,+BAUxB,IAAD,SACyBl1C,KAAKwY,MAA3Be,EADH,EACGA,QAAShS,EADZ,EACYA,MAAO0G,EADnB,EACmBA,EAExB,OACI,oCACI,yBAAK4W,UAAU,iBACX,kBAACE,EAAA,EAAD,CAAYF,UAAU,qBAAqBzL,QAASG,GAChD,kBAAC,GAAD,OAEJ,yBAAKsL,UAAU,qCACX,0BAAMA,UAAU,yBAAyB5W,EAAE,mBAGnD,yBAAK4W,UAAU,wBACX,yBAAKA,UAAU,wBACVtd,EAAM2tC,SAASj3C,OAAS,EACrB,oCACI,kBAAC,GAAD,CAAe46D,WAAS,GAAE5qD,EAAE,qBAC3B1G,EAAM2tC,SAAStxC,IAAI,SAAA/B,GAAC,OACjB,kBAACgkE,GAAD,CAAah0D,IAAKhQ,EAAGK,OAAQL,EAAGuX,QAASP,IAAUktD,UAAW,EAAKQ,mBAI3E,kBAAC,GAAD,KAAgBt4D,EAAE,qB,GA3CnBiM,IAAMC,WAwDlBE,iBAAkBisD,ICtJlB/7C,eACX,uBAAGmW,UAAU,iCAAiC4W,SAAS,WACnD,0BAAMl7B,EAAE,q3BAEZ,UCJWmO,eACX,uBAAGmW,UAAU,kCAAkC4W,SAAS,WACpD,0BAAMl7B,EAAE,2mCAEZ,gB,kkBCaEoqD,G,2MACFttD,MAAQ,CACJosD,SAAU,KACV/9D,MAAO,KACPk/D,kBAAkB,EAClBC,oBAAoB,G,EAaxBjnB,qBAAuB,SAAAlnD,GAAW,IACtB4M,EAA4B5M,EAA5B4M,QAASwhE,EAAmBpuE,EAAnBouE,eACTp/D,EAAU,EAAK2R,MAAf3R,MACR,GAAKA,EAAL,CAH6B,IAKrB+kB,EAA0B/kB,EAA1B+kB,YAAa4oB,EAAa3tC,EAAb2tC,SACbznB,EAAek5C,EAAfl5C,WAEJA,MADiD,IAA/BynB,EAASzyB,QAAQtd,MAGnCsoB,EACA,EAAK3U,SAAS,CACVvR,MAAM,MACCA,EADF,CAED+kB,YAAaA,EAAc,EAC3B4oB,SAAS,CAAE/vC,GAAH,oBAAe+vC,QAI/B,EAAKp8B,SAAS,CACVvR,MAAM,MACCA,EADF,CAED+kB,YAAaA,EAAc,EAC3B4oB,SAAUA,EAASpzC,OAAO,SAAAD,GAAC,OAAIA,IAAMsD,W,EAkBrDuhE,mBAAqB,WACZ,EAAKxtD,MAAMosD,UAEhB,EAAKxsD,SAAS,CACV4tD,oBAAoB,K,EAI5BE,oBAAsB,WAClB,EAAK9tD,SAAS,CACV4tD,oBAAoB,K,EAI5BD,iBAAmB,WACV,EAAKvtD,MAAM3R,OAEhB,EAAKuR,SAAS,CACV2tD,kBAAkB,K,EAI1BI,kBAAoB,WAChB,EAAK/tD,SAAS,CACV2tD,kBAAkB,K,mFA1EtBzmE,KAAK8zB,cAEL1uB,IAAUnM,GAAG,qBAAsB+G,KAAKy/C,wB,6CAIxCr6C,IAAUjM,IAAI,qBAAsB6G,KAAKy/C,wB,uJAiCzCzmD,KAAgBmI,KAAK,CACjB,QAAS,sBACVI,KAAK,SAAA+jE,GAAQ,OAAI,EAAKxsD,SAAS,CAAEwsD,eAEpCtsE,KAAgBmI,KAAK,CACjB,QAAS,kBACT8O,OAAQ,EACRoc,MAAO,MACR9qB,KAAK,SAAAgG,GAAK,OAAI,EAAKuR,SAAS,CAAEvR,Y,8HA+B3B,IAAD,EACkBvH,KAAKwY,MAApBvK,EADH,EACGA,EAAGsL,EADN,EACMA,QADN,EAE6DvZ,KAAKkZ,MAA/DutD,EAFH,EAEGA,iBAAkBl/D,EAFrB,EAEqBA,MAAOm/D,EAF5B,EAE4BA,mBAAoBpB,EAFhD,EAEgDA,SAE/CwB,EACFxB,GAAYA,EAASA,SAASrnE,OAAS,EACJ,IAA7BqnE,EAASA,SAASrnE,OACd,YADJ,UAEOqnE,EAASA,SAASrnE,OAFzB,aAGA,YAEJ8oE,EACFx/D,GAASA,EAAM+kB,YAAc,EACD,IAAtB/kB,EAAM+kB,YACF,SADJ,UAEO/kB,EAAM+kB,YAFb,UAGA,WAEV,OACI,oCACI,yBAAKzH,UAAU,iBACX,kBAACE,EAAA,EAAD,CAAYF,UAAU,qBAAqBzL,QAASG,GAChD,kBAAC,GAAD,OAEJ,yBAAKsL,UAAU,qCACX,0BAAMA,UAAU,yBAAyB5W,EAAE,sBAGnD,yBAAK4W,UAAU,wBACX,yBAAKA,UAAU,wBACX,kBAACsvB,GAAA,EAAD,CACItvB,UAAU,sBACVmiD,UAAMrtC,EACNya,QAAM,EACNh7B,QAASpZ,KAAKymE,kBACd,kBAACnkB,GAAA,EAAD,CAAcz9B,UAAU,2BACpB,kBAACoiD,GAAD,OAEJ,kBAAC1kB,GAAA,EAAD,CACI9oD,GAAG,UACHorB,UAAU,0BACV29B,QAASv0C,EAAE,gBACX20D,UAAWmE,KAGnB,kBAAC5yB,GAAA,EAAD,CACItvB,UAAU,sBACVmiD,UAAMrtC,EACNya,QAAM,EACNh7B,QAASpZ,KAAK0mE,oBACd,kBAACpkB,GAAA,EAAD,CAAcz9B,UAAU,2BACpB,kBAACqiD,GAAD,OAEJ,kBAAC3kB,GAAA,EAAD,CACI9oD,GAAG,UACHorB,UAAU,0BACV29B,QAASv0C,EAAE,iBACX20D,UAAWkE,MAIvB,yBAAKjiD,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgB5W,EAAE,iBAClB,kBAACkmC,GAAA,EAAD,CAAUtvB,UAAU,sBAAsBmiD,UAAMrtC,EAAWya,QAAM,GAC7D,kBAACmO,GAAA,EAAD,CACI19B,UAAU,2BACV29B,QAASv0C,EAAE,qBACX20D,UAAW30D,EAAE,uBAGrB,kBAACkmC,GAAA,EAAD,CAAUtvB,UAAU,sBAAsBmiD,UAAMrtC,EAAWya,QAAM,GAC7D,kBAACmO,GAAA,EAAD,CACI19B,UAAU,2BACV29B,QAASv0C,EAAE,iBACX20D,UAAW30D,EAAE,wBAGrB,kBAACkmC,GAAA,EAAD,CAAUtvB,UAAU,sBAAsBmiD,UAAMrtC,EAAWya,QAAM,GAC7D,kBAACmO,GAAA,EAAD,CACI19B,UAAU,2BACV29B,QAASv0C,EAAE,4BACX20D,UAAW30D,EAAE,wBAGrB,kBAACkmC,GAAA,EAAD,CAAUtvB,UAAU,sBAAsBmiD,UAAMrtC,EAAWya,QAAM,GAC7D,kBAACmO,GAAA,EAAD,CACI19B,UAAU,2BACV29B,QAASv0C,EAAE,wBACX20D,UAAW30D,EAAE,wBAGrB,kBAACkmC,GAAA,EAAD,CAAUtvB,UAAU,sBAAsBmiD,UAAMrtC,EAAWya,QAAM,GAC7D,kBAACmO,GAAA,EAAD,CACI19B,UAAU,2BACV29B,QAASv0C,EAAE,eACX20D,UAAW30D,EAAE,0BAK7B,kBAAC,GAAD,CAAarN,KAAM6lE,EAAkBltD,QAASvZ,KAAK6mE,mBAC/C,kBAAC,GAAD,CAAct/D,MAAOA,KAEzB,kBAAC,GAAD,CAAa3G,KAAM8lE,EAAoBntD,QAASvZ,KAAK4mE,qBACjD,kBAAC,GAAD,CAAgBtB,SAAUA,U,GAhMhBprD,IAAMC,WAiNrB+kC,GANCC,YACZmH,cACAjsC,cACAksC,cAGWrH,CAAQsnB,ICnNjBW,I,mBACF,WAAY3uD,GAAQ,IAAD,8BACf,4CAAMA,KA8BV4uD,gBAAkB,WACd,EAAKtuD,SAAS,CACVsuD,iBAAiB,KAjCN,EAqCnBC,iBAAmB,WACf,EAAKvuD,SAAS,CACVsuD,iBAAiB,KAvCN,EA2CnBE,YAAc,WACV,EAAKxuD,SAAS,CACVwuD,aAAa,KA7CF,EAiDnBC,aAAe,WACX,EAAKzuD,SAAS,CACVwuD,aAAa,KAnDF,EAuDnBE,kBAAoB,WAChB,EAAK1uD,SAAS,CACV0uD,mBAAmB,KAzDR,EA6DnBC,mBAAqB,WACjB,EAAK3uD,SAAS,CACV0uD,mBAAmB,KA/DR,EAmEnBE,oBAAsB,WAClB,EAAK5uD,SAAS,CACV4uD,qBAAqB,KArEV,EAyEnBC,qBAAuB,WACnB,EAAK7uD,SAAS,CACV4uD,qBAAqB,KA3EV,EA+EnBE,aAAe,WACX,EAAK9uD,SAAS,CACV8uD,cAAc,KAjFH,EAqFnBC,cAAgB,WACZ,EAAK/uD,SAAS,CACV8uD,cAAc,KAvFH,EA2FnBE,oBAAsB,WAClB9uE,KAAgB8G,aAAa,CACzB,QAAS,uBACTc,MAAM,KA3FV,EAAKsY,MAAQ,CACTkuD,iBAAiB,EACjBE,aAAa,EACbE,mBAAmB,EACnBE,qBAAqB,EACrBE,cAAc,GARH,E,iFAaf5nE,KAAK8zB,gB,6JAIGn3B,EAAWqD,KAAKwY,MAAhB7b,OAEFlF,EAAQuM,IAAUhK,WAExB2Q,YAAiBlT,EAAO,CAACkF,I,SAEJ3D,KAAgBmI,KAAK,CACtC,QAAS,kBACTgE,QAASC,IAAUmR,Y,OAFjBzV,E,OAKNsE,IAAUiyB,YAAYjyB,IAAUmR,UAAWzV,G,mIAsErC,IACEnE,EAAWqD,KAAKwY,MAAhB7b,OADH,EAE0FqD,KAAKkZ,MAA5FkuD,EAFH,EAEGA,gBAAiBE,EAFpB,EAEoBA,YAAaE,EAFjC,EAEiCA,kBAAmBE,EAFpD,EAEoDA,oBAAqBE,EAFzE,EAEyEA,aAE9E,OACI,oCACI,kBAAC,GAAD,CACIjrE,OAAQA,EACR4c,QAASvZ,KAAK8nE,oBACd/H,cAAe//D,KAAKonE,gBACpBpH,UAAWhgE,KAAKsnE,YAChBrH,gBAAiBjgE,KAAKwnE,kBACtBtH,kBAAmBlgE,KAAK0nE,oBACxBvH,WAAYngE,KAAK4nE,eAErB,kBAAC,GAAD,CAAahnE,KAAMwmE,EAAiB7tD,QAASvZ,KAAKqnE,kBAC9C,kBAAC,GAAD,CAAa1qE,OAAQA,KAEzB,kBAAC,GAAD,CAAaiE,KAAM0mE,EAAa/tD,QAASvZ,KAAKunE,cAC1C,kBAAC,GAAD,CAAS5qE,OAAQA,KAErB,kBAAC,GAAD,CAAaiE,KAAM4mE,EAAmBjuD,QAASvZ,KAAKynE,oBAChD,kBAAC,GAAD,CAAe9qE,OAAQA,KAE3B,kBAAC,GAAD,CAAaiE,KAAM8mE,EAAqBnuD,QAASvZ,KAAK2nE,sBAClD,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAa/mE,KAAMgnE,EAAcruD,QAASvZ,KAAK6nE,eAC3C,kBAAC,GAAD,Y,GA/HG3tD,IAAMC,YAgJd+kC,GANCC,YACZmH,cACAjsC,cACAksC,cAGWrH,CAAQioB,I,SCvIRxP,GADC,I,qIAxBD9lD,G,yEACDjB,EAAQ6b,aAAaC,QAAQ7a,G,yCAChB,M,yCAGRtD,KAAKC,MAAMoC,I,yDAEX,M,iLAIJiB,EAAKjB,G,gEACZ6b,aAAaK,QAAQjb,EAAKtD,KAAKwe,UAAUnc,I,uKAGhCiB,G,gEACT4a,aAAas7C,WAAWl2D,G,sOAIxB4a,aAAau7C,Q,uGCyOfvwE,GAAQ,I,YAjPV,aAAe,IAAD,8BACV,+CASJC,MAAQ,WACJ,EAAK6jD,QAAU,GACf,EAAK0sB,MAAQ,KACb,EAAKC,SAAW,MAbN,EAgBd5vE,SAAW,SAAAC,GACP,OAAQA,EAAO,UACX,IAAK,2BAA6B,IACtBa,EAAwBb,EAAxBa,oBACR,IAAKA,EAAqB,MAE1B,OAAQA,EAAoB,UACxB,IAAK,2BACD,EAAK1B,QACL,MAEJ,IAAK,+BACL,IAAK,6BACL,IAAK,oCACL,IAAK,iCACL,IAAK,qCACDywE,GAAajK,OAAO,SACpBiK,GAAajK,OAAO,SACpBiK,GAAajK,OAAO,eAlC1B,EA8CdplE,eAAiB,SAAAP,GACb,OAAQA,EAAO,UACX,IAAK,2BACD,EAAKyvE,UAjDH,EAwDdjvE,iBAAmB,WACfC,KAAgBC,GAAG,SAAU,EAAKX,UAClCU,KAAgBC,GAAG,eAAgB,EAAKH,iBA1D9B,EA6DdI,oBAAsB,WAClBF,KAAgBG,IAAI,SAAU,EAAKb,UACnCU,KAAgBG,IAAI,eAAgB,EAAKL,iBA5DzC,EAAKpB,QAEL,EAAKqB,mBAEL,EAAKqvE,kBAAoBjmB,aAAS,EAAKimB,kBAAmB,KAPhD,E,sMAoEJrtB,EAAW,IACR76C,KAAKioE,GAAa37B,KAAK,SAASpsC,MAAM,SAAAlF,GAAK,OAAI,QACxD6/C,EAAS76C,KAAKioE,GAAa37B,KAAK,SAASpsC,MAAM,SAAAlF,GAAK,OAAI,Q,SAC3BoF,QAAQo5C,IAAIqB,G,sCAAlCktB,E,KAAOI,E,KACdroE,KAAKioE,MAAQA,EACTjoE,KAAKioE,QACLjoE,KAAKioE,MAAMI,MAAQA,GAAS,IAG3BroE,KAAKioE,M,0CAAc,M,eAExBjoE,KAAKsoE,WAAWtoE,KAAKioE,O,kBAEdjoE,KAAKioE,O,sIAGLA,GACP,GAAKA,EAAL,CADc,IAGN5sB,EAAyE4sB,EAAzE5sB,MAAOktB,EAAkEN,EAAlEM,aAAchhE,EAAoD0gE,EAApD1gE,MAAOihE,EAA6CP,EAA7CO,YAAaC,EAAgCR,EAAhCQ,YAAaJ,EAAmBJ,EAAnBI,MAAO7kD,EAAYykD,EAAZzkD,QACrEvoB,QAAQoF,IAAI,qBAAsB4nE,IAEjCI,GAAS,IACLvmE,OAAO,SAAAD,GAAC,OAAI4V,QAAQ5V,KACpB5H,QAAQ,YAAkB,IAAfR,EAAc,EAAdA,GAAIiG,EAAU,EAAVA,IACZsE,IAAU1E,WAAW7F,EAAIiG,MAGhC6H,GAAS,IAAItN,QAAQ,SAAA4H,GAClBuD,IAAU1M,IAAImJ,MAGjB2mE,GAAe,IAAIvuE,QAAQ,SAAA4H,GACxBiS,KAAgBpb,IAAImJ,MAGvB4mE,GAAe,IAAIxuE,QAAQ,SAAA4H,GACxB4S,KAAgB/b,IAAImJ,MAGvBw5C,GAAS,IAAIn/B,OAAOqsD,GAAgB,IAAItuE,QAAQ,SAAA4H,UACtCA,EAAE6mE,oBAET3+D,IAAUrR,IAAImJ,GACVA,EAAE7F,QACE6F,EAAE7F,MAAMkO,OAAOlG,IAAUtL,IAAImJ,EAAE7F,MAAMkO,OACrCrI,EAAE7F,MAAMmO,KAAKnG,IAAUtL,IAAImJ,EAAE7F,MAAMmO,MAEvCtI,EAAEiN,WACF/E,IAAU4+D,mBAAmB9mE,EAAEpI,GAAIoI,EAAEiN,WAErCjN,EAAE8P,cACF9N,KAAanL,IAAImJ,EAAE8P,iBAI1B6R,GAAW,IAAIvpB,QAAQ,YAAmB,IAAD,mBAAhBR,EAAgB,KAAZkuC,EAAY,KACtC8S,IAAY/hD,IAAIe,EAAIkuC,Q,+BAInB4T,EAASqtB,GACd,IAAMC,EAAU,IAAI7wE,IACd8wE,EAAU,IAAI9wE,IACd+wE,EAAgB,IAAI/wE,IACpBgxE,EAAgB,IAAIhxE,IACpBqjD,EAAQE,EAAQ33C,IAAI,SAAA/B,GAAC,OAAIkI,IAAUjQ,IAAI+H,KACvC0mE,EAAeK,EAAehlE,IAAI,SAAA/B,GAAC,OAAIkI,IAAUjQ,IAAI+H,KA8C3D,OA7CAw5C,EAAMn/B,OAAOqsD,GAActuE,QAAQ,SAAA4H,GAAM,IAC7B7F,EAA8B6F,EAA9B7F,MAAOwM,EAAuB3G,EAAvB2G,KAAMmJ,EAAiB9P,EAAjB8P,aACrB,GAAI3V,GAASA,EAAMkO,MAAO,CAAC,IACfzQ,EAAOuC,EAAMkO,MAAbzQ,GACR,GAAIA,EAAI,CACJ,IAAMyF,EAAO8E,IAAUhF,QAAQvF,GAC3ByF,GACA2pE,EAAQnwE,IAAIe,EAAIyF,IAK5B,OAAQsJ,EAAK,UACT,IAAK,qBACD,IAAMqL,EAAaC,KAAgBha,IAAI0O,EAAKuL,gBACxCF,GACAk1D,EAAcrwE,IAAImb,EAAWpa,GAAIoa,GAGzC,IAAK,kBACL,IAAK,iBACD,IAAMnY,EAAO0J,IAAUtL,IAAI0O,EAAKrD,SAC5BzJ,GACAotE,EAAQpwE,IAAIgD,EAAKjC,GAAIiC,GAG7B,IAAK,qBACD,IAAM8Y,EAAaC,KAAgB3a,IAAI0O,EAAKkM,eACxCF,GACAw0D,EAActwE,IAAI8b,EAAW/a,GAAI+a,GAK7C,GAAI7C,EAAc,CAAC,IACPlK,EAAmBkK,EAAnBlK,eACR,GAAIA,EAAgB,CAChB,IAAM/L,EAAO0J,IAAUtL,IAAI2N,GACvB/L,GACAotE,EAAQpwE,IAAIgD,EAAKjC,GAAIiC,OAM9B,CACH2/C,QACAktB,eACAhhE,MAAM,aAAKuhE,EAAQp4D,UACnB83D,YAAY,aAAKO,EAAcr4D,UAC/B+3D,YAAY,aAAKO,EAAct4D,UAC/B23D,MAAM,aAAKQ,EAAQI,WACnBzlD,QAAQ,aAAKi3B,IAAYxiD,MAAMgxE,c,gCAI7B1tB,EAASqtB,GACf5oE,KAAKu7C,QAAUA,EACfv7C,KAAK4oE,eAAiBA,EACtB5oE,KAAKooE,sB,qKAKCH,EAAQjoE,KAAKkpE,SAASlpE,KAAKu7C,QAASv7C,KAAK4oE,gBACzCP,EAAQJ,EAAMI,MACpBJ,EAAMI,MAAQ,G,SAERF,GAAav6B,KAAK,QAASq6B,G,cAE3BltB,EAAW,GACjBstB,EAAMpuE,QAAQ,SAAA4H,GAAM,IAAD,cACIA,EADJ,GACRpI,EADQ,KACJyF,EADI,KAEf67C,EAAS76C,KACL,IAAII,QAAQ,SAACC,EAASC,GAClB,IAAM4N,EAAa,IAAIC,WACvBD,EAAW+6D,cAAcjqE,GACzBkP,EAAWE,OAAS,SAAAyS,GAChBxgB,EAAQ,CAAE9G,KAAIiG,IAAKqhB,EAAErf,OAAOZ,UAEhCsN,EAAWrN,QAAU,SAAAggB,GACjBxgB,EAAQ,Y,SAMFD,QAAQo5C,IAAIqB,G,cAA5B1F,E,iBAEA8yB,GAAav6B,KAAK,QAASyH,G,mIAI7Br1C,KAAKioE,OACajoE,KAAKioE,MAAfI,MAGHvmE,OAAO,SAAAD,GAAC,OAAI4V,QAAQ5V,KACpB5H,QAAQ,YAAkB,IAAfR,EAAc,EAAdA,GAAc,EAAViG,IACZsE,IAAUxE,cAAc/F,S,GA5OnB0I,OAmPzBzB,OAAOunE,MAAQxwE,GACAA,UC/OT2xE,I,qMACoB/5C,EAAWC,EAAW4F,GAAc,IAAD,EAC3Bl1B,KAAKwY,MAAvBtW,EAD6C,EAC7CA,OAAQa,EADqC,EACrCA,MAChB,OAAIssB,EAAUntB,SAAWA,GAIrBmtB,EAAUtsB,MAAMouC,MAAQpuC,EAAMouC,M,+BAO5B,IAAD,EAC8BnxC,KAAKwY,MAAhCtW,EADH,EACGA,OAAQkX,EADX,EACWA,QAASrW,EADpB,EACoBA,MAEzB,OACI,kBAACoxC,GAAA,EAAD,CAAUtvB,UAAU,iBAAiBzL,QAAS,kBAAMA,EAAQlX,IAASkyC,QAAM,EAACrxC,MAAOA,GAC/E,kBAAC,KAAD,CAAMb,OAAQA,S,GAnBHgY,IAAMC,YAyLlBkvD,G,YA/JX,WAAY7wD,GAAQ,IAAD,8BACf,4CAAMA,KAwBV4xC,aAAe,SAAA3oD,GACX,EAAK6nE,uBACL,EAAKC,wBA3BU,EAsCnBC,qBAAuB,WAAO,IAAD,EACM,EAAKtwD,MAA5BjhB,EADiB,EACjBA,MAAO2yD,EADU,EACVA,YAET6e,EAAe7e,GAAe3yD,EAE5B+kB,GAAYysD,IAAiB7e,EAAc,EAAKJ,cAAgB,EAAKH,SAArErtC,QACR,GAAKA,EAAL,CAEA,IAAMk3C,EAAYl3C,EAAQ0sD,mBAC1B,GAAIxV,EAAU7xD,KAAO,EAAG,CACpB,IAAMsnE,EAAU,GAChB,aAAIzV,EAAUrsD,QAAQ5N,QAAQ,SAAA4X,GAC1B83D,EAAQzpE,KAAKupE,EAAav0B,SAASrjC,MAGvC,IAAMpa,EAAQuM,IAAUhK,WACxB4N,YAAiBnQ,EAAOkyE,MAtDb,EA4EnB/kB,eAAiB,SAAA1iD,GACb2W,YAAS3W,GAAQ,GACjB,EAAK8W,eA9EU,EAiFnBy7C,WAAa,WAAmBx8D,GAAW,IAA3BsR,EAA0B,EAA1BA,MAAOxG,EAAmB,EAAnBA,MACbb,EAASjK,EAAMi9C,SAAS3rC,GAE9B,OAAO,kBAAC,GAAD,CAAcsI,IAAK3P,EAAQA,OAAQA,EAAQkX,QAAS,kBAAM,EAAKwrC,eAAe1iD,IAASa,MAAOA,KApFtF,EAuFnBmlD,aAvFmB,sCAuFJ,WAAMj7C,GAAN,mBAAAzU,EAAA,wDACL2zB,EAAQlf,EAAK2Z,OADR,uBAGP,EAAK9N,SAAS,CACV8xC,YAAa,OAJV,0CASe5xD,KAAgBmI,KAAK,CAC3C,QAAS,iBACTgrB,QACAE,MAAO,MAZA,QASLu+B,EATK,QAcC1V,SAAW0V,EAAY1V,SAASvzB,KAAK,SAAC9f,EAAGs4B,GAAJ,OAC7C5oB,YAAgB1P,GAAG+nE,cAAcr4D,YAAgB4oB,MAG/C1iC,EAAQuM,IAAUhK,WACxB4N,YAAiBnQ,EAAOmzD,EAAY1V,SAASxjB,MAAM,EAAG,KAEtD,EAAK5Y,SAAS,CAAE8xC,gBArBL,0CAvFI,wDA+GnB5xC,YAAc,WAAO,IACTO,EAAY,EAAKf,MAAjBe,QAEJA,GAASA,KA/Gb,EAAK4uC,eAAiBjuC,IAAM0a,YAC5B,EAAKy1B,QAAUnwC,IAAM0a,YACrB,EAAK41B,cAAgBtwC,IAAM0a,YAE3B,EAAK1b,MAAQ,CACTjhB,MAAO,KACP2yD,YAAa,MAGjB,EAAK0e,qBAAuBnnB,aAAS,EAAKmnB,qBAAsB,KAAK,GACrE,EAAKC,qBAAuBM,aAAS,EAAKN,qBAAsB,KAAK,GAbtD,E,iFAgBE,IACTvsD,EAAYhd,KAAKmoD,eAAjBnrC,QACJA,GACA+T,WAAW,kBAAM/T,EAAQi9B,SAAS,IAGtCj6C,KAAK8zB,gB,6CASL9zB,KAAKwpE,yB,6CAILxpE,KAAKwpE,yB,uJAwBDtB,EAAW4B,GAAW5B,S,gCAELlvE,KAAgBmI,KAAK,CAClC,QAAS,gB,QADb+mE,E,QAGShzB,SAAWgzB,EAAShzB,SAASvzB,KAAK,SAAC9f,EAAGs4B,GAAJ,OAAU5oB,YAAgB1P,GAAG+nE,cAAcr4D,YAAgB4oB,MACtG2vC,GAAW5B,SAAWA,E,OAGpBzwE,EAAQuM,IAAUhK,WACxB4N,YAAiBnQ,EAAOywE,EAAShzB,SAASxjB,MAAM,EAAG,KAEnD1xB,KAAK8Y,SAAS,CACV7gB,MAAOiwE,I,oIA6CL,IAAD,SAC0BloE,KAAKkZ,MAA5BjhB,EADH,EACGA,MAAO2yD,EADV,EACUA,YAEf,OACI,oCACI,yBAAK/lC,UAAU,iBACX,kBAACE,EAAA,EAAD,CAAYF,UAAU,qBAAqBzL,QAASpZ,KAAKgZ,aACrD,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAawkD,SAAUx9D,KAAKmoD,eAAgBzc,SAAU1rC,KAAKkoD,gBAE/D,yBAAKrjC,UAAU,oBACV5sB,GACG,kBAAC,GAAD,CACI+9B,IAAKh2B,KAAKqqD,QACVxlC,UAAU,gBACV9nB,OAAQ9E,EAAMi9C,SACdmf,UAAW,GACXE,cAAe,GACfE,WAAY,SAAA5yD,GAAC,OAAI,EAAK4yD,WAAW5yD,EAAG5J,IACpCmzD,SAAUprD,KAAKoqD,eAGtBQ,GACG,kBAAC,GAAD,CACI50B,IAAKh2B,KAAKwqD,cACV3lC,UAAU,qCACV9nB,OAAQ6tD,EAAY1V,SACpBmf,UAAW,GACXE,cAAe,GACfE,WAAY,SAAA5yD,GAAC,OAAI,EAAK4yD,WAAW5yD,EAAG+oD,IACpCQ,SAAUprD,KAAKoqD,qB,GArJpBlwC,IAAMC,WCpCvB4vD,I,mBACF,WAAYvxD,GAAQ,IAAD,8BACf,4CAAMA,KAeVwxD,kCAAoC,WAChC,EAAKlxD,SAAS,CAAEmxD,qBAAqB,KAjBtB,EAoBnBC,aAAe,WACP,EAAKC,UAET,EAAKA,SAAU,EACfp5C,WAAW,WACPrwB,OAAOvE,SAASiuE,UACjB,OAvBH,EAAKlxD,MAAQ,CACT+wD,qBAAqB,GAJV,E,iFASfhvD,KAAShiB,GAAG,kCAAmC+G,KAAKgqE,qC,6CAIpD/uD,KAAS9hB,IAAI,kCAAmC6G,KAAKgqE,qC,+BAgB/C,IACEC,EAAwBjqE,KAAKkZ,MAA7B+wD,oBACAh8D,EAAMjO,KAAKwY,MAAXvK,EAER,OAAKg8D,EAKD,kBAAClwD,EAAA,EAAD,CAAQ8K,UAAU,gBAAgBqM,QAAQ,YAAYlM,MAAM,UAAU5L,QAASpZ,KAAKkqE,cAC/Ej8D,EAAE,WALA,S,GAnCOiM,IAAMC,YA8CjBE,iBAAkB0vD,IClD1B,SAASM,KACZ,IAAMC,EAAUvgE,IAAUy2C,SAAS1mD,IAAI,mBACjCuhD,EAAQ,GACRkvB,EAAa,GACnB,GAAID,EAAS,CAAC,IAAD,uBACT,YAAqBA,EAAQziE,OAA7B,+CAAqC,CAAC,IAA3BlL,EAA0B,QAC3BtB,EAAO0O,IAAUjQ,IAAI6C,GACvBtB,IACmB,MAAfA,EAAK+6D,OAAe/a,EAAMn7C,KAAK7E,GACnCkvE,EAAWrqE,KAAK,CAAEk2D,MAAO/6D,EAAK+6D,MAAO38D,GAAI4B,EAAK5B,GAAIuU,MAAO3S,EAAK2S,UAL7D,mFAYb,OAFqBqtC,EAAM15B,KAAK,SAACnpB,EAAGqU,GAAJ,OAAUkqD,aAAalqD,EAAEupD,MAAO59D,EAAE49D,SAE9CxyD,IAAI,SAAA/B,GAAC,OAAIA,EAAEmM,QAAOkU,KAAK,M,qBC4ahCsoD,G,YAxaX,WAAYhyD,GAAQ,IAAD,uBACf,4CAAMA,KAoKV29C,kBAAoB,SAAA59D,GAAW,IACnBqE,EAAYrE,EAAZqE,QAES6tE,EAAgB,EAAKC,cAA9B1tD,QACR,IAAIytD,IAAeA,EAAY9gB,QAA/B,CAJ0B,IAQTghB,EAAmB,EAAKC,eAAjC5tD,QACR,IAAI2tD,IAAkBA,EAAehhB,QAArC,CAIA,IAAM2gB,EAAUvgE,IAAUy2C,SAAS1mD,IAAI,mBACnCwwE,GAAWA,EAAQ1wE,IAAIgD,IACvB,EAAKkc,SAAS,CAAE89C,aAAcyT,UApLnB,EAwLnBQ,qBAAuB,SAAAtyE,GAAW,IACTuyE,EAAoB,EAAK5xD,MAAtCy9C,YAES8T,EAAgB,EAAKC,cAA9B1tD,QACR,IAAIytD,IAAeA,EAAY9gB,QAA/B,CAJ6B,IAQZghB,EAAmB,EAAKC,eAAjC5tD,QACR,IAAI2tD,IAAkBA,EAAehhB,QAArC,CAIA,IAAMohB,EAAchhE,IAAUy2C,SAAS1mD,IAAI,mBACrC68D,EAAcoU,GAAeA,EAAY1oE,KAAO,EAEtD,EAAKyW,SAAS,CAAE69C,cAAaC,aAAcyT,MAAqB,WAC5D,IAAKS,GAAmBnU,EAAa,CAAC,IAC1B35C,EAAY,EAAK0tD,cAAjB1tD,QACR,GAAIA,EAAQqtC,QAAS,CAAC,IACD2gB,EAAgBhuD,EAAQqtC,QAAjCrtC,QACJguD,GAAeA,EAAYxmB,UAAY,IACvCxnC,EAAQwnC,WAAa,QAMjCsmB,IAAoBnU,GACpB39D,KAAgB8G,aAAa,CACzB,QAAS,gCAtNF,EA2NnBmrE,uBA3NmB,sCA2NM,WAAM1yE,GAAN,eAAAC,EAAA,qDACboI,EAASrI,EAATqI,KAER,EAAKkY,SAAS,CAAEoyD,aAActqE,IAHT,yCA3NN,wDAiOnBuqE,uBAAyB,SAAA5yE,GAAW,IACxBqI,EAAiBrI,EAAjBqI,KAAMjE,EAAWpE,EAAXoE,OAEd,EAAKmc,SAAS,CAAEsyD,aAAcxqE,EAAMyqE,SAAU1uE,KApO/B,EAuOnB2uE,sBAAwB,SAAA/yE,GAAW,IACvBqI,EAASrI,EAATqI,KAER,EAAKkY,SAAS,CAAE03C,YAAa5vD,KA1Od,EA6OnB2qE,0BAA4B,SAAAhzE,GACxB,EAAKw7B,eA9OU,EAiPnBy3C,oCAAsC,SAAAjzE,GAAW,IACrCkzE,EAAyBxwD,KAAzBwwD,qBAER,EAAK3yD,SAAS,CAAE2yD,0BApPD,EAuPnBC,yBAA2B,SAAAnzE,GAAW,IAC1BoE,EAAkBpE,EAAlBoE,OAAQwvB,EAAU5zB,EAAV4zB,MADiB,EAEgB,EAAKjT,MAA9CovC,EAFyB,EAEzBA,WAAYqjB,EAFa,EAEbA,aAAcluB,EAFD,EAECA,WAElC,IAAI6K,GAAc3rD,IAAWgvE,GAAgBx/C,IAAUsxB,EAAvD,CAIA,IAAMrwC,EAAS,EAAKw+D,iBAAiB5uD,QACrC,EAAKlE,SACD,CACIwvC,YAAY,EACZqjB,aAAchvE,EACd8gD,WAAY,KACZ2tB,cAAc,EACd1E,oBAAoB,EACpBwE,cAAc,GAElB,WACQ99D,GACAA,EAAOy+D,aAAa1/C,OA3QjB,EAiRnBm4B,kBAAoB,WACQ,EAAKprC,MAArBs3C,YAEJx3D,KAAgB8G,aAAa,CACzB,QAAS,6BAGb,EAAK4qE,cAAc1tD,QAAQ8uD,eAxRhB,EA4RnB5jB,aAAe,SAAA6jB,GACX,EAAKjzD,SAAS,CACVwvC,WAAYyjB,EACZJ,aAAc,EACdluB,WAAY,QAhSD,EAoSnB4c,oBAAsB,SAAC19D,EAAQE,EAAWyrD,GACtCvvC,YAASpc,EAAQE,GAEjB,IAAM8uE,EAAerjB,EAAa,EAAKpvC,MAAMyyD,aAAe,EACtDluB,EAAa6K,EAAa,EAAKpvC,MAAMukC,WAAa,KAExD,EAAK3kC,SAAS,CACVwvC,WAAYA,EACZqjB,aAAcA,EACdluB,WAAYA,KA7SD,EAiTnBqN,kBAAoB,WAChB,EAAKhyC,SAAS,CACVwvC,YAAY,EACZqjB,aAAc,EACdluB,WAAY,QArTD,EAyTnBmgB,uBAAyB,SAAA3wD,GACrB,EAAK6L,SAAS,CACV2kC,WAAYxwC,EACZkf,MAAO,QA5TI,EAgUnB6/C,gBAAkB,WACd,EAAK/V,aAjUU,EAyUnBgW,mBAAqB,WACjB,EAAKnzD,SAAS,CAAE03C,aAAa,KA1Ud,EA6UnB0b,oBAAsB,WAClB,EAAKpzD,SAAS,CAAEoyD,cAAc,KA9Uf,EAiVnBpD,oBAAsB,WAClB,EAAKhvD,SAAS,CAAEsyD,cAAc,KA/U9B,EAAKV,cAAgBxwD,IAAM0a,YAC3B,EAAKg2C,eAAiB1wD,IAAM0a,YAC5B,EAAKg3C,iBAAmB1xD,IAAM0a,YALf,IAOP62C,EAAyBxwD,KAAzBwwD,qBAPO,OASf,EAAKvyD,MAAQ,CACT+uD,MAAO,KAEPtR,aAAa,EACbC,aAAc,KAEduV,UAAW,GACXC,aAAc,GAEdX,uBACAnjB,YAAY,EACZkI,aAAa,EACb0a,cAAc,EACdE,cAAc,EAEdO,aAAc,EACdluB,WAAY,KACZtxB,MAAO,MA1BI,E,mFA8BGkD,EAAWC,GAAY,IAAD,EAcpCtvB,KAAKkZ,MAZL+uD,EAFoC,EAEpCA,MACAtR,EAHoC,EAGpCA,YACAC,EAJoC,EAIpCA,aACAuV,EALoC,EAKpCA,UACAC,EANoC,EAMpCA,aACAX,EAPoC,EAOpCA,qBACAnjB,EARoC,EAQpCA,WACAkI,EAToC,EASpCA,YACA4a,EAVoC,EAUpCA,aACAF,EAXoC,EAWpCA,aACAS,EAZoC,EAYpCA,aACAluB,EAboC,EAapCA,WAGJ,OAAInuB,EAAU24C,QAAUA,IAIpB34C,EAAUqnC,cAAgBA,IAI1BrnC,EAAUsnC,eAAiBA,IAI3BtnC,EAAU88C,eAAiBA,IAI3B98C,EAAU68C,YAAcA,IAIxB78C,EAAUm8C,uBAAyBA,IAInCn8C,EAAUg5B,aAAeA,IAIzBh5B,EAAUkhC,cAAgBA,IAI1BlhC,EAAU87C,eAAiBA,IAI3B97C,EAAU47C,eAAiBA,IAI3B57C,EAAUq8C,eAAiBA,GAI3Br8C,EAAUmuB,aAAeA,c,0CAQ7Bz9C,KAAKqsE,YAELpxD,KAAShiB,GAAG,oCAAqC+G,KAAKwrE,qCACtDvwD,KAAShiB,GAAG,yBAA0B+G,KAAK0rE,0BAC3CzwD,KAAShiB,GAAG,0BAA2B+G,KAAKurE,2BAE5CxhE,IAAU9Q,GAAG,qBAAsB+G,KAAK6qE,sBAExC9gE,IAAU9Q,GAAG,yBAA0B+G,KAAKm2D,mBAC5CpsD,IAAU9Q,GAAG,qBAAsB+G,KAAKm2D,mBACxCpsD,IAAU9Q,GAAG,wBAAyB+G,KAAKm2D,mBAC3CpsD,IAAU9Q,GAAG,wBAAyB+G,KAAKm2D,mBAC3CpsD,IAAU9Q,GAAG,kBAAmB+G,KAAKm2D,mBAErCpsD,IAAU9Q,GAAG,uBAAwB+G,KAAKmrE,wBAC1CphE,IAAU9Q,GAAG,sBAAuB+G,KAAKsrE,uBACzCvhE,IAAU9Q,GAAG,uBAAwB+G,KAAKirE,0B,6CAI1ChwD,KAAS9hB,IAAI,oCAAqC6G,KAAKwrE,qCACvDvwD,KAAS9hB,IAAI,yBAA0B6G,KAAK0rE,0BAC5CzwD,KAAS9hB,IAAI,0BAA2B6G,KAAKurE,2BAE7CxhE,IAAU5Q,IAAI,qBAAsB6G,KAAK6qE,sBAEzC9gE,IAAU5Q,IAAI,yBAA0B6G,KAAKm2D,mBAC7CpsD,IAAU5Q,IAAI,qBAAsB6G,KAAKm2D,mBACzCpsD,IAAU5Q,IAAI,wBAAyB6G,KAAKm2D,mBAC5CpsD,IAAU5Q,IAAI,wBAAyB6G,KAAKm2D,mBAC5CpsD,IAAU5Q,IAAI,kBAAmB6G,KAAKm2D,mBAEtCpsD,IAAU5Q,IAAI,uBAAwB6G,KAAKmrE,wBAC3CphE,IAAU5Q,IAAI,sBAAuB6G,KAAKsrE,uBAC1CvhE,IAAU5Q,IAAI,uBAAwB6G,KAAKirE,0B,oKAItBnB,GAAWuC,Y,gDAAgB,G,OAA1CpE,E,KAEE5sB,EAAwB4sB,EAAxB5sB,MAAOktB,EAAiBN,EAAjBM,aAEfvoE,KAAK8Y,SAAS,CACVmvD,QAEAtR,YAAa4R,GAAgBA,EAAatqE,OAAS,EACnD24D,aAAcyT,OAGlBrqE,KAAKikD,kBAAkB5I,GAAS,IAAIz3C,IAAI,SAAA/B,GAAC,OAAIA,EAAEpI,MAE/CT,KAAgB8G,aAAa,CACzB,QAAS,4B,uIAIJ,IACQ6qE,EAAmB3qE,KAAK4qE,eAAjC5tD,QACF4rD,EACF+B,GAAkBA,EAAezxD,MAAMmiC,MAAQsvB,EAAezxD,MAAMmiC,MAAM3pB,MAAM,EAAG,IAAM,GAE5E+4C,EAAgBzqE,KAAK0qE,cAA9B1tD,QACFsvD,EAAc7B,GAAeA,EAAYvxD,MAAMmiC,MAAQovB,EAAYvxD,MAAMmiC,MAAM3pB,MAAM,EAAG,IAAM,GAEpGo4C,GAAWyC,UAAUD,EAAa1D,K,uCAkKrBrtB,GACb,IAAM9jD,EAAQuM,IAAUhK,WACxB2Q,YAAiBlT,EAAO8jD,K,+BAelB,IAAD,EAeDv7C,KAAKkZ,MAbL+uD,EAFC,EAEDA,MACAtR,EAHC,EAGDA,YACAC,EAJC,EAIDA,aACAuV,EALC,EAKDA,UACAC,EANC,EAMDA,aACAX,EAPC,EAODA,qBACAJ,EARC,EAQDA,SACAD,EATC,EASDA,aACAF,EAVC,EAUDA,aACA1a,EAXC,EAWDA,YACAlI,EAZC,EAYDA,WACAqjB,EAbC,EAaDA,aACAluB,EAdC,EAcDA,WAGE+uB,EAAiBvE,EAAQA,EAAM5sB,OAAS,GAAK,KAC7CoxB,EAAoBxE,EAAQA,EAAMM,cAAgB,GAAK,KAE7D,OACI,oCACI,yBACI1jD,UAAWC,IAAW,UAAW,CAC7B,uBAAwB2mD,KAE5B,yBAAK5mD,UAAU,gBACX,kBAAC,GAAD,CACImR,IAAKh2B,KAAK4rE,iBACVtjB,WAAYA,EACZlvC,QAASpZ,KAAKskD,kBACd8D,SAAUpoD,KAAKkoD,aACf2V,mBAAoB79D,KAAK49D,yBAE7B,yBAAK/4C,UAAU,mBACX,kBAAC,GAAD,CACIrc,KAAK,eACLwtB,IAAKh2B,KAAK0qE,cACV7T,WAAY2V,EACZv0E,MAAOk0E,EACPxV,YAAaA,EACbC,aAAcA,EACdh2D,MAAM,EACNs1D,YAAal2D,KAAKgsE,kBAEtB,kBAACU,GAAA,EAAD,CACI5nD,WAAW,SACX4+B,QAAS,IACTD,GAAI6E,EACJ+V,cAAc,EACd1a,eAAe,GACf,kBAAC,GAAD,CACIhnD,OAAQgvE,EACR1+D,KAAMwwC,EACN+c,gBAAiBx6D,KAAKq6D,oBACtB9gD,QAASvZ,KAAK8qD,sBAI1B,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAalqD,KAAM4vD,EAAaj3C,QAASvZ,KAAKisE,oBAC1C,kBAAC,GAAD,CACIxU,aAAcz3D,KAAK4qE,eACnB3yE,MAAOm0E,EACPvV,WAAY4V,KAIpB,kBAAC,GAAD,CAAa7rE,KAAMsqE,EAAc3xD,QAASvZ,KAAKksE,qBAC3C,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAatrE,KAAMwqE,EAAc7xD,QAASvZ,KAAK8nE,qBAC3C,kBAAC,GAAD,CAAUnrE,OAAQ0uE,W,GAjapBlxD,aCgDPwyD,I,kNA7DXzzD,MAAQ,CACJvc,OAAQk2B,KAAiBD,c,EAmB7BE,iCAAmC,SAAAv6B,GAC3Bs6B,KAAiBG,oBACjB,EAAKha,e,EAIb2Z,2BAA6B,SAAAp6B,GAAW,IAC5BoE,EAAWpE,EAAXoE,OAER,EAAKmc,SAAS,CAAEnc,Y,EAGpBqc,YAAc,WACVhgB,KAAgB8G,aAAa,CACzB,QAAS,2BACTnD,OAAQ,K,qFA/BM0yB,EAAWC,EAAW4F,GAAc,IAC9Cv4B,EAAWqD,KAAKkZ,MAAhBvc,OAER,OAAO2yB,EAAU3yB,SAAWA,I,0CAI5Bk2B,KAAiB55B,GAAG,2BAA4B+G,KAAK2yB,4BACrDE,KAAiB55B,GAAG,iCAAkC+G,KAAK8yB,oC,6CAI3DD,KAAiB15B,IAAI,2BAA4B6G,KAAK2yB,4BACtDE,KAAiB15B,IAAI,iCAAkC6G,KAAK8yB,oC,+BAsBtD,IACEn2B,EAAWqD,KAAKkZ,MAAhBvc,OACR,OAAKA,EAGD,kBAAC,IAAD,CACIiE,MAAI,EACJ0Y,mBAAoB,EACpBC,QAASvZ,KAAKgZ,YACdW,QAAS,CACLC,KAAM,wBACNo8B,UAAW,6BACXC,MAAO,2BAEX,kBAAC,GAAD,CAAUpxB,UAAU,2BAA2BloB,OAAQA,EAAQic,OAAK,KAZxD,S,GA1CCsB,IAAMC,Y,+BCJpBoQ,eACX,0BAAMnO,EAAE,+bACR,Q,UCHWmO,eACX,0BAAMnO,EAAE,6zBACR,QCFWmO,eACX,0BAAMnO,EAAE,uzCACR,U,qBCWEwwD,G,2MACF1zD,MAAQ,CACJ6iD,SAAU,M,EAGd8Q,gBAAkB,SAAAprE,GACd,EAAKqX,SAAS,CAAEijD,SAAUt6D,EAAMu6D,iB,EAGpCC,gBAAkB,WACd,EAAKnjD,SAAS,CAAEijD,SAAU,Q,EAG9B+Q,kBAAoB,WAChB,EAAK7Q,kBADiB,IAGd8Q,EAAkB,EAAKv0D,MAAvBu0D,cACHA,GAELh8C,WAAW,kBAAMg8C,KAAiB/7C,M,EAGtCg8C,qBAAuB,WACnB,EAAK/Q,kBADoB,IAGjBgR,EAAqB,EAAKz0D,MAA1By0D,iBACHA,GAELl8C,WAAW,kBAAMk8C,KAAoBj8C,M,EAGzCk8C,iBAAmB,WACf,EAAKjR,kBADgB,IAGbkR,EAAiB,EAAK30D,MAAtB20D,aACHA,GAELA,K,wEAGM,IAAD,EAC0BntE,KAAKwY,MAAnBvK,GADZ,EACG0L,QADH,EACY1L,GAAGtR,EADf,EACeA,OACZo/D,EAAa/7D,KAAKkZ,MAAlB6iD,SAER,OACI,oCACI,kBAACh3C,EAAA,EAAD,CACIF,UAAU,uBACVI,aAAW,SACXrkB,KAAM6W,QAAQskD,GACd3iD,QAASpZ,KAAK6sE,iBACd,kBAACO,GAAD,OAEJ,kBAACxQ,GAAA,EAAD,CACInjE,GAAG,cACHsiE,SAAUA,EACVn7D,KAAM6W,QAAQskD,GACdc,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrB1V,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,SAEhBhuC,QAASvZ,KAAKi8D,iBACd,kBAACvU,GAAA,EAAD,CAAUtuC,QAASpZ,KAAK8sE,kBAAmBn7B,UAAWx6B,YAAqBxa,IACvE,kBAAC2lD,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASv0C,EAAE,kBAE7B,kBAACy5C,GAAA,EAAD,CAAUtuC,QAASpZ,KAAKgtE,qBAAsBr7B,UAAWx6B,YAAqBxa,IAC1E,kBAAC2lD,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASv0C,EAAE,sBAE3BiI,YAAcvZ,IACZ,kBAAC+qD,GAAA,EAAD,CAAUtuC,QAASpZ,KAAKktE,iBAAkBv7B,UAAWh6B,YAAahb,IAC9D,kBAAC2lD,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASv0C,EAAE,iB,GAtF1BiM,IAAMC,WAsGlBE,iBAAkBuyD,I,oBCtH1B,SAASS,GAAU7rD,GAAsB,IAAhB8rD,EAAe,wDAC3C,GAAK9rD,EAAL,CAEA,GAAI8rD,GAAS9rD,EAAKe,YAAcf,EAAKe,WAAWtkB,OAAS,EAAG,CACxD,IAAMsvE,EAAW/rD,EAAKe,WAAWf,EAAKe,WAAWtkB,OAAS,GACpD+2D,EAAQ/4D,SAASg5D,cACvBD,EAAME,SAASqY,EAAUA,EAAStvE,QAClC+2D,EAAMG,UAAS,GAEf,IAAMC,EAAY10D,OAAO20D,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEnBxzC,EAAKgjC,UAAYhjC,EAAKsjC,aAG1BtjC,EAAKy4B,SCfT,IAAMpyC,GACS,EADTA,GAEK,GAFLA,GAGI,GAHJA,GAIG,GAJHA,GAKM,GALNA,GAOS,GAPTA,GAQO,GARPA,GASU,GATVA,GAUS,GAGF2lE,GAAQ,CACjBC,QAAS,GACTC,aAAc,GACdC,UAHiB,SAGP5sD,GACN,MAA0C,qBAA5B/gB,KAAKytE,QAAQ1sD,EAAEu8B,UAEjCswB,eANiB,SAMF7sD,GACX,MAA+C,qBAAjC/gB,KAAK0tE,aAAa3sD,EAAEu8B,WAI1CkwB,GAAMC,QAAQ5lE,KAAqB,EACnC2lE,GAAMC,QAAQ5lE,KAAiB,EAC/B2lE,GAAMC,QAAQ5lE,KAAgB,EAC9B2lE,GAAMC,QAAQ5lE,KAAe,EAC7B2lE,GAAMC,QAAQ5lE,KAAkB,EAEhC2lE,GAAME,aAAa7lE,KAAmB,EACtC2lE,GAAME,aAAa7lE,KAAqB,EACxC2lE,GAAME,aAAa7lE,KAAqB,EACxC2lE,GAAME,aAAa7lE,KAAsB,E,WClBnCgmE,G,YACF,WAAYr1D,GAAQ,IAAD,8BACf,4CAAMA,KASVwD,QAAU,WACN,OAAO,EAAK8xD,cAAc9wD,QAAQ6E,WAXnB,EAcnBo4B,MAAQ,WAAoB,IAAnBqzB,EAAkB,wDACjB9rD,EAAO,EAAKssD,cAAc9wD,QAEhCqwD,GAAU7rD,EAAM8rD,IAjBD,EAoBnBvmB,aAAe,WAAO,IAAD,EACY,EAAKvuC,MAA1BmvB,EADS,EACTA,OAAQmwB,EADC,EACDA,SACXnwB,GACAmwB,GAELA,EAASnwB,EAAOluC,KAzBD,EA4BnB8jE,YAAc,SAAA97D,GAAU,IACZkmC,EAAW,EAAKnvB,MAAhBmvB,OAERlmC,EAAMkX,iBAEN,IAAM6I,EAAO,EAAKssD,cAAc9wD,QAC1B/e,EAASujB,EAAKM,QAAQ7jB,OAEtBgP,GADYuU,EAAKM,QAAQisD,UAClB,EAAK/xD,WAElB,EAAKlD,SAAS,CACVk1D,aAAc/vE,EAASgP,EAAKhP,SAGhCjF,KAAgB8G,aAAa,CACzB,QAAS,yBACTrG,GAAIkuC,EAAOluC,GACXwT,UA7CW,EAiDnBs7C,cAAgB,SAAA9mD,GACZ,IAAM+f,EAAO,EAAKssD,cAAc9wD,QAC1B+wD,EAAYvsD,EAAKM,QAAQisD,UAEzB9vE,EADY,EAAK+d,UACE/d,OAErBgwE,GAAe,EACb7Y,EAAY10D,OAAO20D,eACnBsY,EAAYH,GAAMG,UAAUlsE,GAC5BmsE,EAAiBJ,GAAMI,eAAensE,GAM5C,OAJI2zD,IACA6Y,IAAiB7Y,EAAU3jC,YAGvBhwB,EAAMoQ,KACV,IAAK,YAED,IADa,EAAKmK,UACP,CAAC,IAAD,EACsB,EAAKxD,MAA1BmvB,EADD,EACCA,OAAQmwB,EADT,EACSA,SAMhB,OALIA,GACAA,EAASnwB,EAAOluC,IAAI,GAGxBgI,EAAMkX,kBACC,EAGX,MAEJ,IAAK,QAAU,IAAD,EACsB,EAAKH,MAA7BmvB,EADE,EACFA,OAAQumC,EADN,EACMA,YAMhB,OALIvmC,GAAUumC,GACVA,EAAYvmC,EAAOluC,IAGvBgI,EAAMkX,kBACC,EAEX,IAAK,UACD,IAAMy8C,EAAY10D,OAAO20D,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAU+Y,YAAa,MAE5B,IAAMC,EAAa5sD,EAAKe,YAAcf,EAAKe,WAAWtkB,OAAS,EAAIujB,EAAKe,WAAW,GAAK,KAExF,IAAK6rD,GAAehZ,EAAUiZ,aAAeD,IAAehZ,EAAUkZ,aAAe,CAAC,IAAD,EACjD,EAAK91D,MAA7BmvB,EADyE,EACzEA,OAAQ4mC,EADiE,EACjEA,YAMhB,OALIA,GACAA,EAAY5mC,EAAOluC,IAGvBgI,EAAMkX,kBACC,EAGX,MAEJ,IAAK,YACD,IAAMy8C,EAAY10D,OAAO20D,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAU+Y,YAAa,MAE5B,IAAMK,EACFhtD,EAAKe,YAAcf,EAAKe,WAAWtkB,OAAS,EAAIujB,EAAKe,WAAWf,EAAKe,WAAWtkB,OAAS,GAAK,KAElG,IAAKuwE,GAAcpZ,EAAUiZ,aAAeG,GAAapZ,EAAUkZ,eAAiBE,EAAUvwE,OAAS,CAAC,IAAD,EACnE,EAAKua,MAA7BmvB,EAD2F,EAC3FA,OAAQumC,EADmF,EACnFA,YAMhB,OALIA,GACAA,EAAYvmC,EAAOluC,IAGvBgI,EAAMkX,kBACC,GAOnB,SAAIg1D,IAAaC,OAIb3vE,GAAU8vE,IAAcE,KACxBxsE,EAAMkX,kBACC,KAvII,EA6InB8vC,YAAc,SAAAhnD,GACVA,EAAMkX,iBAEN,IACMo1D,EADO,EAAKD,cAAc9wD,QACT8E,QAAQisD,UAEzB3Y,EAAY10D,OAAO20D,eACnBoZ,EAAkBrZ,EAAYA,EAAU3jC,WAAa,GAErD5P,EAAY,EAAK7F,UACvB,KAAI6F,EAAU5jB,OAASm3D,EAAUn3D,QAAU8vE,GAA3C,CAEA,IAAIW,EAAYjtE,EAAMy8C,cAAcC,QAAQ,cACvCuwB,IAELA,EAAYA,EAAUzsD,QAAQ,OAAQ,MAAMA,QAAQ,KAAM,KAEtDJ,EAAU5jB,OAASwwE,EAAgBxwE,OAASywE,EAAUzwE,OAAS8vE,IAC/DW,EAAYA,EAAUjzD,OAAO,EAAGsyD,EAAYlsD,EAAU5jB,OAASwwE,EAAgBxwE,SAEnFhC,SAASk+C,YAAY,cAAc,EAAOu0B,MAjK3B,EAoKnBrjC,aAAe,WAAO,IACV1D,EAAW,EAAKnvB,MAAhBmvB,OACHA,GAEL3uC,KAAgB8G,aAAa,CACzB,QAAS,+BACTrG,GAAIkuC,EAAOluC,MAvKf,EAAKq0E,cAAgB5zD,IAAM0a,YAE3B,EAAK1b,MAAQ,CACT80D,aAAcW,KANH,E,sEA8KT,IAAD,EACiB3uE,KAAKwY,MAAnBvK,EADH,EACGA,EAAG05B,EADN,EACMA,OACHqmC,EAAiBhuE,KAAKkZ,MAAtB80D,aAEAvqD,EAAckkB,EAAdlkB,UAER,OACI,yBAAKoB,UAAU,sBACX,yBAAKA,UAAU,8BACX,kBAAC4sB,GAAA,EAAD,CACI5/B,IAAKmB,KAAKI,MACVuG,QAAS,CAAEC,KAAM,0BACjBoL,MAAM,UACN8sB,QAASruB,EACTioB,SAAU1rC,KAAKqrC,eAEnB,yBACIrV,IAAKh2B,KAAK8tE,cACVjpD,UAAU,0BACV20B,iBAAe,EACfoF,gCAA8B,EAC9BC,YAAa5wC,EAAE,UACf2gE,cAAazmC,IACb0mC,kBAAiBF,IACjBjR,QAAS19D,KAAKu9D,YACdze,UAAW9+C,KAAKuoD,cAChBvJ,QAASh/C,KAAKyoD,eAGtB,yBAAK5jC,UAAU,oCACX,kBAACE,EAAA,EAAD,CAAYF,UAAU,4BAA4BzL,QAASpZ,KAAK+mD,cAC5D,kBAACvT,EAAA,EAAD,CAAWtuB,SAAS,YAG5B,yBAAKL,UAAU,qCACdmpD,GAAgB7lC,IAAqB2mC,KAClC,kBAAC,KAAD,CACIC,MAAM,SACNlqD,UAAU,8BACVG,MAAOgpD,GAAgB,EAAI,gBAAkB,QAC7C98C,QAAQ,aACP88C,Q,GAxNM9zD,IAAMC,WA6OtB+kC,GANCC,YACZmH,cACAjsC,cACAksC,cAGWrH,CAAQ2uB,I,oBCvNjBmB,I,mBACF,WAAYx2D,GAAQ,IAAD,8BACf,4CAAMA,KAsCVy2D,0BAA4B,SAAA12E,GAAW,IAC3B6kB,EAAS24B,KAAT34B,KAER,EAAKtE,SAAS,CACVqlB,SAAS,EACT6vC,aAAckB,IACd9xD,UA7CW,EAiDnB+xD,+BAAiC,SAAA52E,GAAW,IAChC6kB,EAAS24B,KAAT34B,KAEFoE,EAAO,EAAK4tD,YAAYpyD,QACxB/e,EAASujB,EAAKM,QAAQ7jB,OACtB4jB,EAAYL,EAAKK,UAEvB,EAAK/I,SAAS,CACVk1D,aAAc/vE,EAAS4jB,EAAU5jB,OACjCmf,UA1DW,EA8DnBiyD,uBAAyB,SAAA92E,GAAW,IACxB6kB,EAAS24B,KAAT34B,KAER,EAAKtE,SAAS,CAAEsE,UAjED,EAoEnBkyD,gCAAkC,SAAA/2E,GAAW,IACjC6kB,EAAS24B,KAAT34B,KAER,EAAKtE,SAAS,CAAEsE,QAAQ,WACpB2T,WAAW,WACM,EAAKw+C,cAAcz1E,IAAIsjB,EAAKoG,QAAQvlB,OAAS,GAErDg8C,OAAM,QA3EJ,EA0FnBsO,cAAgB,SAAA9mD,GACZ,IAAM+f,EAAO,EAAK4tD,YAAYpyD,QACxB+wD,EAAYvsD,EAAKM,QAAQisD,UAEzB9vE,EADYujB,EAAKK,UACE5jB,OAErBgwE,GAAe,EACb7Y,EAAY10D,OAAO20D,eACnBsY,EAAYH,GAAMG,UAAUlsE,GAC5BmsE,EAAiBJ,GAAMI,eAAensE,GAM5C,OAJI2zD,IACA6Y,IAAiB7Y,EAAU3jC,YAGvBhwB,EAAMoQ,KACV,IAAK,QACD,IAAKpQ,EAAM+tE,SAIP,OAHA,EAAKC,sBAAsB,GAE3BhuE,EAAMkX,kBACC,EAGX,MAEJ,IAAK,YACD,IAAMy8C,EAAY10D,OAAO20D,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAU+Y,YAAa,MAE5B,IAAMK,EACFhtD,EAAKe,YAAcf,EAAKe,WAAWtkB,OAAS,EAAIujB,EAAKe,WAAWf,EAAKe,WAAWtkB,OAAS,GAAK,KAElG,IAAKuwE,GAAcpZ,EAAUiZ,aAAeG,GAAapZ,EAAUkZ,eAAiBE,EAAUvwE,OAI1F,OAHA,EAAKwxE,sBAAsB,GAE3BhuE,EAAMkX,kBACC,EAOnB,SAAIg1D,IAAaC,OAIb3vE,GAAU8vE,IAAcE,KACxBxsE,EAAMkX,kBACC,KA7II,EAmJnB8vC,YAAc,SAAAhnD,GACVA,EAAMkX,iBAEN,IAAM6I,EAAO,EAAK4tD,YAAYpyD,QACxB+wD,EAAYvsD,EAAKM,QAAQisD,UAEzB3Y,EAAY10D,OAAO20D,eACnBoZ,EAAkBrZ,EAAYA,EAAU3jC,WAAa,GAErD5P,EAAYL,EAAKK,UACvB,KAAIA,EAAU5jB,OAASm3D,EAAUn3D,QAAU8vE,GAA3C,CAEA,IAAIW,EAAYjtE,EAAMy8C,cAAcC,QAAQ,cACvCuwB,IAED7sD,EAAU5jB,OAASwwE,EAAgBxwE,OAASywE,EAAUzwE,OAAS8vE,IAC/DW,EAAYA,EAAUjzD,OAAO,EAAGsyD,EAAYlsD,EAAU5jB,OAASwwE,EAAgBxwE,SAEnFhC,SAASk+C,YAAY,cAAc,EAAOu0B,MArK3B,EAwKnBnR,YAAc,SAAA97D,GACVA,EAAMkX,iBAEN,IAAM6I,EAAO,EAAK4tD,YAAYpyD,QAGxB6E,EAAYL,EAAKK,UAGL,SAFAL,EAAK47B,YAGnB57B,EAAKK,UAAY,IAOrB7oB,KAAgB8G,aAAa,CACzB,QAAS,2BACTud,SAAUwE,KA3LC,EA+LnB6tD,gBAAkB,WAAO,IACbtyD,EAAS,EAAKlE,MAAdkE,KACR,GAAKA,KAEeA,EAAZoG,QACIvlB,QAAU0xE,KAAtB,CAEA,IAAMhoC,EAAS,CACXluC,GAAIuZ,KAAKI,MACTnG,KAAM,IAGVjU,KAAgB8G,aAAa,CACzB,QAAS,4BACT6nC,aA7MW,EAiNnBioC,mBAAqB,SAACn2E,GAA2B,IAAvBo2E,EAAsB,wDACxCA,EACA,EAAKC,wBAAwBr2E,GAE7B,EAAKstD,aAAattD,IArNP,EAyNnBstD,aAAe,SAAAttD,GACXT,KAAgB8G,aAAa,CACzB,QAAS,+BACTrG,QA5NW,EAgOnBq2E,wBAA0B,SAAAr2E,GAAO,IACrB2jB,EAAS,EAAKlE,MAAdkE,KACR,GAAKA,EAAL,CAOA,IAT4B,IAIpBoG,EAAYpG,EAAZoG,QAEFja,EAAQia,EAAQ6D,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAOA,IACxCs2E,EAAYxmE,EAAQ,EACtBymE,GAAe,EACVjyE,EAAIwL,EAAOxL,EAAIylB,EAAQvlB,OAAQF,IAAK,CAEzC,GADiBylB,EAAQzlB,GAAjBkP,KACE,CACN+iE,GAAe,EACf,OAIJA,GACA,EAAKJ,mBAAmBn2E,GAG5B,IAAMw2E,EAAW,EAAKV,cAAcz1E,IAAIi2E,GACxC,GAAKE,EAOLA,EAASh2B,OAAM,QAJXozB,GAFgB,EAAK+B,YAAYpyD,SAEd,KAzPR,EAgQnBkzD,sBAAwB,SAAAz2E,GAAO,IACnB2jB,EAAS,EAAKlE,MAAdkE,KACR,GAAKA,EAAL,CAF0B,IAOpB2yD,EAHc3yD,EAAZoG,QAEc6D,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAOA,IACpB,EAEpBw2E,EAAW,EAAKV,cAAcz1E,IAAIi2E,GACxC,GAAKE,EAOLA,EAASh2B,OAAM,QAJXozB,GAFgB,EAAK+B,YAAYpyD,SAEd,KA7QR,EAoRnByyD,sBAAwB,SAAAh2E,GAAO,IACnB2jB,EAAS,EAAKlE,MAAdkE,KACR,GAAKA,EAAL,CAF0B,IAIlBoG,EAAYpG,EAAZoG,QAEFja,EAAQia,EAAQ6D,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAOA,IACxCuyB,EAAYziB,EAAQ,EAEpB4mE,EAAW,EAAKZ,cAAcz1E,IAAIkyB,GACxC,GAAKmkD,EAULA,EAASl2B,MAAMk2B,GAAU,OAVzB,CACI,IAAMljE,EAAO1D,GAAS,GAAKA,EAAQia,EAAQvlB,OAASulB,EAAQja,GAAO0D,KAAO,GAC1E,GAAIuW,EAAQvlB,SAAWgP,EACnB,OAGJ,EAAKyiE,qBApSM,EA2SnBU,QAAU,WAAO,IACLhzD,EAAS,EAAKlE,MAAdkE,KACR,GAAKA,EAAL,CAFY,IAIJoG,EAAYpG,EAAZoG,QAEF6sD,EAAWV,IAAyBnsD,EAAQvlB,OAElD,OAAIoyE,GAAY,EACL,gDAEM,IAAbA,EACO,6BAGL,eAAN,OAAsBV,IAAyBnsD,EAAQvlB,OAAvD,oBA1Te,EA6TnB+a,YAAc,WAAO,IACToE,EAAS,EAAKlE,MAAdkE,KAEJgrB,aAAYhrB,GACZ,EAAKtE,SAAS,CAAEqlB,SAAS,IAEzB,EAAKmyC,0BAnUM,EAuUnBj0B,WAAa,WAAO,IACRk0B,EAAW,EAAK/3D,MAAhB+3D,OAEFC,EAAmBz6B,KAAU06B,sBAC9BD,IAELD,EAAOC,GAEP,EAAKF,2BA/UU,EAkVnBI,wBAA0B,WACtB,EAAK53D,SAAS,CAAEqlB,SAAS,KAnVV,EAsVnBmyC,uBAAyB,WACrB,EAAKI,0BAEL13E,KAAgB8G,aAAa,CACzB,QAAS,4BA1VE,EA8VnB6wE,sBAAwB,WACpB33E,KAAgB8G,aAAa,CACzB,QAAS,qCAhWE,EAoWnB8wE,iCAAmC,WAC/B53E,KAAgB8G,aAAa,CACzB,QAAS,gDAtWE,EA0WnB+wE,iBAAmB,WACf73E,KAAgB8G,aAAa,CACzB,QAAS,gCA5WE,EAgXnBg8C,sBAAwB,SAACjqC,EAAKjW,EAASiV,GACnC,GAAKgB,EAAL,CAD8C,IAGtCkqC,EAAoB,EAAKvjC,MAAzBujC,gBACR,GAAKA,EAAL,CAGI9gC,KAAS+gC,mBAAmBnqC,EAAKoqC,IAAqC,IAAsBprC,IAC5FkrC,EAAgBngD,EAAS,CACrBsgD,iBAAkBD,IAClBprC,OAAQ,CACJ,kBAACkU,EAAA,EAAD,CACIlT,IAAI,QACJoT,aAAW,QACXD,MAAM,UACNH,UAAU,4BACVzL,QAAS,kBAAM6B,KAASkhC,sBAAsBtqC,KAC9C,kBAAC2hC,EAAA,EAAD,aAjYD,EAwYnBs9B,gCAAkC,SAAArvE,GAAU,IAChCwM,EAAM,EAAKuK,MAAXvK,EACAmP,EAAS,EAAKlE,MAAdkE,KACR,GAAKA,GAEmC,iBAAvBA,EAAK5U,KAAK,SACb,CACV/G,EAAMiX,kBAEN,IACM9c,EAAUqS,EAAE,0BAGlB,EAAK6tC,sBAJO,4BAIoBlgD,EAFjB,QAhZnB,EAAKwzE,YAAcl1D,IAAM0a,YACzB,EAAK26C,cAAgB,IAAIv3E,IAEzB,EAAKkhB,MAAQ,CACTkE,KAAM,KACN+gB,SAAS,EACT6vC,aAAckB,KATH,E,iFAcfn5B,KAAU98C,GAAG,+BAAgC+G,KAAKqvE,wBAClDt5B,KAAU98C,GAAG,kCAAmC+G,KAAKqvE,wBACrDt5B,KAAU98C,GAAG,6CAA8C+G,KAAKqvE,wBAChEt5B,KAAU98C,GAAG,6BAA8B+G,KAAKqvE,wBAChDt5B,KAAU98C,GAAG,yBAA0B+G,KAAKqvE,wBAC5Ct5B,KAAU98C,GAAG,+BAAgC+G,KAAKqvE,wBAClDt5B,KAAU98C,GAAG,sBAAuB+G,KAAKivE,2BACzCl5B,KAAU98C,GAAG,4BAA6B+G,KAAKsvE,iCAC/Cv5B,KAAU98C,GAAG,yBAA0B+G,KAAKqvE,wBAC5Ct5B,KAAU98C,GAAG,2BAA4B+G,KAAKmvE,kC,6CAI9Cp5B,KAAU58C,IAAI,+BAAgC6G,KAAKqvE,wBACnDt5B,KAAU58C,IAAI,kCAAmC6G,KAAKqvE,wBACtDt5B,KAAU58C,IAAI,6CAA8C6G,KAAKqvE,wBACjEt5B,KAAU58C,IAAI,6BAA8B6G,KAAKqvE,wBACjDt5B,KAAU58C,IAAI,yBAA0B6G,KAAKqvE,wBAC7Ct5B,KAAU58C,IAAI,+BAAgC6G,KAAKqvE,wBACnDt5B,KAAU58C,IAAI,sBAAuB6G,KAAKivE,2BAC1Cl5B,KAAU58C,IAAI,4BAA6B6G,KAAKsvE,iCAChDv5B,KAAU58C,IAAI,yBAA0B6G,KAAKqvE,wBAC7Ct5B,KAAU58C,IAAI,2BAA4B6G,KAAKmvE,kC,yCA4ChC/5C,EAAWC,EAAWC,GAAW,IAAD,OAC9Bt1B,KAAKkZ,MAAdkE,OAEKiY,EAAUjY,MACnB2T,WAAW,WACPs8C,GAAU,EAAK+B,YAAYpyD,SAAS,IACrC,K,+BAmUD,IAAD,OACG/O,EAAMjO,KAAKwY,MAAXvK,EADH,EAEmCjO,KAAKkZ,MAArC80D,EAFH,EAEGA,aAAc7vC,EAFjB,EAEiBA,QAAS/gB,EAF1B,EAE0BA,KAC/B,IAAKA,EAAM,OAAO,KAHb,IAKGmqB,EAAiBnqB,EAAjBmqB,aAEF/jB,EAAUpG,EAAOA,EAAKoG,QAAU,GAChCutD,EAAuB3zD,EAAK5U,KAAK8+B,uBACjC0pC,EAAsD,oBAAvB5zD,EAAK5U,KAAK,SACzCyoE,EAAkC,iBAAvB7zD,EAAK5U,KAAK,SAE3BxI,KAAKuvE,cAAcvH,QACnB,IAAM/vE,EAAQurB,EAAQ5f,IAAI,SAAC/B,EAAG9D,GAAJ,OACtB,kBAAC,GAAD,CACIi4B,IAAK,SAAA0vB,GAAE,OAAI,EAAK6pB,cAAc72E,IAAIqF,EAAG2nD,IACrC7zC,IAAKhQ,EAAEpI,GACPkuC,OAAQ9lC,EACRi2D,SAAU,EAAK8X,mBACfrB,YAAa,EAAK2B,sBAClBhC,YAAa,EAAKuB,0BAIpByB,EAAevB,IAAyBnsD,EAAQvlB,OAAS,EACzD64B,EAAO92B,KAAKowE,UAElB,OACI,oCACI,kBAAC,IAAD,CACIvrD,UAAWC,IAAW,qBAAsB,CAAE,qBAAsBmsD,IACpErwE,MAAI,EACJ0Y,mBAAoB,EACpBC,QAASvZ,KAAKgZ,YACdQ,kBAAgB,gBAChB,kBAAC,IAAD,CAAa/f,GAAG,gBAAgBwU,EAAE,YAClC,kBAAC,KAAD,CAAe0L,QAAS,CAAEC,KAAM,4BAC5B,yBAAKiL,UAAU,qCACX,kBAAC49B,GAAA,EAAD,CAAYz9B,MAAM,UAAUkM,QAAQ,YAAYnuB,MAAO,CAAEouE,SAAU,IAC9DljE,EAAE,aAEN+/D,GAAgBjmC,IAAuBqpC,KACpC,kBAAC3uB,GAAA,EAAD,CAAYz9B,MAAOgpD,GAAgB,EAAI,gBAAkB,QAAS98C,QAAQ,aACrE88C,IAIb,yBACIh4C,IAAKh2B,KAAKovE,YACV31E,GAAG,8BACH+/C,iBAAe,EACfoF,gCAA8B,EAC9BC,YAAa5wC,EAAE,gBACf2gE,cAAa7mC,IACb8mC,kBAAiBK,IACjBlwB,QAASh/C,KAAKyoD,YACd3J,UAAW9+C,KAAKuoD,cAChBmV,QAAS19D,KAAKu9D,cAElB,kBAAClX,GAAA,EAAD,CAASxhC,UAAU,YACnB,kBAAC49B,GAAA,EAAD,CAAYz9B,MAAM,UAAUkM,QAAQ,aAC/BjjB,EAAE,gBAEP,kBAAC21C,GAAA,EAAD,CAAMjqC,QAAS,CAAEC,KAAM,4BAClB3hB,EACAi5E,GACG,kBAAC/8B,GAAA,EAAD,CACI6E,UAAU,EACVn0B,UAAU,yBACVuvB,QAAM,EACNh7B,QAASpZ,KAAK0vE,iBACd,kBAACntB,GAAA,EAAD,CAAc8uB,mBAAiB,EAAC7uB,QAASv0C,EAAE,mBAIvD,kBAACw0C,GAAA,EAAD,KAAa3rB,GACb,kBAACuvB,GAAA,EAAD,CAASxhC,UAAU,YACnB,kBAAC49B,GAAA,EAAD,CAAYz9B,MAAM,UAAUkM,QAAQ,aAC/BjjB,EAAE,aAEP,kBAACqjE,GAAA,EAAD,KACI,kBAAC3R,GAAA,EAAD,CACIC,QACI,kBAACkE,GAAA,EAAD,CACI9+C,MAAM,UACN8sB,QAASvK,EACTmE,SAAU1rC,KAAK2wE,wBAGvB/jB,MAAO3+C,EAAE,mBAEb,yBAAKmL,QAASpZ,KAAK8wE,gCAAiC/tE,MAAO,CAAEuI,WAAY,gBACrE,kBAACq0D,GAAA,EAAD,CACIC,QACI,kBAACkE,GAAA,EAAD,CACI9+C,MAAM,UACN2sB,SAAUq/B,EACVl/B,QAASi/B,EACTrlC,SAAU1rC,KAAK4wE,mCAGvBhkB,MAAO3+C,EAAE,mBAGjB,kBAAC0xD,GAAA,EAAD,CACIC,QACI,kBAACkE,GAAA,EAAD,CAAU9+C,MAAM,UAAU8sB,QAASm/B,EAAUvlC,SAAU1rC,KAAK6wE,mBAEhEjkB,MAAO3+C,EAAE,eAGjB,kBAACw0C,GAAA,EAAD,KAAax0C,EAAE,cAEnB,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQiL,MAAM,UAAU5L,QAASpZ,KAAKgZ,aACjC/K,EAAE,WAEN65B,aAAY1qB,IACT,kBAACrD,EAAA,EAAD,CAAQiL,MAAM,UAAU5L,QAASpZ,KAAKq8C,YACjCpuC,EAAE,aAKnB,kBAAC,IAAD,CACI4W,UAAU,0BACVjkB,KAAMu9B,EACN7kB,mBAAoB,EACpBC,QAASvZ,KAAK0wE,wBACdl3D,kBAAgB,gBAChB,kBAAC,IAAD,CAAa/f,GAAG,gBAAgBwU,EAAE,yBAClC,kBAAC,KAAD,CAAe0L,QAAS,CAAEC,KAAM,4BAC3B3L,EAAE,wBAEP,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQiL,MAAM,UAAU5L,QAASpZ,KAAK0wE,yBACjCziE,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQiL,MAAM,UAAU5L,QAASpZ,KAAKswE,wBACjCriE,EAAE,c,GAriBAiM,IAAMC,YAyjBtB+kC,GAPCC,YACZmH,cACAjsC,cACA+kC,eACAmH,cAGWrH,CAAQ8vB,I,UCzlBjBuC,I,mBACF,WAAY/4D,GAAQ,IAAD,8BACf,4CAAMA,KAuGVg5D,kBAAoB,SAAA/vE,GACE,UAAdA,EAAMoQ,MACN,EAAK4/D,YAAYz0D,QAAQi9B,QACzBx4C,EAAMkX,iBACNlX,EAAMiX,oBA5GK,EAgHnBg5D,iBAAmB,SAAAjwE,GACG,UAAdA,EAAMoQ,MACN,EAAKusB,aACL38B,EAAMkX,iBACNlX,EAAMiX,oBApHK,EAwHnBi5D,iBAAmB,SAAAlwE,GACf,EAAKqX,SAAS,CACV7L,KAAMxL,EAAMC,OAAOkP,SA1HR,EA8HnBghE,gBAAkB,SAAAnwE,GACd,EAAKqX,SAAS,CACVpZ,IAAK+B,EAAMC,OAAOkP,SAhIP,EAoInBwtB,WAAa,WAAO,IAAD,EACqB,EAAK5lB,MAAjCq5D,EADO,EACPA,YAAaC,EADN,EACMA,WADN,EAEK,EAAK54D,MAAnBjM,EAFS,EAETA,KAAMvN,EAFG,EAEHA,IAKZ,GAFAA,EAAc,OAARA,EAAeA,EAAMoyE,GAD3B7kE,EAAgB,OAATA,EAAgBA,EAAO4kE,IAGhBnyE,EAAd,CAKA,IAAKuN,EAGD,OAFA,EAAK6L,SAAS,CAAEi5D,WAAW,SAC3B,EAAKC,aAAah1D,QAAQi9B,QAK9B,KADAv6C,EAAM8jC,aAAY9jC,IAId,OAFA,EAAKoZ,SAAS,CAAEm5D,UAAU,SAC1B,EAAKR,YAAYz0D,QAAQi9B,SAM7Bi4B,EAFmB,EAAK15D,MAAhB05D,QAEDjlE,EAAMvN,QAnBT,EAAKsyE,aAAah1D,QAAQi9B,SA5If,EAkKnBk4B,aAAe,YAGXC,EAFqB,EAAK55D,MAAlB45D,aAhKR,EAAKC,QAAUn4D,IAAM0a,YACrB,EAAKo9C,aAAe93D,IAAM0a,YAC1B,EAAK09C,OAASp4D,IAAM0a,YACpB,EAAK68C,YAAcv3D,IAAM0a,YAEzB,EAAK1b,MAAQ,GARE,E,gFAWAkc,EAAWC,EAAWC,GAAW,IAAD,SACLt1B,KAAKwY,MAAvCq5D,EADuC,EACvCA,YAAaC,EAD0B,EAC1BA,WAAYlxE,EADc,EACdA,KAE7BA,GAAQw0B,EAAUx0B,OAASA,GAC3BmwB,WAAW,WACP,IAAM9jB,EAAO,EAAK+kE,aAAah1D,QACzBtd,EAAM,EAAK+xE,YAAYz0D,QAExB/P,GACAvN,IAEAmyE,EAEOC,GAGR7kE,EAAKgtC,QACLhtC,EAAKitC,UAHLx6C,EAAIu6C,QAFJhtC,EAAKgtC,UAOV,K,yFAyBW5qB,EAAWC,EAAW4F,GAAc,IAAD,EACOl1B,KAAKwY,MAAzDq5D,EAD6C,EAC7CA,YAAaC,EADgC,EAChCA,WAAYI,EADoB,EACpBA,OAAQE,EADY,EACZA,SAAUxxE,EADE,EACFA,KADE,EAErBZ,KAAKkZ,MAA7B64D,EAF6C,EAE7CA,UAAWE,EAFkC,EAElCA,SAEnB,OAAI5iD,EAAUwiD,cAAgBA,IAI1BxiD,EAAUyiD,aAAeA,IAIzBxiD,EAAUyiD,YAAcA,IAIxBziD,EAAU2iD,WAAaA,IAIvB5iD,EAAU6iD,SAAWA,IAIrB7iD,EAAU+iD,WAAaA,GAIvB/iD,EAAUzuB,OAASA,S,+BAqFjB,IAAD,EACwCZ,KAAKwY,MAA1C5X,EADH,EACGA,KAAMkxE,EADT,EACSA,WAAYD,EADrB,EACqBA,YAAa5jE,EADlC,EACkCA,EADlC,EAE2BjO,KAAKkZ,MAA7B64D,EAFH,EAEGA,UAAWE,EAFd,EAEcA,SACnB,OAAKrxE,EAGD,kBAAC,IAAD,CACI0Y,mBAAoB,EACpB1Y,MAAM,EACN2Y,QAASvZ,KAAKmyE,aACd34D,kBAAgB,yBAChB,kBAAC,IAAD,CAAa/f,GAAG,yBAAyBwU,EAAE,eAC3C,kBAAC,KAAD,KACI,yBAAKlL,MAAO,CAAEC,QAAS,OAAQuvE,cAAe,SAAU9sE,MAAO,MAC3D,kBAAC87D,GAAA,EAAD,CACIvrC,IAAKh2B,KAAKqyE,QACV7U,SAAUx9D,KAAKgyE,aACfplB,MAAO3+C,EAAE,QACTukE,OAAO,SACPC,aAAa,MACbjR,aAAcqQ,EACd32E,MAAO62E,EACPrmC,SAAU1rC,KAAK2xE,iBACf7yB,UAAW9+C,KAAKwxE,oBAEpB,kBAACjQ,GAAA,EAAD,CACIvrC,IAAKh2B,KAAKsyE,OACV9U,SAAUx9D,KAAKyxE,YACf7kB,MAAO3+C,EAAE,OACTukE,OAAO,SACPC,aAAa,MACbjR,aAAcsQ,EACd52E,MAAO+2E,EACPvmC,SAAU1rC,KAAK4xE,gBACf9yB,UAAW9+C,KAAK0xE,qBAI5B,kBAAC53D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQX,QAASpZ,KAAKmyE,aAAcntD,MAAM,WACrC/W,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQX,QAASpZ,KAAKo+B,WAAYpZ,MAAM,WACnC/W,EAAE,aAxCD,Q,gDAjFUuK,EAAOU,GACnC,OAAIA,EAAMw5D,WAAal6D,EAAM5X,KAClB,CACH8xE,UAAU,EACVX,WAAW,EACXE,UAAU,EACVhlE,KAAM,KACNvN,IAAK,MAIN,S,GAtGawa,IAAMC,YAoOnBE,iBAAkBk3D,ICtJlBoB,I,kNArDXl6C,wBAA0B,SAAAlgC,GAAW,IAAD,EACS,EAAKigB,MAAtC7b,EADwB,EACxBA,OAAQE,EADgB,EAChBA,UAAWqB,EADK,EACLA,UAC3B,GAAKA,EAAL,CAFgC,IAIxBlC,EAAUkC,EAAVlC,MACHA,GAEDzD,EAAOoE,SAAWA,GAAUpE,EAAOsE,YAAcA,GAAatE,EAAOwG,SAAW/C,EAAMvC,IACtF,EAAKs6B,gB,mFA3BT/vB,IAAU/K,GAAG,qCAAsC+G,KAAKy4B,yBACxDz0B,IAAU/K,GAAG,iCAAkC+G,KAAKy4B,yBACpDz0B,IAAU/K,GAAG,oCAAqC+G,KAAKy4B,yBACvDz0B,IAAU/K,GAAG,wBAAyB+G,KAAKy4B,yBAC3Cz0B,IAAU/K,GAAG,mCAAoC+G,KAAKy4B,yBACtDz0B,IAAU/K,GAAG,iCAAkC+G,KAAKy4B,yBACpDz0B,IAAU/K,GAAG,qCAAsC+G,KAAKy4B,2B,6CAIxDz0B,IAAU7K,IAAI,qCAAsC6G,KAAKy4B,yBACzDz0B,IAAU7K,IAAI,iCAAkC6G,KAAKy4B,yBACrDz0B,IAAU7K,IAAI,oCAAqC6G,KAAKy4B,yBACxDz0B,IAAU7K,IAAI,wBAAyB6G,KAAKy4B,yBAC5Cz0B,IAAU7K,IAAI,mCAAoC6G,KAAKy4B,yBACvDz0B,IAAU7K,IAAI,iCAAkC6G,KAAKy4B,yBACrDz0B,IAAU7K,IAAI,qCAAsC6G,KAAKy4B,2B,+BAenD,IAAD,EACmDz4B,KAAKwY,MAArD7b,EADH,EACGA,OAAQE,EADX,EACWA,UAAWqB,EADtB,EACsBA,UAAWyhB,EADjC,EACiCA,cACtC,IAAKzhB,EAAW,OAAO,KAFlB,IAIGlC,EAAUkC,EAAVlC,MACR,IAAKA,EAAO,OAAO,KAEnB,IAAM28B,EAAUhZ,EAAgB,2BAA6BA,EAAcre,KAAO,KAC5Eo0B,EAAM7pB,YAAO7P,GACb25B,GAAcD,GAAOiD,GAAYrS,aAAmBpoB,GACpD00E,EAAct0D,aAAa3hB,EAAQE,GACnCi8B,EAASrhB,QAAQie,GAAOiD,GAE9B,OACI,yBAAK9T,UAAU,cACViU,GACG,yBACIjU,UAAWC,IACP,mBACA,CAAE,yBAA0B8tD,GAC5B,CAAE,4BAA6Bl9C,GAC/B,CAAE,gBAAiBA,GAAOC,GAC1B,CAAE,sBAAuBD,GAAOiD,GAAWhD,IAE/CC,WAAW,EACXF,IAAKA,GAAOiD,EACZ9C,IAAI,U,GA3DJ3b,IAAMC,YCCxB04D,I,kNASFC,mBAAqB,SAAAhyE,GAAW,IAAD,EACG,EAAK0X,MAA3B7b,EADmB,EACnBA,OAAQE,EADW,EACXA,UAEZF,IAAWmE,EAAOlE,SAAWC,IAAciE,EAAOrH,IAClD,EAAKs6B,e,EAIbtb,YAAc,SAAAhX,GACVA,EAAMiX,mB,EAGVq6D,WAAa,SAAAtxE,GACT,GAAqB,IAAjBA,EAAM2yC,OAAV,CAEA3yC,EAAMiX,kBAHY,MAKqB,EAAKF,MAApC7b,EALU,EAKVA,OAAQE,EALE,EAKFA,UAAWuc,EALT,EAKSA,QAErBxd,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,KACrB,GAAI6jB,aAAiB7jB,GAAU,OAAO,KAEtCmd,YAASpc,EAAQE,GAAW,GACxBuc,GAASA,M,mFA/BbvV,KAAa5K,GAAG,mBAAoB+G,KAAK8yE,sB,6CAIzCjvE,KAAa1K,IAAI,mBAAoB6G,KAAK8yE,sB,+BA8BpC,IAAD,EAC4B9yE,KAAKwY,MAA9BvK,EADH,EACGA,EAAGtR,EADN,EACMA,OAAQE,EADd,EACcA,UACbmR,EAAUhO,KAAKwY,MAAfxK,MAEApS,EAAUiI,KAAa/J,IAAI6C,EAAQE,GAEzCmR,EAAQA,GAAS4M,aAAShf,EAASqS,GACnC,IAAIpS,EAAWD,EAAyBkW,aAAWlW,EAASqS,GAAnCA,EAAE,WACrB/P,EAAY0hB,aAAkBjjB,EAAQE,GACtC8iB,EAAgBD,aAAsB/iB,EAAQE,GAOpD,OALI4iB,aAAiB7jB,KACjBoS,EAAQ,KACRnS,EAAUoS,EAAE,mBAIZ,yBAAK4W,UAAU,QAAQ+mB,YAAa5rC,KAAK+yE,WAAY35D,QAASpZ,KAAKyY,aAC/D,yBAAKoM,UAAU,iBACX,yBAAKA,UAAU,wBACd3mB,GACG,kBAAC,GAAD,CACIvB,OAAQA,EACRE,UAAWA,EACXqB,UAAWA,EACXyhB,cAAeA,IAGvB,yBAAKkF,UAAU,iBACV7W,GAAS,yBAAK6W,UAAU,uBAAuB7W,GAChD,yBAAK6W,UAAWC,IAAW,2BAA4BjpB,U,GAlE3Dqe,IAAMC,YAiFXE,iBAAkBw4D,IChF3BG,I,kNASFnqB,uBAAyB,SAAAtwD,GAAW,IAAD,EACc,EAAKigB,MAA1C7b,EADuB,EACvBA,OAAQE,EADe,EACfA,UAAWo2E,EADI,EACJA,cACnBr2E,EAAwBrE,EAAxBqE,QAAS+hB,EAAepmB,EAAfomB,WAEbhiB,IAAWC,IACXC,IAAc8hB,GAAcs0D,IAAkBt0D,GAElD,EAAKoV,gB,EAGT/a,YAAc,WAAO,IAAD,EACkB,EAAKR,MAA/B7b,EADQ,EACRA,OADQ,EACAs2E,cAGZC,YAAYv2E,EAAQ,GAEpBw2E,YAAax2E,EAAQ,I,mFAvBzBkH,KAAa5K,GAAG,uBAAwB+G,KAAK6oD,0B,6CAI7ChlD,KAAa1K,IAAI,uBAAwB6G,KAAK6oD,0B,+BAuBxC,IAAD,EACoD7oD,KAAKwY,MAAtD7b,EADH,EACGA,OAAQE,EADX,EACWA,UAAWo2E,EADtB,EACsBA,cAAehlE,EADrC,EACqCA,EAAGmL,EADxC,EACwCA,QAC7C,OAAKzc,IACAE,GAAco2E,GAGf,yBAAKpuD,UAAU,mBACX,yBAAKA,UAAU,+BACX,kBAACE,EAAA,EAAD,CAAYF,UAAU,uBAAuBI,aAAW,QAAQ7L,QAASpZ,KAAKgZ,aAC1E,kBAACw6B,EAAA,EAAD,QAGR,yBAAK3uB,UAAU,iCACX,kBAAC,GAAD,CACIloB,OAAQA,EACRE,UAAWo2E,GAAiBp2E,EAC5BmR,MAAOilE,EAAgBhlE,EAAE,eAAiB,KAC1CmL,QAASA,KAGjB,yBAAKyL,UAAU,kCAlBH,S,GA/BC3K,IAAMC,YA8DpBE,iBAAkB24D,IC7D3BI,I,kNACFh1C,WAAa,YAETi1C,EADsB,EAAK76D,MAAnB66D,c,EAIZlB,aAAe,YAEXC,EADqB,EAAK55D,MAAlB45D,a,wEAIF,IAAD,EACgBpyE,KAAKwY,MAAlB6vD,EADH,EACGA,MAAOp6D,EADV,EACUA,EACf,OAAKo6D,EAGD,kBAAC,IAAD,CACI/uD,mBAAoB,EACpB1Y,MAAM,EACN2Y,QAASvZ,KAAKmyE,aACd34D,kBAAgB,uBAChB,kBAAC,IAAD,CAAa/f,GAAG,uBAAuBwU,EAAE,YACzC,kBAAC,KAAD,KACI,kBAAC4L,GAAA,EAAD,KACKwuD,EAAMpqE,OAAS,EAAIgQ,EAAE,yBAA2BA,EAAE,0BAG3D,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQX,QAASpZ,KAAKmyE,aAAcntD,MAAM,WACrC/W,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQX,QAASpZ,KAAKo+B,WAAYpZ,MAAM,WACnC/W,EAAE,SAnBA,S,GAbIiM,IAAMC,YAgDtB+kC,GAFCC,YAAQ9kC,cAET6kC,CAAQk0B,I,qBCzCjBE,I,mBACF,WAAY96D,GAAQ,IAAD,8BACf,4CAAMA,KAmDV+6D,sBAAwB,WAChBt3E,SAASu3E,gBAAkB,EAAKC,WAAWz2D,SAC3C,EAAK02D,iBAtDM,EA0DnBC,YAAc,WAAO,IAAD,EAC6B,EAAKn7D,MAA1C7b,EADQ,EACRA,OAAQE,EADA,EACAA,UAAW+D,EADX,EACWA,KAAMgzE,EADjB,EACiBA,QACjC,GAAKhzE,EAAL,CAEA,IAAIqM,EAAO,KACPH,EAAU,KACRlR,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACzC,GAAIjB,EAAS,CAAC,IACFC,EAAYD,EAAZC,QACJA,IACAoR,EAAOpR,EAAQoR,KACfH,EAAUjR,EAAQiR,SAI1B,IAAMwsC,EAAU,EAAKm6B,WAAWz2D,QAC3Bs8B,IAEDrsC,EACA,EAAK4mE,iBAAiB5mE,GACfH,EACP,EAAK+mE,iBAAiB/mE,GACf8mE,GAAWA,EAAQ9mE,QAC1BwsC,EAAQ8D,UAAYw2B,EAAQ9mE,QAE5BwsC,EAAQz3B,UAAY,KAGxBkzC,GAAWzb,MAtFI,EA8GnBlb,WAAa,WAAO,IAAD,EAC6B,EAAK5lB,MAAzC7b,EADO,EACPA,OAAQi3E,EADD,EACCA,QAASrD,EADV,EACUA,OAAQuD,EADlB,EACkBA,OADlB,EAE2C,EAAK56D,MAAvDg6D,EAFO,EAEPA,YAAaa,EAFN,EAEMA,SAAUC,EAFhB,EAEgBA,UAAWC,EAF3B,EAE2BA,YAEpC36B,EAAU,EAAKm6B,WAAWz2D,QAChC,GAAKs8B,EAAL,CALe,IAOP8D,EAAc9D,EAAd8D,UAER9D,EAAQz3B,UAAY,KATL,MAWYG,aAAYo7B,GAEjCtwC,EAAU,CACZ,QAAS,gBACTG,KAfW,EAWPA,KAKJ6C,SAhBW,EAWDA,UASd,GADkB2H,QAAQy7D,GACX,CACX,GAAIc,EAAW,CAAC,IACJh4E,EAAUg4E,EAAVh4E,MACR,IAAKA,EAAO,OAFD,IAIHgC,EAAUhC,EAAVgC,MACR,IAAKA,EAAO,OAEZ,IAAMqE,EAAOrE,EAAMA,EAAMC,OAAS,GAE1BwH,EAAkBpD,EAAlBoD,MAAOC,EAAWrD,EAAXqD,OAUfouE,EAAO,KARS,CACZ,QAAS,oBACT93E,MAAO,CAAE,QAAS,gBAAiBiuB,KAAM8pD,EAAS9pD,KAAM3oB,KAAMyyE,GAC9DtuE,QACAC,SACAoH,iBAKJgnE,EAAOhnE,EAAS,MAGpBonE,YAAkBv3E,EAAQ,OACvB,CAAC,IACIoL,EAAgB6rE,EAAhB7rE,MAAOpP,EAASi7E,EAATj7E,KACPqD,EAAoB+L,EAApB/L,MAAOC,EAAa8L,EAAb9L,SAEXJ,EAAU,KACd,GAAIG,EAAO,CAAC,IACAgC,EAAUhC,EAAVgC,MACR,IAAKA,EAAO,OAEZ,IAAMqE,EAAOrE,EAAMA,EAAMC,OAAS,GAE1BwH,EAAkBpD,EAAlBoD,MAAOC,EAAWrD,EAAXqD,OAEf7J,EAAUo4E,EACJ,CACI,QAAS,oBACTj4E,MAAO,CAAE,QAAS,gBAAiBiuB,KAAMtxB,EAAKsxB,KAAM3oB,KAAM3I,GAC1D8M,QACAC,SACAoH,WAEJ,CACI,QAAS,uBACT7Q,SAAU,CAAE,QAAS,gBAAiBguB,KAAMtxB,EAAKsxB,KAAM3oB,KAAM3I,GAC7DmE,UAAW,KACXgQ,gBAEH7Q,IACPJ,EAAU,CACN,QAAS,uBACTI,SAAU,CAAE,QAAS,gBAAiBguB,KAAMtxB,EAAKsxB,KAAM3oB,KAAM3I,GAC7DmE,UAAW,KACXgQ,YAGR,IAAKjR,EAAS,OAEd00E,EAAO10E,EAASlD,MAjML,EAqMnBw5E,aAAe,WAAO,IAAD,EACuB,EAAK35D,MAArC7b,EADS,EACTA,OAAQE,EADC,EACDA,UAAWu1E,EADV,EACUA,SAErBx2E,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACvB4a,QAAQ7b,IAGtBs4E,YAAkBv3E,EAAQ,GAG9By1E,KA/Me,EAkNnB7pB,cAAgB,SAAA9mD,GAAU,IACd0yE,EAAwD1yE,EAAxD0yE,OAAQC,EAAgD3yE,EAAhD2yE,QAAS92B,EAAuC77C,EAAvC67C,QAAS+2B,EAA8B5yE,EAA9B4yE,QAAShpD,EAAqB5pB,EAArB4pB,OAAQmkD,EAAa/tE,EAAb+tE,SAEnD,OAAQlyB,GAEJ,KAAK,GACI62B,GAAWC,GAAYC,GAAY7E,IAC/BnkD,GAAQ,EAAK+S,aAElB38B,EAAMkX,iBACNlX,EAAMiX,mBAEV,MAGJ,KAAK,GACIy7D,IAAWC,IAAWC,GAAa7E,IAC/BnkD,GAAQ,EAAKipD,aAElB7yE,EAAMkX,iBACNlX,EAAMiX,mBAEV,MAGJ,KAAK,GACIy7D,IAAWC,IAAWC,GAAa7E,IAC/BnkD,GAAQ,EAAKkpD,eAElB9yE,EAAMkX,iBACNlX,EAAMiX,mBAEV,MAEJ,KAAK,GAEIy7D,IAAWC,IAAWC,GAAa7E,EAO/B2E,IAAWC,GAAWC,KAAa7E,IACnCnkD,GAAQ,EAAKmpD,aAElB/yE,EAAMkX,iBACNlX,EAAMiX,oBAVD2S,GAAQ,EAAKopD,YAElBhzE,EAAMkX,iBACNlX,EAAMiX,mBASV,MAGJ,KAAK,IACGy7D,IAAWC,GAAWC,KAAa7E,IAC9BnkD,GAAQ,EAAKqpD,cAElBjzE,EAAMkX,iBACNlX,EAAMiX,qBA3QH,EAkRnBg8D,YAAc,WACVz4E,SAASk+C,YAAY,gBAAgB,EAAO,MAC5Cl+C,SAASk+C,YAAY,UAAU,EAAO,OApRvB,EAuRnBm6B,WAAa,WACTr4E,SAASk+C,YAAY,gBAAgB,EAAO,MAC5Cl+C,SAASk+C,YAAY,UAAU,EAAO,MAEtCl+C,SAASk+C,YAAY,QAAQ,EAAO,OA3RrB,EA8RnBo6B,aAAe,WACXt4E,SAASk+C,YAAY,gBAAgB,EAAO,MAC5Cl+C,SAASk+C,YAAY,UAAU,EAAO,MAEtCl+C,SAASk+C,YAAY,UAAU,EAAO,OAlSvB,EAqSnBq6B,WAAa,WACTv4E,SAASk+C,YAAY,gBAAgB,EAAO,MAC5Cl+C,SAASk+C,YAAY,UAAU,EAAO,MAEtC,IAAIltC,EAAO,GACHmoD,EALO,gBAKPA,UACJA,IAAcA,EAAU+Y,cACxBlhE,EAAOmoD,EAAU3jC,YAGhBxkB,IACLA,EAAI,gBAAYA,EAAZ,WACJhR,SAASk+C,YAAY,gBAAgB,EAAO,MAC5Cl+C,SAASk+C,YAAY,cAAc,EAAOltC,KAlT3B,EAqTnB0nE,gBAAkB,WACd14E,SAASk+C,YAAY,gBAAgB,EAAO,MAC5Cl+C,SAASk+C,YAAY,UAAU,EAAO,MAEtCl+C,SAASk+C,YAAY,aAAa,EAAO,OAzT1B,EA4TnBy6B,oBAAsB,WAClB34E,SAASk+C,YAAY,gBAAgB,EAAO,MAC5Cl+C,SAASk+C,YAAY,UAAU,EAAO,MAEtCl+C,SAASk+C,YAAY,iBAAiB,EAAO,OAhU9B,EAmUnBs6B,UAAY,WACR,EAAKI,qBApUU,EAuUnBA,kBAAoB,WAChB,IAAIhD,EAAc,GACdC,EAAa,GAFK,kBAId1c,EAJc,EAIdA,UAAWJ,EAJG,EAIHA,MACnB,GAAIA,EAAO,CAAC,IACF8f,EAAiC9f,EAAjC8f,eACN,GAAIA,IADmC9f,EAAjB+f,aACe,CAAC,IAC1BC,EAAkBF,EAAlBE,cACJA,GAA4C,MAA3BA,EAAcxyD,WAC/BqvD,EAAcmD,EAAcnzD,UAC5BiwD,EAAakD,EAAc/xE,OAKlC4uE,IAAezc,GAAcA,EAAU+Y,cACxC0D,EAAczc,EAAU3jC,YAG5B,EAAK3Y,SAAS,CACVm8D,aAAa,EACbnD,aACAD,iBA9VW,EAkWnBqD,mBAAqB,WACjB,EAAKp8D,SACD,CACIm8D,aAAa,GAEjB,WACI,EAAKE,sBAxWE,EAoYnB1sB,YAAc,SAAAhnD,GACV,IAAMw8C,EAAYx8C,EAAMy8C,cAAcC,QAAQ,cAC1CF,IACAx8C,EAAMkX,iBACN1c,SAASk+C,YAAY,cAAc,EAAO8D,KAxY/B,EA4YnBsf,YAAc,WACV,EAAK6X,kBA7YU,EA0ZnBC,oBAAsB,WAClB,EAAKH,sBA3ZU,EA8ZnBI,kBAAoB,SAACroE,EAAMvN,GACvB,EAAKw1E,qBACLnkD,WAAW,WAAM,IAELikC,EAFK,gBAELA,MACR,GAAIA,EAAO,CAAC,IACA8f,EAAiC9f,EAAjC8f,eAAgBC,EAAiB/f,EAAjB+f,aACxB,GAAID,GAAkBA,IAAmBC,EAAc,CAAC,IAC5CnkC,EAAekkC,EAAflkC,WACR,GAAIA,GAAsC,MAAxBA,EAAWpuB,SAAkB,CAC3CouB,EAAW3tC,KAAOvD,EAClBkxC,EAAW5iC,MAAQtO,EACnBkxC,EAAW/uB,UAAY5U,EAHoB,IAMnCuhE,EAAc59B,EAAd49B,UACR,GAAIA,EAAW,CACX,IAAMxZ,EAAQ/4D,SAASg5D,cACvBD,EAAME,SAASsZ,EAAWA,EAAU1uD,YAAY7hB,QAChD+2D,EAAMugB,OAAO/G,EAAWA,EAAU1uD,YAAY7hB,QAE9C,IAAMm3D,EAAYn5D,SAASo5D,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEvB,SAMZ,IAAMnZ,EAAI,kBAAcn8C,EAAd,kBAA2BA,EAA3B,sDAA4EuN,EAA5E,QACVhR,SAASk+C,YAAY,gBAAgB,EAAO,MAC5Cl+C,SAASk+C,YAAY,cAAc,EAAO0B,IAC3C,IAhcY,EAmcnB25B,gBAAkB,SAAA/zE,GACd,IAAM63C,EAAU,EAAKm8B,aAAaz4D,QAC7Bs8B,GAELA,EAAQh2C,SAvcO,EA0cnBoyE,wBA1cmB,qBA0cO,sCAAAl9E,EAAA,wDAChB8gD,EAAU,EAAKm8B,aAAaz4D,QADZ,oDAKD,KADbqrD,EAAU/uB,EAAV+uB,OACEpqE,OALY,sDAOEk/B,MAAMqV,KAAK61B,GAPb,kBAOf1vE,EAPe,gBAQjBA,EARiB,kEAUEwxB,aAAsBxxB,GAVxB,QAUhBq7E,EAVgB,OAYtB,EAAKl7D,SAAS,CACVi7D,SAAUp7E,EACVq7E,cAGJ16B,EAAQ1oC,MAAQ,GAjBM,0CA1cP,EA8dnB+kE,kBAAoB,WAAO,IACf1B,EAAgB,EAAK/6D,MAArB+6D,YAER,EAAKn7D,SAAS,CACVm7D,aAAcA,KA/dlB,EAAKR,WAAav5D,IAAM0a,YACxB,EAAK6gD,aAAev7D,IAAM0a,YAE1B,EAAK1b,MAAQ,GANE,E,iFA6Cfjd,SAAS80C,iBAAiB,kBAAmB/wC,KAAKuzE,uBAAuB,K,6CAIzEt3E,SAAS+0C,oBAAoB,kBAAmBhxC,KAAKuzE,uBAAuB,K,uCAwC/Dn4D,GAAgB,IACrBnN,EAAMjO,KAAKwY,MAAXvK,EACFqrC,EAAUt5C,KAAKyzE,WAAWz2D,QAEhC,GAAK5B,EAAL,CAJ4B,IASpBnO,EAAmBmO,EAAnBnO,KAAM6C,EAAasL,EAAbtL,SACd,IACI,IAAMyR,EAAQG,aAASzU,EAAM6C,EAAU7B,GACvCqrC,EAAQ8D,UAAY,KACpB77B,EAAMtnB,QAAQ,SAAA4H,GACVy3C,EAAQj2C,YAAYxB,KAE1B,MAAOkf,GACLu4B,EAAQz3B,UAAY5U,QAZpBqsC,EAAQz3B,UAAY,O,sCAgRxB7hB,KAAKo1D,UAAYn5D,SAASo5D,eACrBr1D,KAAKo1D,WACLp1D,KAAKo1D,UAAUwgB,aAEpB51E,KAAKg1D,MAAQh1D,KAAKo1D,UAAUygB,WAAW,M,yCAGvB,IACR7gB,EAAUh1D,KAAVg1D,MAER,GAAKA,EAAL,CAKA,IAAMI,EAAYn5D,SAASo5D,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEnBh1D,KAAKyzE,WAAWz2D,QAAQi9B,aARpB8a,O,uCAwBJ,IAAMzb,EAAUt5C,KAAKyzE,WAAWz2D,QAChC,GAAKs8B,EAAL,CAFa,IAIL8D,EAAc9D,EAAd8D,UACU,SAAdA,GAAsC,oBAAdA,IACxB9D,EAAQ8D,UAAY,S,+BAgFlB,IAAD,EAC2Cp9C,KAAKwY,MAA7C7b,EADH,EACGA,OAAQE,EADX,EACWA,UAAW+2E,EADtB,EACsBA,QAAShzE,EAD/B,EAC+BA,KAAMqN,EADrC,EACqCA,EADrC,EAEiFjO,KAAKkZ,MAAnF24D,EAFH,EAEGA,YAAaC,EAFhB,EAEgBA,WAAYmD,EAF5B,EAE4BA,YAAa/B,EAFzC,EAEyCA,YAAac,EAFtD,EAEsDA,UAAWC,EAFjE,EAEiEA,YACtE,IAAKrzE,EAAM,OAAO,KAElB,IAAMhF,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACnCi5E,EAAYr+D,QAAQ7b,GACtBm6E,GAAU,EACVnC,GAAWA,EAAQ7rE,OAAoC,iBAA3B6rE,EAAQ7rE,MAAM,SAC1CguE,GAAU,EACH/B,GAAoC,iBAAvBA,EAAU,SAC9B+B,GAAU,EACH7C,GAAgD,iBAAjCA,EAAYr3E,QAAQ,WAC1Ck6E,GAAU,GAGd,IAAIhuE,EAAQ,KACR+tE,EACA/tE,EAAQisE,EAAYhrD,aAAS,CAAEntB,QAASm4E,IAAehrD,aAASptB,EAAS,MAClEg4E,IACP7rE,EAAQihB,aAAS,CAAEntB,QAAS+3E,EAAQ7rE,SAExC,IAAMiuE,EAAwB/nE,EAAZ6nE,EAAc,OAAY,QAE5C,OACI,kBAAC,IAAD,CACIx8D,mBAAoB,EACpB1Y,MAAM,EACN2Y,QAASvZ,KAAKmyE,aACd34D,kBAAgB,0BAChBy8D,QAASj2E,KAAK2zE,aACd,yBAAK9uD,UAAU,6BACX,yBAAK9hB,MAAO,CAAEyvE,OAAQ,KAAOzqE,GAC5B+tE,GACG,oCACI,kBAAC/wD,EAAA,EAAD,CACI4gD,eAAe,EACf1gD,aAAYhX,EAAE,QACd4W,UAAU,gCACVxiB,KAAK,QACL+W,QAASpZ,KAAKw1E,iBACd,kBAAC,KAAD,CAAUtwD,SAAS,aAEvB,2BACI8Q,IAAKh2B,KAAKy1E,aACV5wD,UAAU,yBACVrc,KAAK,OACL0tE,OAAO,UACPxqC,SAAU1rC,KAAK01E,4BAIzBI,GAAaC,GACX,kBAACrW,GAAA,EAAD,CACI9uD,MAAOqjE,EACPvoC,SAAU1rC,KAAK21E,kBACf5yE,MAAO,CAAEyvE,OAAQ,gBACjB,kBAAC7S,GAAA,EAAD,CACI/uD,OAAO,EACPgvD,QAAS,kBAACnuB,GAAA,EAAD,CAAOzsB,MAAM,YACtB4nC,MAAO3+C,EAAE,iBAEb,kBAAC0xD,GAAA,EAAD,CACI/uD,OAAO,EACPgvD,QAAS,kBAACnuB,GAAA,EAAD,CAAOzsB,MAAM,YACtB4nC,MAAO3+C,EAAE,kBAKzB,yBACI+nB,IAAKh2B,KAAKyzE,WACVh6E,GAAG,4BACH+/C,iBAAe,EACfoF,gCAA8B,EAC9BC,YAAa5wC,EAAE,WACf6wC,UAAW9+C,KAAKuoD,cAChBvJ,QAASh/C,KAAKyoD,YACdiV,QAAS19D,KAAKu9D,cAElB,kBAACzjD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQX,QAASpZ,KAAKmyE,aAAcntD,MAAM,WACrC/W,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQX,QAASpZ,KAAKo+B,WAAYpZ,MAAM,WACnCgxD,IAGT,kBAAC,GAAD,CACIp1E,KAAMq0E,EACNpD,YAAaA,EACbC,WAAYA,EACZI,OAAQlyE,KAAKs1E,kBACblD,SAAUpyE,KAAKq1E,0B,gDA1jBC78D,EAAOU,GAAQ,IACnCw5D,EAAax5D,EAAbw5D,SACA9xE,EAAqC4X,EAArC5X,KAAMjE,EAA+B6b,EAA/B7b,OAAQE,EAAuB2b,EAAvB3b,UAAW+2E,EAAYp7D,EAAZo7D,QAEjC,GAAIlB,IAAa9xE,EAAM,CACnB,GAAIA,EAAM,CACN,IAAMsyE,EAAcrvE,KAAa/J,IAAI6C,EAAQE,GACzCo3E,GAAc,EAOlB,OANIf,GAAgD,iBAAjCA,EAAYr3E,QAAQ,SACnCo4E,GAAc,EACPL,GAAWA,EAAQ7rE,OAAoC,iBAA3B6rE,EAAQ7rE,MAAM,WACjDksE,GAAc,GAGX,CACHvB,UAAU,EACVuB,cACAf,cACAc,UAAW,KACXD,SAAU,MAGd,MAAO,CACHrB,UAAU,EACVuB,aAAa,EACbf,YAAa,KACbc,UAAW,KACXD,SAAU,MAKtB,OAAO,S,GA1Ce75D,IAAMC,YAulBrBE,iBAAkBi5D,IC3kBlB5K,G,WA3BX,WAAY/rE,GAAS,oBACjBqD,KAAKrD,OAASA,EACdqD,KAAKm2E,WAAa,K,sDAGZtlE,GACN,GAAK7Q,KAAKrD,OAAV,CAEA,GAAIqD,KAAKm2E,YAAcn2E,KAAKm2E,WAAW,WAAatlE,EAAO,SAAU,CACjE,IAAIuC,EAAM,IAAIJ,KAEd,GADAI,EAAIgjE,WAAWhjE,EAAIijE,aAAeC,MAC9Bt2E,KAAKu2E,gBAAkBv2E,KAAKu2E,eAAiBnjE,EAC7C,OAIRpT,KAAKm2E,WAAatlE,EAClB7Q,KAAKu2E,eAAiB,IAAIvjE,KAE1Bha,KAAgBmI,KAAK,CACjB,QAAS,iBACTvE,QAASoD,KAAKrD,OACdkU,OAAQA,S,eCId2lE,I,OAAoBt8D,IAAM6X,KAAK,kBAAM,uDAErC0kD,G,YACF,WAAYj+D,GAAQ,IAAD,uBACf,4CAAMA,KA6FVk+D,wBAA0B,WAElBz6E,SAASu3E,gBAAkB,EAAKmD,cAAc35D,SAC9C,EAAK02D,iBAjGM,EAmInBkD,wBAA0B,SAAAr+E,GAAW,IACzB8vE,EAAU9vE,EAAV8vE,MACHA,GAEL,EAAKwO,gBAAgB15C,MAAMqV,KAAK61B,KAvIjB,EA0InB9e,uBAAyB,SAAAhxD,GAAW,IAAD,EACG,EAAK2gB,MAA/Bvc,EADuB,EACvBA,OAAQs2E,EADe,EACfA,cACRr2E,EAAuCrE,EAAvCqE,QAASoF,EAA8BzJ,EAA9ByJ,YAAa80E,EAAiBv+E,EAAjBu+E,aAEzB7D,GACA6D,GACDn6E,IAAWC,IAC6B,IAAxCoF,EAAYygB,QAAQwwD,IAExB,EAAKd,gBAnJU,EAsJnB4E,0BAA4B,SAAAx+E,GAAW,IAC3BoE,EAAsBpE,EAAtBoE,OAAQE,EAActE,EAAdsE,UAChB,GAAI,EAAKqc,MAAMvc,SAAWA,EAA1B,CAEKE,EAGD,EAAKm6E,wBAFL,EAAKC,2BAKT,IAAMC,EAA8B,IAAdr6E,GAAmBspB,aAAcxpB,EAAQE,GAC/D,EAAKic,SACD,CACIm6D,cAAep2E,EACfq6E,iBAEJ,WACS,EAAKh+D,MAAMg+D,gBACZ,EAAKC,iBACL,EAAK5Z,cACLxsC,WAAW,WACP,EAAKgkC,cACN,QA5KA,EAuNnBrhC,0BAA4B,SAAAn7B,GACJA,EAAZo7B,SAGR,EAAKyjD,aA3NU,EA8NnBC,yBAA2B,SAAA9+E,GAAW,IAC1BqE,EAAYrE,EAAZqE,QACW,EAAKsc,MAAhBvc,SAEOC,GAEf,EAAK06E,aApOU,EAuOnBC,0BAA4B,SAAAh/E,GAAW,IAClB2B,EAAS3B,EAAlB6D,QACR,GAAKlC,EAAL,CAFkC,IAI1BkC,EAAsClC,EAAtCkC,QAASU,EAA6B5C,EAA7B4C,UAAW2I,EAAkBvL,EAAlBuL,MAAOC,EAAWxL,EAAXwL,OACnC,GAAKtJ,EAAL,CAEA,IAAMk9C,EAAU,EAAKq9B,cAAc35D,QACnC,GAAKs8B,EAAL,CAEAA,EAAQz3B,UAAY,KAEpB,EAAKszD,mBAEL,IAAMt5E,EAAU,CACZ,QAAS,sBACTO,QAAS,CACL,QAAS,cACT3C,GAAI2C,EAAQ3C,IAEhBgM,QACAC,UAGJ,GAAI5I,EAAW,CAAC,IACG06E,EAAmD16E,EAA1D2I,MAA+BgyE,EAA2B36E,EAAnC4I,OAAyB1J,EAAUc,EAAVd,MAExDH,EAAQiB,UAAY,CAChBA,UAAW,CACP,QAAS,cACTrD,GAAIuC,EAAMvC,IAEdgM,MAAO+xE,EACP9xE,OAAQ+xE,GAIhB,EAAKC,YAAY77E,GAAS,EAAO,SAAAiF,MAEjC9H,KAAgB8G,aAAa,CACzB,QAAS,gCACTg3B,KAAM,WAhRK,EAoRnB6gD,oBAAsB,SAAAp/E,GAAW,IACb0qD,EAAkB,EAAK/pC,MAA/Bvc,OACAA,EAAsBpE,EAAtBoE,OAAQE,EAActE,EAAdsE,UAEZomD,IAAkBtmD,IAItB,EAAKmc,SAAS,CAAEb,iBAAkBpb,IAE9BA,GACA,EAAK+6E,kBA/RM,EAmSnB9pB,qBAAuB,SAAAv1D,GACA,EAAK2gB,MAAhBvc,SACOpE,EAAOw1D,aAEtB,EAAKqpB,YACL,EAAKS,eAAiB,KACtB,EAAK/+D,SACD,CACInc,OAAQpE,EAAOw1D,WACf91C,iBAAkBD,YAA6Bzf,EAAOw1D,YACtDklB,cAAe,EACfgC,aAAa,GAEjB,WACI,EAAKqC,gBAjTE,EAsTnBQ,SAAW,WAAO,IACNn7E,EAAW,EAAKuc,MAAhBvc,OAEF28C,EAAU,EAAKq9B,cAAc35D,QAE7B5B,EAAgBrD,YAAapb,GAC/Bye,GACA,EAAKy4D,iBAAiBz4D,GACtB,EAAKtC,SAAS,CACVb,iBAAkBD,YAA6Brb,MAGnD28C,EAAQz3B,UAAY,MAlUT,EAkXnB+1D,cAAgB,WACZ7mD,WAAW,WAGPgkC,GAFgB,EAAK4hB,cAAc35D,UAGpC,MAvXY,EA0XnB+6D,oBAAsB,SAAAC,GAClB,GAAKA,EAAL,CADsC,IAG9Br7E,EAAyBq7E,EAAzBr7E,OAAQs7E,EAAiBD,EAAjBC,aACXt7E,GAEL3D,KAAgBmI,KAAK,CACjB,QAAS,sBACTvE,QAASD,EACTkO,cAAeotE,MAnYJ,EAuYnBC,gBAAkB,SAACv7E,EAAQsb,EAAkBmlC,GACzC,IAAM/hD,EAAO0O,IAAUjQ,IAAI6C,GAC3B,GAAKtB,EAAL,CAFuD,IAI/CwP,EAAkBxP,EAAlBwP,cAJ+C,EAK5BmX,aAAYo7B,GAA/BnwC,EAL+C,EAK/CA,KAAM6C,EALyC,EAKzCA,SACRmoE,EACDhrE,GAAQA,EAAKhP,OAAS,GAAM6R,EAAS7R,OAAS,EACzC,CACI,QAAS,eACTyJ,oBAAqBuQ,EACrB1I,mBAAoB,CAChB,QAAS,mBACTtC,KAAM,CACF,QAAS,gBACTA,OACA6C,YAEJitC,0BAA0B,EAC1BC,aAAa,IAGrB,KAEV,OAAI7tC,YAAYtE,EAAeotE,GACpB,KAGJ,CAAEt7E,SAAQs7E,kBAnaF,EAsanB7hC,aAAe,WAAO,IAAD,EACiB,EAAKl9B,MAA/Bvc,EADS,EACTA,OAAQs2E,EADC,EACDA,cACV35B,EAAU,EAAKq9B,cAAc35D,QACnC,GAAKs8B,EAAL,CAHiB,IAKX8D,EAAc9D,EAAd8D,UAON,GALA9D,EAAQz3B,UAAY,KACpB,EAAK07C,cAEL2V,YAAYv2E,EAAQ,GAEfygD,GACAA,EAAUx2B,OAAf,CAbiB,MAeU5E,aAAYo7B,GAEjChiC,EAAgB,CAClB,QAAS,gBACTnO,KAnBa,EAeTA,KAKJ6C,SApBa,EAeHA,UAORqoE,EAAe,CACjB,QAAS,mBACTlrE,KAAMmO,EACN2hC,0BAA0B,EAC1BC,aAAa,GAGjB,GAAIi2B,EAAe,CACf,IAAMmF,EAAgBv0E,KAAa/J,IAAI6C,EAAQs2E,GAC/C,IAAKmF,EAAe,OAFL,IAIPv8E,EAAYu8E,EAAZv8E,QACR,IAAKA,EAAS,OALC,IAOPoR,EAAkBpR,EAAlBoR,KAAMH,EAAYjR,EAAZiR,QACVG,EACA,EAAKorE,gBAAgBF,EAAc,SAAAr3E,MAC5BgM,GACP,EAAKwrE,mBAAmBl9D,QAG5B,EAAKs8D,YAAYS,GAAc,EAAO,SAAAr3E,SAjd3B,EAqdnBosE,iBAAmB,WACfl0E,KAAgB8G,aAAa,CACzB,QAAS,yBAvdE,EA2dnBgtE,kBAAoB,WACX,EAAKyL,gBAEV,EAAKA,eAAev7D,QAAQ1Z,SA9db,EAmfnBk1E,0BAnfmB,qBAmfS,oCAAAhgF,EAAA,wDAEH,KADb6vE,EAAU,EAAKkQ,eAAev7D,QAA9BqrD,OACEpqE,OAFc,oDAIH,IAAjBoqE,EAAMpqE,OAJc,sBAKOk/B,MAAMqV,KAAK61B,GALlB,kBAKboQ,EALa,gBAMfA,EANe,iEAQE,EAAKC,WAAWD,GAAS,GAR3B,OAQd7E,EARc,OAUpB,EAAK96D,SAAS,CACVo+D,eAAe,EACftD,YAZgB,wBAepBz2C,MAAMqV,KAAK61B,GAAOpuE,QAAlB,sCAA0B,WAAMtB,GAAN,uBAAAH,EAAA,qEACQ6xB,aAAc1xB,GADtB,mCACf8M,EADe,KACRC,EADQ,KAGhB7J,EAAU,CACZ,QAAS,oBACTG,MAAO,CAAE,QAAS,gBAAiBiuB,KAAMtxB,EAAKsxB,KAAM5nB,KAAM1J,EAAK0J,KAAMf,KAAM3I,GAC3E8M,QACAC,UAGJ,EAAKizE,gBAAgB98E,EAASlD,GAVR,yCAA1B,uDAfoB,QA6BxB,EAAK4/E,eAAev7D,QAAQpM,MAAQ,GA7BZ,0CAnfT,EAmhBnBo8D,qBAAuB,WACd,EAAK4L,mBAEV,EAAKA,kBAAkB57D,QAAQ1Z,SAthBhB,EAyhBnBu1E,6BAzhBmB,qBAyhBY,oCAAArgF,EAAA,wDAEN,KADb6vE,EAAU,EAAKuQ,kBAAkB57D,QAAjCqrD,OACEpqE,OAFiB,oDAIN,IAAjBoqE,EAAMpqE,OAJiB,sBAKIk/B,MAAMqV,KAAK61B,GALf,kBAKhBoQ,EALgB,gBAMlBA,EANkB,iEAQD,EAAKC,WAAWD,GAAS,GARxB,OAQjB7E,EARiB,OAUvB,EAAK96D,SAAS,CACVo+D,eAAe,EACftD,YAZmB,wBAevBz2C,MAAMqV,KAAK61B,GAAOpuE,QAAQ,SAAAtB,GACtB,IAAMkD,EAAU,CACZ,QAAS,uBACTI,SAAU,CAAE,QAAS,gBAAiBguB,KAAMtxB,EAAKsxB,KAAM5nB,KAAM1J,EAAK0J,KAAMf,KAAM3I,IAGlF,EAAKmgF,mBAAmBj9E,EAASlD,KArBd,QAyB3B,EAAKigF,kBAAkB57D,QAAQpM,MAAQ,GAzBZ,0CAzhBZ,EA2oBnB8jE,YAAc,WACVz4E,SAASk+C,YAAY,gBAAgB,EAAO,MAC5Cl+C,SAASk+C,YAAY,UAAU,EAAO,OA7oBvB,EAgpBnBm6B,WAAa,WACTr4E,SAASk+C,YAAY,gBAAgB,EAAO,MAC5Cl+C,SAASk+C,YAAY,UAAU,EAAO,MAEtCl+C,SAASk+C,YAAY,QAAQ,EAAO,OAppBrB,EAupBnBo6B,aAAe,WACXt4E,SAASk+C,YAAY,gBAAgB,EAAO,MAC5Cl+C,SAASk+C,YAAY,UAAU,EAAO,MAEtCl+C,SAASk+C,YAAY,UAAU,EAAO,OA3pBvB,EA8pBnBq6B,WAAa,WACTv4E,SAASk+C,YAAY,gBAAgB,EAAO,MAC5Cl+C,SAASk+C,YAAY,UAAU,EAAO,MAEtC,IAAIltC,EAAO,GACHmoD,EALO,gBAKPA,UACJA,IAAcA,EAAU+Y,cACxBlhE,EAAOmoD,EAAU3jC,YAGhBxkB,IACLA,EAAI,gBAAYA,EAAZ,WACJhR,SAASk+C,YAAY,gBAAgB,EAAO,MAC5Cl+C,SAASk+C,YAAY,cAAc,EAAOltC,KA3qB3B,EA8qBnB0nE,gBAAkB,WACd14E,SAASk+C,YAAY,gBAAgB,EAAO,MAC5Cl+C,SAASk+C,YAAY,UAAU,EAAO,MAEtCl+C,SAASk+C,YAAY,aAAa,EAAO,OAlrB1B,EAqrBnBy6B,oBAAsB,WAClB34E,SAASk+C,YAAY,gBAAgB,EAAO,MAC5Cl+C,SAASk+C,YAAY,UAAU,EAAO,MAEtCl+C,SAASk+C,YAAY,iBAAiB,EAAO,OAzrB9B,EA4rBnBs6B,UAAY,WACR,EAAKI,qBA7rBU,EAgsBnB1C,aAAe,WAAO,IAAD,EACmC,EAAKj5D,MAAjDvc,EADS,EACTA,OAAQs2E,EADC,EACDA,cAAeh7D,EADd,EACcA,iBAC3Bg7D,EACAC,YAAYv2E,EAAQ,GACbsb,GACPk7D,YAAax2E,EAAQ,IArsBV,EAysBnB4rD,cAAgB,SAAA9mD,GAAU,IACd0yE,EAAwD1yE,EAAxD0yE,OAAQC,EAAgD3yE,EAAhD2yE,QAAS92B,EAAuC77C,EAAvC67C,QAAS+2B,EAA8B5yE,EAA9B4yE,QAAShpD,EAAqB5pB,EAArB4pB,OAAQmkD,EAAa/tE,EAAb+tE,SAInD,OAAQlyB,GAEJ,KAAK,GACI62B,GAAWC,GAAYC,GAAY7E,IAC/BnkD,GAAQ,EAAK+qB,eAElB30C,EAAMkX,iBACNlX,EAAMiX,mBAEV,MAGJ,KAAK,GACIy7D,GAAWC,GAAYC,GAAY7E,IAC/BnkD,GAAQ,EAAK8mD,eAElB1wE,EAAMkX,iBACNlX,EAAMiX,mBAEV,MAGJ,KAAK,GACD,IAAK2S,IAAW8oD,IAAWC,IAAYC,IAAY7E,EAAU,CACzD,IAAMl2B,EAAU,EAAKq9B,cAAc35D,QACnC,GAAIs8B,IAAYA,EAAQz3B,UAAW,CAE/B,GAD0B,EAAK3I,MAAvB+5D,cACW,OAEnBj6E,KAAgB8G,aAAa,CACzB,QAAS,+BAGb2B,EAAMkX,iBACNlX,EAAMiX,mBAGd,MAGJ,KAAK,GACIy7D,IAAWC,IAAWC,GAAa7E,IAC/BnkD,GAAQ,EAAKipD,aAElB7yE,EAAMkX,iBACNlX,EAAMiX,mBAEV,MAGJ,KAAK,GACIy7D,IAAWC,IAAWC,GAAa7E,IAC/BnkD,GAAQ,EAAKkpD,eAElB9yE,EAAMkX,iBACNlX,EAAMiX,mBAEV,MAEJ,KAAK,GAEIy7D,IAAWC,IAAWC,GAAa7E,EAO/B2E,IAAWC,GAAWC,KAAa7E,IACnCnkD,GAAQ,EAAKmpD,aAElB/yE,EAAMkX,iBACNlX,EAAMiX,oBAVD2S,GAAQ,EAAKopD,YAElBhzE,EAAMkX,iBACNlX,EAAMiX,mBASV,MAGJ,KAAK,IACGy7D,IAAWC,GAAWC,KAAa7E,IAC9BnkD,GAAQ,EAAKqpD,cAElBjzE,EAAMkX,iBACNlX,EAAMiX,qBAhyBH,EAuyBnBigE,gBAAkB,SAAC98E,EAASlD,GACnBkD,GAEL,EAAK67E,YAAY77E,GAAS,EAAM,SAAAiF,GAC5B,IAAMi4E,EAAgBl1E,KAAa/J,IAAIgH,EAAOlE,QAASkE,EAAOrH,IACzC,MAAjBs/E,GACA,EAAKC,qBAAqBD,EAAepgF,GAG7CqL,IAAUi1E,WAAWn4E,EAAOjF,QAAQG,MAAMgC,MAAM,GAAGhC,MAAMvC,GAAIqH,MAhzBlD,EAozBnBo4E,eAAiB,SAAA97D,GACb,EAAKs6D,YAAYt6D,GAAM,EAAM,eArzBd,EAwzBnB07D,mBAAqB,SAACj9E,EAASlD,GACtBkD,GAEL,EAAK67E,YAAY77E,GAAS,EAAM,SAAAiF,GAAM,OAAIkD,IAAUi1E,WAAWn4E,EAAOjF,QAAQI,SAASA,SAASxC,GAAIqH,MA3zBrF,EA+0BnB2nD,YA/0BmB,sCA+0BL,WAAMhnD,GAAN,qBAAAjJ,EAAA,0DACQiJ,EAAMy8C,eAAiBz8C,EAAM03E,cAAcj7B,cAArDjmD,EADE,EACFA,MADE,oDAIJowE,EAAQ,GACdlrC,MAAMqV,KAAKv6C,GAAOgC,QAAQ,SAAAC,GACtB,GAAkC,IAA9BA,EAAKk/E,KAAK32D,QAAQ,QAAe,CACjC,IAAM9pB,EAAOuB,EAAKm/E,YACd1gF,GACA0vE,EAAMnoE,KAAKvH,QAKnB0vE,EAAMpqE,OAAS,GAdT,uBAeNwD,EAAMkX,iBAEN,EAAKk+D,gBAAgBxO,GAjBf,+BAqBJpqB,EAAYx8C,EAAMy8C,cAAcC,QAAQ,eArBpC,wBAuBN18C,EAAMkX,iBACN1c,SAASk+C,YAAY,cAAc,EAAO8D,GAxBpC,6DA/0BK,wDA42BnBq7B,mBAAqB,WAAO,IAChBjR,EAAU,EAAKnvD,MAAfmvD,MACHA,GACAA,EAAMpqE,SAEXoqE,EAAMpuE,QAAQ,SAAAtB,GACV,IAAMkD,EAAU,CACZ,QAAS,uBACTI,SAAU,CAAE,QAAS,gBAAiBguB,KAAMtxB,EAAKsxB,KAAM3oB,KAAM3I,IAGjE,EAAKmgF,mBAAmBj9E,EAASlD,KAGrC,EAAK4gF,sBA13BU,EA63BnBA,kBAAoB,WAChB,EAAKzgE,SAAS,CAAEuvD,MAAO,QA93BR,EAi4BnBmR,yBAA2B,WACF,EAAKtgE,MAAlBugE,WAGR,EAAKnC,YACL,EAAKoC,4BAt4BU,EAy4BnBA,wBAA0B,WACtB,EAAK5gE,SAAS,CAAE2gE,SAAU,QA14BX,EA64BnBT,qBAAuB,SAACp9E,EAASsD,GAC7B,GAAKtD,EAAL,CADsC,IAG9ByqB,EAAwCzqB,EAAxCyqB,cAAexqB,EAAyBD,EAAzBC,QAASe,EAAgBhB,EAAhBgB,QAASnD,EAAOmC,EAAPnC,GACzC,GAAK4sB,GAC0B,+BAA3BA,EAAc,UACO,iBAArBxqB,EAAQ,SAAZ,CANsC,IAQ9BG,EAAUH,EAAVG,MACR,GAAKA,EAAL,CAEA,IAAMqG,EAAO8D,aAAQnK,EAAMgC,MAAOuI,KAClC,GAAKlE,EAAL,CAZsC,IAcvB1J,EAAS0J,EAAhBrG,MACHrD,IACDA,EAAKuG,OAETvG,EAAKuG,KAAOA,EACZ8E,IAAU7F,gBAAgBvB,EAASnD,EAAId,EAAKc,WAh6B7B,EAs9BnBi+E,YAt9BmB,sCAs9BL,WAAO77E,EAAS89E,EAAY55E,GAA5B,qBAAAvH,EAAA,0DAC2B,EAAK0gB,MAAlCvc,EADE,EACFA,OAAQsb,EADN,EACMA,iBAEXtb,EAHK,oDAILd,EAJK,0EAOAof,KAAS2+D,sBAAT,0CAAkEj9E,IAPlE,wBASe3D,KAAgBmI,KAAK,CACtC,QAAS,cACTvE,QAASD,EACT+K,oBAAqBuQ,EACrB6kC,sBAAuBjhD,IAbrB,QASAiF,EATA,OAgBN,EAAKgY,SAAS,CAAEb,iBAAkB,GAAK,WAC/B0hE,GACA,EAAKvC,cAKbp+E,KAAgBmI,KAAK,CACjB,QAAS,eACTvE,QAASD,EACTqF,YAAa,CAAClB,EAAOrH,MAGzBsG,EAASe,GA7BH,kDA+BN+4E,MAAM,qBAAuBtrE,KAAKwe,UAAL,OA/BvB,wDAt9BK,4DAy/BnB+sD,kBAAoB,SAAAx8D,GACXA,IAEL,EAAK63D,mBACLl5E,SAASk+C,YAAY,cAAc,EAAO78B,EAAMy8D,QAChD,EAAKxc,gBA9/BU,EAigCnBA,YAjgCmB,sCAigCL,WAAM97D,GAAN,SAAAjJ,EAAA,qDACV,EAAKwhF,YACL,EAAKC,WAFK,yCAjgCK,wDAsgCnBpF,kBAAoB,WAChB,IAAIhD,EAAc,GACdC,EAAa,GAFK,kBAId1c,EAJc,EAIdA,UAAWJ,EAJG,EAIHA,MACnB,GAAIA,EAAO,CAAC,IACF8f,EAAiC9f,EAAjC8f,eACN,GAAIA,IADmC9f,EAAjB+f,aACe,CAAC,IAC1BC,EAAkBF,EAAlBE,cACJA,GAA4C,MAA3BA,EAAcxyD,WAC/BqvD,EAAcmD,EAAcnzD,UAC5BiwD,EAAakD,EAAc/xE,OAKlC4uE,IAAezc,GAAcA,EAAU+Y,cACxC0D,EAAczc,EAAU3jC,YAG5B,EAAK3Y,SAAS,CACVm8D,aAAa,EACbnD,aACAD,iBA7hCW,EAiiCnBqD,mBAAqB,WACjB,EAAKp8D,SACD,CACIm8D,aAAa,GAEjB,WACI,EAAKE,sBAviCE,EAmkCnBpgB,WAAa,WACT,IAAMzb,EAAU,EAAKq9B,cAAc35D,QACnC,GAAKs8B,EACL,GAAKA,EAAQ/2B,WAAWtkB,OAAxB,CAKA,IAAMi8E,EAAexlB,GAAiBpb,GACtC,GAAK4gC,EAAL,CAIA,IAAMllB,EAAQ/4D,SAASg5D,cACvBD,EAAME,SAASglB,EAAcA,EAAaj8E,QAC1C+2D,EAAMG,UAAS,GAEf,IAAMC,EAAY10D,OAAO20D,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEnB1b,EAAQW,cAjBJX,EAAQW,SAvkCG,EA2lCnBo7B,oBAAsB,WAClB,EAAKH,sBA5lCU,EA+lCnBI,kBAAoB,SAACroE,EAAMvN,GACvB,EAAKw1E,qBACLnkD,WAAW,WAAM,IAELikC,EAFK,gBAELA,MACR,GAAIA,EAAO,CAAC,IACA8f,EAAiC9f,EAAjC8f,eAAgBC,EAAiB/f,EAAjB+f,aACxB,GAAID,GAAkBA,IAAmBC,EAAc,CAAC,IAC5CnkC,EAAekkC,EAAflkC,WACR,GAAIA,GAAsC,MAAxBA,EAAWpuB,SAAkB,CAC3CouB,EAAW3tC,KAAOvD,EAClBkxC,EAAW5iC,MAAQtO,EACnBkxC,EAAW/uB,UAAY5U,EAHoB,IAMnCuhE,EAAc59B,EAAd49B,UACR,GAAIA,EAAW,CACX,IAAMxZ,EAAQ/4D,SAASg5D,cACvBD,EAAME,SAASsZ,EAAWA,EAAU1uD,YAAY7hB,QAChD+2D,EAAMugB,OAAO/G,EAAWA,EAAU1uD,YAAY7hB,QAE9C,IAAMm3D,EAAYn5D,SAASo5D,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEvB,SAMZ,IAAMnZ,EAAI,kBAAcn8C,EAAd,kBAA2BA,EAA3B,sDAA4EuN,EAA5E,QACVhR,SAASk+C,YAAY,gBAAgB,EAAO,MAC5Cl+C,SAASk+C,YAAY,cAAc,EAAO0B,IAC3C,IAjoCY,EAooCnBs+B,sBAAwB,WACpB,EAAKC,wBAroCU,EAwoCnB5E,gBAAkB,SAAC1oE,EAASjR,GACpBA,EACA,EAAKw+E,iBAAiBx+E,GAI1B,EAAKy8E,mBAAmBxrE,IA9oCT,EAipCnBwtE,gBAAkB,SAACz+E,EAASlD,GAGxB,OAFA,EAAKyhF,sBAAqB,GAElBv+E,EAAQ,UACZ,IAAK,oBACD,EAAK88E,gBAAgB98E,EAASlD,GAC9B,MAEJ,IAAK,uBACD,EAAKmgF,mBAAmBj9E,EAASlD,KA1pC1B,EAorCnB2rD,kBAAoB,WAChBvzB,WAAW,kBAAM,EAAKokD,oBAAoB,IAlrC1C,EAAKyD,kBAAoB1+D,IAAM0a,YAC/B,EAAK2jD,eAAiBr+D,IAAM0a,YAC5B,EAAK+hD,cAAgBz8D,IAAM0a,YAE3B,IAAMj4B,EAASse,KAASioC,YAPT,OASf,EAAKhqC,MAAQ,CACTvc,SACAsb,iBAAkBD,YAA6Brb,GAC/Cs2E,cAAe,EACfsH,SAAU,MAGdt+E,SAASk+C,YAAY,6BAA6B,EAAO,MAhB1C,E,mFAmBG9qB,EAAWC,GAAY,IACjCrhB,EAAMjO,KAAKwY,MAAXvK,EADgC,EAWpCjO,KAAKkZ,MARLvc,EAHoC,EAGpCA,OACA88E,EAJoC,EAIpCA,SACApR,EALoC,EAKpCA,MACApwD,EANoC,EAMpCA,iBACAg7D,EAPoC,EAOpCA,cACAiE,EARoC,EAQpCA,cACAjC,EAToC,EASpCA,YACAsF,EAVoC,EAUpCA,SAGJ,OAAIlrD,EAAUphB,IAAMA,IAIhBqhB,EAAU3yB,SAAWA,IAIrB2yB,EAAUmqD,WAAaA,IAIvBnqD,EAAU+4C,QAAUA,IAIpB/4C,EAAUrX,mBAAqBA,IAI/BqX,EAAU2jD,gBAAkBA,IAI5B3jD,EAAUirD,WAAaA,IAIvBjrD,EAAU2lD,cAAgBA,GAI1B3lD,EAAU4nD,gBAAkBA,W,kCAQhCl3E,KAAK83E,WACL93E,KAAK43E,gBACL53E,KAAKu9D,gB,kCAGI,IAAD,EAC4Cv9D,KAAKkZ,MAAjDvc,EADA,EACAA,OAAQs2E,EADR,EACQA,cAAeh7D,EADvB,EACuBA,iBAEzBqhC,EAAUt5C,KAAK22E,cAAc35D,QACnC,GAAKs8B,EAAL,CAEA,IAAI8D,EAAY,KAEZA,EADA61B,EACYjzE,KAAK63E,eAAiB73E,KAAK63E,eAAez6B,UAAY,KAEtD9D,EAAQ8D,UAGxB,IAAM66B,EAAej4E,KAAKk4E,gBAAgBv7E,EAAQsb,EAAkBmlC,GACpEp9C,KAAK+3E,oBAAoBE,M,0CAWzBh8E,SAAS80C,iBAAiB,kBAAmB/wC,KAAK02E,yBAAyB,GAE3Ez7D,KAAShiB,GAAG,qBAAsB+G,KAAK8tD,sBACvC7yC,KAAShiB,GAAG,0BAA2B+G,KAAK+2E,2BAC5C97D,KAAShiB,GAAG,0BAA2B+G,KAAK0zB,2BAC5C3pB,IAAU9Q,GAAG,yBAA0B+G,KAAKq3E,0BAC5CrzE,IAAU/K,GAAG,wBAAyB+G,KAAK42E,yBAC3C/yE,KAAa5K,GAAG,oBAAqB+G,KAAK23E,qBAC1C9zE,KAAa5K,GAAG,uBAAwB+G,KAAKupD,wBAC7Cz0B,KAAa77B,GAAG,0BAA2B+G,KAAKu3E,2BAEhDv3E,KAAKs3E,c,6CAILt3E,KAAKo3E,YAELn8D,KAAS9hB,IAAI,qBAAsB6G,KAAK8tD,sBACxC7yC,KAAS9hB,IAAI,0BAA2B6G,KAAK+2E,2BAC7C97D,KAAS9hB,IAAI,0BAA2B6G,KAAK0zB,2BAC7C3pB,IAAU5Q,IAAI,yBAA0B6G,KAAKq3E,0BAC7CrzE,IAAU7K,IAAI,wBAAyB6G,KAAK42E,yBAC5C/yE,KAAa1K,IAAI,oBAAqB6G,KAAK23E,qBAC3C9zE,KAAa1K,IAAI,uBAAwB6G,KAAKupD,wBAC9Cz0B,KAAa37B,IAAI,0BAA2B6G,KAAKu3E,2BAEjDt7E,SAAS+0C,oBAAoB,kBAAmBhxC,KAAK02E,yBAAyB,K,iDAmD9E,IAAMp9B,EAAUt5C,KAAK22E,cAAc35D,QACnC,GAAKs8B,EAAL,CAFuB,IAIfu+B,EAAmB73E,KAAnB63E,eAER,GAAIA,EAAgB,CAGhB,GAFAv+B,EAAQ8D,UAAYy6B,EAAez6B,WAE9By6B,EAAe7iB,MAEhB,YADAh1D,KAAK+0D,aAIT,IAAMK,EAAYn5D,SAASo5D,eAC3BD,EAAUE,kBACVF,EAAUG,SAASsiB,EAAe7iB,OAElC1b,EAAQW,aAERX,EAAQ8D,UAAY,KACpBp9C,KAAK+0D,aAGT/0D,KAAKu9D,iB,8CAIL,IAAMjkB,EAAUt5C,KAAK22E,cAAc35D,QAC9Bs8B,IAELt5C,KAAK63E,eAAiB,CAClBz6B,UAAW9D,EAAQ8D,UACnB4X,MAAOh1D,KAAKg1D,U,uCAmHF,IAAD,EACqBh1D,KAAKkZ,MAA/Bvc,EADK,EACLA,OAAQs2E,EADH,EACGA,cAEVr3E,EAAUiI,KAAa/J,IAAI6C,EAAQs2E,GACzC,GAAKr3E,EAAL,CAJa,IAMLC,EAAYD,EAAZC,QACR,GAAKA,EAAL,CAPa,IASLoR,EAAkBpR,EAAlBoR,KAAMH,EAAYjR,EAAZiR,QACd,GAAKG,GAASH,EAAd,CAEA,IAAMwsC,EAAUt5C,KAAK22E,cAAc35D,QAE/B/P,EACAjN,KAAK6zE,iBAAiB5mE,GACfH,EACP9M,KAAK6zE,iBAAiB/mE,GAEtBwsC,EAAQz3B,UAAY,U,uCAIXzG,GAAgB,IACrBnN,EAAMjO,KAAKwY,MAAXvK,EACFqrC,EAAUt5C,KAAK22E,cAAc35D,QAEnC,GAAK5B,EAAL,CAJ4B,IASpBnO,EAAmBmO,EAAnBnO,KAAM6C,EAAasL,EAAbtL,SACd,IACI,IAAMyR,EAAQG,aAASzU,EAAM6C,EAAU7B,GACvCqrC,EAAQ8D,UAAY,KACpB77B,EAAMtnB,QAAQ,SAAA4H,GACVy3C,EAAQj2C,YAAYxB,KAE1B,MAAOkf,GACLu4B,EAAQz3B,UAAY5U,QAZpBqsC,EAAQz3B,UAAY,O,yEA+HXlpB,EAAM6hF,G,2EACd7hF,E,yCAAa,M,WAEZmU,EAAU9M,KAAK22E,cAAc35D,QAAQogC,aAEvCp9C,KAAK22E,cAAc35D,QAAQogC,UAAY,KACvCp9C,KAAKu9D,gBAGKid,E,iCAAmBrwD,aAAsBxxB,G,4DAAcoxB,aAAyBpxB,G,mCAAxFoP,E,uBAEC,CACHpP,OACAoP,QACA+E,Y,0IAsEK,IAAD,EAC0B9M,KAAKkZ,MAA/Bvc,EADA,EACAA,OAAQs2E,EADR,EACQA,cACV53E,EAAO0O,IAAUjQ,IAAI6C,GAC3B,GAAKtB,EAAL,CAEA,IAAMi+C,EAAUt5C,KAAK22E,cAAc35D,QACnC,GAAKs8B,EAAL,CANQ,IAQA8D,EAAc9D,EAAd8D,UAMR,GALkB,SAAdA,GAAsC,oBAAdA,IACxB9D,EAAQ8D,UAAY,MAEF9D,EAAdz3B,UAGR,IAAI5S,YAAStS,GACb,IAAIs2E,GAEkB53E,EAAKqtE,sBAAwBrtE,EAAKqtE,oBAAsB,IAAIA,GAAoBrtE,EAAK5B,MAC7FugF,UAAU,CAAE,QAAS,yB,iCAG3B,IACA/G,EAAkBjzE,KAAKkZ,MAAvB+5D,cACFpxD,EAAY7hB,KAAK22E,cAAc35D,QAAQ6E,UAC7C,IAAKA,GAAaA,EAAU5jB,OAAS,IAAMg1E,EAA3C,CACqBn+C,KAATgC,MAEJ99B,KAAgB8G,aAAa,CACzB,QAAS,gCACTg3B,KAAM,WALlB,CAYW2jD,YAAYrnE,MAAvB,IAEImpB,EADUpc,OACIC,KAAKyB,GACZ44D,YAAYrnE,MAEvB,GAAKmpB,GAAS1a,IAAc0a,EAAM,GAAlC,CAYA,IAAM1Q,EAAY7Y,KAAKI,MACvBpa,KAAgBmI,KAAK,CACjB,QAAS,cACTmc,MAAOif,EAAM,GACblQ,MAAO,MACR9qB,KAAK,SAAA0J,GACJjS,KAAgB8G,aAAa,CACzB,QAAS,gCACTg3B,KAAM,CACFjL,YACAvO,MAAOif,EAAM,GACbtxB,gBAKZjS,KAAgBmI,KAAK,CACjB,QAAS,iBACTmc,MAAOif,EAAM,GACblQ,MAAO,MACR9qB,KAAK,SAAA0J,GACJjS,KAAgB8G,aAAa,CACzB,QAAS,iCACTg3B,KAAM,CACFjL,YACAvO,MAAOif,EAAM,GACbtxB,oBAtCZ,CACqB6pB,KAATgC,MAEJ99B,KAAgB8G,aAAa,CACzB,QAAS,gCACTg3B,KAAM,W,8EA0NAuxC,G,yEACbA,E,oDACAA,EAAMpqE,O,oDAEU,IAAjBoqE,EAAMpqE,O,iCACgB+B,KAAK04E,WAAWrQ,EAAM,GAAIA,EAAM,GAAG7/D,KAAK4hB,WAAW,U,UAAnEwpD,E,0DAGN5zE,KAAK8Y,SAAS,CACVo+D,eAAe,EACftD,Y,wBAGJ5zE,KAAK8Y,SAAS,CAAEuvD,U,6IAwFPxsE,GAAU,IAAD,EACYmE,KAAKkZ,MAA/Bvc,EADc,EACdA,OAAQs2E,EADM,EACNA,cAGXt2E,GACAs2E,GACAp3E,GAEL7C,KAAgBmI,KAAK,CACjB,QAAS,mBACTvE,QAASD,EACTgiB,WAAYs0D,EACZn2B,sBAAuBjhD,M,yCAIZiR,GAAU,IAAD,EACU9M,KAAKkZ,MAA/Bvc,EADgB,EAChBA,OAAQs2E,EADQ,EACRA,cAEXt2E,GACAs2E,GACAnmE,GAEL9T,KAAgBmI,KAAK,CACjB,QAAS,qBACTvE,QAASD,EACTgiB,WAAYs0D,EACZnmE,c,8EAIcjR,EAASkE,G,iFACOC,KAAKkZ,MAA/Bvc,E,EAAAA,OAAQs2E,E,EAAAA,cAEXt2E,E,oDACAs2E,E,oDACAp3E,E,2EAGoB7C,KAAgBmI,KAAK,CACtC,QAAS,kBACTvE,QAASD,EACTgiB,WAAYs0D,EACZn2B,sBAAuBjhD,I,QAJrBiF,E,OAONf,EAASe,G,iMA4Fbd,KAAKo1D,UAAYn5D,SAASo5D,eACrBr1D,KAAKo1D,WACLp1D,KAAKo1D,UAAUwgB,aAEpB51E,KAAKg1D,MAAQh1D,KAAKo1D,UAAUygB,WAAW,M,yCAGvB,IACR7gB,EAAUh1D,KAAVg1D,MAER,GAAKA,EAAL,CAKA,IAAMI,EAAYn5D,SAASo5D,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEnBh1D,KAAK22E,cAAc35D,QAAQi9B,aARvBj6C,KAAK+0D,e,6CAwGwB,IAAD,OAAf2lB,IAAe,yDACxB9G,EAAY5zE,KAAKkZ,MAAjB06D,QAER5zE,KAAK8Y,SACD,CACIo+D,eAAe,EACftD,QAAS,MAEb,WACQ8G,GAAU9G,GAAWA,EAAQ9mE,SAC7B,EAAK6pE,cAAc35D,QAAQogC,UAAYw2B,EAAQ9mE,QAC/C,EAAKioD,aACL,EAAKwI,eAEL,EAAK4X,uB,+BAUX,IACElnE,EAAMjO,KAAKwY,MAAXvK,EADH,EAaDjO,KAAKkZ,MAVLvc,EAHC,EAGDA,OACAs2E,EAJC,EAIDA,cACAW,EALC,EAKDA,QACA37D,EANC,EAMDA,iBACAowD,EAPC,EAODA,MAEAwJ,GATC,EAQD4H,SARC,EASD5H,aACAC,EAVC,EAUDA,WACAmD,EAXC,EAWDA,YACAiC,EAZC,EAYDA,cAGEyD,EAAiB1H,EAAgB,IAAM7vD,aAAczmB,EAAQs2E,GAEnE,OACI,yBAAKpuD,UAAU,uBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,mBACX,kBAAC,GAAD,CACIloB,OAAQA,EACRE,UAAWob,EACXg7D,cAAeiE,EAAgB,EAAIjE,EACnC75D,QAASpZ,KAAKskD,oBAElB,yBAAKz/B,UAAU,oBACX,yBAAKA,UAAU,wBACX,kBAAC,IAAMiR,SAAP,CACIC,SACI,kBAAChR,EAAA,EAAD,CAAYF,UAAU,uBAAuBI,aAAW,YACpD,kBAAC,KAAD,QAGR,kBAACuxD,GAAD,CAAmBx+C,SAAUh4B,KAAK85E,sBAG1C,yBAAKj1D,UAAU,0BACX,yBACIprB,GAAG,mBACHu8B,IAAKh2B,KAAK22E,cACV93B,YAA8B5wC,EAAjB0sE,EAAmB,UAAe,WAC/CnhC,iBAAe,EACfoF,gCAA8B,EAC9BE,UAAW9+C,KAAKuoD,cAChBvJ,QAASh/C,KAAKyoD,YACdiV,QAAS19D,KAAKu9D,eAGtB,yBAAK14C,UAAU,yBACX,2BACImR,IAAKh2B,KAAK44E,kBACV/zD,UAAU,yBACVrc,KAAK,OACLoyE,SAAS,WACTlvC,SAAU1rC,KAAK64E,+BAEnB,2BACI7iD,IAAKh2B,KAAKu4E,eACV1zD,UAAU,yBACVrc,KAAK,OACLoyE,SAAS,WACT1E,OAAO,UACPxqC,SAAU1rC,KAAKw4E,6BAEjB/gE,QAAQw7D,IACN,kBAAC,GAAD,CACIt2E,OAAQA,EACRowE,cAAe/sE,KAAK8sE,kBACpBG,iBAAkBjtE,KAAKgtE,qBACvBG,aAAcntE,KAAKktE,sBAUvC,yBAAKroD,UAAU,mCACX,kBAACE,EAAA,EAAD,CACIF,UAAU,uBACVI,aAAW,OACX5iB,KAAK,QACL+W,QAASpZ,KAAKo2C,cACb68B,EAAgB,kBAAC4H,GAAD,MAAe,kBAACC,GAAD,UAI1C5kE,YAAcvZ,IAAW,kBAAC,GAAD,CAAkB4zE,OAAQvwE,KAAKk5E,iBAC1D,kBAAC,GAAD,CAAkB7Q,MAAOA,EAAOgL,UAAWrzE,KAAKs5E,mBAAoBlH,SAAUpyE,KAAKu5E,oBAEnF,kBAAC,GAAD,CACI34E,KAAMq0E,EACNpD,YAAaA,EACbC,WAAYA,EACZI,OAAQlyE,KAAKs1E,kBACblD,SAAUpyE,KAAKq1E,sBAEnB,kBAAC,GAAD,CACIz0E,KAAMs2E,EACNv6E,OAAQA,EACRE,UAAWo2E,EACXW,QAASA,EACTE,OAAQ9zE,KAAKw1E,gBACbjF,OAAQvwE,KAAKs6E,gBACblI,SAAUpyE,KAAKm6E,6B,GAryCZhgE,aA4yCRE,iBAAkBo8D,I,qBCxzClBsE,I,wLAfD,IAAD,EAC0B/6E,KAAKwY,MAA5BoD,EADH,EACGA,QAASo/D,EADZ,EACYA,UAEjB,OACI,yBAAKn2D,UAAU,0BACX,yBAAKA,UAAU,0BACX,kBAAC,KAAD,CAAQG,MAAM,UAAUH,UAAU,wBAAwBzL,QAAS4hE,GAC9Dp/D,S,GARG1B,IAAMC,YCC5B8gE,G,iLACQ,IACEhtE,EAAMjO,KAAKwY,MAAXvK,EAEF2N,EAAoB3N,EADNjO,KAAKkZ,MAAjB6nC,QACoB,cAAmB,aAE/C,OAAO,kBAAC,GAAD,CAAenlC,QAASA,EAASo/D,UAAWh7E,KAAKgiD,iC,GAN7BJ,IAUpBvnC,iBAAkB4gE,ICH3BC,I,kNAyBFt7B,mBAAqB,SAAArnD,GAAW,IACpBoE,EAAW,EAAK6b,MAAhB7b,OAEJia,YAAgBja,EAAQpE,EAAO6+B,YAAY39B,KAC3C,EAAKs6B,e,EAIb8rB,mBAAqB,SAAAtnD,GAAW,IACpBoE,EAAW,EAAK6b,MAAhB7b,OAEJqa,YAAgBra,EAAQpE,EAAOic,WAAW/a,KAC1C,EAAKs6B,e,EAIbonD,WAAa,WAAO,IACRx+E,EAAW,EAAK6b,MAAhB7b,OACHA,GAEL3D,KAAgBmI,KAAK,CACjB,QAAS,WACTvE,QAASD,K,EAIjBy+E,oBAAsB,WAAO,IACjBz+E,EAAW,EAAK6b,MAAhB7b,OACHA,GAEL3D,KAAgBmI,KAAK,CACjB,QAAS,oBACTvE,QAASD,EACT0+E,uBAAuB,K,qFAzDThsD,EAAWC,GAAY,IAAD,EAClBtvB,KAAKwY,MAAnBvK,EADgC,EAChCA,EAAGtR,EAD6B,EAC7BA,OAEX,OAAI0yB,EAAU1yB,SAAWA,GAIrB0yB,EAAUphB,IAAMA,I,0CAQpB6F,KAAgB7a,GAAG,mBAAoB+G,KAAK4/C,oBAC5CnrC,KAAgBxb,GAAG,mBAAoB+G,KAAK6/C,sB,6CAI5C/rC,KAAgB3a,IAAI,mBAAoB6G,KAAK4/C,oBAC7CnrC,KAAgBtb,IAAI,mBAAoB6G,KAAK6/C,sB,+BA8CvC,IAAD,EACiB7/C,KAAKwY,MAAnB7b,EADH,EACGA,OAAQsR,EADX,EACWA,EACV5S,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,KAHb,IAKGmN,EAASnN,EAATmN,KACR,IAAKA,EAAM,OAAO,KAElB,OAAQA,EAAK,UACT,IAAK,qBACD,IAAMqL,EAAaC,KAAgBha,IAAI0O,EAAKuL,gBAC5C,IAAKF,EAAY,OAAO,KAFD,IAIfG,EAAWH,EAAXG,OACR,IAAKA,EAAQ,OAAO,KALG,IAOfG,EAA2BH,EAA3BG,UAAWkD,EAAgBrD,EAAhBqD,YAEnB,OAAQrD,EAAO,UACX,IAAK,gCACD,OAAO,kBAAC,GAAD,MAEX,IAAK,yBACD,OAAO,kBAAC,GAAD,CAAe4H,QAAS3N,EAAE,cAAe+sE,UAAWh7E,KAAKo7E,sBAEpE,IAAK,0BACD,OAAOjnE,EAAY,kBAAC,GAAD,MAAe,KAEtC,IAAK,uBACD,OAAO,KAEX,IAAK,yBACD,OAAO,kBAAC,GAAD,MAEX,IAAK,6BACD,OAAIA,EACOkD,GAAeA,EAAYS,kBAAoB,kBAAC,GAAD,MAAe,KAE9D,kBAAC,GAAD,CAAe8D,QAAS3N,EAAE,aAAc+sE,UAAWh7E,KAAKm7E,aAI3E,MAEJ,IAAK,kBAGL,IAAK,iBACD,OAAO,kBAAC,GAAD,MAEX,IAAK,qBACD,IAAM3mE,EAAaC,KAAgB3a,IAAI0O,EAAKkM,eAC5C,IAAKF,EAAY,OAAO,KAFD,IAIfG,EAAuBH,EAAvBG,WAAYX,EAAWQ,EAAXR,OACpB,IAAKA,EAAQ,OAAO,KALG,IAOfG,EAA2BH,EAA3BG,UAAWkD,EAAgBrD,EAAhBqD,YAEnB,OAAQrD,EAAO,UACX,IAAK,gCACD,OAAO,kBAAC,GAAD,MAEX,IAAK,yBACD,OAAO,kBAAC,GAAD,CAAe4H,QAAS3N,EAAE,cAAe+sE,UAAWh7E,KAAKo7E,sBAEpE,IAAK,0BACD,OAAOjnE,EAAY,kBAAC,GAAD,MAAe,KAEtC,IAAK,uBACD,OACI,kBAAC,GAAD,CACIyH,QAAsB3N,EAAb0G,EAAe,cAAmB,aAC3CqmE,UAAWh7E,KAAKm7E,aAI5B,IAAK,yBACD,OAAIxmE,EACO,kBAAC,GAAD,CAAsBhY,OAAQA,IAE9B,kBAAC,GAAD,MAGf,IAAK,6BACD,OAAIwX,EACOkD,GAAeA,EAAYS,kBAAoB,kBAAC,GAAD,MAAe,KAGjE,kBAAC,GAAD,CACI8D,QAAsB3N,EAAb0G,EAAe,cAAmB,aAC3CqmE,UAAWh7E,KAAKm7E,cAS5C,OAAO,S,GAxKMjhE,IAAMC,YA4KZE,iBAAkB6gE,I,oBCpHlBI,I,mBA7DX,WAAY9iE,GAAQ,IAAD,8BACf,4CAAMA,KAeV+iE,YAAc,WACV,IAAMnoE,EAAM,IAAIJ,KACV0uB,EAAU,EAAK85C,OAASpoE,EACxBxC,EAAQ,IAAO8wB,EAAU,EAAKlpB,MAAMkrC,QAAW,IAErD,EAAK5qC,SAAS,CACV4oB,QAASA,EAAU,EAAIA,EAAU,EACjC9wB,MAAOA,EAAQ,IAAM,IAAMA,IAG3BwC,GAAO,EAAKooE,QACR,EAAKC,UACLC,cAAc,EAAKD,SACnB,EAAKA,QAAU,OA1BvB,EAAKviE,MAAQ,CACTwoB,QAAS,EAAKlpB,MAAMkrC,QAAU,IAC9B9yC,MAAO,GALI,E,iFAUf5Q,KAAKuyC,UAAY,IAAIv/B,KACrBhT,KAAKw7E,OAASx7E,KAAKuyC,UACnBvyC,KAAKw7E,OAAOG,gBAAgB37E,KAAKw7E,OAAOI,kBAAoB57E,KAAKwY,MAAMkrC,SACvE1jD,KAAKy7E,QAAUI,YAAY77E,KAAKu7E,YAAa,O,6CAsBzCv7E,KAAKy7E,UACLC,cAAc17E,KAAKy7E,SACnBz7E,KAAKy7E,QAAU,Q,+BAIb,IAAD,EACsBz7E,KAAKkZ,MAAxBtI,EADH,EACGA,MAAO8wB,EADV,EACUA,QAEf,OACI,yBAAK7c,UAAU,sBACX,yBAAKA,UAAU,2BACX,kBAAC,KAAD,CAAYG,MAAM,YAAY0c,EAAU,KAAMp/B,YAElD,yBAAKuiB,UAAU,+BACX,kBAACmtB,GAAA,EAAD,CAAkB3vC,KAAM,GAAIuO,MAAO,IAAMA,EAAOsgB,QAAQ,iB,GAnD5ChX,IAAMC,YCkBhC2hE,I,kNACFC,oBAAsB,SAACp/E,EAAQsR,GAC3B,IAAM5S,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,KAClB,IAAKA,EAAKmN,KAAM,OAAO,KAEvB,OAAQnN,EAAKmN,KAAK,UACd,IAAK,qBACD,MAAM,wCAAN,OAA+CnN,EAAK2S,MAApD,KAEJ,IAAK,qBACD,IAAMwG,EAAaC,KAAgB3a,IAAIuB,EAAKmN,KAAKkM,eACjD,OAAIF,EACOA,EAAWG,WAAX,iDACyCtZ,EAAK2S,MAD9C,oDAEuC3S,EAAK2S,MAF5C,KAKJ,KAEX,IAAK,kBACL,IAAK,iBACD,MAAM,6CAAN,OAAoDuJ,YAAkB5a,GAAQ,EAAOsR,GAArF,KAIR,OAAO,M,wEAGD,IAAD,EACoCjO,KAAKwY,MAAtCe,EADH,EACGA,QAAS5c,EADZ,EACYA,OAAQsR,EADpB,EACoBA,EAAMy3D,EAD1B,yCAGL,OACI,kBAAC,IAAD,eACIpsD,mBAAoB,EACpBC,QAAS,kBAAMA,GAAQ,IACvBC,kBAAgB,uBACZksD,GACJ,kBAAC,IAAD,CAAajsE,GAAG,uBAAuB8d,YAAkB5a,GAAQ,EAAOsR,IACxE,kBAAC,KAAD,KACI,yBAAK4W,UAAU,yBACX,kBAAC,EAAD,CAAUloB,OAAQA,IAClB,kBAACkd,GAAA,EAAD,CAAmBpgB,GAAG,6BACjBuG,KAAK+7E,oBAAoBp/E,EAAQsR,MAI9C,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQX,QAAS,kBAAMG,GAAQ,IAAQyL,MAAM,WAA7C,UAGA,kBAACjL,EAAA,EAAD,CAAQX,QAAS,kBAAMG,GAAQ,IAAOyL,MAAM,UAAUi6B,WAAS,GAA/D,Y,GAnDU/kC,IAAMC,YA4D9B6hE,GAA0B3hE,cAAkByhE,IAE5CG,G,iLACQ,IAAD,EACoCj8E,KAAKwY,MAAtCe,EADH,EACGA,QAAS5c,EADZ,EACYA,OAAQsR,EADpB,EACoBA,EAAMy3D,EAD1B,yCAGL,OACI,kBAAC,IAAD,eACIpsD,mBAAoB,EACpBC,QAAS,kBAAMA,GAAQ,IACvBC,kBAAgB,uBACZksD,GACJ,kBAAC,IAAD,CAAajsE,GAAG,uBAAuB8d,YAAkB5a,GAAQ,EAAOsR,IACxE,kBAAC,KAAD,KACI,yBAAK4W,UAAU,yBACX,kBAAC,EAAD,CAAUloB,OAAQA,IAClB,kBAACkd,GAAA,EAAD,CAAmBpgB,GAAG,6BAAtB,0CAKR,kBAACqgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQX,QAAS,kBAAMG,GAAQ,IAAQyL,MAAM,WAA7C,UAGA,kBAACjL,EAAA,EAAD,CAAQX,QAAS,kBAAMG,GAAQ,IAAOyL,MAAM,UAAUi6B,WAAS,GAA/D,Y,GAvBa/kC,IAAMC,WAgCjC+hE,GAA6B7hE,cAAkB4hE,IAE/CpgB,G,YACF,WAAYrjD,GAAQ,IAAD,8BACf,4CAAMA,KASV2jE,kBAAoB,SAAA16E,GAChB,EAAKqX,SAAS,CAAEijD,SAAUt6D,EAAMu6D,iBAXjB,EAcnBC,gBAAkB,WACd,EAAKnjD,SAAS,CAAEijD,SAAU,QAfX,EAkBnBqgB,eAAiB,WACb,EAAKngB,kBACLlrC,WAAW,kBAAM,EAAKvY,MAAM6jE,mBAAmB,MApBhC,EAuBnBC,mBAAqB,WACjB,EAAKrgB,kBAEL,EAAKnjD,SAAS,CAAEyjE,kBAAkB,KA1BnB,EA6BnBC,2BAA6B,SAAA17E,GAGzB,GAFA,EAAKgY,SAAS,CAAEyjE,kBAAkB,IAE7Bz7E,EAAL,CAEA,IAAMnE,EAASk2B,KAAiBqwB,YAE1BziD,EAAU,CACZ,QAAS,oBACT7D,QAASD,EACT0+E,uBAAuB,GAG3B,EAAKv/B,sBAAsBn/C,EAAQ,2BAPnB,mBAOwD8D,KA1CzD,EA6CnBg8E,YAAc,WACV,EAAKxgB,kBAEL,EAAKnjD,SAAS,CAAE4jE,YAAY,KAhDb,EAmDnBC,oBAAsB,SAAA77E,GAGlB,GAFA,EAAKgY,SAAS,CAAE4jE,YAAY,IAEvB57E,EAAL,CAEA,IAAMnE,EAASk2B,KAAiBqwB,YAC1BtnD,EAAU,EAAKghF,yBAAyBjgF,GACxC8D,EAAUyV,YAAcvZ,GACxB,CAAE,QAAS,oBAAqBC,QAASD,EAAQ0+E,uBAAuB,GACxE,CAAE,QAAS,YAAaz+E,QAASD,GAEvC,EAAKm/C,sBAAsBn/C,EAAQ,wBAAyBf,EAAS6E,KA9DtD,EAiEnBq7C,sBAAwB,SAACn/C,EAAQkgF,EAAkBjhF,EAAS6E,GAAa,IAC7DwN,EAAM,EAAKuK,MAAXvK,EACR,GAAK4uE,EAAL,CAEA,IAAMhrE,EAAG,UAAMgrE,EAAN,mBAAiClgF,GACpCkU,EAAM,sCAAG,sBAAArY,EAAA,8EAEDQ,KAAgBmI,KAAKV,GAFpB,uBAIPzH,KAAgB8G,aAAa,CAAE,QAAS+8E,EAAkBlgF,OAAQA,EAAQk0B,YAAY,IAJ/E,qEAAH,qDAWJkrB,EAAoB,EAAKvjC,MAAzBujC,gBACR,GAAKA,EAAL,CAGIlpB,KAAiBmpB,mBAAmBnqC,EAAKoqC,IAAoCprC,EARlE,WACX7X,KAAgB8G,aAAa,CAAE,QAAS+8E,EAAkBlgF,OAAQA,EAAQk0B,YAAY,QAQtF73B,KAAgB8G,aAAa,CAAE,QAAS+8E,EAAkBlgF,OAAQA,EAAQk0B,YAAY,IACtFkrB,EAAgBngD,EAAS,CACrBsgD,iBAAkBD,IAAqC,IACvDprC,OAAQ,CACJ,kBAACkU,EAAA,EAAD,CAAYlT,IAAI,WAAWmT,MAAM,UAAUH,UAAU,mBACjD,kBAAC,GAAD,CAAmB6+B,QAASzH,OAEhC,kBAACliC,EAAA,EAAD,CACIlI,IAAI,OACJmT,MAAM,UACN3iB,KAAK,QACL+W,QAAS,kBAAMyZ,KAAiBspB,sBAAsBtqC,KACrD5D,EAAE,gBAlGJ,EAyGnB6uE,kBAAoB,SAACngF,EAAQsR,GACzB,IAAM5S,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,KAClB,IAAKA,EAAKmN,KAAM,OAAO,KAEvB,OAAQnN,EAAKmN,KAAK,UACd,IAAK,qBACD,OAAOyF,EAAE,cAEb,IAAK,qBACD,IAAMuG,EAAaC,KAAgB3a,IAAIuB,EAAKmN,KAAKkM,eACjD,OAAIF,EACOA,EAAWG,WAAa1G,EAAE,gBAAkBA,EAAE,iBAGlD,KAEX,IAAK,kBACL,IAAK,iBACD,OAAOA,EAAE,kBAIjB,OAAO,MAhIQ,EAmInB2uE,yBAA2B,SAAAjgF,GAAW,IAC1BsR,EAAM,EAAKuK,MAAXvK,EAEF5S,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO4S,EAAE,mBACpB,IAAK5S,EAAKmN,KAAM,OAAOyF,EAAE,mBAEzB,OAAQ5S,EAAKmN,KAAK,UACd,IAAK,qBACD,OAAOyF,EAAE,mBAEb,IAAK,qBACD,IAAMuG,EAAaC,KAAgB3a,IAAIuB,EAAKmN,KAAKkM,eACjD,OAAIF,EACOA,EAAWG,WAAa,eAAiB,aAG7C1G,EAAE,mBAEb,IAAK,kBACL,IAAK,iBACD,OAAOA,EAAE,mBAIjB,OAAOA,EAAE,oBA5JM,EA+JnB8uE,YAAc,WACV,EAAK9gB,kBAEL,IAAMt/D,EAASk2B,KAAiBqwB,YAChClqD,KAAgB8G,aAAa,CACzB,QAAS,oBACTnD,YAlKJ,EAAKuc,MAAQ,CACT6iD,SAAU,KACV2gB,YAAY,EACZH,kBAAkB,GANP,E,sEAyKT,IACEtuE,EAAMjO,KAAKwY,MAAXvK,EADH,EAE8CjO,KAAKkZ,MAAhD6iD,EAFH,EAEGA,SAAU2gB,EAFb,EAEaA,WAAYH,EAFzB,EAEyBA,iBAExB5/E,EAASk2B,KAAiBqwB,YAC1BwN,EAAel5C,YAAgB7a,GAC/BqgF,EAAatlE,YAAc/a,GAC3BsgF,EAAiBj9E,KAAK88E,kBAAkBngF,EAAQsR,GAChDivE,EAAevuE,YAAgBhS,GAErC,OACI,oCACI,kBAACooB,EAAA,EAAD,CACIm4C,YAAWnB,EAAW,cAAgB,KACtCoB,gBAAc,OACdt4C,UAAU,mBACVI,aAAW,OACX7L,QAASpZ,KAAKm8E,mBACd,kBAACzd,GAAD,OAEJ,kBAAC9B,GAAA,EAAD,CACInjE,GAAG,YACHsiE,SAAUA,EACVn7D,KAAM6W,QAAQskD,GACdxiD,QAASvZ,KAAKi8D,gBACdY,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrB1V,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAEhB,kBAACG,GAAA,EAAD,CAAUtuC,QAASpZ,KAAKo8E,gBAAiBnuE,EAAE,aAC1CyiD,GAAgB,kBAAChJ,GAAA,EAAD,CAAUtuC,QAASpZ,KAAKs8E,oBAAqBruE,EAAE,iBAC/D+uE,GAAcC,GAAkB,kBAACv1B,GAAA,EAAD,CAAUtuC,QAASpZ,KAAKy8E,aAAcQ,GACtEC,GAAgB,kBAACx1B,GAAA,EAAD,CAAUtuC,QAASpZ,KAAK+8E,aAAc9uE,EAAE,WAE7D,kBAAC+tE,GAAD,CAAyBr/E,OAAQA,EAAQiE,KAAM87E,EAAYnjE,QAASvZ,KAAK28E,sBACzE,kBAACT,GAAD,CACIv/E,OAAQA,EACRiE,KAAM27E,EACNhjE,QAASvZ,KAAKw8E,kC,GAvNLtiE,IAAMC,WAmOpB+kC,GALCC,YACZC,eACA/kC,cAGW6kC,CAAQ2c,ICpLRshB,I,kNApIXC,8BAAgC,SAAA7kF,GACT,EAAKigB,MAAhB7b,SACOpE,EAAOqE,SAEtB,EAAKm3B,e,EAGT+D,kBAAoB,SAAAv/B,GACG,EAAKigB,MAAhB7b,SACOpE,EAAOqE,SAEtB,EAAKm3B,e,EAGTspD,uBAAyB,SAAA9kF,GACF,EAAKigB,MAAhB7b,SACOpE,EAAOqE,SAEtB,EAAKm3B,e,EAGTqT,mBAAqB,SAAA7uC,GAAW,IACpBoE,EAAW,EAAK6b,MAAhB7b,OACFtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,GAAKtB,GACAA,EAAKmN,KAEV,OAAQnN,EAAKmN,KAAK,UACd,IAAK,qBACD,IAAMoM,EAAWd,KAAgBe,YAAYxZ,EAAKmN,KAAKuL,gBACvD,GAAIa,GAAYA,EAAS8B,QACN9B,EAAS8B,QAAQ8oC,KAAK,SAAA39C,GAAC,OAAIA,EAAEsD,UAAY5M,EAAO4M,WAE3D,EAAK4uB,cAGb,MAEJ,IAAK,kBAML,IAAK,iBACG14B,EAAKmN,KAAKrD,UAAY5M,EAAO4M,SAC7B,EAAK4uB,gB,EAUrB0rB,qBAAuB,SAAAlnD,GAAW,IACtBoE,EAAW,EAAK6b,MAAhB7b,OACFtB,EAAO0O,IAAUjQ,IAAI6C,GACtBtB,GACAA,EAAKmN,OAGkB,oBAAvBnN,EAAKmN,KAAK,UAAyD,mBAAvBnN,EAAKmN,KAAK,UACvDnN,EAAKmN,KAAKrD,UAAY5M,EAAO4M,SAE7B,EAAK4uB,gB,EAIb2rB,2BAA6B,SAAAnnD,GAAW,IAC5BoE,EAAW,EAAK6b,MAAhB7b,OACFtB,EAAO0O,IAAUjQ,IAAI6C,GACtBtB,GACAA,EAAKmN,MAEiB,uBAAvBnN,EAAKmN,KAAK,UAAqCnN,EAAKmN,KAAKuL,iBAAmBxb,EAAOwb,gBACnF,EAAKggB,e,EAIb4rB,2BAA6B,SAAApnD,GAAW,IAC5BoE,EAAW,EAAK6b,MAAhB7b,OACFtB,EAAO0O,IAAUjQ,IAAI6C,GACtBtB,GACAA,EAAKmN,MAEiB,uBAAvBnN,EAAKmN,KAAK,UAAqCnN,EAAKmN,KAAKkM,gBAAkBnc,EAAOmc,eAClF,EAAKqf,e,EAIb6rB,mBAAqB,SAAArnD,GAAW,IACpBoE,EAAW,EAAK6b,MAAhB7b,OACFtB,EAAO0O,IAAUjQ,IAAI6C,GACtBtB,GACAA,EAAKmN,MAEiB,uBAAvBnN,EAAKmN,KAAK,UAAqCnN,EAAKmN,KAAKuL,iBAAmBxb,EAAO6+B,YAAY39B,IAC/F,EAAKs6B,e,EAIb8rB,mBAAqB,SAAAtnD,GAAW,IACpBoE,EAAW,EAAK6b,MAAhB7b,OACFtB,EAAO0O,IAAUjQ,IAAI6C,GACtBtB,GACAA,EAAKmN,MAEiB,uBAAvBnN,EAAKmN,KAAK,UAAqCnN,EAAKmN,KAAKkM,gBAAkBnc,EAAOic,WAAW/a,IAC7F,EAAKs6B,e,mFArIThqB,IAAU9Q,GAAG,8BAA+B+G,KAAKo9E,+BACjDrzE,IAAU9Q,GAAG,kBAAmB+G,KAAK83B,mBACrC1yB,IAAUnM,GAAG,mBAAoB+G,KAAKonC,oBACtCr9B,IAAU9Q,GAAG,uBAAwB+G,KAAKq9E,wBAC1Cj4E,IAAUnM,GAAG,qBAAsB+G,KAAKy/C,sBACxC3rC,KAAgB7a,GAAG,2BAA4B+G,KAAK0/C,4BACpDjrC,KAAgBxb,GAAG,2BAA4B+G,KAAK2/C,4BACpD7rC,KAAgB7a,GAAG,mBAAoB+G,KAAK4/C,oBAC5CnrC,KAAgBxb,GAAG,mBAAoB+G,KAAK6/C,sB,6CAI5C91C,IAAU5Q,IAAI,8BAA+B6G,KAAKo9E,+BAClDrzE,IAAU5Q,IAAI,kBAAmB6G,KAAK83B,mBACtC1yB,IAAUjM,IAAI,mBAAoB6G,KAAKonC,oBACvCr9B,IAAU5Q,IAAI,uBAAwB6G,KAAKq9E,wBAC3Cj4E,IAAUjM,IAAI,qBAAsB6G,KAAKy/C,sBACzC3rC,KAAgB3a,IAAI,2BAA4B6G,KAAK0/C,4BACrDjrC,KAAgBtb,IAAI,2BAA4B6G,KAAK2/C,4BACrD7rC,KAAgB3a,IAAI,mBAAoB6G,KAAK4/C,oBAC7CnrC,KAAgBtb,IAAI,mBAAoB6G,KAAK6/C,sB,+BAqHvC,IACEljD,EAAWqD,KAAKwY,MAAhB7b,OAEFkR,EAAWmH,YAAgBrY,GAAQ,GACnC2gF,EAAmB7nE,YAAqB9Y,GAE9C,OACI,yBAAKkoB,UAAWC,IAAW,uBAAwB,CAAE,8BAA+Bw4D,KAC/EzvE,O,GAnJgBqM,IAAMC,YCkBxBojE,I,wLAnBD,IAAD,EACkCv9E,KAAKwY,MAApCqM,EADH,EACGA,UAAWloB,EADd,EACcA,OAAQyc,EADtB,EACsBA,QAE3B,OACI,yBAAKyL,UAAWC,IAAW,cAAeD,GAAYzL,QAASA,GAC3D,kBAAC,EAAD,CAAUzc,OAAQA,EAAQ0F,KAAM,KAChC,yBAAKwiB,UAAU,uBACX,kBAAC,GAAD,CAAaloB,OAAQA,IACrB,kBAAC,GAAD,CAAoBA,OAAQA,U,GATvBud,IAAMC,YCAzBqjE,I,kNACFrL,aAAe,WACX71B,e,EAGJyK,aAAe,WACX,IAAIttD,EAAK,EACLiK,EAAa,GAFA,uBAGjB,YAAkCG,KAAa45E,cAAc/sE,SAA7D,+CAAuE,CAAC,IAAD,UAA5D/T,EAA4D,EAA5DA,OAAQE,EAAoD,EAApDA,UACfpD,EAAKkD,EACL+G,EAAWxD,KAAKrD,IALH,kFAQjBmqD,YAAevtD,EAAIiK,I,EAGvBmjD,cAAgB,WACZ,IAAIptD,EACEiK,EAAa,GAFD,uBAGlB,YAAkCG,KAAa45E,cAAc/sE,SAA7D,+CAAuE,CAAC,IAAD,UAA5D/T,EAA4D,EAA5DA,OAAQE,EAAoD,EAApDA,UACfpD,EAAKkD,EACL+G,EAAWxD,KAAKrD,IALF,kFAQlBiqD,YAAgBrtD,EAAIiK,I,wEAGd,IAAD,EACgB1D,KAAKwY,MAAlBvK,EADH,EACGA,EAAGgG,EADN,EACMA,MAEPypE,GAAe,EAHd,uBAIL,YAAkC75E,KAAa45E,cAAc/sE,SAA7D,+CAAuE,CAAC,IAAD,UAA5D/T,EAA4D,EAA5DA,OAAQE,EAAoD,EAApDA,UACTjB,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,CACV8hF,GAAe,EACf,MAEJ,IAAK9hF,EAAQmoB,+BAAiCnoB,EAAQooB,6BAA8B,CAChF05D,GAAe,EACf,QAZH,kFAgBL,IAAIC,GAAiB,EAhBhB,uBAiBL,YAAkC95E,KAAa45E,cAAc/sE,SAA7D,+CAAuE,CAAC,IAAD,UAA5D/T,EAA4D,EAA5DA,OAAQE,EAAoD,EAApDA,UACTjB,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,CACV+hF,GAAiB,EACjB,MAEJ,IAAK/hF,EAAQioB,iBAAkB,CAC3B85D,GAAiB,EACjB,QAzBH,kFA6BL,OACI,yBAAK94D,UAAU,kBACV84D,GACG,kBAAC5jE,EAAA,EAAD,CAAQiL,MAAM,UAAUH,UAAU,wBAAwBzL,QAASpZ,KAAK6mD,eACnE5yC,GAAS,EAAIhG,EAAE,WAAf,UAA+BA,EAAE,WAAjC,YAA+CgG,IAGvDypE,GACG,kBAAC3jE,EAAA,EAAD,CAAQiL,MAAM,UAAUH,UAAU,wBAAwBzL,QAASpZ,KAAK+mD,cACnE9yC,GAAS,EAAIhG,EAAE,UAAf,UAA8BA,EAAE,UAAhC,YAA6CgG,IAGtD,yBAAK4Q,UAAU,yBACf,kBAAC9K,EAAA,EAAD,CAAQiL,MAAM,UAAUH,UAAU,wBAAwBzL,QAASpZ,KAAKmyE,cACnElkE,EAAE,gB,GAtEKiM,IAAMC,YAiFnBE,iBAAkBmjE,I,SCpE3BI,I,mBACF,WAAYplE,GAAQ,IAAD,8BACf,4CAAMA,KA8CVqlE,oBAAsB,SAAAtlF,GAAW,IACrBoE,EAAWpE,EAAXoE,OAEJ,EAAK6b,MAAM7b,SAAWA,GAE1B,EAAKoqD,gBApDU,EAuDnB+2B,2BAA6B,SAAAvlF,GACH,EAAK2gB,MAAnBrc,WAGJ,EAAKi3B,eA3DM,EA+DnBiqD,gCAAkC,SAAAxlF,GAAW,IACjCoE,EAAuBpE,EAAvBoE,OAAQqhF,EAAezlF,EAAfylF,WAEZ,EAAKxlE,MAAM7b,SAAWA,GAE1B,EAAKmc,SAAS,CAAEklE,gBApED,EAuEnBC,0BAA4B,SAAA1lF,GAAW,IAC3BqE,EAA0CrE,EAA1CqE,QAA4BC,EAActE,EAAjCqW,kBACE,EAAK4J,MAAhB7b,SAEOC,GAEf,EAAKkc,SAAS,CAAEjc,eA7ED,EAgFnBi3B,YAAc,WAAO,IACTn3B,EAAW,EAAK6b,MAAhB7b,OACAE,EAAc,EAAKqc,MAAnBrc,UAEHF,IACAE,IAEWgH,KAAa/J,IAAI6C,EAAQE,IAGzC7D,KAAgBmI,KAAK,CACjB,QAAS,aACTvE,QAASD,EACTgiB,WAAY9hB,IAEX0E,KAAK,SAAAT,GACF+C,KAAanL,IAAIoI,GAEjB,IAAMrJ,EAAQuM,IAAUhK,WACxBsN,YAAoB7P,EAAO,CAACqJ,IAE5B,EAAKizB,gBAER3zB,MAAM,SAAAlF,GACuBA,EAAlBgjF,KACR,GAAgB,mBADUhjF,EAAZU,QACoB,CAC9B,IAAMuiF,EAAiB,CACnB,QAAS,iBACTvhF,QAASD,EACTlD,GAAIoD,EACJhB,QAAS,MAGbgI,KAAanL,IAAIylF,GACjB,EAAKpqD,oBAlHF,EAsJnBtb,YAAc,SAAAhX,GAAU,IACZ9E,EAAW,EAAK6b,MAAhB7b,OACAE,EAAc,EAAKqc,MAAnBrc,UAEHA,GAELkc,YAASpc,EAAQE,IA5JF,EA+JnBkqD,aA/JmB,sCA+JJ,WAAMtlD,GAAN,mBAAAjJ,EAAA,wDACPiJ,IACAA,EAAMkX,iBACNlX,EAAMiX,mBAGF/b,EAAW,EAAK6b,MAAhB7b,OACAE,EAAc,EAAKqc,MAAnBrc,WAEOqb,YAAevb,GATnB,gBAWP,EAAKmc,SAAS,CAAEqlB,SAAS,IAXlB,8BAaD78B,EAAOyI,IAAUq0E,cAAczhF,GAb9B,UAcD3D,KAAgB8G,aAAa,CAC/B,QAAS,gCACTnD,OAAQA,EACRqhF,WAAYvzD,OAAOwM,OAAO,GAAI31B,EAAM,CAAE+8E,oBAAqBxhF,MAjBxD,0CA/JI,wDAqLnBkgF,YArLmB,qBAqLL,4BAAAvkF,EAAA,qDACFmE,EAAW,EAAK6b,MAAhB7b,OAER,EAAKqc,cAELhgB,KAAgBmI,KAAK,CACjB,QAAS,mBACTvE,QAASD,IAPH,yCArLK,EAgMnBqc,YAAc,WACV,EAAKF,SAAS,CAAEqlB,SAAS,KA9LzB,EAAKjlB,MAAQ,GAHE,E,gFAuBAkc,EAAWC,EAAWC,GAAW,IACxCz4B,EAAcmD,KAAKkZ,MAAnBrc,UAEJA,GAAaw4B,EAAUx4B,YAAcA,GACrCmD,KAAK8zB,gB,0CAKT9zB,KAAK8zB,cAEL7Y,KAAShiB,GAAG,2BAA4B+G,KAAK89E,4BAC7C/zE,IAAU9Q,GAAG,gCAAiC+G,KAAK+9E,iCACnDh0E,IAAU9Q,GAAG,oBAAqB+G,KAAK69E,qBACvC9zE,IAAU9Q,GAAG,0BAA2B+G,KAAKi+E,6B,6CAI7ChjE,KAAS9hB,IAAI,2BAA4B6G,KAAK89E,4BAC9C/zE,IAAU5Q,IAAI,gCAAiC6G,KAAK+9E,iCACpDh0E,IAAU5Q,IAAI,oBAAqB6G,KAAK69E,qBACxC9zE,IAAU5Q,IAAI,0BAA2B6G,KAAKi+E,6B,4CA2E5B5uD,EAAWC,EAAW4F,GAAc,IAAD,EACxBl1B,KAAKwY,MAA1B7b,EAD6C,EAC7CA,OAAQsR,EADqC,EACrCA,EAAGm3B,EADkC,EAClCA,MADkC,EAEVplC,KAAKkZ,MAAxC8kE,EAF6C,EAE7CA,WAAY7/C,EAFiC,EAEjCA,QAASthC,EAFwB,EAExBA,UAE7B,OAAIwyB,EAAUphB,IAAMA,IAIhBohB,EAAU+V,QAAUA,IAIpB/V,EAAU1yB,SAAWA,IAIrB2yB,EAAU0uD,aAAeA,IAIzB1uD,EAAU6O,UAAYA,GAItB7O,EAAUzyB,YAAcA,Q,+BAqDtB,IAAD,EACiBmD,KAAKwY,MAAnB7b,EADH,EACGA,OAAQsR,EADX,EACWA,EADX,EAE0BjO,KAAKkZ,MAA5Brc,EAFH,EAEGA,UAAWshC,EAFd,EAEcA,QAEnB,IAAKxhC,EAAQ,OAAO,KAGpB,GADgCoN,IAAUq0E,cAAczhF,GAAhD0hF,sBACoBxhF,EAAW,OAAO,KAE9C,IAAMjB,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,KAErB,IAAIC,EAAWD,EAAyBkW,aAAWlW,EAASqS,GAAnCA,EAAE,WACrB/P,EAAY0hB,aAAkBjjB,EAAQE,GACtC8iB,EAAgBD,aAAsB/iB,EAAQE,GAMpD,OAJI4iB,aAAiB7jB,KACjBC,EAAUoS,EAAE,mBAIZ,oCACI,yBAAK4W,UAAU,iBAAiB+mB,YAAa5rC,KAAKyY,aAC9C,yBAAKoM,UAAU,wBACd3mB,GACG,kBAAC,GAAD,CACIvB,OAAQA,EACRE,UAAWA,EACXqB,UAAWA,EACXyhB,cAAeA,IAGvB,yBAAKkF,UAAU,0BACX,yBAAKA,UAAU,wBAAwB5W,EAAE,kBACzC,yBAAK4W,UAAU,2BAA2BhpB,KAGjDsiC,GACG,kBAAC,IAAD,CACI7kB,mBAAoB,EACpB1Y,MAAI,EACJ2Y,QAASvZ,KAAKgZ,YACdQ,kBAAgB,8BAChB,kBAAC,IAAD,CAAa/f,GAAG,8BAA8BwU,EAAE,YAChD,kBAAC,KAAD,KACI,kBAAC4L,GAAA,EAAD,KAAoB5L,EAAE,uBAE1B,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQX,QAASpZ,KAAKgZ,YAAagM,MAAM,WACpC/W,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQX,QAASpZ,KAAK+8E,YAAa/3D,MAAM,WACpC/W,EAAE,a,gDAlPCuK,EAAOU,GAAQ,IACnColE,EAAoBplE,EAApBolE,gBACA3hF,EAAW6b,EAAX7b,OAER,GAAI2hF,IAAoB3hF,EAAQ,CAC5B,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,MAAO,CACH2hF,gBAAiB3hF,EACjBqhF,WAAYj0E,IAAUq0E,cAAczhF,GACpCE,UAAWxB,GAAQA,EAAKuT,kBAAoBvT,EAAKuT,kBAAoB,EACrEuvB,SAAS,GAIjB,OAAO,S,GArBajkB,IAAMC,YAuQnBE,iBAAkBujE,IC1P3BW,G,YACF,WAAY/lE,GAAQ,IAAD,8BACf,4CAAMA,KA6CVgmE,6BAA+B,SAAAjmF,GAAW,IAC9BoE,EAAuBpE,EAAvBoE,OAAQ+G,EAAenL,EAAfmL,WAEZ+6E,GAA0B,EAHO,uBAIrC,YAAsB/6E,EAAtB,+CAAkC,CAAC,IAA1B7G,EAAyB,QACxBjB,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,CACV6iF,GAA0B,EAC1B,MAEJ,IAAK7iF,EAAQooB,6BAA8B,CACvCy6D,GAA0B,EAC1B,QAZ6B,kFAgBrC,EAAK3lE,SAAS,CACV4lE,kBAAkB,EAClB/hF,SACA+G,aACA+6E,wBAAyBA,EACzBx8E,OAAQw8E,KAnEG,EAuEnBE,mBAAqB,WACjB,EAAK7lE,SAAS,CAAE7W,QAAS,EAAKiX,MAAMjX,UAxErB,EA2EnB28E,kBAAoB,WAChB,EAAK9lE,SAAS,CAAE4lE,kBAAkB,KA5EnB,EA+EnBG,qBAAuB,WAAO,IAAD,EACc,EAAK3lE,MAApCjX,EADiB,EACjBA,OAAQtF,EADS,EACTA,OAAQ+G,EADC,EACDA,WAExB44C,cACA,EAAKsiC,oBAEL5lF,KAAgBmI,KAAK,CACjB,QAAS,iBACTvE,QAASD,EACTqF,YAAa0B,EACbzB,OAAQA,KAzFG,EA6FnB68E,8BAAgC,SAAAvmF,GAC5B,EAAKugB,SAAS,CAAEimE,eAAgBl7E,KAAa45E,cAAcp7E,QA9F5C,EAiGnByrD,qBAAuB,SAAAv1D,GACnB,EAAKw7B,eAlGU,EAqGnBirD,wBAA0B,SAAAzmF,GACtB,EAAKugB,SAAS,CAAEmmE,gBAAiB1mF,EAAO2gB,SAtGzB,EAyGnBzgB,2BAA6B,SAAAF,GACzB,EAAKugB,SAAS,CAAEg9C,mBAAoBv9D,EAAOa,uBA1G5B,EA6GnBijF,gBAAkB,WACd,IAAM1/E,EAASse,KAASioC,YACXn5C,IAAUjQ,IAAI6C,IAG3Bse,KAASw0C,6BAA4B,IAlHtB,EAqHnByvB,iBAAmB,WACf,IAAMviF,EAASse,KAASioC,YACXn5C,IAAUjQ,IAAI6C,IAG3Bue,YAAWve,IA1HI,EA6HnBwiF,SAAW,SAAAC,GAGP,OAAOnxE,EAFO,EAAKuK,MAAXvK,GAECmxE,GACJn9D,QAAQ,MAAO,IACfA,QAAQ,SAAK,KA/HlB,EAAK/I,MAAQ,CACT48C,mBAAoB76C,KAASwhD,wBAC7BwiB,gBAAiBhkE,KAASokE,qBAC1BX,kBAAkB,GANP,E,mFAUGrvD,EAAWC,GAC7B,OAAIA,IAActvB,KAAKkZ,QAInBmW,EAAU+V,QAAUplC,KAAKwY,MAAM4sB,OAI/B/V,EAAUphB,IAAMjO,KAAKwY,MAAMvK,K,0CAQ/BgN,KAAShiB,GAAG,qBAAsB+G,KAAK8tD,sBACvC7yC,KAAShiB,GAAG,6BAA8B+G,KAAKw+E,8BAC/CvjE,KAAShiB,GAAG,2BAA4B+G,KAAKvH,4BAC7CwiB,KAAShiB,GAAG,wBAAyB+G,KAAKg/E,yBAE1Cn7E,KAAa5K,GAAG,6BAA8B+G,KAAK8+E,+BACnDj7E,KAAa5K,GAAG,8BAA+B+G,KAAK8+E,iC,6CAIpD7jE,KAAS9hB,IAAI,qBAAsB6G,KAAK8tD,sBACxC7yC,KAAS9hB,IAAI,6BAA8B6G,KAAKw+E,8BAChDvjE,KAAS9hB,IAAI,2BAA4B6G,KAAKvH,4BAC9CwiB,KAAS9hB,IAAI,wBAAyB6G,KAAKg/E,yBAE3Cn7E,KAAa1K,IAAI,6BAA8B6G,KAAK8+E,+BACpDj7E,KAAa1K,IAAI,8BAA+B6G,KAAK8+E,iC,+BA0F/C,IACE7wE,EAAMjO,KAAKwY,MAAXvK,EADH,EAUDjO,KAAKkZ,MAPL48C,EAHC,EAGDA,mBACAmpB,EAJC,EAIDA,gBACAF,EALC,EAKDA,eACAL,EANC,EAMDA,iBACAD,EAPC,EAODA,wBACAx8E,EARC,EAQDA,OACAyB,EATC,EASDA,WAGEuQ,EAAQvQ,EAAaA,EAAWzF,OAAS,EAE3C2hE,EAAU,KACVmf,IACAnf,EAAU,kBAAC,GAAD,CAAe3rD,MAAO8qE,KAGpC,IAAMpiF,EAASse,KAASioC,YAClB7nD,EAAO0O,IAAUjQ,IAAI6C,GAErB2gF,EAAmB7nE,YAAqB9Y,GAC1CqR,EAAQqI,YAAa1Z,GAAQ,EAAMsR,GACnCJ,EAAWmH,YAAgBrY,GAAQ,GACnC2iF,GAAwB,EAE5B,GAAIL,EACA,OAAQA,EAAgB,UACpB,IAAK,4BACDjxE,EAAQhO,KAAKm/E,SAAS,cACtBtxE,EAAW,GACXyxE,GAAwB,EACxB,MACJ,IAAK,mCACDtxE,EAAQhO,KAAKm/E,SAAS,uBACtBtxE,EAAW,GACXyxE,GAAwB,EACxB,MACJ,IAAK,uBACD,MACJ,IAAK,0BACDtxE,EAAQhO,KAAKm/E,SAAS,YACtBtxE,EAAW,GACXyxE,GAAwB,EACxB,MACJ,IAAK,mCACDtxE,EAAQhO,KAAKm/E,SAAS,uBACtBtxE,EAAW,GACXyxE,GAAwB,OAG7B,GAAIxpB,EACP,OAAQA,EAAmB,UACvB,IAAK,2BAEL,IAAK,6BACD,MACJ,IAAK,+BACD9nD,EAAQhO,KAAKm/E,SAAS,eACtBtxE,EAAW,GACXyxE,GAAwB,EACxB,MACJ,IAAK,0BAEL,IAAK,6BACD,MACJ,IAAK,sCACDtxE,EAAQhO,KAAKm/E,SAAS,WACtBtxE,EAAW,GACXyxE,GAAwB,EACxB,MACJ,IAAK,iCAEL,IAAK,oCACD,MACJ,IAAK,wCACDtxE,EAAQhO,KAAKm/E,SAAS,WACtBtxE,EAAW,GACXyxE,GAAwB,OAIhCtxE,EAAQhO,KAAKm/E,SAAS,WACtBtxE,EAAW,GACXyxE,GAAwB,EAuC5B,OApCA1f,EAAUA,GACN,yBAAK/6C,UAAU,kBACVy6D,EACG,yBACIz6D,UAAWC,IAAW,gBAAiB,OAAQzpB,EAAO,iBAAmB,kBACzE+d,QAASpZ,KAAKq8E,iBACd,0BAAMx3D,UAAU,yBAAyB7W,GACzC,kBAACuxE,GAAA,EAAD,MACA,0BACI16D,UAAWC,IAAW,sBAAuB,CAAE,uBAAwBw4D,KACtEzvE,GAEL,0BAAMgX,UAAU,wBAGpB,kBAAC,GAAD,CACIA,UAAWC,IAAW,OAAQ,kBAC9BnoB,OAAQA,EACRyc,QAASpZ,KAAKq8E,kBAGtB,kBAAC,GAAD,CAAe1/E,OAAQA,IACtBtB,GACG,oCACI,kBAAC0pB,EAAA,EAAD,CACIF,UAAU,6BACVI,aAAW,SACX7L,QAASpZ,KAAKk/E,kBACd,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAgB7C,gBAAiBr8E,KAAKq8E,oBAOlD,oCACKzc,EACD,kBAAC,IAAD,CACItmD,mBAAoB,EACpB1Y,KAAM89E,EACNnlE,QAASvZ,KAAK4+E,kBACdplE,kBAAgB,uBAChB,kBAAC,IAAD,CAAa/f,GAAG,uBAAhB,WACA,kBAAC,KAAD,KACI,kBAACogB,GAAA,EAAD,KACe,IAAV5F,EACK,sCADL,gCAE8BA,EAF9B,eAIJ6C,YAAana,GACV,kBAACkd,GAAA,EAAD,MACMlH,YAAchW,KACD,IAAVsX,EACK,gDACA,oDAGd,oCACKwqE,GACG,kBAAC9e,GAAA,EAAD,CACIC,QACI,kBAACkE,GAAA,EAAD,CACIhyB,QAAS7vC,EACTypC,SAAU1rC,KAAK2+E,mBACf35D,MAAM,YAGd4nC,MACI12C,YAAcvZ,GAAd,qBACoB4a,YAAkB5a,GAAQ,EAAOsR,IAC/C,qBAO9B,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQX,QAASpZ,KAAK4+E,kBAAmB55D,MAAM,WAC1C/W,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQX,QAASpZ,KAAK6+E,qBAAsB75D,MAAM,WAC7C/W,EAAE,c,GAlTVkM,aA2TNE,iBAAkBkkE,I,sKCvKlBiB,I,kNAzKXtmE,MAAQ,CACJ6iD,SAAU,KACVnrD,MAAOszB,KAAY/Y,OACnBs0D,UAAWv7C,KAAY/Y,OACvB+f,UAAU,EACVw0C,YAAY,EACZC,WAAW,G,EAWfC,0BAA4B,SAAArnF,GAAW,IAC3B4yB,EAAuB5yB,EAAvB4yB,OAAQ00D,EAAetnF,EAAfsnF,gBAEGlmD,IAAfkmD,EACA,EAAK/mE,SAAS,CAAElI,MAAOua,IAEvB,EAAKrS,SAAS,CAAElI,MAAOua,EAAQs0D,UAAWI,K,EAIlDC,kBAAoB,SAAA/jB,GAChB,EAAKjjD,SAAS,CAAEijD,SAAUA,K,EAG9BgkB,mBAAqB,WAAO,IAAD,EACqB,EAAK7mE,MAAzCgyB,EADe,EACfA,SAAUw0C,EADK,EACLA,WAAYC,EADP,EACOA,UAE1Bz0C,GACAw0C,GACAC,GAEJ,EAAK7mE,SAAS,CAAEijD,SAAU,Q,EAG9B1nC,iBAAmB,SAAC5yB,EAAOu+E,GACvB,EAAKlnE,SAAS,CAAE4mE,YAAY,IAExBM,GACA,EAAKF,kBAAkBr+E,EAAMu6D,gB,EAIrCikB,iBAAmB,WACf,EAAKnnE,SAAS,CAAE4mE,YAAY,GAAS,WACjC,EAAKK,wB,EAIbG,sBAAwB,WACpB,EAAKpnE,SAAS,CAAE6mE,WAAW,GAAS,WAChC,EAAKI,wB,EAIbI,iBAAmB,WAAO,IAAD,EACQ,EAAKjnE,MAA1BtI,EADa,EACbA,MAAO6uE,EADM,EACNA,UACTW,EAAYxvE,EAAQ,EAAI,EAAI6uE,GAAa5yD,IAE/C7zB,KAAgB8G,aAAa,CACzB,QAAS,0BACTqrB,OAAQi1D,K,EAIhB/0C,aAAe,SAAC5pC,EAAOmP,GAAW,IAAD,EACG,EAAKsI,MAA7BgyB,EADqB,EACrBA,SAAUu0C,EADW,EACXA,UAEdv0C,EACAlyC,KAAgB8G,aAAa,CACzB,QAAS,0BACTqrB,OAAQva,IAGZ5X,KAAgB8G,aAAa,CACzB,QAAS,0BACT+/E,WAAYjvE,EAAQ,EAAIA,EAAQ6uE,EAChCt0D,OAAQva,K,EAKpByvE,gBAAkB,WAAO,IACbzvE,EAAU,EAAKsI,MAAftI,MAER,EAAKkI,SAAS,CACVoyB,UAAU,EACVu0C,UAAW7uE,K,EAInB0vE,cAAgB,WAAO,IAAD,EACW,EAAKpnE,MAA1BtI,EADU,EACVA,MAAO6uE,EADG,EACHA,UAEf,EAAK3mE,SACD,CACIoyB,UAAU,EACVu0C,UAAW7uE,EAAQ,EAAIA,EAAQ6uE,GAEnC,WACI,EAAKM,wB,EAKjBQ,cAAgB,SAAA3vE,GACZ,OAAc,IAAVA,EACO,kBAAC,KAAD,CAAesU,SAAS,UAG/BtU,EAAQ,IACD,kBAAC,KAAD,CAAgBsU,SAAS,UAGhCtU,EAAQ,GACD,kBAAC,KAAD,CAAgBsU,SAAS,UAG7B,kBAAC,KAAD,CAAcA,SAAS,W,mFAlH9Bgf,KAAYjrC,GAAG,0BAA2B+G,KAAK4/E,6B,6CAI/C17C,KAAY/qC,IAAI,0BAA2B6G,KAAK4/E,6B,+BAiH1C,IAAD,SACuB5/E,KAAKkZ,MAAzB6iD,EADH,EACGA,SAAUnrD,EADb,EACaA,MACZhQ,EAAO6W,QAAQskD,GAErB,OACI,yBACInlC,aAAc,SAAA7V,GAAC,OAAI,EAAKsT,iBAAiBtT,GAAG,IAC5Cy/D,aAAcxgF,KAAKigF,iBACnBl9E,MAAO,CACHmuC,SAAU,WACV5lC,WAAY,gBAEhB,kBAACyZ,EAAA,EAAD,CAAYF,UAAU,uBAAuBG,MAAM,UAAU5L,QAASpZ,KAAKmgF,kBACtEngF,KAAKugF,cAAc3vE,IAExB,yBACI7N,MAAO,CACHmuC,SAAU,WACV5lC,WAAY,cACZm1E,WAAY7/E,EAAO,UAAY,SAC/B+vB,OAAQ,GAEZiG,aAAc,SAAA7V,GAAC,OAAI,EAAKsT,iBAAiBtT,GAAG,IAC5Cy/D,aAAcxgF,KAAKkgF,uBACnB,yBAAKr7D,UAAU,uBACX,kBAAC67D,GAAA,EAAD,CACIl1C,IAAK,EACL/kB,IAAK,EACLglB,KAAM,IACN76B,MAAOA,EACP86B,SAAU1rC,KAAKqrC,aACfs1C,YAAa3gF,KAAKqgF,gBAClBO,UAAW5gF,KAAKsgF,cAChBO,YAAY,oB,GAjKb3mE,IAAMC,Y,0CC4ElB2mE,G,YAhFX,WAAYtoE,GAAQ,IAAD,uBACf,4CAAMA,KAiBVuoE,0BAA4B,SAAAxoF,GAAW,IAC3B8yB,EAAW9yB,EAAX8yB,OAER,EAAKvS,SAAS,CAAEuS,YArBD,EAwBnB21D,aAAe,WAAO,IACV31D,EAAW,EAAKnS,MAAhBmS,OAEJ41D,EAAa51D,EACjB,OAAQA,GACJ,KAAKb,KAAWG,KACZs2D,EAAaz2D,KAAWI,OACxB,MAEJ,KAAKJ,KAAWI,OACZq2D,EAAaz2D,KAAWK,WACxB,MAEJ,KAAKL,KAAWK,WACZo2D,EAAaz2D,KAAWG,KAKhC3xB,KAAgB8G,aAAa,CACzB,QAAS,0BACTurB,OAAQ41D,KA7CG,EAiDnBC,QAAU,SAAA71D,GACN,OAAQA,GACJ,KAAKb,KAAWG,KAGhB,KAAKH,KAAWI,OACZ,OAAO,kBAAC,KAAD,CAAY1F,SAAS,UAEhC,KAAKsF,KAAWK,WACZ,OAAO,kBAAC,KAAD,CAAe3F,SAAS,UAEnC,QACI,OAAO,kBAAC,KAAD,CAAYA,SAAS,YA7DrB,IAGPmG,EAAW6Y,KAAX7Y,OAHO,OAKf,EAAKnS,MAAQ,CACTmS,UANW,E,iFAWf6Y,KAAYjrC,GAAG,0BAA2B+G,KAAK+gF,6B,6CAI/C78C,KAAY/qC,IAAI,0BAA2B6G,KAAK+gF,6B,+BAmD1C,IACE11D,EAAWrrB,KAAKkZ,MAAhBmS,OAER,OACI,kBAACtG,EAAA,EAAD,CACIF,UAAU,uBACVG,MAAOqG,IAAWb,KAAWG,KAAO,UAAY,UAChDvR,QAASpZ,KAAKghF,cACbhhF,KAAKkhF,QAAQ71D,Q,GA3EHnR,IAAMC,W,qBC+ClBgnE,G,YA/CX,WAAY3oE,GAAQ,IAAD,uBACf,4CAAMA,KAiBV4oE,2BAA6B,SAAA7oF,GAAW,IAC5B+yB,EAAY/yB,EAAZ+yB,QAER,EAAKxS,SAAS,CAAEwS,aArBD,EAwBnB+1D,cAAgB,WAAO,IACX/1D,EAAY,EAAKpS,MAAjBoS,QAERtyB,KAAgB8G,aAAa,CACzB,QAAS,2BACTwrB,SAAUA,KA7BC,IAGPA,EAAY4Y,KAAZ5Y,QAHO,OAKf,EAAKpS,MAAQ,CACToS,WANW,E,iFAWf4Y,KAAYjrC,GAAG,2BAA4B+G,KAAKohF,8B,6CAIhDl9C,KAAY/qC,IAAI,2BAA4B6G,KAAKohF,8B,+BAkB3C,IACE91D,EAAYtrB,KAAKkZ,MAAjBoS,QAER,OACI,kBAACvG,EAAA,EAAD,CACIF,UAAU,uBACVG,MAAQsG,EAAsB,UAAZ,UAClBlS,QAASpZ,KAAKqhF,eACd,kBAAC,KAAD,CAAan8D,SAAS,e,GA1CVhL,IAAMC,WCmDnBmnE,G,YAlDX,WAAY9oE,GAAQ,IAAD,uBACf,4CAAMA,KAiBV+oE,gCAAkC,SAAAhpF,GAAW,IACjCgzB,EAAiBhzB,EAAjBgzB,aAER,EAAKzS,SAAS,CAAEyS,kBArBD,EAwBnBi2D,mBAAqB,WAAO,IAGlBC,EAFmB,EAAKvoE,MAAtBqS,eAGaqB,IAA6B80D,IAA2B90D,IAE7E5zB,KAAgB8G,aAAa,CACzB,QAAS,gCACTyrB,aAAck2D,KAhCH,IAGPl2D,EAAiB2Y,KAAjB3Y,aAHO,OAKf,EAAKrS,MAAQ,CACTqS,gBANW,E,iFAWf2Y,KAAYjrC,GAAG,gCAAiC+G,KAAKuhF,mC,6CAIrDr9C,KAAY/qC,IAAI,gCAAiC6G,KAAKuhF,mC,+BAqBhD,IACEh2D,EAAiBvrB,KAAKkZ,MAAtBqS,aAER,OACI,kBAACxG,EAAA,EAAD,CACIF,UAAU,uBACVG,MAAOuG,EAAeqB,IAA6B,UAAY,UAC/DxT,QAASpZ,KAAKwhF,oBACd,yBAAK38D,UAAU,+BAAf,W,GA7CiB3K,IAAMC,WC4CxBwnE,G,YA7CX,WAAYnpE,GAAQ,IAAD,8BACf,4CAAMA,KAiBVysB,wBAA0B,SAAA1sC,GAAW,IACzBqzB,EAAgBrzB,EAAhBqzB,YAER,EAAK9S,SAAS,CACV8S,YAAaA,EACbsZ,kBAAmBxgB,aAAkBC,KAAKC,MAAMgH,GAAe,OAvBpD,EA2BnBkZ,cAAgB,SAAClZ,EAAatH,GAGHI,aAAkBC,KAAKC,MAAMN,GAAY,IAKhE,OAJ0BI,aAAkBC,KAAKC,MAAMgH,GAAe,KA5BtE,EAAK1S,MAAQ,CACT0S,YAAa,EACbtH,SAAU,EACVugB,WAAY,EAAKC,cAAc,EAAG,IANvB,E,iFAWfZ,KAAYjrC,GAAG,wBAAyB+G,KAAKilC,2B,6CAI7Cf,KAAY/qC,IAAI,wBAAyB6G,KAAKilC,2B,+BAuBxC,IACEC,EAAsBllC,KAAKkZ,MAA3BgsB,kBAER,OAAO,oCAAGA,O,GA1CChrB,IAAMC,W,oBC6MVynE,I,mBAvMX,WAAYppE,GAAQ,IAAD,uBACf,4CAAMA,KA0BVqpE,eAAiB,WACb,IAAMjhD,EAAO,EAAKypB,QAAQrtC,QAC1B,GAAK4jB,EAAL,CAFmB,IAIX/jC,EAJW,gBAIXA,UACR,GAAKA,EAAL,CAEA,IAAM3C,EAAO,EAAK4nF,WAAWhoF,IAAI+C,GACjC,GAAK3C,EAAL,CAEA,IAAMsnB,EAAOugE,eAAqB7nF,GAC7BsnB,IAELof,EAAK4jB,UAAYhjC,EAAKwgE,UAAY,QAxCnB,EAyDnBC,kCAAoC,SAAA1pF,GAAW,IACnC2pF,EAAS3pF,EAAT2pF,KAEJA,EACA,EAAKppE,SACD,CACIqpE,kBAAmBD,GAEvB,WACI,EAAKE,YAIb,EAAKtpE,SACD,CACIqpE,kBAAmBD,GAEvB,WACI,EAAKG,cA3EF,EAiFnBp+C,0BAA4B,SAAA1rC,GAAW,IAC3BoE,EAAsBpE,EAAtBoE,OAAQE,EAActE,EAAdsE,UAEhB,EAAKF,OAASA,EACd,EAAKE,UAAYA,GArFF,EAwFnBylF,mCAAqC,SAAA/pF,GAAW,IAAD,kBACnCoE,EADmC,EACnCA,OAAQE,EAD2B,EAC3BA,UAEZtE,EAAOoE,SAAWA,GAAUpE,EAAOsE,YAAcA,GACjD,EAAKic,SAAS,CACVgS,SAAU,QA7FH,EAkGnBy3D,4BAA8B,SAAAhqF,GAAW,IAAD,kBAC5BoE,EAD4B,EAC5BA,OAAQE,EADoB,EACpBA,UACRiuB,EAAavyB,EAAbuyB,SAEJnuB,IAAWmuB,EAASnuB,QAAUE,IAAciuB,EAASjuB,WACrD,EAAKic,SAAS,CACVgS,SAAUA,KAxGH,EA6GnBs3D,QAAU,WACNI,aAAa,EAAKC,aAElB,EAAKA,YAAc1xD,WAAW,WAAO,IAAD,EACc,EAAK7X,MAA3CwpE,EADwB,EACxBA,eAAgBP,EADQ,EACRA,kBACxB,EAAKrpE,SAAS,CACVlY,KAAM8hF,GAAkBP,KAE7B,MArHY,EAwHnBE,SAAW,WACPG,aAAa,EAAK9+B,SAElB,EAAKA,QAAU3yB,WAAW,WAAO,IAAD,EACkB,EAAK7X,MAA3CwpE,EADoB,EACpBA,eAAgBP,EADI,EACJA,kBACxB,EAAKrpE,SAAS,CACVlY,KAAM8hF,GAAkBP,KAE7B,MAhIY,EAmInB9tD,iBAAmB,WACf,EAAKvb,SAAS,CACVqpE,mBAAmB,EACnBvhF,MAAM,KAtIK,EA0InBq/E,iBAAmB,WACf,EAAKnnE,SACD,CACIqpE,mBAAmB,GAEvB,WACI,EAAKE,cAhJE,EAqJnBj4B,aAAe,WACX,IAAMxpB,EAAO,EAAKypB,QAAQrtC,QACrB4jB,IAEDA,EAAK4jB,WAAa8F,KAClBtxD,KAAgB8G,aAAa,CACzB,QAAS,kCAEN8gC,EAAK4jB,UAAY5jB,EAAKmkB,cAAgBnkB,EAAKkkB,aAAewF,MACjEtxD,KAAgB8G,aAAa,CACzB,QAAS,oCA5JjB,EAAKuqD,QAAUnwC,IAAM0a,YACrB,EAAKktD,WAAa,IAAI9pF,IAJP,IAMP4D,EAAsBsoC,KAAtBtoC,QAASkvB,EAAaoZ,KAAbpZ,SANF,OAQf,EAAKnuB,OAASf,EAAUA,EAAQgB,QAAU,EAC1C,EAAKC,UAAYjB,EAAUA,EAAQnC,GAAK,EAExC,EAAKyf,MAAQ,CACTtY,MAAM,EACN8hF,gBAAgB,EAChBP,mBAAmB,EACnBr3D,SAAUA,GAfC,E,gFAmBAsK,EAAWC,EAAWC,GAAW,IACxC10B,EAASZ,KAAKkZ,MAAdtY,MAEHy0B,EAAUz0B,MAAQA,GACnBZ,KAAK6hF,mB,0CAqBT39C,KAAYjrC,GAAG,0BAA2B+G,KAAKikC,2BAC/CC,KAAYjrC,GAAG,4BAA6B+G,KAAKuiF,6BACjDr+C,KAAYjrC,GAAG,mCAAoC+G,KAAKsiF,oCACxDp+C,KAAYjrC,GAAG,kCAAmC+G,KAAKiiF,qC,6CAIvD/9C,KAAY/qC,IAAI,0BAA2B6G,KAAKikC,2BAChDC,KAAY/qC,IAAI,4BAA6B6G,KAAKuiF,6BAClDr+C,KAAY/qC,IAAI,mCAAoC6G,KAAKsiF,oCACzDp+C,KAAY/qC,IAAI,kCAAmC6G,KAAKiiF,qC,+BA8GlD,IAAD,SACsBjiF,KAAKkZ,MAAxBtY,EADH,EACGA,KAAMkqB,EADT,EACSA,SACd,IAAKlqB,EAAM,OAAO,KAClB,IAAKkqB,EAAU,OAAO,KAHjB,IAKGnnB,EAAamnB,EAAbnnB,SACR,OAAKA,EACDA,EAAS1F,QAAU,EAAU,MAEjC+B,KAAK8hF,WAAW9Z,QAGZ,yBAAKnjD,UAAU,YACX,yBAAKA,UAAU,oBACX,yBACImR,IAAKh2B,KAAKqqD,QACVxlC,UAAU,iBACV+R,aAAc52B,KAAKq0B,iBACnBmsD,aAAcxgF,KAAKigF,iBACnB70B,SAAUprD,KAAKoqD,cACdt/B,EAASnnB,SACL+tB,MAAM,GACNixD,UACA/+E,IAAI,SAAA/B,GAAC,OACF,yBAAKgQ,IAAKhQ,EAAEpI,GAAIu8B,IAAK,SAAA0vB,GAAE,OAAI,EAAKo8B,WAAWppF,IAAImJ,EAAEpI,GAAIisD,IAAK7gC,UAAU,iBAC/DmE,aAASnnB,EAAG,kBAAMwd,aAAUxd,EAAEjF,QAASiF,EAAEpI,aAnBhD,S,GA3KPygB,IAAMC,YCgBvByoE,I,mBACF,WAAYpqE,GAAQ,IAAD,uBACf,4CAAMA,KAgFV+oE,gCAAkC,SAAAhpF,GAAW,IACjCgzB,EAAiBhzB,EAAjBgzB,aAEFiB,EAAS,EAAKmT,SAAS3iB,QACxBwP,IAELA,EAAOjB,aAAeA,IAvFP,EA0FnBq0D,0BAA4B,SAAArnF,GAAW,IAC3B4yB,EAAW5yB,EAAX4yB,OAEFqB,EAAS,EAAKmT,SAAS3iB,QACxBwP,IAELA,EAAOrB,OAASA,IAhGD,EAmGnB4Z,wBAA0B,SAAAxsC,GAAW,IACzBoE,EAA6BpE,EAA7BoE,OAAQE,EAAqBtE,EAArBsE,UAAW+T,EAAUrY,EAAVqY,MACnBhV,EAAY,EAAKsd,MAAjBtd,QAER,GAAKA,EAAL,CAJgC,IAMxBgB,EAAyBhB,EAAzBgB,QAASnD,EAAgBmC,EAAhBnC,GACjB,GADiCmC,EAAZC,SAEjBc,IAAWC,GAAWC,IAAcpD,EAAxC,CAEA,IAAM+yB,EAAS,EAAKmT,SAAS3iB,QACxBwP,GACAA,EAAOlI,WAEZkI,EAAOZ,YAAchb,EAAQ4b,EAAOlI,aAjHrB,EAoHnBwO,iCAAmC,SAAAv6B,GAC/B,EAAKsqF,mBAAqBprE,QAAQwD,KAAS+X,qBArH5B,EAwHnB8vD,+BAAiC,SAAAvqF,GAC7B,EAAKsqF,oBAAqB,GAzHX,EA4HnBE,+BAAiC,SAAAxqF,GAC7B,EAAKsqF,oBAAqB,GA7HX,EAgInBG,8BAAgC,SAAAzqF,GAC5B,EAAKsqF,oBAAqB,EAE1B,IAAMr2D,EAAS,EAAKmT,SAAS3iB,QACxBwP,GAELA,EAAO+I,SAtIQ,EAyInB0tD,iBAAmB,SAAArnF,GAAY,IACnBgB,EAAgBhB,EAAhBgB,QAASnD,EAAOmC,EAAPnC,GAEJypF,EAAY,EAAKhqE,MAAtBwc,IAEFA,EAAM,EAAKytD,YAAYvnF,GACvB+P,EAAW,EAAKy3E,iBAAiBxnF,GACjC4vB,EAAU/T,QAAQie,GAChB5K,EAAaoZ,KAAbpZ,SAER,EAAKhS,SACD,CACIld,UACAkvB,WACAU,UACAkK,MACA/pB,YAEJ,WACI,IAAM6gB,EAAS,EAAKmT,SAAS3iB,QACxBwP,IAED02D,IAAYxtD,GACZlJ,EAAOggB,OAEXhgB,EAAOZ,YAAc,EAAK2mB,UACtB,EAAKswC,oBACLr2D,EAAO+I,QAEPv8B,KAAgB8G,aAAa,CACzB,QAAS,yBACTnD,OAAQC,EACRC,UAAWpD,KAER+yB,EAAOgJ,QACdhJ,EAAO0H,WA5KJ,EAkLnBmvD,wBAA0B,SAAA9qF,GAAW,IACzBoE,EAAsBpE,EAAtBoE,OAAQE,EAActE,EAAdsE,UACRjB,EAAY,EAAKsd,MAAjBtd,QAER,GAAKA,EAAL,CAJgC,IAMxBgB,EAAyBhB,EAAzBgB,QAASnD,EAAgBmC,EAAhBnC,GAAIoC,EAAYD,EAAZC,QACrB,GAAKA,GACDc,IAAWC,GAAWC,IAAcpD,EAExC,OAAQoC,EAAQ,UACZ,IAAK,cAAgB,IACTQ,EAAaR,EAAbQ,SACR,GAAIA,EAAU,CAAC,IACHN,EAAkCM,EAAlCN,MAAOS,EAA2BH,EAA3BG,WAAYD,EAAeF,EAAfE,WAE3B,GAAIR,EACaA,EAAMA,OAEf,EAAKknF,iBAAiBrnF,GAI9B,GAAIY,EACkBA,EAAV+B,OAEJ,EAAK0kF,iBAAiBrnF,GAI9B,GAAIW,EACkBA,EAAVD,OAEJ,EAAK2mF,iBAAiBrnF,GAKlC,MAEJ,IAAK,eAAiB,IACVG,EAAUF,EAAVE,MACR,GAAIA,EACaA,EAAMA,OAEf,EAAKknF,iBAAiBrnF,GAI9B,MAEJ,IAAK,mBAAqB,IACdY,EAAeX,EAAfW,WACR,GAAIA,EACkBA,EAAV+B,OAEJ,EAAK0kF,iBAAiBrnF,GAI9B,MAEJ,IAAK,mBAAqB,IACdW,EAAeV,EAAfU,WACR,GAAIA,EACkBA,EAAVD,OAEJ,EAAK2mF,iBAAiBrnF,MArPvB,EA8PnB2mF,4BAA8B,SAAAhqF,GAAW,IAC7BuyB,EAAavyB,EAAbuyB,SACAnuB,EAAsBmuB,EAAtBnuB,OAAQE,EAAciuB,EAAdjuB,UACRjB,EAAY,EAAKsd,MAAjBtd,QAEJA,GAAWA,EAAQgB,UAAYD,GAAUf,EAAQnC,KAAOoD,GACxD,EAAKic,SAAS,CAAEgS,SAAUA,KApQf,EAwQnBw4D,yBAA2B,SAAA/qF,GACvB,EAAKugB,SAAS,CACVld,QAAS,KACTkvB,SAAU,KACVU,SAAS,EACTkK,IAAK,KACL/pB,SAAU,QA9QC,EAkRnBs4B,0BAA4B,SAAA1rC,GAAW,IAC3BoE,EAAsBpE,EAAtBoE,OAAQE,EAActE,EAAdsE,UADkB,EAET,EAAKqc,MAAtBtd,EAF0B,EAE1BA,QAAS85B,EAFiB,EAEjBA,IAEjB,GAAI95B,GAAWA,EAAQgB,UAAYD,GAAUf,EAAQnC,KAAOoD,EAAW,CACnE,IAAK64B,EAAK,OAEV,IAAMlJ,EAAS,EAAKmT,SAAS3iB,QAC7B,IAAKwP,EAAQ,OAETA,EAAOgJ,OACPhJ,EAAO0H,OAEP1H,EAAO+I,aAGX,EAAK0tD,iBAAiB/+C,KAAYtoC,UAlSvB,EAsSnB2nF,WAAa,WACTvqF,KAAgB8G,aAAa,CACzB,QAAS,2BAxSE,EA4SnB0jF,WAAa,WAAO,IACR5nF,EAAY,EAAKsd,MAAjBtd,QACHA,GAEL5C,KAAgB8G,aAAa,CACzB,QAAS,0BACTnD,OAAQf,EAAQgB,QAChBC,UAAWjB,EAAQnC,MAnTR,EAuTnBgqF,WAAa,WACTzqF,KAAgB8G,aAAa,CACzB,QAAS,2BAzTE,EA6TnBsjF,iBAAmB,SAAAxnF,GACf,GAAIA,EAAS,CAAC,IACFC,EAAYD,EAAZC,QACR,GAAIA,EAAS,CAAC,IACFE,EAA4CF,EAA5CE,MAAOS,EAAqCX,EAArCW,WAAYD,EAAyBV,EAAzBU,WAAYF,EAAaR,EAAbQ,SAEvC,GAAIN,EACA,OAAOA,EAAMgN,UAGjB,GAAIvM,EACA,OAAOA,EAAWuM,UAGtB,GAAIxM,EACA,MAAO,YAGX,GAAIF,EAAU,CACV,GAAIA,EAASN,MACT,OAAOM,EAASN,MAAMgN,UAG1B,GAAI1M,EAASG,WACT,OAAOH,EAASG,WAAWuM,UAG/B,GAAI1M,EAASE,WACT,MAAO,cAMvB,MAAO,IA/VQ,EAkWnB4mF,YAAc,SAAAvnF,GACV,GAAIA,EAAS,CAAC,IACFC,EAAYD,EAAZC,QACR,GAAIA,EAAS,CAAC,IACFE,EAA4CF,EAA5CE,MAAOS,EAAqCX,EAArCW,WAAYD,EAAyBV,EAAzBU,WAAYF,EAAaR,EAAbQ,SAEvC,GAAIN,EAAO,CACP,IAAMpD,EAAOoD,EAAMA,MACnB,GAAIpD,EACA,OAAOkT,YAAOlT,GAItB,GAAI6D,EAAY,CAAC,IACL+B,EAAU/B,EAAV+B,MACR,GAAIA,EACA,OAAOsN,YAAOtN,GAItB,GAAIhC,EAAY,CAAC,IACLD,EAAUC,EAAVD,MACR,GAAIA,EACA,OAAOuP,YAAOvP,GAItB,GAAID,EAAU,CACV,GAAIA,EAASN,MAAO,CAChB,IAAMpD,EAAO0D,EAASN,MAAMA,MAC5B,GAAIpD,EACA,OAAOkT,YAAOlT,GAItB,GAAI0D,EAASG,WAAY,CAAC,IACd+B,EAAUlC,EAASG,WAAnB+B,MACR,GAAIA,EACA,OAAOsN,YAAOtN,GAItB,GAAIlC,EAASE,WAAY,CAAC,IACdD,EAAUD,EAASE,WAAnBD,MACR,GAAIA,EACA,OAAOuP,YAAOvP,MAOlC,MAAO,IAtZQ,EAyZnBonF,YAAc,WAAsB,IAArB/3D,IAAoB,yDACvB/vB,EAAY,EAAKsd,MAAjBtd,QACHA,IAEL5C,KAAgB8G,aAAa,CACzB,QAAS,0BACTnD,OAAQf,EAAQgB,QAChBC,UAAWjB,EAAQnC,GACnBkyB,SAAUA,IAGd,EAAK7S,SACD,GAKA,WACI9f,KAAgB8G,aAAa,CACzB,QAAS,uBACTnD,OAAQf,EAAQgB,QAChBC,UAAWjB,EAAQnC,GACnBkyB,SAAUA,QA/aP,EAqbnBg4D,iBAAmB,WACf,EAAKD,aAAY,IAtbF,EAybnB1qE,YAAc,WACV,IAAMwT,EAAS,EAAKmT,SAAS3iB,QACzBwP,GACAA,EAAO+I,QAGX,EAAKmuD,aAAY,IA/bF,EAkcnBE,iBAAmB,WAAO,IACdhoF,EAAY,EAAKsd,MAAjBtd,QACR,GAAKA,EAAL,CAEA,IAAM4wB,EAAS,EAAKmT,SAAS3iB,QACxBwP,IAEL,EAAK1T,SAAS,CACV8S,YAAaY,EAAOZ,YACpBsZ,kBAAmBxgB,aAAkBC,KAAKC,MAAM4H,EAAOZ,aAAe,MAG1E5yB,KAAgB8G,aAAa,CACzB,QAAS,wBACTnD,OAAQf,EAAQgB,QAChBC,UAAWjB,EAAQnC,GACnB6qB,SAAUkI,EAAOlI,SACjBsH,YAAaY,EAAOZ,YACpBC,UAAW7Y,KAAKI,WApdL,EAwdnBg5B,cAAgB,WAAO,IACXxwC,EAAY,EAAKsd,MAAjBtd,QACR,GAAKA,EAAL,CAEA,IAAM4wB,EAAS,EAAKmT,SAAS3iB,QAC7B,GAAKwP,EAAL,CALkB,IAOVjB,EAAyB2Y,KAAzB3Y,aAAcJ,EAAW+Y,KAAX/Y,OAEdvuB,EAAgBhB,EAAhBgB,QAASnD,EAAOmC,EAAPnC,GACXsC,EAAQsiB,aAASzhB,EAASnD,GAMhC,GAJA+yB,EAAOjB,aAAexvB,EAAQ6wB,IAA6BrB,EAC3DiB,EAAOrB,OAASA,EAChBqB,EAAO8T,OAAQ,GAEXvkC,EAAJ,CAIA,IAAI+vB,EAAS,KACT,kBAAmBU,EACnBV,EAASU,EAAOq3D,gBACT,qBAAsBr3D,IAC7BV,EAASU,EAAOs3D,oBAGfh4D,GAIL9yB,KAAgB8G,aAAa,CACzB,QAAS,iCACTnD,OAAQf,EAAQgB,QAChBC,UAAWjB,EAAQnC,GACnBqyB,OAAQA,QA3fG,EA+fnBi4D,gBAAkB,WAAO,IACbnoF,EAAY,EAAKsd,MAAjBtd,QACR,GAAKA,EAAL,CAEA,EAAKkd,SAAS,CACV0S,SAAS,IAGb,IAAMgB,EAAS,EAAKmT,SAAS3iB,QACxBwP,GAELxzB,KAAgB8G,aAAa,CACzB,QAAS,wBACTnD,OAAQf,EAAQgB,QAChBC,UAAWjB,EAAQnC,GACnBmyB,YAAaY,EAAOZ,YACpBtH,SAAUkI,EAAOlI,SACjBuH,UAAW7Y,KAAKI,UAhhBL,EAohBnB4wE,iBAAmB,WAAO,IACdpoF,EAAY,EAAKsd,MAAjBtd,QACHA,IAEL,EAAKkd,SAAS,CACV0S,SAAS,IAGE,EAAKmU,SAAS3iB,SAG7BhkB,KAAgB8G,aAAa,CACzB,QAAS,yBACTnD,OAAQf,EAAQgB,QAChBC,UAAWjB,EAAQnC,OAliBR,EAsiBnB+nF,mBAAqB,WAAO,IAGlBC,EAFmB,EAAKvoE,MAAtBqS,eAGaqB,IAA6B80D,IAA2B90D,IAE7E,EAAK9T,SACD,CACIyS,aAAck2D,GAElB,WACI,IAAMj1D,EAAS,EAAKmT,SAAS3iB,QACxBwP,IAELA,EAAOjB,aAAek2D,KAI9BzoF,KAAgB8G,aAAa,CACzB,QAAS,gCACTyrB,aAAck2D,KA1jBH,EA8jBnBwC,QAAU,SAACroF,EAASkvB,GAChB,IAAKlvB,EAAS,OAAO,EACrB,IAAKkvB,IAAaA,EAASnnB,SAAS1F,OAAQ,OAAO,EAFtB,IAIrBrB,EAAgBhB,EAAhBgB,QAASnD,EAAOmC,EAAPnC,GAEX8P,EAAQuhB,EAASnnB,SAAS0jB,UAAU,SAAAxlB,GAAC,OAAIA,EAAEjF,UAAYA,GAAWiF,EAAEpI,KAAOA,IACjF,OAAe,IAAX8P,GAEGA,EAAQ,EAAIuhB,EAASnnB,SAAS1F,QAvkBtB,EA0kBnBimF,QAAU,SAACtoF,EAASkvB,GAChB,IAAKlvB,EAAS,OAAO,EACrB,IAAKkvB,IAAaA,EAASnnB,SAAS1F,OAAQ,OAAO,EAFtB,IAIrBrB,EAAgBhB,EAAhBgB,QAASnD,EAAOmC,EAAPnC,GAEX8P,EAAQuhB,EAASnnB,SAAS0jB,UAAU,SAAAxlB,GAAC,OAAIA,EAAEjF,UAAYA,GAAWiF,EAAEpI,KAAOA,IACjF,OAAe,IAAX8P,GAEGA,EAAQ,GAAK,GAnlBL,EAslBnB46E,sBAAwB,WACpBnrF,KAAgB8G,aAAa,CACzB,QAAS,kCACToiF,MAAM,KAzlBK,EA6lBnBkC,sBAAwB,WACpBprF,KAAgB8G,aAAa,CACzB,QAAS,kCACToiF,MAAM,KAhmBK,EAomBnBmC,iBAAmB,WAAO,IACdzoF,EAAY,EAAKsd,MAAjBtd,QACHA,GAELmd,YAASnd,EAAQgB,QAAShB,EAAQnC,KArmBlC,EAAKkmC,SAAWzlB,IAAM0a,YAHP,IAKPh5B,EAAsBsoC,KAAtBtoC,QAASkvB,EAAaoZ,KAAbpZ,SALF,OAOf,EAAKynB,UAAY+xC,IAEjB,EAAKprE,MAAQ,CACT0S,YAAa,EACbsZ,kBAAmBxgB,aAAkB,GACrC9oB,QAASA,EACTkvB,SAAUA,EACVU,SAAS,EACTkK,IAAK,EAAKytD,YAAYvnF,GACtB+P,SAAU,EAAKy3E,iBAAiBxnF,IAhBrB,E,mFAoBGyzB,EAAWC,EAAW4F,GAAc,IAC9CkQ,EAAUplC,KAAKwY,MAAf4sB,MAD6C,EAETplC,KAAKkZ,MAAzCtd,EAF6C,EAE7CA,QAASkvB,EAFoC,EAEpCA,SAAU4K,EAF0B,EAE1BA,IAAKlK,EAFqB,EAErBA,QAEhC,OAAI6D,EAAU+V,QAAUA,IAIpB9V,EAAU1zB,UAAYA,IAItB0zB,EAAUxE,WAAaA,IAIvBwE,EAAUoG,MAAQA,GAIlBpG,EAAU9D,UAAYA,O,0CAQ1BxnB,IAAU/K,GAAG,4BAA6B+G,KAAKqjF,yBAC/Cr/E,IAAU/K,GAAG,4BAA6B+G,KAAKqjF,yBAC/Cr/E,IAAU/K,GAAG,wBAAyB+G,KAAKqjF,yBAC3Cn/C,KAAYjrC,GAAG,0BAA2B+G,KAAKikC,2BAC/CC,KAAYjrC,GAAG,yBAA0B+G,KAAKsjF,0BAC9Cp/C,KAAYjrC,GAAG,4BAA6B+G,KAAKuiF,6BACjDr+C,KAAYjrC,GAAG,8BAA+B+G,KAAKgjF,+BACnD9+C,KAAYjrC,GAAG,+BAAgC+G,KAAK+iF,gCACpD7+C,KAAYjrC,GAAG,+BAAgC+G,KAAK8iF,gCACpD5+C,KAAYjrC,GAAG,0BAA2B+G,KAAK4/E,2BAC/C17C,KAAYjrC,GAAG,gCAAiC+G,KAAKuhF,iCACrDr9C,KAAYjrC,GAAG,wBAAyB+G,KAAK+kC,yBAE7C9pB,KAAShiB,GAAG,iCAAkC+G,KAAK8yB,oC,6CAInD9uB,IAAU7K,IAAI,4BAA6B6G,KAAKqjF,yBAChDr/E,IAAU7K,IAAI,4BAA6B6G,KAAKqjF,yBAChDr/E,IAAU7K,IAAI,wBAAyB6G,KAAKqjF,yBAC5Cn/C,KAAY/qC,IAAI,0BAA2B6G,KAAKikC,2BAChDC,KAAY/qC,IAAI,yBAA0B6G,KAAKsjF,0BAC/Cp/C,KAAY/qC,IAAI,4BAA6B6G,KAAKuiF,6BAClDr+C,KAAY/qC,IAAI,8BAA+B6G,KAAKgjF,+BACpD9+C,KAAY/qC,IAAI,+BAAgC6G,KAAK+iF,gCACrD7+C,KAAY/qC,IAAI,+BAAgC6G,KAAK8iF,gCACrD5+C,KAAY/qC,IAAI,0BAA2B6G,KAAK4/E,2BAChD17C,KAAY/qC,IAAI,gCAAiC6G,KAAKuhF,iCACtDr9C,KAAY/qC,IAAI,wBAAyB6G,KAAK+kC,yBAE9C9pB,KAAS9hB,IAAI,iCAAkC6G,KAAK8yB,oC,+BA6hB9C,IACE7kB,EAAMjO,KAAKwY,MAAXvK,EADH,EAEiDjO,KAAKkZ,MAAnDsS,EAFH,EAEGA,QAAS5vB,EAFZ,EAEYA,QAASkvB,EAFrB,EAEqBA,SAAU4K,EAF/B,EAE+BA,IAAK/pB,EAFpC,EAEoCA,SAErC5P,GAAQ,EACZ,GAAIH,EAAS,CAAC,IACFgB,EAAgBhB,EAAhBgB,QAASnD,EAAOmC,EAAPnC,GACjBsC,EAAQsiB,aAASzhB,EAASnD,GAG9B,IAAMsZ,EAAOnX,EAAUA,EAAQmX,KAAO,KAEhC/E,EAAQiQ,aAAcriB,EAASqS,GAC/Bs2E,EAAcloE,aAAYtJ,GAC1ByxE,EAAUhxE,aAAQT,GAClBgyD,GAAYhpE,EACZ0oF,GAAoB1oF,EACpB2oF,EAAa3oF,EACb4oF,EAAc5oF,EACdkoF,EAAUjkF,KAAKikF,QAAQroF,EAASkvB,GAChCo5D,EAAUlkF,KAAKkkF,QAAQtoF,EAASkvB,GAEhC/tB,EAAS24B,EAAM,4BAAQA,IAAKA,EAAKltB,KAAMmD,IAAe,KAE5D,OACI,oCACI,2BACIkZ,UAAU,sBACVmR,IAAKh2B,KAAK2/B,SACVY,UAAU,EACVqkD,UAAU,EACVn/E,MAAO,GACPC,OAAQ,GACRinC,UAAW3sC,KAAKosC,cAChBy4C,OAAQ7kF,KAAK+jF,gBACbe,QAAS9kF,KAAKgkF,iBACde,aAAc/kF,KAAK4jF,iBACnBoB,QAAShlF,KAAK2jF,kBACb5mF,GAEJnB,GACG,yBAAKipB,UAAU,iBACX,kBAACE,EAAA,EAAD,CACI4sB,UAAWsyC,EACXp/D,UAAU,uBACVG,MAAM,UACN5L,QAASpZ,KAAKujF,YACd,kBAAC,KAAD,CAAkBr+D,SAAS,WAE/B,kBAACH,EAAA,EAAD,CACIF,UAAU,uBACVG,MAAM,UACN2sB,UAAWjc,EACXtc,QAASpZ,KAAKwjF,YACbh4D,EAAU,kBAACy5D,GAAA,EAAD,MAAgB,kBAACC,GAAA,EAAD,OAE/B,kBAACngE,EAAA,EAAD,CACI4sB,UAAWuyC,EACXr/D,UAAU,uBACVG,MAAM,UACN5L,QAASpZ,KAAKyjF,YACd,kBAAC,KAAD,CAAcv+D,SAAS,WAE3B,kBAAC,GAAD,MACA,yBACIL,UAAU,wBACV+R,aAAc52B,KAAKmkF,sBACnB3D,aAAcxgF,KAAKokF,sBACnBhrE,QAASpZ,KAAKqkF,kBACd,yBAAKx/D,UAAU,uBACV7W,EACA+2D,GACG,0BAAM/2D,MAAOu2E,GAAb,OAEKC,IAVjB,OAeI,kBAAC,GAAD,OAEJ,kBAAC,GAAD,MACCC,GAAoB,kBAAC,GAAD,MACpBC,GAAc,kBAAC,GAAD,MACdC,GAAe,kBAAC,GAAD,MAChB,kBAAC5/D,EAAA,EAAD,CAAYF,UAAU,uBAAuBzL,QAASpZ,KAAKgZ,aACvD,kBAACw6B,EAAA,EAAD,CAAWtuB,SAAS,iB,GAlsBrBhL,IAAMC,YA2sBlBE,iBAAkBuoE,ICxtB3BuC,I,kNASFC,sBAAwB,SAAA7sF,GAAW,IACvBoE,EAAW,EAAK6b,MAAhB7b,OACYpE,EAAZqE,UAEQD,GAEhB,EAAKo3B,e,EAGT/a,YAAc,WAAO,IACTrc,EAAW,EAAK6b,MAAhB7b,OAER,IADaoN,IAAUjQ,IAAI6C,GAChB,OAAO,KAElB3D,KAAgBmI,KAAK,CACjB,QAAS,sBACTvE,QAASD,K,EAIjB0oF,iBAAmB,WAAO,IACd1oF,EAAW,EAAK6b,MAAhB7b,OAER,IADaoN,IAAUjQ,IAAI6C,GAChB,OAAO,KAElB3D,KAAgBmI,KAAK,CACjB,QAAS,aACTvE,QAASD,EACT2oF,OAAQ,CACJ,QAAS,wBAEbtjF,YAAa,M,EAIrBujF,8BAAgC,WAAO,IAC3B5oF,EAAW,EAAK6b,MAAhB7b,OAER,IADaoN,IAAUjQ,IAAI6C,GAChB,OAAO,KAElB3D,KAAgBmI,KAAK,CACjB,QAAS,aACTvE,QAASD,EACT2oF,OAAQ,CACJ,QAAS,qCAEbtjF,YAAa,M,EAIrBwjF,uBAAyB,WAAO,IACpB7oF,EAAW,EAAK6b,MAAhB7b,OACFuF,EAASkI,YAAczN,GACxBuF,GAELlJ,KAAgBmI,KAAK,CACjB,QAAS,mBACTgE,QAASjD,K,EAIjBujF,iBAAmB,WAAO,IACd9oF,EAAW,EAAK6b,MAAhB7b,OACFuF,EAASkI,YAAczN,GAC7B,GAAKuF,EAAL,CAEA,IAAMxG,EAAO0J,IAAUtL,IAAIoI,GAC3B,GAAKxG,EAAL,CANqB,IAQbyJ,EAAiDzJ,EAAjDyJ,QAAS2Q,EAAwCpa,EAAxCoa,aAAc7E,EAA0BvV,EAA1BuV,WAAYmU,EAAc1pB,EAAd0pB,UAE3CpsB,KAAgBmI,KAAK,CACjB,QAAS,aACT+D,QAAS,CACL,QAAS,UACT4Q,eACA7E,aACAmU,YACAsgE,MAAO,GACPvgF,WAEJwgF,oBAAoB,O,EAI5BC,gBAAkB,WAAO,IACbjpF,EAAW,EAAK6b,MAAhB7b,OACFuF,EAASkI,YAAczN,GACxBuF,GAELlJ,KAAgBmI,KAAK,CACjB,QAAS,YACTgE,QAASjD,K,mFAnGb6H,IAAU9Q,GAAG,sBAAuB+G,KAAKolF,yB,6CAIzCr7E,IAAU5Q,IAAI,sBAAuB6G,KAAKolF,yB,+BAmGpC,IAAD,EACiBplF,KAAKwY,MAAnB7b,EADH,EACGA,OAAQsR,EADX,EACWA,EAChB,IAAKtR,EAAQ,OAAO,KAEpB,IAAMtB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,IAAKtB,EAAM,OAAO,KALb,IAOGwqF,EAAexqF,EAAfwqF,WACR,IAAKA,EAAY,OAAO,KAExB,IAAIhqF,EAAU,KACd,OAAQgqF,EAAW,UACf,IAAK,gCACDhqF,EACI,kBAACke,EAAA,EAAD,CAAQiL,MAAM,UAAUH,UAAU,wBAAwBzL,QAASpZ,KAAKwlF,wBACnEv3E,EAAE,iBAGX,MAEJ,IAAK,0BACDpS,EACI,kBAACke,EAAA,EAAD,CAAQiL,MAAM,UAAUH,UAAU,wBAAwBzL,QAASpZ,KAAKylF,kBACnEx3E,EAAE,mBAGX,MAEJ,IAAK,8BACDpS,EACI,oCACI,kBAACke,EAAA,EAAD,CAAQiL,MAAM,UAAUH,UAAU,wBAAwBzL,QAASpZ,KAAKylF,kBACnEx3E,EAAE,mBAEP,kBAAC8L,EAAA,EAAD,CAAQiL,MAAM,YAAYH,UAAU,wBAAwBzL,QAASpZ,KAAK4lF,iBACrE33E,EAAE,oBAIf,MAEJ,IAAK,iCACDpS,EACI,kBAACke,EAAA,EAAD,CACIiL,MAAM,YACNH,UAAU,wBACVzL,QAASpZ,KAAKulF,+BACbt3E,EAAE,uBAGX,MAEJ,IAAK,0BACDpS,EACI,kBAACke,EAAA,EAAD,CAAQiL,MAAM,YAAYH,UAAU,wBAAwBzL,QAASpZ,KAAKqlF,kBACrEp3E,EAAE,eAOnB,OACI,yBAAK4W,UAAU,aAAa+mB,YAAa5rC,KAAKyY,aAC1C,yBAAKoM,UAAU,sBAAsBhpB,GACrC,yBAAKgpB,UAAU,2BACX,kBAACE,EAAA,EAAD,CAAY3L,QAASpZ,KAAKgZ,aACtB,kBAACw6B,EAAA,EAAD,a,GA5KAt5B,IAAMC,YAwLfE,iBAAkB8qE,IC9L3BW,I,kNASFC,uBAAyB,WACrB,EAAKhyD,e,mFARLyuC,KAAkBvpE,GAAG,6BAA8B+G,KAAK+lF,0B,6CAIxDvjB,KAAkBrpE,IAAI,6BAA8B6G,KAAK+lF,0B,+BAOnD,IAAD,EACkB/lF,KAAKwY,MAApBzF,EADH,EACGA,KAAMmoB,EADT,EACSA,KAGR1X,EADW,IAAIxQ,KAAY,IAAPD,IAAe,IAAIC,MAAOgzE,UAAS,IAAIhzE,MAAO6pB,WAAa,GAE/E,CACIxpB,IAAK,UACLk6C,MAAO,OACPC,KAAM,WAEV,CACIn6C,IAAK,UACLk6C,MAAO,QAGjB,OACI,yBAAK1oC,UAAU,YACX,yBAAKA,UAAU,oBACX,6BAAM,IAAI7R,KAAY,IAAPD,GAAau6C,mBAAmB,CAACpyB,EAAKxY,UAAWc,U,GA/B9DtJ,IAAMC,YA0CbE,iBAAkByrE,ICoClBG,I,mBA7EX,WAAYztE,GAAQ,IAAD,uBACf,4CAAMA,KAeV0tE,uBAAyB,SAAA3tF,GAAW,IACxB4tF,EAAelrE,KAAfkrE,WAER,EAAKrtE,SAAS,CAAEqtE,gBAnBD,EAsBnBC,gBAAkB,SAAA3kF,GACdA,EAAMkX,iBACNlX,EAAMiX,mBAxBS,EA2BnB2tE,WAAa,SAAA5kF,GACTA,EAAMkX,iBACNlX,EAAMiX,kBACN1f,KAAgB8G,aAAa,CACzB,QAAS,uBACTorC,UAAU,IAGd,EAAK2tC,6BAA6Bp3E,EAAM6kF,aAAaje,QAnCtC,EAsCnBke,gBAAkB,SAAA9kF,GACdA,EAAMkX,iBACNlX,EAAMiX,kBACN1f,KAAgB8G,aAAa,CACzB,QAAS,uBACTorC,UAAU,KA3CC,EA+CnB2tC,6BAA+B,SAAAxQ,GACN,IAAjBA,EAAMpqE,QAEVjF,KAAgB8G,aAAa,CACzB,QAAS,wBACTuoE,WApDW,IAGP8d,EAAelrE,KAAfkrE,WAHO,OAKf,EAAKjtE,MAAQ,CAAEitE,cALA,E,iFASflrE,KAAShiB,GAAG,uBAAwB+G,KAAKkmF,0B,6CAIzCjrE,KAAS9hB,IAAI,uBAAwB6G,KAAKkmF,0B,+BA6C1C,OADuBlmF,KAAKkZ,MAApBitE,WAIJ,yBACIthE,UAAU,oBACV2hE,YAAaxmF,KAAKomF,gBAClBK,YAAazmF,KAAKumF,gBAClBG,OAAQ1mF,KAAKqmF,YACb,yBAAKxhE,UAAU,6BACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,2BAAf,mBACA,yBAAKA,UAAU,8BAAf,mBAXQ,S,GA3DF3K,IAAMC,Y,+BCG9BwsE,I,kNACFztE,MAAQ,CACJ0tE,SAAU,M,EAGdC,eAAiB,SAAArlE,GACb,EAAK1I,SAAS,CACV8tE,SAAUplE,K,EAIlBslE,YAAc,SAAArlF,GACVA,EAAMiX,kBADa,IAGX6D,EAAgB,EAAK/D,MAArB+D,YACR,IAAKA,EAAa,OAAO,KAJN,IAMXC,EAAWD,EAAXC,OAER,OAAQA,EAAO,UACX,IAAK,2BAA6B,IACtB/U,EAAmB+U,EAAnB/U,eAERoR,YAASpR,GAAgB,GACzB,MAEJ,IAAK,iCACD,MAEJ,IAAK,8BAAgC,IACzB7K,EAAwB4f,EAAxB5f,QAAS+hB,EAAenC,EAAfmC,WAEjB5F,YAASnc,EAAS+hB,K,wEAMpB,IAAD,EACsB3e,KAAKwY,MAAxBvK,EADH,EACGA,EAAGsO,EADN,EACMA,YACHqqE,EAAa5mF,KAAKkZ,MAAlB0tE,SAEF54E,EAAQyO,aAAgBF,EAAatO,GACrC84E,EAAUzqE,aAAsBC,GAClC,oCACKtO,EAAE,cACH,0BAAM4W,UAAU,gBAAgBmR,IAAKh2B,KAAK6mF,kBAG9C,GAGJ,OACI,yBAAKhiE,UAAWC,IAAW,iBAAkB,YACzC,6BAAM7W,EAAE,qBACR,6BACKA,EAAE,QAAU,IACb,kBAAC+4E,GAAA,EAAD,CACIh5E,MAAO+4E,EACPptE,QAAS,CAAEstE,OAAQ,uBAAwBF,QAAS,mBACpDG,YAAa,CACTC,cAAe,CACXC,UAAW,CACPC,MAAO,CACHC,QAAS7vE,QAAQmvE,GACjBttC,QAASstC,MAKzBW,UAAU,OACV,uBAAGnuE,QAASpZ,KAAK8mF,aAAc94E,U,GAvEjCkM,IAAMC,YAmFbE,iBAAkBssE,I,qBClF3Ba,I,wLACQ,IAAD,EACkFxnF,KAAKwY,MAApFqM,EADH,EACGA,UAAWloB,EADd,EACcA,OAAQE,EADtB,EACsBA,UAAWkW,EADjC,EACiCA,KAAM00E,EADvC,EACuCA,SAAUC,EADjD,EACiDA,YAAaz5E,EAD9D,EAC8DA,EAAG05E,EADjE,EACiEA,MAAO5kF,EADxE,EACwEA,MAEvEnH,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,KAJhB,IAMG8e,EAAgB9e,EAAhB8e,YAEF8pE,EAAUhxE,aAAQT,GAClBwxE,EAAcloE,aAAYtJ,GAEhC,OACI,yBAAK8R,UAAWC,IAAW,OAAQD,GAAY9hB,MAAOA,GAClD,wCACC4kF,EAAQ,GACL,oCACI,kBAAC,KAAD,CAAgB9iE,UAAU,oBAC1B,0BAAMA,UAAU,cAAhB,OAEK8iE,EAFL,cAOPF,EAAW,GAAK,8BAAOx5E,EAAE,iBAAT,QACjB,uBAAGmL,QAASsuE,GACR,0BAAM15E,MAAOu2E,GAAcC,IAE9B9pE,GAAe,kBAAC,GAAD,CAAQ/d,OAAQA,EAAQE,UAAWA,S,GA7BhDqd,IAAMC,YA4CVE,iBAAkBmtE,I,UClB3BI,I,kNACF1uE,MAAQ,CACJ2uE,iBAAiB,G,EAGrBC,sBAAwB,SAAArmF,GACD,EAAKyX,MAAhBif,QAGR,EAAKrf,SAAS,CACV+uE,iBAAiB,EACjBjgC,aAAa,K,EAIrBmgC,mBAAqB,SAAAtmF,GACbA,GACAA,EAAMiX,kBAGV,EAAKI,SAAS,CAAE+uE,iBAAiB,K,EAGrCG,eAAiB,SAAAvmF,GACbA,EAAMiX,kBADgB,MAGQ,EAAKF,MAA3B7b,EAHc,EAGdA,OAAQE,EAHM,EAGNA,UACY,EAAKqc,MAAzB2uE,iBAGJ,EAAK/uE,SAAS,CAAE+uE,iBAAiB,IAGrC5gD,aAAStqC,EAAQE,I,EAGrBorF,aAAe,SAAAxmF,GACPA,GACAA,EAAMiX,kBAFU,MAKmB,EAAKF,MAApC7b,EALY,EAKZA,OAAQE,EALI,EAKJA,WAEhB0c,EAPoB,EAKOA,SAEnB9X,GACRulC,aAAiBrqC,EAAQE,I,EAG7B++C,eAAiB,SAAAn6C,GAAU,IACf8X,EAAY,EAAKf,MAAjBe,QACA2uE,EAAa,EAAKhvE,MAAlBgvE,SAER3uE,EAAQ9X,GAEHymF,GACLhvC,EAAKgvC,I,EAGTC,YAAc,SAAA1mF,GAAU,IAAD,EACoB,EAAK+W,MAApC7b,EADW,EACXA,OAAQE,EADG,EACHA,UAAW0c,EADR,EACQA,QAE3B+iC,cACA/iC,EAAQ9X,GACR0xE,YAAax2E,EAAQE,I,EAGzB+1D,UAAY,SAAAnxD,GAAU,IAAD,EACsB,EAAK+W,MAApC7b,EADS,EACTA,OAAQE,EADC,EACDA,UAAW0c,EADV,EACUA,QAE3B+iC,cACA/iC,EAAQ9X,GAEJ4hB,aAAgB1mB,EAAQE,G1FvF7B,SAAsBF,GACzB3D,KAAgBmI,KAAK,CACjB,QAAS,mBACTvE,QAASD,I0FqFLugF,CAAavgF,G1FjGlB,SAAoBA,EAAQE,GAAyC,IAA9BurF,EAA6B,wDACvEpvF,KAAgBmI,KAAK,CACjB,QAAS,iBACTvE,QAASD,EACTgiB,WAAY9hB,EACZwrF,qBAAsBD,I0F8FlBE,CAAW3rF,EAAQE,I,EAI3BgqD,cAAgB,SAAAplD,GAAU,IAAD,EACkB,EAAK+W,MAApC7b,EADa,EACbA,OAAQE,EADK,EACLA,WAEhB0c,EAHqB,EACMA,SAEnB9X,GACRqlD,YAAgBnqD,EAAQ,CAACE,K,EAG7B0rF,WAAa,SAAA9mF,GAAU,IAAD,EACqB,EAAK+W,MAApC7b,EADU,EACVA,OAAQE,EADE,EACFA,UAAW0c,EADT,EACSA,QAE3B+iC,cACA/iC,EAAQ9X,GACRyxE,YAAYv2E,EAAQE,I,EAGxBk7B,aAAe,SAAAt2B,GAAU,IAAD,EACmB,EAAK+W,MAApC7b,EADY,EACZA,OAAQE,EADI,EACJA,WAEhB0c,EAHoB,EACOA,SAEnB9X,GACR+mF,YAAc7rF,EAAQE,GAAW,I,EAGrCkqD,aAAe,SAAAtlD,GAAU,IAAD,EACmB,EAAK+W,MAApC7b,EADY,EACZA,OAAQE,EADI,EACJA,WAEhB0c,EAHoB,EACOA,SAEnB9X,GACRulD,YAAerqD,EAAQ,CAACE,K,EAG5B4rF,e,sCAAiB,WAAMhnF,GAAN,iCAAAjJ,EAAA,0DAC0B,EAAKggB,MAApC7b,EADK,EACLA,OAAQE,EADH,EACGA,WAAW0c,EADd,EACcA,SAEnB9X,GAEF7F,EAAUiI,KAAa/J,IAAI6C,EAAQE,GAL5B,oDAQLhB,EAAYD,EAAZC,QARK,oDAWLE,EAAUF,EAAVE,MAXK,sDAcEpD,EAASoD,EAAhBA,MAdK,0DAiBDqF,EAAYzI,EAAhBc,GAjBK,UAmBQT,KAAgBmI,KAAK,CACtC,QAAS,eACTC,UACAO,SAAU,EACVsO,OAAQ,MACRoc,MAAO,KACPq8D,aAAa,IAzBJ,eAmBP5nF,EAnBO,iBA4BM9H,KAAgBmI,KAAK,CACpC,QAAS,eACTC,UACA6O,OAAQ,MACRgE,MAAO,OAhCE,QA4BP/U,EA5BO,OAmCbjE,QAAQoF,IAAI,gBAAiBS,EAAQ5B,GAnCxB,0C,8HAsCP,IAAD,EACwEc,KAAKwY,MAA1EvK,EADH,EACGA,EAAGtR,EADN,EACMA,OAAQE,EADd,EACcA,UAAWoqD,EADzB,EACyBA,eAAgB0hC,EADzC,EACyCA,YAAa/nF,EADtD,EACsDA,KAAM2Y,EAD5D,EAC4DA,QACzDsuE,EAAoB7nF,KAAKkZ,MAAzB2uE,gBAEFnnC,EAAWr9B,aAAgB1mB,EAAQE,GACnC+rF,EAAetlE,aAAoB3mB,EAAQE,GAC3CgsF,EAAcllE,aAAmBhnB,EAAQE,GACzCisF,EAAejxE,YAAgBlb,GAC/BosF,EAAc7wE,YAAevb,GAC7BghF,EAAiB/5D,aAAsBjnB,EAAQE,GAC/C6gF,EAAe55D,aAAoBnnB,EAAQE,GAC3CmsF,EAAc/lE,aAAmBtmB,EAAQE,GACzCo2C,GAAiBpvC,KAAaolF,mBAAmBtsF,EAAQE,GAE/D,OACI,oCACI,kBAACsqD,GAAA,EAAD,CACIvmD,KAAMA,EACN2Y,QAASA,EACT6tC,gBAAgB,iBAChBH,eAAgBA,EAChBI,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhB3b,YAAa,SAAA7qB,GAAC,OAAIA,EAAErI,oBACpB,kBAAC+uC,GAAA,EAAD,CAAUruC,QAAS,SAAA2H,GAAC,OAAIA,EAAErI,oBAErBiwE,GAAe,kBAACjhC,GAAA,EAAD,CAAUtuC,QAASpZ,KAAK47C,gBAAiB3tC,EAAE,aAC1D66E,GAAgB,kBAACphC,GAAA,EAAD,CAAUtuC,QAASpZ,KAAKmoF,aAAcl6E,EAAE,UACxD86E,GACG,kBAACrhC,GAAA,EAAD,CAAUtuC,QAASpZ,KAAK4yD,WAAuB3kD,EAAXyyC,EAAa,QAAa,QAEjEzN,GAAiB,kBAACyU,GAAA,EAAD,CAAUtuC,QAASpZ,KAAK+3B,cAAe9pB,EAAE,WAC1D0vE,GAAkB,kBAACj2B,GAAA,EAAD,CAAUtuC,QAASpZ,KAAK6mD,eAAgB54C,EAAE,YAC5D+6E,GAAe,kBAACthC,GAAA,EAAD,CAAUtuC,QAASpZ,KAAKuoF,YAAat6E,EAAE,SACtDyvE,GAAgB,kBAACh2B,GAAA,EAAD,CAAUtuC,QAASpZ,KAAK+mD,cAAe94C,EAAE,WACzD26E,GAAgB,kBAAClhC,GAAA,EAAD,CAAUtuC,QAASpZ,KAAKioF,cAAeh6E,EAAE,WACzD46E,GAAe,kBAACnhC,GAAA,EAAD,CAAUtuC,QAASpZ,KAAK8nF,uBAAwB75E,EAAE,eAG1E,kBAAC,IAAD,CACIqL,mBAAoB,EACpB1Y,KAAMinF,EACNtuE,QAASvZ,KAAK+nF,mBACdvuE,kBAAgB,qBAChB,kBAAC,IAAD,CAAa/f,GAAG,qBAAqBwU,EAAE,uBACvC,kBAAC,KAAD,KACI,kBAAC4L,GAAA,EAAD,KAAoB5L,EAAE,uBAE1B,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQX,QAASpZ,KAAK+nF,mBAAoB/iE,MAAM,WAC3C/W,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQX,QAASpZ,KAAKgoF,eAAgBhjE,MAAM,WACvC/W,EAAE,gB,GA5MLiM,IAAM89C,gBA8NjB39C,iBAAkButE,I,OCxPlBvtE,qBANf,SAAyB7B,GAAQ,IACrBvK,EAAMuK,EAANvK,EAER,OAAO,yBAAK4W,UAAU,oBAAoB5W,EAAE,qB,+ECH5C4d,GAAY,KAET,SAAeq9D,GAAtB,mC,6CAAO,WAA+BxpF,GAA/B,mBAAAlH,EAAA,qEAEO4a,EAAOyY,GAAY,IAAI7Y,KAF9B,SAGsBha,KAAgBmI,KAAK,CACtC,QAAS,wBACTzB,MACAypF,YAAY,IANjB,UAGOroF,EAHP,OAQK+qB,KAAczY,EARnB,iDAUCnY,QAAQoF,IAAI,YAAaS,GACzB0L,YAAuB1L,GACvBsoF,YAAsB,CAAE38E,YAAa3L,IAZtC,mDAcOu9B,EAAY39B,OAAOE,QACf09B,OAAS,KACnBD,EAAUliC,SAAWuD,EAhBtB,yD,iCCmBD2pF,G,2MACFrgE,SAAW,WAAO,IAAD,EACwF,EAAKxQ,MAAlG7b,EADK,EACLA,OAAQE,EADH,EACGA,UAAWwF,EADd,EACcA,KAAmBinF,GADjC,EACoBhjF,YADpB,EACiCgjF,kBAAkBC,EADnD,EACmDA,sBAAuBlqE,EAD1E,EAC0EA,UAEjFzjB,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,KAJR,IAMLC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAPR,IASLQ,EAAaR,EAAbQ,SACR,IAAKA,EAAU,OAAO,KAVT,IAaTmtF,EAaAntF,EAbAmtF,UACAx7E,EAYA3R,EAZA2R,MACAgI,EAWA3Z,EAXA2Z,YAEAha,GASAK,EAVAqD,IAUArD,EATAL,OACAF,EAQAO,EARAP,UACAQ,EAOAD,EAPAC,MACAP,EAMAM,EANAN,MACAE,EAKAI,EALAJ,SACAO,EAIAH,EAJAG,WACAD,EAGAF,EAHAE,WACAH,EAEAC,EAFAD,QACAoM,EACAnM,EADAmM,KAGJ,GAAIpM,EACA,MAAO,CACH,KACA,kBAACqtB,GAAA,EAAD,CACI9sB,OAAQA,EACRE,UAAWA,EACXT,QAASA,EACTijB,UAAWA,EACXtiB,OAAQ2sB,KAAkBC,WAKtC,GAAIntB,EACA,MAAO,CACH,KACA,kBAACstB,GAAA,EAAD,CAAWntB,OAAQA,EAAQE,UAAWA,EAAWyB,UAAW9B,EAAY6iB,UAAWA,KAI3F,GAAI9iB,EACA,MAAO,CACH,KACA,kBAACstB,GAAA,EAAD,CAAWltB,OAAQA,EAAQE,UAAWA,EAAW4B,UAAWlC,EAAY8iB,UAAWA,KAI3F,GAAItjB,EACA,MAAO,CAAC,KAAM,kBAACqtB,GAAA,EAAD,CAAOzsB,OAAQA,EAAQE,UAAWA,EAAWd,MAAOA,EAAOsjB,UAAWA,KAGxF,GAAIpjB,EACA,MAAO,CAAC,KAAM,kBAACstB,GAAA,EAAD,CAAU5sB,OAAQA,EAAQE,UAAWA,EAAWZ,SAAUA,EAAUojB,UAAWA,KAGjG,GAAIvjB,IACqB+P,YAAO/P,EAAUA,YAClBA,EAAUgB,WAC1B,MAAO,CACH,KACA,kBAAC6oB,GAAA,EAAD,CAAWhpB,OAAQA,EAAQE,UAAWA,EAAWf,UAAWA,EAAWujB,UAAWA,KAK9F,GAAI/iB,GACIA,EAAMQ,UACN,MAAO,CAAC,KAAM,kBAAC8sB,GAAA,EAAD,CAAOjtB,OAAQA,EAAQE,UAAWA,EAAWP,MAAOA,EAAO+iB,UAAWA,KAI5F,GAAIrjB,EAAO,CACP,IAAMkC,EAAYiI,aAAQnK,EAAMgC,MAAOqE,GACjConF,GACQ,YAATjhF,GAA+B,UAATA,KACtBghF,GAAax7E,GAASgI,IACvB9X,GACAA,EAAUuH,QAAUvH,EAAUwH,OAC5BgkF,EAAkBD,KAAgBzzE,GAAeA,EAAY/X,OAAS,IAEtE8E,EACF0mF,GAAcC,EACR,CACIC,MAAO,QACP11C,WAAY,GAEhB,GAEV,MAAO,CACHw1C,EACI,kBAAC5jE,GAAA,EAAD,CACIvf,YAAaojF,EAAkBH,EAAwBD,EACvDvmF,MAAOA,EACPpG,OAAQA,EACRE,UAAWA,EACXb,MAAOA,EACPqjB,UAAWA,IAEf,KACHoqE,EAAmG,KAAtF,kBAAC5jE,GAAA,EAAD,CAAOlpB,OAAQA,EAAQE,UAAWA,EAAWb,MAAOA,EAAOqjB,UAAWA,KAI5F,MAAO,CAAC,KAAM,O,EAGlBuqE,uB,sCAAyB,WAAMnoF,GAAN,yBAAAjJ,EAAA,wDACrBiJ,EAAMkX,iBACNlX,EAAMiX,kBAFe,EAIS,EAAKF,MAA3B7b,EAJa,EAIbA,OAAQE,EAJK,EAILA,UAEVjB,EAAUiI,KAAa/J,IAAI6C,EAAQE,GANpB,yCAOA,MAPA,UASbhB,EAAYD,EAAZC,QATa,yCAUA,MAVA,UAYbQ,EAAaR,EAAbQ,SAZa,0CAaC,MAbD,QAiBrB6sF,GAFgB7sF,EAARqD,KAfa,0C,kIAoBX,IAAD,EACwBM,KAAKwY,MAA9B7b,EADC,EACDA,OAAQE,EADP,EACOA,UAAWoR,EADlB,EACkBA,EAErBrS,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,KAJZ,IAMDC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAPZ,IASDQ,EAAaR,EAAbQ,SACR,IAAKA,EAAU,OAAO,KAVb,IAYD2Z,EAAwD3Z,EAAxD2Z,YAAa6zE,EAA2CxtF,EAA3CwtF,qBAAsBL,EAAqBntF,EAArBmtF,UAAWx7E,EAAU3R,EAAV2R,MAEhD87E,EACF,oCACKN,GAAa,yBAAK3kE,UAAU,sBAAsB2kE,GAClDx7E,GAAS,yBAAK6W,UAAU,kBAAkB7W,GAC1CgI,GAAe,yBAAK6O,UAAU,wBAAwB7O,IAlBtD,EAqBqChW,KAAKgpB,WArB1C,mBAqBF+gE,EArBE,KAqBeC,EArBf,KAsBHC,EAAqBJ,EAAuB,GAC9C,kBAAC9vE,EAAA,EAAD,CACImX,QAAQ,WACRlM,MAAM,UACNrL,QAAS,CACLuwE,gBAAiB,kBACjBv4C,SAAU,4BAEd+D,WAAS,EACTt8B,QAASpZ,KAAK4pF,uBACd/kE,UAAU,mBACV,kBAACslE,GAAA,EAAD,KACI,0BAAM/tE,EAAE,w1BAEXnO,EAAE,gBAIX,OACI,oCACK87E,EACAD,EACAE,EACAC,K,+BAKH,IACEhuE,EAASjc,KAAKwY,MAAdyD,KAER,OACI,oCACI,yBAAK4I,UAAU,YACX,yBAAKA,UAAU,WACf,yBAAKA,UAAU,oBAAoB7kB,KAAKmc,eAE3CF,O,GAlMK/B,IAAMC,WAkN5BkvE,GAAQjvE,aAAe,CACnB/X,KAAMkE,IACND,YAAa8d,IACbklE,iBAAkBc,IAClBb,sBAAuBc,KAGZhwE,qBAAkBgvE,ICjN3BiB,I,mBACF,WAAY9xE,GAAQ,IAAD,uBACf,4CAAMA,KAoGV+xE,6BAA+B,SAAAhyF,GACtB,EAAK2gB,MAAM8/B,UAEhB,EAAKlgC,SAAS,CAAEkgC,UAAU,KAxGX,EA2GnBwxC,2BAA6B,SAAAjyF,GAAW,IAAD,EACL,EAAKigB,MAA3B7b,EAD2B,EAC3BA,OAAQE,EADmB,EACnBA,UACR4tF,EAAU,EAAKvxE,MAAfuxE,MAEJ9tF,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,YAC7C4tF,EACA,EAAK3xE,SAAS,CAAE2xE,OAAO,GAAS,WAC5B15D,WAAW,WACP,EAAKjY,SAAS,CAAE2xE,OAAO,KACxB,KAGP,EAAK3xE,SAAS,CAAE2xE,OAAO,MAvHhB,EA4HnBC,iCAAmC,SAAAnyF,GAAW,IAAD,EACX,EAAKigB,MAA3B7b,EADiC,EACjCA,OAAQE,EADyB,EACzBA,UADyB,EAEP,EAAKqc,MAA/B8/B,EAFiC,EAEjCA,SAAU2xC,EAFuB,EAEvBA,YAEd3xC,IAEAr8C,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,UAC7C8tF,EACA,EAAK7xE,SAAS,CAAE6xE,aAAa,GAAS,WAClC55D,WAAW,WACP,EAAKjY,SAAS,CAAE6xE,aAAa,KAC9B,KAGP,EAAK7xE,SAAS,CAAE6xE,aAAa,IAE1BA,GACP,EAAK7xE,SAAS,CAAE6xE,aAAa,MA7IlB,EAiJnB7L,8BAAgC,SAAAvmF,GAAW,IAAD,EACR,EAAKigB,MAA3B7b,EAD8B,EAC9BA,OAAQE,EADsB,EACtBA,UACRm8C,EAAazgD,EAAbygD,SAEJr8C,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,WACjD,EAAKic,SAAS,CAAEkgC,WAAU2xC,aAAa,KAtJ5B,EA0JnBC,sBAAwB,SAAAryF,GAAW,IACvBqE,EAAwBrE,EAAxBqE,QAAS+hB,EAAepmB,EAAfomB,WADa,EAEA,EAAKnG,MAA3B7b,EAFsB,EAEtBA,OAAQE,EAFc,EAEdA,UAEZF,IAAWC,GAAWC,IAAc8hB,GACpC,EAAKoV,eA/JM,EAmKnB82D,qBAAuB,SAAAtyF,GAAW,IACtBqE,EAAwBrE,EAAxBqE,QAAS+hB,EAAepmB,EAAfomB,WADY,EAEC,EAAKnG,MAA3B7b,EAFqB,EAErBA,OAAQE,EAFa,EAEbA,UAEZF,IAAWC,GAAWC,IAAc8hB,GACpC,EAAKoV,eAxKM,EA4KnB80B,uBAAyB,SAAAtwD,GAAW,IACxBqE,EAAwBrE,EAAxBqE,QAAS+hB,EAAepmB,EAAfomB,WADc,EAED,EAAKnG,MAA3B7b,EAFuB,EAEvBA,OAAQE,EAFe,EAEfA,UACRojB,EAAiB,EAAK/G,MAAtB+G,aAEJtjB,IAAWC,IACXC,IAAc8hB,IAEMkB,aAAgBljB,EAAQE,KACxBojB,EACpB,EAAKnH,SAAS,CAAEmH,aAAcJ,aAAgBljB,EAAQE,KAEtD,EAAKk3B,iBAxLM,EA4LnB+2D,iBAAmB,SAAA5oF,GACf2W,YAAS3W,GAAQ,IA7LF,EAgMnB6oF,iBAAmB,SAAApuF,GACfoc,YAASpc,EAAQ,MAAM,IAjMR,EAoMnBquF,gBAAkB,WACd,GAAK,EAAKC,YAEQvqF,OAAO20D,eAAe5jC,WACxC,CAJoB,MAMU,EAAKjZ,MAA3B7b,EANY,EAMZA,OAAQE,EANI,EAMJA,UAEVm8C,GAAYn1C,KAAa45E,cAAc7jF,IAA3B,iBAAyC+C,EAAzC,sBAA6DE,IAC/E2rF,YAAc7rF,EAAQE,EAAWm8C,KA7MlB,EAgNnBkyC,gBAAkB,SAAAnqE,GACdA,EAAEpI,iBACFoI,EAAErI,kBAFiB,MAIW,EAAKF,MAA3B7b,EAJW,EAIXA,OAAQE,EAJG,EAIHA,UAEKgb,YAAgBlb,GAEjCw2E,YAAax2E,EAAQE,GAKF+mB,aAAsBjnB,EAAQE,IAEjDiqD,YAAgBnqD,EAAQ,CAACE,KA/Nd,EAmOnBwiB,UAAY,SAAA5d,GACJA,IACAA,EAAMkX,iBACNlX,EAAMiX,mBAHO,MAMa,EAAKF,MAA3B7b,EANS,EAMTA,OAAQE,EANC,EAMDA,UAEhBwiB,aAAU1iB,EAAQE,IA3OH,EA8OnBsuF,mBAAqB,WACjB,EAAKryE,SAAS,CAAE6xE,aAAa,KA/Od,EAkPnBx/C,gBAAkB,WACd,EAAK8/C,WAAY,GAnPF,EAsPnBG,gBAAkB,WACd,EAAKH,WAAY,GAvPF,EA0PnBI,eAAiB,WACb,EAAKC,UAAW,GA3PD,EA8PnBC,iBAAmB,WAAO,IAAD,EACS,EAAK/yE,MAA3B7b,EADa,EACbA,OAAQE,EADK,EACLA,UAChB2uF,YAAU7uF,EAAQE,IAhQH,EAmQnBgrD,sBAnQmB,sCAmQK,WAAMpmD,GAAN,mBAAAjJ,EAAA,wDAChBiJ,IACAA,EAAMkX,iBACNlX,EAAMiX,oBAGc,EAAKQ,MAArB0uC,YANY,gBAShB,EAAK9uC,SAAS,CAAE8uC,aAAa,IATb,4BAWZ/jD,KAAa45E,cAAcp7E,KAAO,GAXtB,iDAeVie,EAAO7e,EAAMqmD,QACb3W,EAAM1vC,EAAMsmD,QACZ4gC,EACFlnF,EAAMC,QAAmC,MAAzBD,EAAMC,OAAO+pF,SAAmBhqF,EAAMC,OAAOuB,KAAOxB,EAAMC,OAAOuB,KAAO,KAE5F,EAAK6V,SAAS,CACV8uC,aAAa,EACb+gC,cACAroE,OACA6wB,QAxBY,0CAnQL,wDAgSnB6W,uBAAyB,SAAAvmD,GACjBA,GACAA,EAAMiX,kBAGV,EAAKI,SAAS,CAAE8uC,aAAa,KArSd,MAGe,EAAKpvC,MAA3B7b,EAHO,EAGPA,OAAQE,EAHD,EAGCA,UAHD,OAIf,EAAKqc,MAAQ,CACTtd,QAASiI,KAAa/J,IAAI6C,EAAQE,GAClCojB,aAAcJ,aAAgBljB,EAAQE,GACtCm8C,UAAU,EACV2xC,aAAa,EACbF,OAAO,EAEP7iC,aAAa,EACb+gC,aAAa,EACbroE,KAAM,EACN6wB,IAAK,GAdM,E,mFAkBG9hB,EAAWC,GAAY,IAAD,EAC8CtvB,KAAKwY,MAAnF7b,EADgC,EAChCA,OAAQE,EADwB,EACxBA,UAAW80D,EADa,EACbA,aAAc+5B,EADD,EACCA,oBAAqBC,EADtB,EACsBA,SAAUzrC,EADhC,EACgCA,UADhC,EAE4BlgD,KAAKkZ,MAAjE0uC,EAFgC,EAEhCA,YAAa5O,EAFmB,EAEnBA,SAAU2xC,EAFS,EAETA,YAAaF,EAFJ,EAEIA,MAAOxqE,EAFX,EAEWA,aAEnD,OAAIoP,EAAU1yB,SAAWA,IAKrB0yB,EAAUxyB,YAAcA,IAKxBwyB,EAAUsiC,eAAiBA,IAK3BtiC,EAAUq8D,sBAAwBA,IAKlCr8D,EAAUs8D,WAAaA,IAKvBt8D,EAAU6wB,YAAcA,IAKxB5wB,EAAUs4B,cAAgBA,IAK1Bt4B,EAAU0pB,WAAaA,IAKvB1pB,EAAUq7D,cAAgBA,IAK1Br7D,EAAUm7D,QAAUA,GAKpBn7D,EAAUrP,eAAiBA,a,0CAU/Bpc,KAAa5K,GAAG,iCAAkC+G,KAAK0qF,kCACvD7mF,KAAa5K,GAAG,8BAA+B+G,KAAK8+E,+BACpDj7E,KAAa5K,GAAG,2BAA4B+G,KAAKwqF,4BACjD3mF,KAAa5K,GAAG,6BAA8B+G,KAAKuqF,8BACnD1mF,KAAa5K,GAAG,uBAAwB+G,KAAK6oD,wBAC7ChlD,KAAa5K,GAAG,sBAAuB+G,KAAK4qF,uBAC5C/mF,KAAa5K,GAAG,qBAAsB+G,KAAK6qF,wB,6CAI3ChnF,KAAa1K,IAAI,iCAAkC6G,KAAK0qF,kCACxD7mF,KAAa1K,IAAI,8BAA+B6G,KAAK8+E,+BACrDj7E,KAAa1K,IAAI,2BAA4B6G,KAAKwqF,4BAClD3mF,KAAa1K,IAAI,6BAA8B6G,KAAKuqF,8BACpD1mF,KAAa1K,IAAI,uBAAwB6G,KAAK6oD,wBAC9ChlD,KAAa1K,IAAI,sBAAuB6G,KAAK4qF,uBAC7C/mF,KAAa1K,IAAI,qBAAsB6G,KAAK6qF,wB,+BAsMtC,IAAD,EACgF7qF,KAAKwY,MAAlFvK,EADH,EACGA,EAAGtR,EADN,EACMA,OAAQE,EADd,EACcA,UAAW6uF,EADzB,EACyBA,oBAAqBC,EAD9C,EAC8CA,SAAUzrC,EADxD,EACwDA,UAAW6kB,EADnE,EACmEA,SADnE,EAEuF/kE,KAAKkZ,MAAzF+G,EAFH,EAEGA,aAAc+4B,EAFjB,EAEiBA,SAAU2xC,EAF3B,EAE2BA,YAAaF,EAFxC,EAEwCA,MAAO9B,EAF/C,EAE+CA,YAAa/gC,EAF5D,EAE4DA,YAAatnC,EAFzE,EAEyEA,KAAM6wB,EAF/E,EAE+EA,IAI9Ev1C,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,gDAPhB,IASG8e,EAA2F9e,EAA3F8e,YAAaitE,EAA8E/rF,EAA9E+rF,MAAO50E,EAAuEnX,EAAvEmX,KAAM64E,EAAiEhwF,EAAjEgwF,UAAWlkF,EAAsD9L,EAAtD8L,oBAAqByW,EAAiCviB,EAAjCuiB,aAAc1W,EAAmB7L,EAAnB6L,eAE1E25B,EAAa1mB,IAAgB/H,YAAchW,GAC3CwsB,EACF,kBAAC,GAAD,CACItE,UAAU,cACVhT,IAAG,UAAKlV,EAAL,YAAeE,EAAf,SACHF,OAAQA,EACRE,UAAWA,EACXkW,KAAMA,EACN00E,SAAUmE,EACVjE,MAAOA,IAGT16E,EAAO+O,aAAQpgB,EAASutB,EAAYlb,GACpCib,EAAsB,OAATjc,GAAiBA,EAAKhP,OAAS,EAC5C4tF,EAAc1oE,aAAmBxmB,EAAQE,GACzCivF,EAAYr0E,QAAQ/P,GACpBqkF,EAAgB71E,YAAcvZ,GAC9BssB,GAAa8iE,GAAiB7rC,GAAc2rC,GAAeC,EAC3D//B,EAAU5vC,aAAWvgB,GACrBmM,EAAQihB,aAASptB,EAASoE,KAAKqf,UAAW4J,EAAUC,EAAYC,GAElEwvC,EAAO,KACPgzB,IACAhzB,EAAOlxD,EACH,kBAAC8d,GAAA,EAAD,CAAUrb,OAAK,EAAChI,OAAQuF,EAAgBuwB,SAAUh4B,KAAK8qF,mBAEvD,kBAAC,EAAD,CAAU5gF,OAAK,EAACvN,OAAQA,EAAQq7B,SAAUh4B,KAAK+qF,oBAIvD,IAAMhoF,EAAQkhB,aAAgBtnB,EAAQE,GAChCmvF,EAC2B,mBAA7BpwF,EAAQC,QAAQ,UAA8D,qBAA7BD,EAAQC,QAAQ,SAErE,OACI,6BACKkpE,GAAY,kBAAC,GAAD,CAAShyD,KAAMA,IAC5B,yBACI8R,UAAWC,IAAW,UAAW,CAC7B,iBAAkB6zC,EAClB,cAAev3B,EACf,mBAAoB4X,EACpB,sBAAuB2xC,IAAgB3xC,EACvC,cAAekH,IAAcyrC,EAC7B,kBAAmBzrC,GAAayrC,EAChC,kBAAmBzrC,IAAcyrC,EACjC,yBAA0BK,IAE9BC,YAAajsF,KAAKorF,gBAClB10D,WAAY12B,KAAKqrF,eACjBz/C,YAAa5rC,KAAKmrC,gBAClB/xB,QAASpZ,KAAKgrF,gBACdkB,eAAgBlsF,KAAKmrF,mBACrBj1C,cAAel2C,KAAK6nD,uBACnB6jC,GAAuB,kBAAC,GAAD,MACxB,yBAAK7mE,UAAU,gBACX,yBAAKA,UAAU,mBACX,kBAAC,KAAD,CAAeA,UAAU,yBAE7B,yBAAKA,UAAWC,IAAW,kBAAmB,CAAE,wBAAyB2lE,KACpE9xB,EACD,yBACI9zC,UAAWC,IAAW,kBAAmB,CACrC,iBAAkBknE,EAClB,qBAAsBA,GAAc5qD,IAExCr+B,MAAOA,GACNipF,IAAgB9rC,IAAc6rC,GAAkBF,IAC7C,yBAAKhnE,UAAU,iBACVq7B,IAAc2rC,GACX,kBAACxsD,GAAA,EAAD,CAAe1iC,OAAQA,EAAQoc,UAAQ,EAAC7W,OAAQuF,EAAgBoR,UAAQ,IAE3EgzE,GAAe,kBAAC,GAAD,CAAStvE,YAAa4B,KAG7C2tE,GACG,kBAAC,GAAD,CACInvF,OAAQA,EACRE,UAAW6K,EACX0R,QAASpZ,KAAKurF,mBAGrBxjF,EACD,yBACI8c,UAAWC,IAAW,eAAgB,CAClC,sBAAwC,IAAjB7E,EACvB,sBAAwC,IAAjBA,EACvB,sBAAwC,IAAjBA,KAE1BhT,GAEJ8+C,GACG,kBAAC,GAAD,CACIpvD,OAAQA,EACRE,UAAWA,EACXwiB,UAAWrf,KAAKqf,UAChBpD,KAAMkN,IAGb6iE,GACG,kBAAC,GAAD,CACInnE,UAAWC,IAAW,YAAa,CAC/B,cAAexK,aAAa3d,EAAQE,KAExCF,OAAQA,EACRE,UAAWA,EACXkW,KAAMA,EACN00E,SAAUmE,EACVjE,MAAOA,EACPD,YAAa1nF,KAAKkrF,mBAI9B,yBAAKrmE,UAAU,0BAEnB,yBAAKA,UAAU,sBAGvB,kBAAC,GAAD,CACIloB,OAAQA,EACRE,UAAWA,EACXoqD,eAAgB,CAAE9V,MAAK7wB,QACvB1f,KAAMgnD,EACNruC,QAASvZ,KAAKgoD,uBACd2gC,YAAaA,S,GAhbXxuE,cA6bP+kC,GANCC,YACZmH,cACAjsC,cACAksC,cAGWrH,CAAQorC,ICxdjB6B,I,mBACF,WAAY3zE,GAAQ,IAAD,uBACf,4CAAMA,KAsCV4zE,0BAA4B,SAAA7zF,GAAW,IAC3B8zF,EAAgBpxE,KAAhBoxE,YAER,EAAKvzE,SAAS,CAAEuzE,iBA1CD,EA6CnBv+B,qBAAuB,SAAAv1D,GAAW,IACVoE,EAAWpE,EAAvBw1D,WAER,EAAKj1C,SAAS,CAAEnc,YAhDD,EAmDnBmhF,2BAA6B,SAAAvlF,GAAW,IAC5B+zF,EAAiBrxE,KAAjBqxE,aAER,EAAKxzE,SAAS,CAAEwzE,kBAtDD,IAGP3vF,EAAsCse,KAAtCte,OAAQ2vF,EAA8BrxE,KAA9BqxE,aAAcD,EAAgBpxE,KAAhBoxE,YAHf,OAIf,EAAKnzE,MAAQ,CACTvc,SACA2vF,eACAD,eAPW,E,mFAWGh9D,EAAWC,EAAW4F,GACxC,OAAI5F,EAAU3yB,SAAWqD,KAAKkZ,MAAMvc,SAIhC2yB,EAAUg9D,eAAiBtsF,KAAKkZ,MAAMozE,cAItCh9D,EAAU+8D,cAAgBrsF,KAAKkZ,MAAMmzE,e,0CAQzCpxE,KAAShiB,GAAG,qBAAsB+G,KAAK8tD,sBACvC7yC,KAAShiB,GAAG,2BAA4B+G,KAAK89E,4BAC7C7iE,KAAShiB,GAAG,0BAA2B+G,KAAKosF,6B,6CAI5CnxE,KAAS9hB,IAAI,qBAAsB6G,KAAK8tD,sBACxC7yC,KAAS9hB,IAAI,2BAA4B6G,KAAK89E,4BAC9C7iE,KAAS9hB,IAAI,0BAA2B6G,KAAKosF,6B,+BAqBvC,IAAD,EACgBpsF,KAAKwY,MAAlBvK,EADH,EACGA,EADH,KACMmtC,MACmCp7C,KAAKkZ,OAA3Cvc,EAFH,EAEGA,OAFH,EAEW2vF,aAFX,EAEyBD,YAC9B,OAAI1vF,EAAe,KAIf,yBAAKkoB,UAAU,eACX,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,oBAAoB5W,EAAE,qC,GApE/BiM,IAAMC,YA2EjBE,iBAAkB8xE,I,qBCzDlBI,I,wLAjBD,IACEnzE,EAAYpZ,KAAKwY,MAAjBY,QAER,OACI,yBAAKyL,UAAU,sBACX,kBAACE,EAAA,EAAD,CAAY4gD,eAAe,EAAM/5B,YAAaxyB,GAC1C,kBAAC,KAAD,Y,GAPWc,IAAMC,Y,UCM/BqyE,I,OAAiB,CACnB/mF,MAAO,GACPC,OAAQ,GACR+mF,aAAc,MACdja,OAAQ,eAGNka,G,YACF,WAAYl0E,GAAQ,IAAD,uBACf,4CAAMA,KA4CVkyE,iCAAmC,SAAAnyF,GAAW,IAAD,EACX,EAAKigB,MAA3B7b,EADiC,EACjCA,OAAQE,EADyB,EACzBA,UADyB,EAEP,EAAKqc,MAA/B8/B,EAFiC,EAEjCA,SAAU2xC,EAFuB,EAEvBA,YAEd3xC,IAEAr8C,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,UAC7C8tF,EACA,EAAK7xE,SAAS,CAAE6xE,aAAa,GAAS,WAClC55D,WAAW,WACP,EAAKjY,SAAS,CAAE6xE,aAAa,KAC9B,KAGP,EAAK7xE,SAAS,CAAE6xE,aAAa,IAE1BA,GACP,EAAK7xE,SAAS,CAAE6xE,aAAa,MA9DlB,EAkEnBQ,mBAAqB,WACjB,EAAKryE,SAAS,CAAE6xE,aAAa,KAnEd,EAsEnBtrE,UAAY,SAAA5d,GACJA,IACAA,EAAMkX,iBACNlX,EAAMiX,mBAHO,MAMa,EAAKF,MAA3B7b,EANS,EAMTA,OAAQE,EANC,EAMDA,UAEhBwiB,aAAU1iB,EAAQE,IA9EH,MAGe,EAAK2b,MAA3B7b,EAHO,EAGPA,OAAQE,EAHD,EAGCA,UAHD,OAIf,EAAKqc,MAAQ,CACTtd,QAASiI,KAAa/J,IAAI6C,EAAQE,GAClC8tF,aAAa,GANF,E,mFAUGt7D,EAAWC,GAAY,IAAD,EACyBtvB,KAAKwY,MAA9D7b,EADgC,EAChCA,OAAQE,EADwB,EACxBA,UAAW80D,EADa,EACbA,aAAc+5B,EADD,EACCA,oBACjCf,EAAgB3qF,KAAKkZ,MAArByxE,YAER,OAAIt7D,EAAU1yB,SAAWA,IAIrB0yB,EAAUxyB,YAAcA,IAIxBwyB,EAAUsiC,eAAiBA,IAI3BtiC,EAAUq8D,sBAAwBA,GAIlCp8D,EAAUq7D,cAAgBA,O,0CAQ9B9mF,KAAa5K,GAAG,iCAAkC+G,KAAK0qF,oC,6CAIvD7mF,KAAa1K,IAAI,iCAAkC6G,KAAK0qF,oC,+BAuClD,IAAD,EACwD1qF,KAAKwY,MAA1D7b,EADH,EACGA,OAAQE,EADX,EACWA,UAAW6uF,EADtB,EACsBA,oBAAqB3mB,EAD3C,EAC2CA,SACxC4lB,EAAgB3qF,KAAKkZ,MAArByxE,YAEF/uF,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,KALhB,IAOGC,EAAkBD,EAAlBC,QAASkX,EAASnX,EAATmX,KACjB,IAAKlX,EAAS,OAAO,KARhB,IAUGG,EAAUH,EAAVG,MAEFiR,EAAOkQ,aAAyBvhB,GAAS,GAE/C,OACI,6BACKmpE,GAAY,kBAAC,GAAD,CAAShyD,KAAMA,IAC5B,yBACI8R,UAAWC,IAAW,kBAAmB,CAAE,sBAAuB6lE,IAClEuB,eAAgBlsF,KAAKmrF,oBACpBO,GAAuB,kBAAC,GAAD,MACxB,yBAAK7mE,UAAU,2BACX,yBAAKA,UAAU,2BACX,6BAAM5X,KAGbjR,GACG,kBAAC6pB,GAAA,EAAD,CACIlpB,OAAQA,EACRE,UAAWA,EACXb,MAAOA,EACP+G,MAAOypF,GACPntE,UAAWrf,KAAKqf,kB,GAlHfnF,IAAMC,WAiIpB+kC,GANCC,YACZmH,cACAjsC,cACAksC,cAGWrH,CAAQwtC,I,UC4HRC,I,mBArQX,WAAYn0E,GAAQ,IAAD,8BACf,4CAAMA,KAuBVo0E,iCAAmC,SAAAr0F,GAAW,IAClCu+B,EAASv+B,EAATu+B,KACM+1D,EAAgB,EAAK3zE,MAA3B4d,KAER,IAAI+1D,GAAe/1D,EAAKjL,YAAcghE,EAAYhhE,UAAlD,CAEA,EAAK/S,SAAS,CACVge,KAAMhC,KAAagC,KACnB7+B,MAAO,EAAK60F,SAASh4D,KAAagC,QAGtC,IAAMr/B,EAAQuM,IAAUhK,WAChBiR,EAAa6rB,EAAb7rB,SACRD,YAAoBvT,EAAOwT,EAASA,YArCrB,EAwCnB8hF,gCAAkC,SAAAx0F,GAAW,IACjCu+B,EAASv+B,EAATu+B,KAUR,GARA,EAAKhe,SAAS,CACVge,OACA7+B,MAAO,EAAK60F,SAASh2D,GACrBk2D,iBAAkB,EAClBhpB,aAAa,EACbipB,YAAY,IAGXn2D,EAAL,CAEA,IAAMr/B,EAAQuM,IAAUhK,WAChBiR,EAAa6rB,EAAb7rB,SACRD,YAAoBvT,EAAOwT,EAASA,YAvDrB,EA0DnBoxC,WAAa,SAAAjgD,GACc,EAAK8c,MAApB+zE,YAEH7wF,GAELpD,KAAgB8G,aAAa,CACzB,QAAS,0BACT1D,aAjEW,EAqEnB8wF,mBAAqB,SAAAC,GAAc,IACvBl1F,EAAU,EAAKihB,MAAfjhB,MAEFmE,EAAUnE,EAAMunD,KAAK,SAAA39C,GAAC,OAAIA,EAAEzF,QAAQ3C,KAAO0zF,IACjD,GAAK/wF,EAAL,CAEA,IAAM3E,EAAQuM,IAAUhK,WACxB4M,YAAmBnP,EAAO2E,EAAS,MAEnC,IAAI+qB,EAAiB,EACjB,EAAKimE,UAAY,EAAKA,SAASpwE,UAC/BmK,EAAiBxC,KAAKC,MAAM,EAAKwoE,SAASpwE,QAAQwyB,YAAc69C,OAG5C,EAAKC,oBAAoBH,EAAWl1F,EAAOkvB,GACnDltB,QAAQ,SAAA4H,GACpB+E,YAAmBnP,EAAOoK,EAAG,UArFlB,EAyFnByrF,oBAAsB,SAACH,EAAWliF,EAAUkc,GACxC,IAAKlc,EAAU,MAAO,GAEtB,IAAMsiF,EAAU,GACVhkF,EAAQ0B,EAASoc,UAAU,SAAAxlB,GAAC,OAAIA,EAAEzF,QAAQ3C,KAAO0zF,IACvD,IAAe,IAAX5jF,EAAc,MAAO,GAEzB,IAAMwE,EAAM4W,KAAKC,MAAMrb,EAAQ4d,GACzBO,EAASne,EAAQ4d,EAEjBS,EAAU7Z,EAAM,EAChB8Z,EAAU9Z,EAAM,EAChBga,EAAaL,EAAS,EACtBM,EAAaN,EAAS,EA6B5B,OA3BIE,GAAW,IACPG,GAAc,GACdwlE,EAAQrtF,KAAKinB,EAAiBS,EAAUG,GAE5CwlE,EAAQrtF,KAAKinB,EAAiBS,EAAUF,GACpCM,EAAab,GACbomE,EAAQrtF,KAAKinB,EAAiBS,EAAUI,IAI5CD,GAAc,GACdwlE,EAAQrtF,KAAKinB,EAAiBpZ,EAAMga,GAEpCC,EAAab,GACbomE,EAAQrtF,KAAKinB,EAAiBpZ,EAAMia,GAGpCH,EAAUlD,KAAK6C,KAAKvc,EAAShN,OAASkpB,KAClCY,GAAc,GACdwlE,EAAQrtF,KAAKinB,EAAiBU,EAAUE,GAE5CwlE,EAAQrtF,KAAKinB,EAAiBU,EAAUH,GACpCM,EAAab,GACbomE,EAAQrtF,KAAKinB,EAAiBU,EAAUG,IAIzCulE,EAAQ3pF,IAAI,SAAA7F,GAAC,OAAIkN,EAASlN,MAnIlB,EAsInBs2B,iBAAmB,SAAA5yB,GACf,IAAM0rF,EAAYxgE,OAAOlrB,EAAMu6D,cAAcl6C,QAAQqrE,WAC/C/wF,EAAU,EAAKoxF,WAAWL,GAC3B/wF,GAEA,EAAK6uF,YAEN,EAAKwC,qBAAuBN,IAC5B,EAAKM,mBAAqB,MAE9B,EAAK30E,SAAS,CAAE1c,YAChBpD,KAAgB8G,aAAa,CACzB,QAAS,6BACT1D,YAEJ,EAAK8wF,mBAAmBC,KArJT,EAwJnBhiD,gBAAkB,SAAA1pC,GACd,IAAM0rF,EAAYxgE,OAAOlrB,EAAMu6D,cAAcl6C,QAAQqrE,WAC/C/wF,EAAU,EAAKoxF,WAAWL,GAChC,GAAK/wF,EAAL,CAEA,EAAKqxF,mBAAqBN,EAC1B,IAAM/5E,EAAMJ,KAAKI,MAqBjB,OAnBA,EAAK0F,SAAS,CAAE1c,UAASyvB,UAAWzY,EAAK4wD,aAAa,EAAOipB,YAAY,IACzEl8D,WAAW,WACe,EAAK7X,MAAnB2S,YACUzY,IACd,EAAK0F,SAAS,CAAEkrD,aAAa,EAAMipB,YAAY,IAC/Cj0F,KAAgB8G,aAAa,CACzB,QAAS,6BACT1D,cAGT,KAEH,EAAK8wF,mBAAmBC,GAExB,EAAKlC,WAAY,EACjBhvF,SAAS80C,iBAAiB,UAAW,EAAK28C,eAE1CjsF,EAAMkX,iBACNlX,EAAMiX,mBACC,IAnLQ,EAsLnBg1E,cAAgB,WAEZ,EAAK50E,SAAS,CAAE1c,QADA,KACSyvB,UAAW,EAAGm4C,aAAa,IACpDhrE,KAAgB8G,aAAa,CACzB,QAAS,6BACT1D,QAJY,OAMhB,EAAK6uF,WAAY,EACjBhvF,SAAS+0C,oBAAoB,UAAW,EAAK08C,gBA9L9B,EAiMnBZ,SAAW,SAAAh2D,GACP,IAAM7+B,EAAQ,GACd,IAAK6+B,EAAM,OAAO7+B,EAElB,IAAM01F,EAAO,IAAI31F,IACTiT,EAA4B6rB,EAA5B7rB,SAAUisB,EAAkBJ,EAAlBI,cAgBlB,OAfIjsB,GACAA,EAASA,SAAShR,QAAQ,SAAA4H,GACtB5J,EAAMiI,KAAK2B,GACX8rF,EAAKj1F,IAAImJ,EAAEzF,QAAQ3C,GAAIoI,EAAEzF,QAAQ3C,MAGrCy9B,GACAA,EAAcjsB,SAAShR,QAAQ,SAAA4H,GACtB8rF,EAAK/zF,IAAIiI,EAAEzF,QAAQ3C,MACpBxB,EAAMiI,KAAK2B,GACX8rF,EAAKj1F,IAAImJ,EAAEzF,QAAQ3C,GAAIoI,EAAEzF,QAAQ3C,OAKtCxB,GAnNP,EAAKm1F,SAAWlzE,IAAM0a,YAEtB,EAAK1b,MAAQ,CACT4d,KAAM,KACN7+B,MAAO,GACP+0F,iBAAkB,EAClBhpB,aAAa,EACbipB,YAAY,GAVD,E,iFAefn4D,KAAa77B,GAAG,gCAAiC+G,KAAK+sF,iCACtDj4D,KAAa77B,GAAG,iCAAkC+G,KAAK4sF,oC,6CAIvD93D,KAAa37B,IAAI,gCAAiC6G,KAAK+sF,iCACvDj4D,KAAa37B,IAAI,iCAAkC6G,KAAK4sF,oC,iCAoMjDO,GAAY,IACXl1F,EAAU+H,KAAKkZ,MAAfjhB,MAEFqvB,EAAervB,EAAMovB,UAAU,SAAAxlB,GAAC,OAAIA,EAAEzF,QAAQ3C,KAAO0zF,IAC3D,OAAyB,IAAlB7lE,EAAsBrvB,EAAMqvB,GAAgB,O,+BAG7C,IAAD,SACyCtnB,KAAKkZ,MAA3C4d,EADH,EACGA,KAAM7+B,EADT,EACSA,MAAOmE,EADhB,EACgBA,QAAS4nE,EADzB,EACyBA,YAC9B,IAAKltC,EAAM,OAAO,KAClB,IAAK7+B,EAAO,OAAO,KACnB,IAAKA,EAAMgG,OAAQ,OAAO,KAE1B,IAAM2mF,EAAW3sF,EAAM2L,IAAI,SAAA/B,GAAC,OACxB,yBACIgjB,UAAU,0BACVhT,IAAKhQ,EAAEzF,QAAQ3C,GACfm0F,kBAAiB/rF,EAAEzF,QAAQ3C,GAC3BsJ,MAAO,CAAE0C,MAAO4nF,KAA2B3nF,OAAQ2nF,MACnDj0E,QAAS,kBAAM,EAAKijC,WAAWx6C,IAC/B+0B,aAAc,EAAKvC,iBACnBuX,YAAa,EAAKT,iBAClB,kBAAC1hB,GAAA,EAAD,CACI5X,IAAKhQ,EAAEzF,QAAQ3C,GACforB,UAAU,kCACVzoB,QAASyF,EACToyB,UAAU,EACVkB,MAAM,EACN7uB,YAAaunF,KACbp4D,SAAO,EACP14B,OAAQ2sB,KAAkBsI,WAKtC,OACI,yBAAKgE,IAAKh2B,KAAKotF,SAAUvoE,UAAU,iBAC9B+/D,EACAntE,QAAQrb,IAAY4nE,GAAe,kBAAC/9B,GAAA,EAAD,CAAgB7pC,QAASA,S,GAhQlD8d,IAAMC,Y,oOCkBjC,IAAM2zE,GAAqBrjE,OAAOC,OAAO,CACrCqjE,iBAAkB,mBAClBC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,qBAAsB,uBACtBvjE,KAAM,SAwvCKwjE,G,YApvCX,WAAY31E,GAAQ,IAAD,8BACf,4CAAMA,KA6KVsmC,UAAY,SAAAr9C,KA9KO,EAyLnB2sF,6BAzLmB,sCAyLY,WAAM71F,GAAN,yBAAAC,EAAA,yDACvB,EAAKoxD,UADkB,iBAEflgD,EAAY,EAAKwP,MAAjBxP,QAEC3L,EAAI2L,EAAQzL,OAAS,EAJP,YAIUF,GAAK,GAJf,oBAKbnC,EAAU8N,EAAQ3L,IACpBklB,aAAmBrnB,EAAQgB,QAAShB,EAAQnC,IAN7B,uBAOfy5E,YAAYt3E,EAAQgB,QAAShB,EAAQnC,IAPtB,0BAIkBsE,IAJlB,wCAcN/E,KAAgBmI,KAAK,CACtC,QAAS,qBACTvE,QAAS,EAAK4b,MAAM7b,OACpBwvB,MAAO,GACP1kB,eAAgBrC,IAAUmR,UAC1B6V,gBAAiB,EACjBnc,OAAQ,EACRoc,MAAO,IACPvqB,OAAQ,CAAE,QAAS,+BAtBI,QAcrBhB,EAdqB,OAyBlB/C,EAAI,EAzBc,aAyBXA,EAAI+C,EAAO6C,SAAS1F,QAzBT,oBA0BjBrC,EAAUkF,EAAO6C,SAAS5F,IAC5BklB,aAAmBrnB,EAAQgB,QAAShB,EAAQnC,IA3BzB,wBA4BnBy5E,YAAYt3E,EAAQgB,QAAShB,EAAQnC,IA5BlB,2BAyBiBsE,IAzBjB,0DAzLZ,wDA4NnB+/E,2BA5NmB,sCA4NU,WAAMvlF,GAAN,SAAAC,EAAA,qEACnBwL,IAAU3K,OAAV,qBAAiB,oCAAAb,EAAA,0DACW,EAAKggB,MAA3B7b,EADW,EACXA,OAAQE,EADG,EACHA,WACZF,EAFe,sBAGTtB,EAAO0O,IAAUjQ,IAAI6C,IAHZ,iBAKH6L,EAASnN,EAATmN,KALG,KAMHA,EAAK,SANF,OAOF,oBAPE,OAQF,mBARE,OAgBF,uBAhBE,QAwBF,uBAxBE,yCASGxP,KAAgBmI,KAAK,CACvB,QAAS,oBACTgE,QAASqD,EAAKrD,QACdi2C,OAAO,IAZR,6DAiBGpiD,KAAgBmI,KAAK,CACvB,QAAS,uBACT4S,eAAgBvL,EAAKuL,eACrBqnC,OAAO,IApBR,6DAyBGpiD,KAAgBmI,KAAK,CACvB,QAAS,uBACTuT,cAAelM,EAAKkM,cACpB0mC,OAAO,IA5BR,4CAiCX,EAAK2vC,iBAAiBpuF,EAAQ,EAAGE,EAAW,GAjCjC,2CADE,yCA5NV,wDAoQnB62B,0BAA4B,SAAAn7B,GACJA,EAAZo7B,UAEJ,EAAK06D,gBAAgBp0F,QAAQ,SAAA4H,GAAC,OAAIA,MAClC,EAAKwsF,gBAAkB,KAxQZ,EA4QnBC,wBAA0B,SAAA/1F,GAAW,IACzBoE,EAAsBpE,EAAtBoE,OAAQE,EAActE,EAAdsE,UACR0xF,EAAiB,EAAKr1E,MAAtBq1E,aAER,GAAI,EAAK/1E,MAAM7b,SAAWA,EAA1B,CAIA,IAAM6xF,EAAWD,EAAatwF,OAAS,EAAIswF,EAAaA,EAAatwF,OAAS,GAAK,KAC/EuwF,GAAYA,EAAS7xF,SAAWA,GAAU6xF,EAAS3xF,YAAcA,GAIrE0xF,EAAaruF,KAAK,CAAEvD,SAAQE,gBAzRb,EA4RnBonC,0BAA4B,SAAA1rC,GACxB,IAAMqoC,EAAO,EAAKypB,QAAQrtC,QAEpByxE,EAAmB7tD,EAAKmkB,aACxB2pC,EAAgB9tD,EAAK4jB,UAC3B,EAAK1rC,SAAS,CAAE61E,cAAc,GAAQ,WAC9B/tD,EAAK4jB,YAAckqC,IACnB9tD,EAAK4jB,WAAa7/B,KAAK4T,IAAIk2D,EAAmB7tD,EAAKmkB,kBAnS5C,EAwSnB6pC,0BAA4B,SAAAC,GACxB,IAAMjuD,EAAO,EAAKypB,QAAQrtC,QAE1B,EAAKyxE,iBAAmB7tD,EAAKmkB,aAC7B,EAAK2pC,cAAgB9tD,EAAK4jB,WA5SX,EA+SnB3gB,uBAAyB,SAAAgrD,GACrB,IAAMjuD,EAAO,EAAKypB,QAAQrtC,QAK1B,EAAKlE,SAAS,CAAE61E,cAAc,GAAS,WAC/B/tD,EAAK4jB,YAAc,EAAKkqC,gBACxB9tD,EAAK4jB,WAAa7/B,KAAK4T,IAAI,EAAKk2D,iBAAmB7tD,EAAKmkB,kBAvTjD,EA4TnB+pC,wBAA0B,SAAAv2F,GACtB,EAAKugB,SAAS,CACVi2E,gBAAiBlrF,KAAa45E,cAAcp7E,KAAO,KA9TxC,EAkUnBouD,2BAA6B,SAAAl4D,GACN,EAAKigB,MAAhB7b,SAEOpE,EAAOoE,QAClB,EAAKmc,SAAS,CAAE43C,aAAcn4D,EAAOs4B,cAtU1B,EA0UnBg4B,uBAAyB,SAAAtwD,GAAW,IACxBoE,EAAW,EAAK6b,MAAhB7b,OACA+M,EAAY,EAAKwP,MAAjBxP,QACA9M,EAAwBrE,EAAxBqE,QAAS+hB,EAAepmB,EAAfomB,WAEjB,GAAIhiB,IAAWC,IAEsC,IAAjD8M,EAAQ2d,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAOklB,IAAoB,CACpD,IAAM/iB,EAAUiI,KAAa/J,IAAI8C,EAAS+hB,GAC1C,IAAK/iB,EAAS,OAEd,IAAMnE,EAAQuM,IAAUhK,WACxBsN,YAAoB7P,EAAO,CAACmE,MAtVjB,EA0VnBozF,wBAA0B,SAAAz2F,GACH,EAAKigB,MAAhB7b,OACOpE,EAAOqE,SA5VP,EA+VnBqyF,6BAA+B,SAAA12F,GAC3B,GAAK,EAAKqxD,UAAV,CADqC,IAG7BhuD,EAA4BrD,EAA5BqD,QAAS61D,EAAmBl5D,EAAnBk5D,eAEjB,GADmB,EAAKj5C,MAAhB7b,SACOf,EAAQgB,QAAvB,CAaA,IAAMsyF,EAAiBtzF,EAAQ8e,YACzBozE,GAAmBC,iBACnBD,GAAmBI,qBAEzB,EAAKiB,eAAe19B,EAAgB71D,EAAS,WACrCszF,IAAmBpB,GAAmBI,sBACtC,EAAKkB,qBAAqBF,EAAgB,EAAK55D,YAIvD,IAAM79B,EAAQuM,IAAUhK,WACxBsN,YAAoB7P,EAAO,CAACmE,IAC5B,EAAKu3D,aAAa,CAACv3D,OA7XJ,EAgYnBytD,mBAAqB,SAAA9wD,GACjB,GAAK,EAAKqxD,UAAV,CAD2B,IAGnBhuD,EAAYrD,EAAZqD,QAER,GADmB,EAAK4c,MAAhB7b,SACOf,EAAQgB,QAGvB,GAAa,IADIhB,EAATmX,KACR,CAEA,IAAM6tB,EAAO,EAAKypB,QAAQrtC,QAEtBkyE,EAAiBtzF,EAAQ8e,YAAcozE,GAAmBC,iBAAmBD,GAAmBnjE,KAChGiW,EAAK4jB,UAAY5jB,EAAKmkB,cAAgBnkB,EAAKkkB,eAC3CoqC,EAAiBpB,GAAmBC,kBAGxC,IAAMsB,EAAWzzF,EAAQ8e,YAAc,CAAE40E,mBAAmB,GAAU,GAEhE5lF,EAAU,CAAC9N,GACjB,EAAK2zF,oBAAqB,EAC1B,EAAKC,eAAevyE,aAAevT,GAAU2lF,EAAU,WACnD,EAAKE,oBAAqB,EAC1B,EAAKH,qBAAqBF,EAAgB,EAAK55D,YAGnD,IAAM79B,EAAQuM,IAAUhK,WACxBsN,YAAoB7P,EAAOiS,GAC3B,EAAKypD,aAAazpD,MA5ZH,EA+ZnB6/C,uBAAyB,SAAAhxD,GAAW,IACxBoE,EAAW,EAAK6b,MAAhB7b,OACAC,EAAuCrE,EAAvCqE,QAASk6E,EAA8Bv+E,EAA9Bu+E,aAAc90E,EAAgBzJ,EAAhByJ,YAC3BrF,IAAWC,GAEVk6E,GAEL,EAAK2Y,cAAcztF,IAtaJ,EAyanB0tF,kBAAoB,WAChB,GAAK,EAAK/rF,SAAV,CAIA,IAFA,IAAMA,EAAW,IAAI3L,IACfC,EAAQ03F,aAAY,EAAKtlC,QAAS,EAAKulC,UACpC7xF,EAAI,EAAGA,EAAI9F,EAAMgG,OAAQF,IAAK,CACnC,IAAM8xF,EAAiB,EAAKlsF,SAAS1L,EAAM8F,IAC3C,GAAI8xF,EAAgB,CAChB,IADgB,EACAA,EACsBr3E,MAA9B7b,EAFQ,EAERA,OAAQE,EAFA,EAEAA,UACVgV,EAAG,UAAMlV,EAAN,YAAgBE,GACzB8G,EAASjL,IAAImZ,EAAKA,IAI1B7Y,KAAgB8G,aAAa,CACzB,QAAS,6BACT6D,SAAUA,MA1bC,EAynBnBmsF,sBAznBmB,sCAynBK,WAAMhvF,GAAN,mBAAAtI,EAAA,qDACdu3F,EAAiB,EACnBC,EAAalvF,GAAUA,EAAO6C,SAAS1F,OAAS,GAAK6C,EAAO6C,SAAS1F,OAASgyF,IAEzElyF,EAAI,EAJO,YAIJA,EAAIgyF,GAAkBC,GAJlB,iCAKD,EAAKvmC,aALJ,OAKhB3oD,EALgB,OAMhBkvF,EAAalvF,GAAUA,EAAO6C,SAAS1F,OAAS,GAAK6C,EAAO6C,SAAS1F,OAASgyF,IAN9D,OAI8BlyF,IAJ9B,yDAznBL,wDAmoBnB0rD,WAnoBmB,qBAmoBN,sCAAAjxD,EAAA,wDACDmE,EAAW,EAAK6b,MAAhB7b,OACA+M,EAAY,EAAKwP,MAAjBxP,QAEH/M,EAJI,qDAKL,EAAKgtD,QALA,qDAOL,EAAKumC,oBAPA,uBAQL,EAAKC,wBARA,iCAYHnmC,EAAgBtgD,GAAWA,EAAQzL,OAAS,EAAIyL,EAAQ,GAAGjQ,GAAK,EAEtE,EAAKkwD,SAAU,EACTqP,EAAY,EAAKA,UAfd,UAgBUhgE,KAAgBmI,KAAK,CACpC,QAAS,iBACTvE,QAASD,EACTyvB,gBAAiB49B,EACjB/5C,OAAQ,EACRoc,MAAO4jE,MACRhmC,QAAQ,WACP,EAAKN,SAAU,IAvBV,WAgBL7oD,EAhBK,OA0BLk4D,IAAc,EAAKA,UA1Bd,sDA8BL,EAAKxgD,MAAM7b,SAAWA,EA9BjB,0DAkCTkH,KAAaC,SAAShD,EAAO6C,UAC7B7C,EAAO6C,SAASg/E,UAChB,EAAKyN,WAAWnzE,aAAenc,EAAO6C,UAAW,WACxC7C,EAAO6C,SAAS1F,QACjB,EAAKkyF,0BAIP14F,EAAQuM,IAAUhK,WACxBsN,YAAoB7P,EAAOqJ,EAAO6C,UAClC,EAAKwvD,aAAaryD,EAAO6C,UA5ChB,kBA8CF7C,GA9CE,0CAnoBM,EAorBnBqvF,sBAprBmB,qBAorBK,4CAAA33F,EAAA,wDACZmE,EAAW,EAAK6b,MAAhB7b,OACA+M,EAAY,EAAKwP,MAAjBxP,QAEH/M,EAJe,qDAKhB,EAAKgtD,QALW,oDAOd1yC,EAAeF,YAAgBpa,GAPjB,oDAUdiY,EAAWH,KAAgBI,YAAYoC,GAVzB,sDAYfrC,EAASu6C,6BAZM,0DAcpB,EAAK+gC,qBAAsB,EAdP,UAgBSl3F,KAAgBmI,KAAK,CAC9C,QAAS,uBACT4S,eAAgBa,EAASu6C,+BAlBT,WAgBdkhC,EAhBc,iEAuBdrmC,EAAgBtgD,EAAQzL,OAAS,GAAKyL,EAAQ,GAAG9M,UAAYyzF,EAAe52F,GAAKiQ,EAAQ,GAAGjQ,GAAK,EAEvG,EAAKkwD,SAAU,EACTqP,EAAY,EAAKA,UA1BH,UA2BChgE,KAAgBmI,KAAK,CACtC,QAAS,iBACTvE,QAASyzF,EAAe52F,GACxB2yB,gBAAiB49B,EACjB/5C,OAAQ,EACRoc,MAAO4jE,MACRhmC,QAAQ,WACP,EAAKN,SAAU,IAlCC,WA2Bd7oD,EA3Bc,OAqChBk4D,IAAc,EAAKA,UArCH,sDAyChB,EAAKxgD,MAAM7b,SAAWA,EAzCN,mDA6CpBkH,KAAaC,SAAShD,EAAO6C,UAC7B7C,EAAO6C,SAASg/E,UAChB,EAAKyN,WAAWnzE,aAAenc,EAAO6C,WAEhClM,EAAQuM,IAAUhK,WACxBsN,YAAoB7P,EAAOqJ,EAAO6C,UAClC,EAAKwvD,aAAaryD,EAAO6C,UAnDL,0CAprBL,EA0uBnB82D,eA1uBmB,qBA0uBF,wCAAAjiE,EAAA,wDACLmE,EAAW,EAAK6b,MAAhB7b,OACA+M,EAAY,EAAKwP,MAAjBxP,QAEFrO,EAAO0O,IAAUjQ,IAAI6C,GAJd,qDAOT,EAAKgtD,QAPI,qDAQT,EAAKC,UARI,wDAUPI,EAAgBtgD,GAAWA,EAAQzL,OAAS,EAAIyL,EAAQA,EAAQzL,OAAS,GAAGxE,GAAK,EAEvF,EAAKkwD,SAAU,EACTqP,EAAY,EAAKA,UAbV,UAcMhgE,KAAgBmI,KAAK,CACpC,QAAS,iBACTvE,QAASD,EACTyvB,gBAAiB49B,EACjB/5C,QAASggF,IAAsB,EAC/B5jE,MAAO4jE,IAAsB,IAC9BhmC,QAAQ,WACP,EAAKN,SAAU,IArBN,WAcT7oD,EAdS,OAwBTk4D,IAAc,EAAKA,UAxBV,sDA4BT,EAAKxgD,MAAM7b,SAAWA,EA5Bb,0DAgCTtB,EAAKsW,aACL,EAAKi4C,UAAY9oD,EAAO6C,SAAS1F,OAAS,GAAK5C,EAAKsW,aAAalY,KAAOqH,EAAO6C,SAAS,GAAGlK,GAE3F,EAAKmwD,WAAY,EAGrB/sC,aAAwB/b,EAAQ,EAAKoY,MAAMxP,SAE3C7F,KAAaC,SAAShD,EAAO6C,UAC7B7C,EAAO6C,SAASg/E,UAChB,EAAK4M,oBAAqB,EAC1B,EAAKC,eAAevyE,aAAenc,EAAO6C,UAAW,GAAI,WACrD,EAAK4rF,oBAAqB,IAGxB93F,EAAQuM,IAAUhK,WACxBsN,YAAoB7P,EAAOqJ,EAAO6C,UAClC,EAAKwvD,aAAaryD,EAAO6C,UAjDZ,kBAmDN7C,GAnDM,0CA1uBE,EA+0BnBspD,aAAe,WAAO,IAAD,EACoC,EAAKlxC,MAAlDo2E,EADS,EACTA,kBAAmBf,EADV,EACUA,aAAc7kF,EADxB,EACwBA,QACnCk3B,EAAO,EAAKypB,QAAQrtC,QAS1B,EAAK0yE,oBAED9uD,EAAK4jB,WAAa8F,KAClB,EAAKb,aACE7oB,EAAK4jB,UAAY5jB,EAAKmkB,cAAgBnkB,EAAKkkB,aAAewF,MACjE,EAAKmQ,iBAGL75B,EAAK4jB,UAAY5jB,EAAKmkB,cAAgBnkB,EAAKkkB,aAAewF,KACtD,EAAKV,WAAa0lC,IACd,EAAKZ,gBAAkB9tD,EAAK4jB,WAAa,EAAKkqC,eAAiB,EAAK4B,cAAgB5mF,EACpF,EAAKoP,SAAS,CACVw2E,mBAAmB,EACnBf,aAAc,KAEVA,EAAatwF,QACrB,EAAK6a,SAAS,CACVw2E,mBAAmB,KAK1BA,GACD,EAAKx2E,SAAS,CAAEw2E,mBAAmB,IAI3C,EAAKZ,cAAgB9tD,EAAK4jB,UAC1B,EAAK8rC,YAAc5mF,GAt3BJ,EAy3BnB0lF,qBAAuB,SAACF,EAAgB55D,GAAc,IAAD,EACnB,EAAK9c,MADc,KACzC7b,OADyC,EACjCE,UACkCy4B,GAAY,CAC1DkvB,UAAW,EACXM,aAAc,EACdC,aAAc,IAL+B,EAEzCP,UAFyC,EAE9BM,aAF8B,EAEhBC,aAcjC,OAAQmqC,GACJ,KAAKpB,GAAmBC,iBACpB,EAAKwC,iBACL,MAEJ,KAAKzC,GAAmBG,kBACpB,EAAKuC,kBACL,MAEJ,KAAK1C,GAAmBE,iBACpB,EAAKyC,iBACL,MAEJ,KAAK3C,GAAmBI,qBACpB,EAAKwC,mBAAmBp7D,GACxB,MAEJ,KAAKw4D,GAAmBnjE,QA15Bb,EAg6BnB+lE,mBAAqB,SAAAp7D,GAAa,IACtBkvB,EAA0ClvB,EAA1CkvB,UAAWM,EAA+BxvB,EAA/BwvB,aACblkB,GAD4CtL,EAAjByvB,aACpB,EAAKsF,QAAQrtC,SAS1B4jB,EAAK4jB,UAAYA,GAAa5jB,EAAKkkB,aAAeA,IA36BnC,EAq7BnB2rC,eAAiB,WAiBb,IAjBoB,IAAD,EACW,EAAKj4E,MAA3B7b,EADW,EACXA,OACA+M,GAFW,EACH7M,UACI,EAAKqc,MAAjBxP,SACFk3B,EAAO,EAAKypB,QAAQrtC,QAatB2zE,GAXS5mF,IAAUjQ,IAAI6C,IAWZ,GACNoB,EAAI,EAAGA,EAAI2L,EAAQzL,OAAQF,IAAK,CACrC,IAAI6yF,EAAgB,EAAKC,SAAS/2F,IAAIiE,GAClC7D,EAAO6nF,eAAqB6O,GAChC,GAAI12F,GACI02F,EAAcp4E,MAAMkzE,oBAAqB,CACzC9qD,EAAK4jB,UAAYtqD,EAAK8nF,UAhBN,EAiBhB2O,GAAW,EACX,OAaPA,GACD,EAAKJ,kBA39BM,EA+9BnBC,gBAAkB,WAed,IAfqB,IAAD,EACU,EAAKh4E,MAAnB3b,GADI,EACZF,OADY,EACJE,WACR6M,EAAY,EAAKwP,MAAjBxP,QACFk3B,EAAO,EAAKypB,QAAQrtC,QAYjBjf,EAAI,EAAGA,EAAI2L,EAAQzL,OAAQF,IAAK,CACrC,IAAM6yF,EAAgB,EAAKC,SAAS/2F,IAAIiE,GAClCyjB,EAAOugE,eAAqB6O,GAClC,GAAIpvE,GACIovE,EAAcp4E,MAAM3b,YAAcA,EAAW,CAC7C+jC,EAAK4jB,UAAYhjC,EAAKwgE,UAAYphD,EAAKmkB,aAAe,GAC3C,EACX,SAr/BG,EAugCnBwrC,eAAiB,WAAO,IAAD,EACW,EAAK/3E,MAC7BooB,GAFa,EACXjkC,OADW,EACHE,UACH,EAAKwtD,QAAQrtC,SAUJ4jB,EAAKkkB,aAAelkB,EAAKmkB,eACzBnkB,EAAK4jB,YACvB5jB,EAAK4jB,UAAY5jB,EAAKkkB,aAAelkB,EAAKmkB,eArhC/B,EAyiCnB+rC,cAziCmB,qBAyiCH,sCAAAt4F,EAAA,wDACJmE,EAAW,EAAK6b,MAAhB7b,OACFtB,EAAO0O,IAAUjQ,IAAI6C,GAFf,wDAMZ,EAAKq8D,UAAYhmD,KAAKI,MACtB,EAAKu2C,SAAU,EACf,EAAKC,WAAY,EAEK,EACP,EACTv9B,EAAQ4jE,IAEd,EAAKtmC,SAAU,EACTqP,EAAY,EAAKA,UAfX,UAgBShgE,KAAgBmI,KAAK,CACtC,QAAS,iBACTvE,QAASvB,EAAK5B,GACd2yB,gBATkB,EAUlBnc,OATW,EAUXoc,MAAOA,IACR49B,QAAQ,WACP,EAAKN,SAAU,IAvBP,WAgBN7oD,EAhBM,OA0BRk4D,IAAc,EAAKA,UA1BX,sDA8BR,EAAKxgD,MAAM7b,SAAWA,EA9Bd,mDAkCRtB,EAAKsW,aACL,EAAKi4C,UAAY9oD,EAAO6C,SAAS1F,OAAS,GAAK5C,EAAKsW,aAAalY,KAAOqH,EAAO6C,SAAS,GAAGlK,GAE3F,EAAKmwD,WAAY,EAGrB,EAAK9wC,SAAS,CAAEw2E,mBAAmB,EAAOf,aAAc,KAExD1qF,KAAaC,SAAShD,EAAO6C,UAC7B7C,EAAO6C,SAASg/E,UAEhB,EAAK1gE,QAAQ,EAAK/I,MAAM63E,mBAAoBjwF,EAAO6C,SAAU,WACzD,EAAKyrF,qBAAqBtB,GAAmBC,iBAAkB,EAAKz4D,YAIlE79B,EAAQuM,IAAUhK,WACxBsN,YAAoB7P,EAAOqJ,EAAO6C,UAClC,EAAKwvD,aAAaryD,EAAO6C,UAEzB,EAAKmsF,sBAAsBhvF,GAtDf,0CAziCG,EAkmCnBkwF,oBAAsB,SAAAvvF,GAClBA,EAAMkX,iBACNlX,EAAMiX,kBAFqB,IAInB/b,EAAW,EAAK6b,MAAhB7b,OACHwa,YAAqBxa,IAE1B3D,KAAgB8G,aAAa,CACzB,QAAS,uBACTorC,UAAU,EACVm9B,MAAO5mE,EAAM6kF,aAAaje,SA5mCf,EAgnCnB4oB,sBAAwB,SAAAxvF,GAAU,IACtB8sF,EAAiB,EAAKr1E,MAAtBq1E,aAER,GAAIA,EAAatwF,OAAS,EAAG,CACzB,IAAMizF,EAAY3C,EAAahiF,MAC/B,GAAI2kF,EAAW,CAAC,IACJv0F,EAAsBu0F,EAAtBv0F,OAAQE,EAAcq0F,EAAdr0F,UACZF,IAAW,EAAK6b,MAAM7b,QACtBoc,YAASpc,EAAQE,SAIzB,EAAKi0F,iBAtnCT,EAAK93B,UAAYhmD,KAAKI,MACtB,EAAK8F,MAAQ,CACT4mC,WAAY,EACZmS,cAAe,KACf08B,cAAc,EACdjlF,QAAS,GACTgnD,cAAc,EACdq+B,iBAAiB,EACjBgC,mBAAoB,EACpBzB,mBAAmB,EACnBf,aAAc,IAGlB,EAAKlkC,QAAUnwC,IAAM0a,YACrB,EAAKg7D,SAAW11E,IAAM0a,YACtB,EAAKu8D,oBAAsBj3E,IAAM0a,YAEjC,EAAKy5D,gBAAkB,GACvB,EAAKwC,SAAW,IAAI74F,IAEpB,EAAK03F,kBAAoB7lB,aAAS,EAAK6lB,kBAAmB,KA1B3C,E,qFA8CKt6D,EAAWC,GAC/B,IAAMuL,EAAO5gC,KAAKqqD,QAAQrtC,QAGpBsY,EAAW,CACbkvB,UAH8C5jB,EAA1C4jB,UAIJM,aAJ8ClkB,EAA/BkkB,aAKfC,aAL8CnkB,EAAjBmkB,cAUjC,OADA/kD,KAAKs1B,SAAWA,EACTA,I,yCAGQF,EAAWC,EAAWC,GAAW,IAAD,EACjBt1B,KAAKwY,MAA3B7b,EADuC,EACvCA,OAAQE,EAD+B,EAC/BA,UACcmD,KAAKkZ,MAA3Bo2E,kBAEKtvF,KAAKqqD,QAAQrtC,QAWtBoY,EAAUz4B,SAAWA,GAAUy4B,EAAUv4B,YAAcA,EACvDmD,KAAK+qF,iBAAiBpuF,EAAQy4B,EAAUz4B,OAAQE,EAAWu4B,EAAUv4B,WAEhEmD,KAAKuvF,oBACNvvF,KAAKovF,qBAAqBtB,GAAmBI,qBAAsB54D,K,4CAKzDjG,EAAWC,GAAY,IAAD,EACHtvB,KAAKwY,MAAlC7b,EADgC,EAChCA,OAAQE,EADwB,EACxBA,UAAWuoC,EADa,EACbA,MADa,EAEsDplC,KAAKkZ,MAA3Fy1E,EAFgC,EAEhCA,aAAcjlF,EAFkB,EAElBA,QAASwhC,EAFS,EAETA,SAAUwlB,EAFD,EAECA,aAAcq+B,EAFf,EAEeA,gBAAiBO,EAFhC,EAEgCA,kBAExE,OAAIjgE,EAAU+V,QAAUA,IAKpB/V,EAAU1yB,SAAWA,IAKrB0yB,EAAUxyB,YAAcA,IAKxByyB,EAAUggE,oBAAsBA,IAKhChgE,EAAUq/D,eAAiBA,KAK1ByC,aAAc9hE,EAAU5lB,QAASA,KAKlC4lB,EAAU4b,WAAaA,IAKvB5b,EAAUohC,eAAiBA,GAK3BphC,EAAUy/D,kBAAoBA,W,0CAUlC9zE,KAAShiB,GAAG,0BAA2B+G,KAAK0zB,2BAC5CzY,KAAShiB,GAAG,2BAA4B+G,KAAK89E,4BAC7C/zE,IAAU9Q,GAAG,2BAA4B+G,KAAKywD,4BAC9C1mD,IAAU9Q,GAAG,wBAAyB+G,KAAKgvF,yBAC3CnrF,KAAa5K,GAAG,6BAA8B+G,KAAK8uF,yBACnDjrF,KAAa5K,GAAG,8BAA+B+G,KAAK8uF,yBACpDjrF,KAAa5K,GAAG,wBAAyB+G,KAAKsuF,yBAC9CzqF,KAAa5K,GAAG,6BAA8B+G,KAAKouF,8BACnDvqF,KAAa5K,GAAG,mBAAoB+G,KAAKqpD,oBACzCxlD,KAAa5K,GAAG,uBAAwB+G,KAAKupD,wBAC7C1lD,KAAa5K,GAAG,uBAAwB+G,KAAK6oD,wBAC7ChlD,KAAa5K,GAAG,6BAA8B+G,KAAKivF,8BACnD/qD,KAAYjrC,GAAG,0BAA2B+G,KAAKikC,2BAC/CC,KAAYjrC,GAAG,0BAA2B+G,KAAK4uF,2BAC/C1qD,KAAYjrC,GAAG,uBAAwB+G,KAAK6jC,0B,6CAI5C5oB,KAAS9hB,IAAI,0BAA2B6G,KAAK0zB,2BAC7CzY,KAAS9hB,IAAI,2BAA4B6G,KAAK89E,4BAC9C/zE,IAAU5Q,IAAI,2BAA4B6G,KAAKywD,4BAC/C1mD,IAAU5Q,IAAI,wBAAyB6G,KAAKgvF,yBAC5CnrF,KAAa1K,IAAI,6BAA8B6G,KAAK8uF,yBACpDjrF,KAAa1K,IAAI,8BAA+B6G,KAAK8uF,yBACrDjrF,KAAa1K,IAAI,wBAAyB6G,KAAKsuF,yBAC/CzqF,KAAa1K,IAAI,6BAA8B6G,KAAKouF,8BACpDvqF,KAAa1K,IAAI,mBAAoB6G,KAAKqpD,oBAC1CxlD,KAAa1K,IAAI,uBAAwB6G,KAAKupD,wBAC9C1lD,KAAa1K,IAAI,uBAAwB6G,KAAK6oD,wBAC9ChlD,KAAa1K,IAAI,6BAA8B6G,KAAKivF,8BACpD/qD,KAAY/qC,IAAI,0BAA2B6G,KAAKikC,2BAChDC,KAAY/qC,IAAI,0BAA2B6G,KAAK4uF,2BAChD1qD,KAAY/qC,IAAI,uBAAwB6G,KAAK6jC,0B,+EA2S1BlnC,EAAQw1D,EAAgBt1D,EAAW07D,G,wGAChDl9D,EAAO0O,IAAUjQ,IAAI6C,GACrB00F,EAAetnF,IAAUjQ,IAAIq4D,GAGnCnyD,KAAKg5D,UAAYhmD,KAAKI,MACtBpT,KAAK2pD,SAAU,EACf3pD,KAAK4pD,WAAY,EACjB5pD,KAAKkwF,qBAAsB,EAC3BlwF,KAAKquF,gBAAkB,IAEnBhzF,E,wBACArC,KAAgBmI,KAAK,CACjB,QAAS,WACTvE,QAASvB,EAAK5B,KAGZo4D,GAAUh1D,GAAaxB,EAAK8W,aAAe,EAC3C63C,EACF6H,GAAUx2D,EAAK8W,aAAe,EAAI9W,EAAKmf,2BAA6B3d,GAAwB,EAC1FoT,EAAU4hD,GAAUx2D,EAAK8W,aAAe,GAAMtV,GAAa,EAAIozF,IAAsB,EACrF5jE,EACDwlC,GAAUx2D,EAAK8W,aAAe,GAAMtV,EAAY,EAAIozF,IAAsBA,IAE/EjwF,KAAK2pD,SAAU,EACTqP,EAAYh5D,KAAKg5D,U,UACFhgE,KAAgBmI,KAAK,CACtC,QAAS,iBACTvE,QAASvB,EAAK5B,GACd2yB,gBAAiB49B,EACjB/5C,OAAQA,EACRoc,MAAOA,IACR49B,QAAQ,WACP,EAAKN,SAAU,I,WAPb7oD,E,OAUFk4D,IAAch5D,KAAKg5D,U,sDAInB39D,EAAKsW,aACL3R,KAAK4pD,UAAY9oD,EAAO6C,SAAS1F,OAAS,GAAK5C,EAAKsW,aAAalY,KAAOqH,EAAO6C,SAAS,GAAGlK,GAE3FuG,KAAK4pD,WAAY,EAGrB/lD,KAAaC,SAAShD,EAAO6C,UAC7B7C,EAAO6C,SAASg/E,UAEZoO,EAAqB/wF,KAAKkZ,MAAM63E,mBAChCp0F,IAAWw1D,E,oBACX4+B,EAAqBpkE,OAAO2kE,YACxBj2F,GAAQA,EAAK8W,aAAe,G,iBACnBpU,EAAI+C,EAAO6C,SAAS1F,OAAS,E,aAAGF,GAAK,G,oBAClCtE,EAAOqH,EAAO6C,SAAS5F,GAAvBtE,MAEHqH,EAAO6C,SAAS5F,GAAG2c,aACpBjhB,EAAK4B,EAAKmf,4BACV/gB,EAAKs3F,G,iBAELA,EAAqBt3F,E,4DAPoBsE,I,wBAarDgzF,EAAqBA,IAAuBpkE,OAAO2kE,UAAY,EAAIP,E,QAGnE7B,EAAiBpB,GAAmBC,iBACpClxF,EACAqyF,EAAiBpB,GAAmBG,kBAC7Bp8B,GAAUk/B,IACjB7B,EAAiBpB,GAAmBE,kBAGxChuF,KAAKiiB,QAAQ8uE,EAAoBjwF,EAAO6C,SAAU,WAC9C,EAAKyrF,qBAAqBF,EAAgB,EAAK55D,UAC3Cz4B,GACA00F,YAAiB50F,EAAQE,KAK3BpF,EAAQuM,IAAUhK,WACxBsN,YAAoB7P,EAAOqJ,EAAO6C,UAClC3D,KAAKmzD,aAAaryD,EAAO6C,UAEzBgH,YAAiBlT,EAAO,CAACkF,IACzBiO,YAAiBnT,EAAOkF,GAExBqD,KAAK8vF,sBAAsBhvF,GAG3B6V,YAAgBtb,EAAK5B,I,wBAErBuG,KAAK2pD,SAAU,EACf3pD,KAAKiiB,QAAQ,EAAG,GAAI,WAChB,EAAK0nC,SAAU,I,QAInB0nC,GAAgBl/B,IAAmBx1D,GACnC3D,KAAgBmI,KAAK,CACjB,QAAS,YACTvE,QAASu1D,I,+IAKRxuD,GACT,GAAKA,GACmB,IAApBA,EAAS1F,QACR0F,EAAS,GAAG/G,QAAjB,CAEA,IAAM40F,EAAa,WACfx4F,KAAgBmI,KAAK,CACjB,QAAS,eACTvE,QAAS+G,EAAS,GAAG/G,QACrBoF,YAAa2B,EAASC,IAAI,SAAA/B,GAAC,OAAIA,EAAEpI,QAIrCiH,OAAOm0B,SACP28D,IAEAxxF,KAAKquF,gBAAgBnuF,KAAKsxF,M,gDAIR7tF,GAEtB,IAAK,IAAI5F,EAAI4F,EAAS1F,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAC3C,IAAInC,EAAU+H,EAAS5F,GACvB,GAAInC,GAAWA,EAAQC,QACnB,OAAQD,EAAQC,QAAQ,UACpB,IAAK,eAAiB,IAAD,EACDmE,KAAKyxF,gBAAgB71F,GADpB,mBACZnC,EADY,KAEjB,GAFiB,KAGH+M,aAAa5K,EAAQC,QAAQG,MAAMgC,OACpCkB,MACL8E,IAAUa,oBAAoBpL,EAAImC,GAG1C,MAEJ,IAAK,iBAAmB,IAAD,EACHoE,KAAK0xF,kBAAkB91F,GADpB,mBACdnC,EADc,KAEnB,GAFmB,KAGLmC,EAAQC,QAAQO,QAAQA,QACzB8C,MACL8E,IAAUa,oBAAoBpL,EAAImC,O,8BAmLtDm1F,EAAoBrnF,EAAS3J,GACjCC,KAAK8Y,SAAS,CAAEi4E,qBAAoBrnF,WAAW3J,K,qCAGpC4xF,EAAc/1F,EAASmE,GAC7BnE,EAKLoE,KAAK8Y,SACD,CACIpP,QAAS1J,KAAKkZ,MAAMxP,QAAQ5H,OAAO,SAAAD,GAAC,OAAIA,EAAEpI,KAAOk4F,IAAcz1E,OAAO,CAACtgB,KAE3EmE,GARIA,GAAUA,M,iCAYX2J,EAAS3J,GACO,IAAnB2J,EAAQzL,OAKZ+B,KAAK8Y,SAAS,CAAEpP,QAASA,EAAQwS,OAAOlc,KAAKkZ,MAAMxP,UAAY3J,GAJvDA,GAAUA,M,qCAOP2J,EAAS2lF,EAAUtvF,GACP,IAAnB2J,EAAQzL,OAKZ+B,KAAK8Y,S,uVAAL,EAAgBpP,QAAS1J,KAAKkZ,MAAMxP,QAAQwS,OAAOxS,IAAa2lF,GAAYtvF,GAJpEA,GAAUA,M,oCAORiC,EAAajC,GAAW,IAC1B2J,EAAY1J,KAAKkZ,MAAjBxP,QACR,GAAuB,IAAnBA,EAAQzL,OAAZ,CAKA,IAAM2F,EAAM,IAAI5L,IAAIgK,EAAY4B,IAAI,SAAA/B,GAAC,MAAI,CAACA,EAAGA,MAC7C7B,KAAK8Y,SAAS,CAAEpP,QAASA,EAAQ5H,OAAO,SAAAD,GAAC,OAAK+B,EAAIhK,IAAIiI,EAAEpI,OAAQsG,QALxDA,GAAUA,M,uCAyTLnE,EAASg2F,EAAaC,GACnC,IAAKj2F,EAAS,OAAO,EADuB,IAGpCgB,EAA2ChB,EAA3CgB,QAASmW,EAAkCnX,EAAlCmX,KAAMtL,EAA4B7L,EAA5B6L,eAA4B7L,EAAZC,QAEvC,QAAIg2F,MAIAl/E,YAAc/V,IAKdg1F,IACCtgF,aAAiBsgF,IACdnqF,IAAmBmqF,EAAYnqF,gBAC/BsL,EAAO6+E,EAAY7+E,KAAO++E,Q,sCAItBl2F,EAASg2F,EAAaC,GAClC,GAAIA,EACA,OAAO,EAGX,IAAM9+E,EAAO,IAAIC,KAAoB,IAAfpX,EAAQmX,MACxBg/E,EAAWH,EAAc,IAAI5+E,KAAwB,IAAnB4+E,EAAY7+E,MAAeA,EAEnE,OACIA,EAAK6pB,gBAAkBm1D,EAASn1D,eAChC7pB,EAAK8pB,aAAek1D,EAASl1D,YAC7B9pB,EAAKS,YAAcu+E,EAASv+E,Y,+BAQ1B,IAAD,OACG7W,EAAWqD,KAAKwY,MAAhB7b,OADH,EAEqFqD,KAAKkZ,MAAvFxP,EAFH,EAEGA,QAASqnF,EAFZ,EAEYA,mBAAoBrgC,EAFhC,EAEgCA,aAAcq+B,EAF9C,EAE8CA,gBAAiBO,EAF/D,EAE+DA,kBAkDpE,OA5CAtvF,KAAK6wF,SAAS7oB,QACdhoE,KAAK2D,SAAW+sD,EACV,KACAhnD,EAAQ9F,IAAI,SAAC/B,EAAG9D,GACZ,IAAM6zF,EAAc7zF,EAAI,EAAI2L,EAAQ3L,EAAI,GAAK,KACvCi0F,EAAcj0F,EAAI2L,EAAQzL,OAAS,EAAIyL,EAAQ3L,EAAI,GAAK,KAExDgnE,EAAW,EAAKktB,gBAAgBpwF,EAAG+vF,EAAmB,IAAN7zF,GAElDgiB,EAAI,KACR,GAAIzO,aAAiBzP,GACjBke,EACI,kBAAC,GAAD,CACIlO,IAAG,kBAAahQ,EAAEjF,QAAf,uBAAqCiF,EAAEpI,IAC1Cu8B,IAAK,SAAA0vB,GAAE,OAAI,EAAKmrC,SAASn4F,IAAIqF,EAAG2nD,IAChC/oD,OAAQkF,EAAEjF,QACVC,UAAWgF,EAAEpI,GACbiyF,oBAAqBqF,IAAuBlvF,EAAEpI,SAGnD,CACH,IAAMymD,EAAY,EAAKgyC,iBAAiBrwF,EAAG+vF,EAAmB,IAAN7zF,GAClDo0F,EAAgB,EAAKD,iBAAiBF,EAAanwF,GAAG,GAEtD8pF,GAAYqG,GAAe1gF,aAAiB0gF,IAAgBG,EAElEpyE,EACI,kBAAC,GAAD,CACIlO,IAAG,kBAAahQ,EAAEjF,QAAf,uBAAqCiF,EAAEpI,IAC1Cu8B,IAAK,SAAA0vB,GAAE,OAAI,EAAKmrC,SAASn4F,IAAIqF,EAAG2nD,IAChC/oD,OAAQkF,EAAEjF,QACVC,UAAWgF,EAAEpI,GACbk4D,aAAc9vD,EAAEwkB,cAChB65B,UAAWA,EACXyrC,SAAUA,EACVD,oBAAqBqF,IAAuBlvF,EAAEpI,GAC9CsrE,SAAUA,IAKtB,OAAOhlD,IAIb,yBACI8E,UAAWC,IAAW,gBAAiB,CACnC,iCAAkCiqE,IAEtCvI,YAAaxmF,KAAKgxF,qBAClB,yBAAKh7D,IAAKh2B,KAAKqqD,QAASxlC,UAAU,wBAAwBumC,SAAUprD,KAAKoqD,cACrE,yBAAKvlC,UAAU,sBACf,yBAAKmR,IAAKh2B,KAAK4vF,SAAU/qE,UAAU,uBAC9B7kB,KAAK2D,WAGd,kBAAC,GAAD,CAAWhH,OAAQA,IACnB,kBAAC,GAAD,MACC2yF,GACG,kBAAC,GAAD,CAAkBt5D,IAAKh2B,KAAKmxF,oBAAqB/3E,QAASpZ,KAAKixF,wBAEnE,kBAAC,GAAD,MACA,kBAAC,GAAD,U,gDAjtCoBz4E,EAAOU,GACnC,OAAIV,EAAM7b,SAAWuc,EAAM4mC,YAActnC,EAAM3b,YAAcqc,EAAM+4C,cACxD,CACHnS,WAAYtnC,EAAM7b,OAClBs1D,cAAez5C,EAAM3b,UACrB6zD,cAAc,EACdq+B,iBAAiB,EACjBgC,mBAAoBv4E,EAAM7b,SAAWuc,EAAM4mC,WAAa,EAAI5mC,EAAM63E,mBAClEzB,kBACI92E,EAAM7b,SAAWuc,EAAM4mC,aAAe5mC,EAAMo2E,mBAAqBp2E,EAAMq1E,aAAatwF,OAAS,GACjGswF,aAAc/1E,EAAM7b,SAAWuc,EAAM4mC,WAAa,GAAK5mC,EAAMq1E,cAI9D,S,GA5CYr0E,IAAMC,W,0CCf3Bi4E,G,2MACFl5E,MAAQ,CACJ6iD,SAAU,M,EAGd8Q,gBAAkB,SAAAprE,GACd,EAAKsxE,WAAWtxE,EAAMu6D,gB,EAG1B+W,WAAa,SAAAhX,GACT,EAAKjjD,SAAS,CAAEijD,c,EAGpB/iD,YAAc,WACV,EAAKF,SAAS,CAAEijD,SAAU,Q,EAG9BngB,eAAiB,WACb,EAAK5iC,cADc,IAGX/K,EAAM,EAAKuK,MAAXvK,EAEF4tC,EAAO,EAAKw2C,gBAAgBv9D,KAAa3pB,YAC/C,GAAK0wC,EAAL,CAEA3C,EAAK2C,GAEL,IAAMhqC,EAAG,UAAMgqC,EAAN,uBACHjgD,EAAUqS,EAAE,cAGlB,EAAK6tC,sBAAsBjqC,EAAKjW,EAFjB,Q,EAKnBy2F,gBAAkB,SAAAlnF,GACd,IAAKA,EAAY,MAAO,GADI,IAGpB8e,EAAS9e,EAAT8e,KACR,IAAKA,EAAM,MAAO,GAElB,IAAMk6B,EAAoB1J,IAAY3gD,IAAI,YAE1C,OAAQqqD,EAAoBA,EAAkBvzC,MAAQ,yBAA2B,eAAiBqZ,G,EAGtG6xB,sBAAwB,SAACjqC,EAAKjW,EAASiV,GACnC,GAAKgB,EAAL,CAD8C,MAGN,EAAK2G,MAArCujC,EAHsC,EAGtCA,gBAHsC,EAGrBpiC,QAHqB,EAGZ1L,EAClC,GAAK8tC,EAAL,CAIIlpB,KAAiBmpB,mBAAmBnqC,EAAKoqC,IAAqC,IAAsBprC,IAEpGkrC,EAAgBngD,EAAS,CACrBsgD,iBAAkBD,IAClBprC,OAAQ,CACJ,kBAACkU,EAAA,EAAD,CACIlT,IAAI,QACJoT,aAAW,QACXD,MAAM,UACNH,UAAU,4BACVzL,QAAS,kBAAMyZ,KAAiBspB,sBAAsBtqC,KACtD,kBAAC2hC,EAAA,EAAD,a,EAOpB8+C,YAAc,WACV,EAAKt5E,cAEL,IAAM6iC,EAAO,EAAKw2C,gBAAgBv9D,KAAa3pB,YAC/C,GAAK0wC,EAAL,CAEA7iD,KAAgB8G,aAAa,CACzB,QAAS,yBACTqL,WAAY,OAGhB,IAAMoxC,EAAsB,CACxB,QAAS,mBACTtvC,KAAM,CACF,QAAS,gBACTA,KAAM4uC,EACN/rC,SAAU,MAEditC,0BAA0B,EAC1BC,aAAa,GAGjBrB,YAAQY,K,wEAGF,IAAD,EACoBv8C,KAAKwY,MAAtBvK,EADH,EACGA,EAAG4W,EADN,EACMA,UACHk3C,EAAa/7D,KAAKkZ,MAAlB6iD,SAER,OACI,oCACI,kBAACh3C,EAAA,EAAD,CACIF,UAAWA,EACXI,aAAW,QACXrkB,KAAM6W,QAAQskD,GACd3iD,QAASpZ,KAAK6sE,iBACd,kBAACnO,GAAD,OAEJ,kBAAC9B,GAAA,EAAD,CACInjE,GAAG,cACHsiE,SAAUA,EACVn7D,KAAM6W,QAAQskD,GACdc,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrB1V,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAEhBhuC,QAASvZ,KAAKgZ,aACd,kBAAC0uC,GAAA,EAAD,CAAUtuC,QAASpZ,KAAK47C,gBACpB,kBAAC0G,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASv0C,EAAE,eAE7B,kBAACy5C,GAAA,EAAD,CAAUtuC,QAASpZ,KAAKsyF,aACpB,kBAAChwC,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASv0C,EAAE,0B,GAvIbiM,IAAMC,WAsJ3B+kC,GALCC,YACZ9kC,cACA+kC,eAGWF,CAAQkzC,ICvJjBG,I,mBACF,WAAY/5E,GAAQ,IAAD,8BACf,4CAAMA,KAwBVg6E,iCAAmC,SAAAj6F,GAAW,IAClC4S,EAAe2pB,KAAf3pB,WAER,EAAK2N,SAAS,CAAE3N,gBA5BD,EA+BnBsnF,6BAA+B,SAAAl6F,GAAW,IAC9B4S,EAAe5S,EAAf4S,WAIR,GAFA,EAAK2N,SAAS,CAAE3N,eAEZA,EAAY,CACZ,IAAM1T,EAAQuM,IAAUhK,WACxBkR,YAAsBzT,EAAO0T,KAtClB,EA0CnB6N,YAAc,WACVhgB,KAAgB8G,aAAa,CACzB,QAAS,yBACTqL,WAAY,QA7CD,EAiDnBizB,WAAa,WAAO,IACRjzB,EAAe,EAAK+N,MAApB/N,WACR,GAAKA,EAAL,CAFe,IAIP6rB,EAAiB7rB,EAAjB6rB,aAERh+B,KAAgBmI,KAAK,CACjB,QAAS,mBACT8d,OAAQ9T,EAAW1R,GACnBu9B,cAAeA,IAGnB,EAAKhe,gBA7DU,EAgEnBk0E,mBAAqB,SAAAC,GAAc,IAGzB/wF,EAFiB,EAAK8c,MAApB/N,WACAF,SACiBu0C,KAAK,SAAA39C,GAAC,OAAIA,EAAEzF,QAAQ3C,KAAO0zF,IACpD,GAAK/wF,EAAL,CAEA,IAAM3E,EAAQuM,IAAUhK,WACxB4M,YAAmBnP,EAAO2E,EAAS,MAEX,EAAKkxF,oBAAoBH,GACjClzF,QAAQ,SAAA4H,GACpB+E,YAAmBnP,EAAOoK,EAAG,UA3ElB,EA+EnByrF,oBAAsB,SAAAH,GAAc,IACxBhiF,EAAe,EAAK+N,MAApB/N,WACR,IAAKA,EAAY,MAAO,GAFO,IAIvBF,EAAaE,EAAbF,SACR,IAAKA,EAAU,MAAO,GAEtB,IAAMsiF,EAAU,GACVhkF,EAAQ0B,EAASoc,UAAU,SAAAxlB,GAAC,OAAIA,EAAEzF,QAAQ3C,KAAO0zF,IACvD,IAAe,IAAX5jF,EAAc,MAAO,GAEzB,IACMwE,EAAM4W,KAAKC,MAAMrb,EADE,GAEnBme,EAASne,EAFU,EAInBqe,EAAU7Z,EAAM,EAChB8Z,EAAU9Z,EAAM,EAChBga,EAAaL,EAAS,EACtBM,EAAaN,EAAS,EA6B5B,OA3BIE,GAAW,IACPG,GAAc,GACdwlE,EAAQrtF,KAXS,EAWe0nB,EAAUG,GAE9CwlE,EAAQrtF,KAba,EAaW0nB,EAAUF,GACtCM,EAdiB,GAejBulE,EAAQrtF,KAfS,EAee0nB,EAAUI,IAI9CD,GAAc,GACdwlE,EAAQrtF,KApBa,EAoBW6N,EAAMga,GAEtCC,EAtBqB,GAuBrBulE,EAAQrtF,KAvBa,EAuBW6N,EAAMia,GAGtCH,EAAUlD,KAAK6C,KAAKvc,EAAShN,OA1BR,KA2BjB8pB,GAAc,GACdwlE,EAAQrtF,KA5BS,EA4Be2nB,EAAUE,GAE9CwlE,EAAQrtF,KA9Ba,EA8BW2nB,EAAUH,GACtCM,EA/BiB,GAgCjBulE,EAAQrtF,KAhCS,EAgCe2nB,EAAUG,IAI3CulE,EAAQ3pF,IAAI,SAAA7F,GAAC,OAAIkN,EAASlN,MA9HlB,EAoKnB2vF,cAAgB,WAEZ,EAAK50E,SAAS,CAAE1c,QADA,OAEhBpD,KAAgB8G,aAAa,CACzB,QAAS,6BACT1D,QAJY,OAMhB,EAAK6uF,WAAY,EACjBhvF,SAAS+0C,oBAAoB,UAAW,EAAK08C,gBA5K9B,EA+KnBr5D,iBAAmB,SAAA5yB,GACf,IAAM0rF,EAAYxgE,OAAOlrB,EAAMu6D,cAAcl6C,QAAQqrE,WAC/C/wF,EAAU,EAAKoxF,WAAWL,GAC3B/wF,GAEA,EAAK6uF,YAEV,EAAKnyE,SAAS,CAAE1c,YAChBpD,KAAgB8G,aAAa,CACzB,QAAS,6BACT1D,YAEJ,EAAK8wF,mBAAmBC,KA3LT,EA8LnBhiD,gBAAkB,SAAA1pC,GACd,IAAM0rF,EAAYxgE,OAAOlrB,EAAMu6D,cAAcl6C,QAAQqrE,WAC/C/wF,EAAU,EAAKoxF,WAAWL,GAChC,GAAK/wF,EAcL,OAZA,EAAK0c,SAAS,CAAE1c,YAChBpD,KAAgB8G,aAAa,CACzB,QAAS,6BACT1D,YAEJ,EAAK8wF,mBAAmBC,GAExB,EAAKlC,WAAY,EACjBhvF,SAAS80C,iBAAiB,UAAW,EAAK28C,eAE1CjsF,EAAMkX,iBACNlX,EAAMiX,mBACC,GA5MP,EAAKQ,MAAQ,CACT/N,WAAY2pB,KAAa3pB,WACzBgiF,UAAW,GALA,E,mFASG99D,EAAWC,EAAW4F,GAAc,IAAD,EACrBl1B,KAAKkZ,MAA7B/N,EAD6C,EAC7CA,WAAY/O,EADiC,EACjCA,QAEpB,OAAO+O,IAAemkB,EAAUnkB,YAAc/O,IAAYkzB,EAAUlzB,U,0CAIpE04B,KAAa77B,GAAG,yBAA0B+G,KAAKyyF,8BAC/C39D,KAAa77B,GAAG,6BAA8B+G,KAAKwyF,oC,6CAInD19D,KAAa37B,IAAI,yBAA0B6G,KAAKyyF,8BAChD39D,KAAa37B,IAAI,6BAA8B6G,KAAKwyF,oC,iCAoI7CrF,GAAY,IACXhiF,EAAenL,KAAKkZ,MAApB/N,WACR,IAAKA,EAAY,OAAO,KAFN,IAIVF,EAAaE,EAAbF,SAEFqc,EAAerc,EAASoc,UAAU,SAAAxlB,GAAC,OAAIA,EAAEzF,QAAQ3C,KAAO0zF,IAC9D,OAAyB,IAAlB7lE,EAAsBrc,EAASqc,GAAgB,O,+BAiDhD,IAAD,OACGrZ,EAAMjO,KAAKwY,MAAXvK,EADH,EAE2BjO,KAAKkZ,MAA7B/N,EAFH,EAEGA,WAAY/O,EAFf,EAEeA,QACpB,IAAK+O,EAAY,OAAO,KAHnB,IAKG6C,EAAkC7C,EAAlC6C,MAAO/C,EAA2BE,EAA3BF,SAAU+rB,EAAiB7rB,EAAjB6rB,aAEnB/+B,EAAQgT,EAASrH,IAAI,SAAA/B,GAAC,OACxB,yBACIgjB,UAAU,0BACVhT,IAAKhQ,EAAEzF,QAAQ3C,GACfm0F,kBAAiB/rF,EAAEzF,QAAQ3C,GAC3BsJ,MAAO,CAAE0C,MAAO,GAAIC,OAAQ,IAC5BkxB,aAAc,EAAKvC,iBACnBuX,YAAa,EAAKT,iBAClB,kBAAC1hB,GAAA,EAAD,CACI5X,IAAKhQ,EAAEzF,QAAQ3C,GACforB,UAAU,kCACVzoB,QAASyF,EACToyB,UAAU,EACVkB,MAAM,EACN7uB,YAAaunF,KACbp4D,SAAO,EACP14B,OAAQ2sB,KAAkB0I,cAE9B,yBAAKvN,UAAU,iCAAiChjB,EAAEyb,UAI1D,OACI,kBAAC,IAAD,CACIuH,UAAU,qBACVjkB,MAAI,EACJ0Y,mBAAoB,EACpBC,QAASvZ,KAAKgZ,YACdQ,kBAAgB,gCAChBG,QAAS,CAAEs8B,MAAO,6BAClB,kBAAC,IAAD,CACIx8C,GAAG,gCACHorB,UAAWC,IAAW,CAAE,8BAA+BrN,QAAQrb,KAC/Di1E,mBAAiB,GACjB,kBAAC5uB,GAAA,EAAD,CAAYvxB,QAAQ,KAAKrM,UAAU,sCAAsC69B,QAAM,GAC1E10C,GAEL,kBAAC,GAAD,CAAuB6W,UAAU,qCAErC,kBAAC,KAAD,CACIlL,QAAS,CAAEC,KAAM,mCACjBqyE,YAAajsF,KAAKorF,gBAClB10D,WAAY12B,KAAKqrF,gBAChBpzF,GAEL,kBAAC6hB,EAAA,EAAD,CAAe+K,UAAWC,IAAW,CAAE,8BAA+BrN,QAAQrb,MAC1E,kBAAC2d,EAAA,EAAD,CAAQiL,MAAM,UAAU5L,QAASpZ,KAAKgZ,aACjC/K,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQiL,MAAM,UAAU5L,QAASpZ,KAAKo+B,YAClBnwB,EAAf+oB,EAAiB,iBAAsB,SAG/C,kBAACiP,GAAA,EAAD,CAAgB7pC,QAASA,S,GA/QX8d,IAAMC,YAuRtBE,iBAAkBk4E,IC1ElBG,I,mBAlNX,WAAYl6E,GAAQ,IAAD,8BACf,4CAAMA,KA6CVm6E,2BAA6B,SAAAp6F,GAAW,IAC5BmpE,EAAc,EAAKxoD,MAAnBwoD,UACR,GAAKA,EAAL,CAFmC,IAI3BzlE,EAAaylE,EAAbzlE,SACR,GAAKA,EAAL,CALmC,IAOjBtD,EAASsD,EAAnBA,SACR,GAAKtD,EAAL,CARmC,IAU3BoG,EAAWxG,EAAXwG,OAER,GAAIpG,EAAKc,KAAOsF,EAAhB,CAIA,GAAI,EAAK6zF,cACL,GAAI,EAAKA,cAAclxB,YAAcA,EAEjC,GADa,IAAI1uD,KAAS,EAAK4/E,cAAc7nE,KAClC,IAIP,YAHAgG,WAAW,WACP,EAAKgD,eACN,KAMf,EAAKA,mBA1EU,EA6EnBwQ,oCAAsC,SAAAhsC,GAAW,IACrCmpE,EAAc,EAAKxoD,MAAnBwoD,UACR,GAAKA,EAAL,CAF4C,IAIpCzlE,EAAaylE,EAAbzlE,SACR,GAAKA,EAAL,CAL4C,IAOpCa,EAAcb,EAAda,UACR,GAAKA,EAAL,CAEA,IAAMnE,EAAOmE,EAAUd,MACvB,GAAKrD,EAAL,CAX4C,IAapCoG,EAAWxG,EAAXwG,OAEJpG,EAAKc,KAAOsF,IAIhB,EAAK6zF,cAAgB,CACjBlxB,YACA32C,KAAM,IAAI/X,MAEd,EAAK+gB,oBApGU,EAuGnB8+D,6BAA+B,SAAAt6F,GAAW,IAC9BmpE,EAAcnpE,EAAdmpE,UAER,EAAKkxB,cAAgB,CACjBlxB,YACA32C,KAAM,IAAI/X,MAEd,EAAK8F,SAAS,CACV4oD,eA/GW,EAmHnBoxB,8BAAgC,SAAAv6F,GAC5B,EAAKw7B,eApHU,EAuHnB+5B,qBAAuB,SAAAv1D,GACnB,EAAKugB,SAAS,CACVnc,OAAQpE,EAAOw1D,WACflxD,UAAWtE,EAAO8/D,iBA1HP,EA8HnBk4B,eAAiB,WACb,EAAKwC,aAAaxC,kBA/HH,EAkInBO,cAAgB,WACZ,EAAKiC,aAAajC,iBAnIH,EAsInBN,gBAAkB,WACd,EAAKuC,aAAavC,mBApIlB,EAAKt3E,MAAQ,CACTvc,OAAQse,KAASioC,YACjBrmD,UAAWoe,KAASq9C,eACpB06B,cAAe,EACftxB,UAAW,KACXuxB,aAAc,MARH,E,mFAYG5jE,EAAWC,GAAY,IAAD,EACgBtvB,KAAKkZ,MAArDvc,EADgC,EAChCA,OAAQE,EADwB,EACxBA,UAAWm2F,EADa,EACbA,cAAetxB,EADF,EACEA,UAC1C,OAAIpyC,EAAU3yB,SAAWA,IAGrB2yB,EAAUzyB,YAAcA,IAGxByyB,EAAU0jE,gBAAkBA,GAG5B1jE,EAAUoyC,YAAcA,M,0CAQ5BzmD,KAAShiB,GAAG,oCAAqC+G,KAAK8yF,+BACtD73E,KAAShiB,GAAG,qBAAsB+G,KAAK8tD,sBACvC/jD,IAAU9Q,GAAG,6BAA8B+G,KAAK6yF,8BAChD7uF,IAAU/K,GAAG,oCAAqC+G,KAAKukC,qCACvDvgC,IAAU/K,GAAG,2BAA4B+G,KAAK2yF,8B,6CAI9C13E,KAAS9hB,IAAI,oCAAqC6G,KAAK8yF,+BACvD73E,KAAS9hB,IAAI,qBAAsB6G,KAAK8tD,sBACxC/jD,IAAU5Q,IAAI,6BAA8B6G,KAAK6yF,8BACjD7uF,IAAU7K,IAAI,oCAAqC6G,KAAKukC,qCACxDvgC,IAAU7K,IAAI,2BAA4B6G,KAAK2yF,8B,+BA+FzC,IAAD,SAiCoC3yF,KAAKkZ,MAAtCvc,EAjCH,EAiCGA,OAAQE,EAjCX,EAiCWA,UAAW6kE,EAjCtB,EAiCsBA,UACnB+J,EAAyBxwD,KAAzBwwD,qBAEJ1oE,EAAQ,KACR2yB,EAAM,KACV,GAAIgsC,EAAW,CAAC,IACJzlE,EAAaylE,EAAbzlE,SACR,GAAIA,EAAU,CAAC,IACHa,EAA8Bb,EAA9Ba,UAAqBnE,EAASsD,EAAnBA,SACftD,IACA+8B,EAAM7pB,YAAOlT,KAGZ+8B,GAAO54B,IACR44B,EAAM7pB,YAAO/O,EAAUd,QAI/B+G,EAAQ,CACJgqD,gBAAiBr3B,EAAG,cAAUA,EAAV,KAAmB,MAI/C,OACI,yBACI7Q,UAAWC,IAAW,iBAAkB,CAAE,8BAA+B2mD,IACzE1oE,MAAOA,GACP,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAQpG,OAAQA,IAChB,kBAAC,GAAD,CAAcq5B,IAAK,SAAAA,GAAG,OAAK,EAAK+8D,aAAe/8D,GAAMr5B,OAAQA,EAAQE,UAAWA,IAChF,kBAAC,GAAD,CAAQF,OAAQA,IAChB,kBAAC,GAAD,MACA,kBAAC,GAAD,W,GA5MYwd,cCXtB+4E,GAAYh5E,IAAMi5E,cAAc,MAEvBD,MAER,SAASE,GAAOj5E,GAAY,IACzBk5E,EADwB,iLAEhB,IAAD,OACL,OAAO,kBAACH,GAAUI,SAAX,KAAqB,SAAA1iF,GAAK,OAAI,kBAACuJ,EAAD,eAAWsmB,GAAI7vB,GAAW,EAAK4H,cAH9C,GACJ0B,IAAMC,WAOhC,OAFAk5E,EAAYh7C,YAAZ,iBAAoCC,YAAen+B,GAAnD,KAEOk5E,ECXX,SAASE,GAAS/6E,GACd,OCqWG,SAAqBg7E,GACxB,IAAKA,EACD,OAAO,KAGX,GAAIA,aAAoBz5D,OACpB,OAAOy5D,EAGX,OAAQA,EAAS,UACb,IAAK,iBAAmB,IACZvpE,EAAeupE,EAAfvpE,KAAMhd,EAASumF,EAATvmF,KAEd,OAAO,kBAAC,GAAD,CAAYA,KAAMA,EAAMgd,KAAMA,IAEzC,IAAK,eAAiB,IACVhd,EAASumF,EAATvmF,KAER,OAAO,kBAAC,GAAD,CAAMA,KAAMA,IAEvB,IAAK,uBAAyB,IAClBwmF,EAAwBD,EAAxBC,cAAexmF,EAASumF,EAATvmF,KAEvB,OAAO,kBAAC,GAAD,CAAcymF,aAAcD,EAAexmF,KAAMA,IAE5D,IAAK,gBAAkB,IACXA,EAASumF,EAATvmF,KAER,OAAO,kBAAC,GAAD,CAAOA,KAAMA,IAExB,IAAK,eAAiB,IACVhR,EAA4Bu3F,EAA5Bv3F,SAAUyJ,EAAkB8tF,EAAlB9tF,OAAQD,EAAU+tF,EAAV/tF,MAE1B,OAAO,kBAAC,GAAD,CAAMxJ,SAAUA,EAAUyJ,OAAQA,EAAQD,MAAOA,IAE5D,IAAK,iBAAmB,IACZwH,EAASumF,EAATvmF,KAER,OAAO,kBAAC,GAAD,CAAQA,KAAMA,IAEzB,IAAK,iBAAmB,IACZA,EAASumF,EAATvmF,KAER,OAAO,kBAAC,GAAD,CAAQA,KAAMA,IAEzB,IAAK,sBAAwB,IACjB6I,EAAuB09E,EAAvB19E,aAAc7I,EAASumF,EAATvmF,KAEtB,OAAO,kBAAC,GAAD,CAAao3C,YAAavuC,EAAc7I,KAAMA,IAEzD,IAAK,gBAAkB,IACXA,EAASumF,EAATvmF,KAER,OAAO,kBAAC,GAAD,CAAOA,KAAMA,IAExB,IAAK,wBAA0B,IACnBA,EAASumF,EAATvmF,KAER,OAAO,kBAAC,GAAD,CAAeA,KAAMA,IAEhC,IAAK,oBAAsB,IACfA,EAASumF,EAATvmF,KAER,OAAO,kBAAC,GAAD,CAAWA,KAAMA,IAE5B,IAAK,sBAAwB,IACjBA,EAASumF,EAATvmF,KAER,OAAO,kBAAC,GAAD,CAAaA,KAAMA,IAE9B,IAAK,YAAc,IACPiB,EAAUslF,EAAVtlF,MAER,OAAO,kBAAC,GAAD,CAAOA,MAAOA,IAEzB,IAAK,oBAAsB,IACfjB,EAASumF,EAATvmF,KAER,OAAO,kBAAC,GAAD,CAAWA,KAAMA,IAE5B,IAAK,cAAgB,IACTA,EAAcumF,EAAdvmF,KAAMvN,EAAQ8zF,EAAR9zF,IAEd,OAAO,kBAAC,GAAD,CAAKuN,KAAMA,EAAMvN,IAAKA,IAIrC,MAAM,IAAN,OAAW8zF,EAAS,SAApB,KD5bOG,CAAYn7E,EAAMvL,MAG7BsmF,GAAShoC,UAAY,CACjBt+C,KAAMu+C,KAAUooC,OAAOnoC,YAGZ8nC,UEAAM,OARf,SAAgBr7E,GACZ,OAAO,uBAAG/e,GAAI+e,EAAMyR,QCwBT6pE,OAxBf,SAAiBt7E,GAAQ,IACbvL,EAAiBuL,EAAjBvL,KAAMC,EAAWsL,EAAXtL,OAER6mF,GAAWC,GAAY/mF,GACvBgnF,GAAcD,GAAY9mF,GAChC,OAAK6mF,GAAYE,EAGb,oCACKF,GAAW,kBAAC,GAAD,CAAU9mF,KAAMA,IAC3BgnF,GACG,8BACI,kBAAC,GAAD,CAAUhnF,KAAMC,MAPI,MCqBzByY,OAzBf,SAAmBnN,GAAQ,IACf1c,EAAwD0c,EAAxD1c,UAAWo4F,EAA6C17E,EAA7C07E,MAAOpnF,EAAsC0L,EAAtC1L,QAAwBuS,GAAc7G,EAA7B27E,cAA6B37E,EAAd6G,WAElD,OACI,gCACI,kBAAC,KAAD,CACIohB,IAAI,EACJ9zB,UAAWunF,EACXp4F,UAAWA,EACXwK,YAAa8tF,IACb/0E,UAAWA,IAEf,kBAAC,GAAD,CAASpS,KAAMH,EAAQG,KAAMC,OAAQJ,EAAQI,W,UCe1CmnF,OA3Bf,SAAoB77E,GAAQ,IAChBzL,EAAwByL,EAAxBzL,OAAQunF,EAAgB97E,EAAhB87E,YAEVC,GAAaP,GAAYjnF,GACzBynF,EAAUF,EAAc,EAC9B,IAAKC,IAAcC,EAAS,OAAO,KAEnC,IAAMp4E,EAAIk4E,EAAc,EAAI,IAAIthF,KAAmB,IAAdshF,GAAsB,KAE3D,OACI,iCACKC,GACG,uBAAG14E,IAAI,UACH,kBAAC,GAAD,CAAU5O,KAAMF,KAGvBwnF,GAAaC,GAAW,WACxBA,GAAW,0BAAMC,SAAUr4E,EAAEs4E,eAAgBvhF,aAAWiJ,EAAG,mBCAzDu4E,OAnBf,SAAoBn8E,GAAQ,IAChBvL,EAAiBuL,EAAjBvL,KAAMC,EAAWsL,EAAXtL,OACd,OACI,oCACI,kBAAC,GAAD,CAAUD,KAAMA,IACfC,GACG,8BACI,kBAAC,GAAD,CAAUD,KAAMC,OCWrBkmF,UAhBf,SAAiB56E,GAAQ,IACbo8E,EAA4Bp8E,EAA5Bo8E,WAAY9nF,EAAgB0L,EAAhB1L,QAAS2zB,EAAOjoB,EAAPioB,GAE7B,OACI,yBAAK5b,UAAU,WACV+vE,EAAWhxF,IAAI,SAAC/B,EAAG0H,GAAJ,OAAcsrF,GAAahzF,EAAG4+B,EAAIl3B,KAClD,kBAAC,GAAD,CAAS0D,KAAMH,EAAQG,KAAMC,OAAQJ,EAAQI,YCPzD,SAAS4nF,GAAMt8E,GACX,OAAOq8E,GAAar8E,EAAMrL,MAAOqL,EAAMioB,IAG3Cq0D,GAAMvpC,UAAY,CACdp+C,MAAOq+C,KAAUooC,OAAOnoC,YAGb2nC,UAAO0B,ICYP1B,UAnBf,SAAiB56E,GAAQ,IACbpL,EAAmCoL,EAAnCpL,OAAQwnF,EAA2Bp8E,EAA3Bo8E,WAAYG,EAAev8E,EAAfu8E,OAAQt0D,EAAOjoB,EAAPioB,GAEpC,OACI,6BAAS7/B,KAAMm0F,GACX,iCACI,kBAAC,GAAD,CAAU9nF,KAAMG,KAEnBwnF,EAAWhxF,IAAI,SAAC/B,EAAG0H,GAAJ,OAAcsrF,GAAahzF,EAAG4+B,EAAIl3B,QCN/C88C,OAJf,WACI,OAAO,8B,UCDL2uC,G,YACF,WAAYx8E,GAAQ,IAAD,8BACf,4CAAMA,KA6BVy8E,aAAe,SAAAz8E,GAEX,IAAIA,EAAMkd,IAAV,CAEA,IAAM75B,EAAU2c,EAAM3c,SAAW2c,EAAMW,SACvC,GAAKtd,EAAL,CAEA,IAAMq5F,EAAQ,EAAKC,SAASn4E,QAC5B,GAAKk4E,EAAL,CAOA,IAAME,EAAMF,EAAMG,gBACbD,IAEkB,kBAAZv5F,GAIPu5F,EAAIx0F,OACJw0F,EAAIE,MAAMz5F,GACVu5F,EAAInqE,UAGJmqE,EAAIx0F,OACJw0F,EAAIE,MAAM,gCACVF,EAAInqE,QACJ82D,KAASwT,OAAO15F,EAASu5F,EAAII,eAAe,sBA5DjC,EAiEnBC,uBAAyB,WACrB,GAAK,EAAKj9E,MAAMk9E,iBAAhB,CACA,IAAMR,EAAQ,EAAKC,SAASn4E,QAC5B,GAAKk4E,EAAL,CAOA,IAAME,EAAMF,EAAMG,gBAClB,GAAKD,EAAL,CAEA,IAAIO,EAAe,KAOnB,GANA,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,OAAO17F,QAAQ,SAAAwxF,GACnD,IAAIkK,EAAJ,CACA,IAAMC,EAAQR,EAAIS,qBAAqBpK,GACjCmK,GAASA,EAAM33F,SACrB03F,EAAeC,EAAM,OAEpBD,EAAL,CAIA,IAAMG,EAAuB75F,SAAS6G,cAAc,UACpDgzF,EAAqBttF,KAAO,kBAC5BstF,EAAqBpgE,IAAM,EAAKld,MAAMk9E,iBACtCC,EAAatyF,YAAYyyF,QANrB76F,QAAQC,MAAM,8CAtFH,EA+FnBs9B,OAAS,WACL,EAAKi9D,0BAhGU,EAqGnBM,aAAe,SAAAv9E,GACX,IAAM08E,EAAQ,EAAKC,SAASn4E,QACvBk4E,GACD18E,EAAMw9E,qBACNC,yBAAiBz9E,EAAM09E,qBAAsBhB,IAtGjD,EAAKC,SAAWj7E,IAAM0a,YAHP,E,iFAQf50B,KAAKi1F,aAAaj1F,KAAKwY,OACvBxY,KAAK+1F,aAAa/1F,KAAKwY,S,6CAMvB,IAAM08E,EAAQl1F,KAAKm1F,SAASn4E,QAC5B,GAAKk4E,EAAL,CAJmB,IAMXiB,EAAkBjB,EAAlBiB,cACHA,GAELA,EAAcC,qB,gDAGQ/mE,GAEtBrvB,KAAKi1F,aAAa5lE,GAClBrvB,KAAK+1F,aAAa1mE,K,+BAkFZ,IAAD,EAC8CrvB,KAAKwY,MAAhDkd,EADH,EACGA,IAAKj8B,EADR,EACQA,GAAI48F,EADZ,EACYA,YAAaxxE,EADzB,EACyBA,UAAW9hB,EADpC,EACoCA,MACzC,OACI,4BACIizB,IAAKh2B,KAAKm1F,SACVz/D,IAAKA,EACLj8B,GAAIA,EACJ48F,YAAaA,EACbxxE,UAAWA,EACX9hB,MAAOA,EACPy1B,OAAQx4B,KAAKw4B,a,GAxHDte,IAAMC,WAkJlC66E,GAAc56E,aAAe,CAEzB47E,qBAAqB,EACrBE,qBAAsB,GAStBR,iBAAkB,iGAElBW,YAAa,EACbtzF,MAAO,CACH0C,MAAO,OACPihD,UAAW,KAIJsuC,UC7EAsB,G,2MAxFXp9E,MAAQ,G,mFAgBJlZ,KAAKu2F,oB,yCAGUnhE,EAAWC,EAAWC,GAAW,IAAD,EACzBt1B,KAAKwY,MAAnB9Y,EADuC,EACvCA,IAAK82F,EADkC,EAClCA,KAET92F,IAAQ01B,EAAU11B,KAAO82F,IAASphE,EAAUohE,MAC5Cx2F,KAAKu2F,oB,wCAIM,IAAD,EACQv2F,KAAKwY,MAAnB9Y,EADM,EACNA,IAAK82F,EADC,EACDA,KAEbx2F,KAAK8Y,SAAS,CACVpZ,MACA82F,W,+BAIE,IAAD,EACiBx2F,KAAKkZ,MAAnBxZ,EADH,EACGA,IAAK82F,EADR,EACQA,KADR,EAE2Dx2F,KAAKwY,MAA7D/S,EAFH,EAEGA,MAAOC,EAFV,EAEUA,OAAQoH,EAFlB,EAEkBA,QAAS2pF,EAF3B,EAE2BA,YAAaC,EAFxC,EAEwCA,eAEvClzE,EAAU,CACZmzE,UAAWD,GAGTE,EAAiBnxF,EAAQ,GAAKC,EAAS,EACvCmxF,EAAYp/E,QAAQ/X,IAAQ+X,QAAQ++E,GAE1C,OACI,gCACKK,GACG,oCACKD,EACG,4BACIlhE,IAAKh2B,GAAY,KACjBo3F,OAAQp3F,EAAM,KAAO82F,EACrB/wF,MAAOA,EAAQ,EAAIA,EAAQ,KAC3BC,OAAQA,EAAS,EAAIA,EAAS,KAC9BqxF,gBAAiBN,EACjBE,UAAWD,EAAiB,OAAS,KACrCL,YAAa,IAGjB,kBAAC,GAAD,CACIx6F,QAAS26F,EACT9gE,IAAKh2B,EACLw2F,qBAAsB1yE,EACtBzgB,MAAO,CAAE0C,MAAO,WAKhC,kBAAC,GAAD,CAASwH,KAAMH,EAAQG,KAAMC,OAAQJ,EAAQI,a,gDArEzBsL,EAAOU,GACnC,OAAIV,EAAM9Y,MAAQwZ,EAAM6lB,SAAWvmB,EAAMg+E,OAASt9E,EAAM89E,SAC7C,CACHt3F,IAAK,KACL82F,KAAM,KACNz3D,QAASvmB,EAAM9Y,IACfs3F,SAAUx+E,EAAMg+E,MAIjB,S,GAbQt8E,IAAMC,WC2Bdi5E,UAxBf,SAAsB56E,GACkDA,EAA5D9Y,IADkB,IACbqN,EAAuDyL,EAAvDzL,OAAqBgG,GAAkCyF,EAA/Cy+E,YAA+Cz+E,EAAlCzF,MAAM6hF,EAA4Bp8E,EAA5Bo8E,WAAY9nF,EAAgB0L,EAAhB1L,QAAS2zB,EAAOjoB,EAAPioB,GAE7D,OACI,oCACI,gCACKhpB,QAAQ1K,IAAW,4BAAKA,GACzB,kBAAC,GAAD,CAAYA,OAAQ,KAAMunF,YAAavhF,IACtC6hF,EAAWhxF,IAAI,SAAC/B,EAAG0H,GAAJ,OAAcsrF,GAAahzF,EAAG4+B,EAAIl3B,KAClD,kBAAC,GAAD,CAAS0D,KAAMH,EAAQG,KAAMC,OAAQJ,EAAQI,aCgB9CgqF,I,kNA7BXh+E,MAAQ,CACJhe,MAAO,KACP+5B,UAAW,M,iFAGG/5B,EAAO+5B,GACrBj1B,KAAK8Y,SAAS,CAAE5d,QAAO+5B,gB,+BAGjB,IACE9b,EAAanZ,KAAKwY,MAAlBW,SADH,EAEwBnZ,KAAKkZ,MAA1Bhe,EAFH,EAEGA,MAAO+5B,EAFV,EAEUA,UACf,OAAI/5B,GAAS+5B,EAEL,yBAAKpQ,UAAU,iBACX,8BACI,uCACQ3pB,EAAM+uB,KADd,aACuB/uB,EAAMU,SACxBq5B,EAAUkiE,kBAOxBh+E,M,GA1BYe,IAAMC,YCalB+gE,OAZf,SAAgB1iE,GACZ,OACI,gCACI,kBAAC,GAAD,CAAUvL,KAAMuL,EAAMjL,WCSnBgxE,OAZf,SAAgB/lE,GACZ,OACI,4BACI,kBAAC,GAAD,CAAUvL,KAAMuL,EAAMpL,WCUnBgqF,OAbf,SAAgB5+E,GAAQ,IACZhL,EAAWgL,EAAXhL,OACR,OACI,wBAAIqX,UAAU,UACV,kBAAC,GAAD,CAAU5X,KAAMO,MCMb4lF,UATf,SAAkB56E,GACd,OAAO,wBAAI6+E,cAAa7+E,EAAMo0C,OAAQp0C,EAAMo8E,WAAWhxF,IAAI,SAAC/B,EAAG0H,GAAJ,OAAcsrF,GAAahzF,EAAG2W,EAAMioB,GAAIl3B,QCYxFq6C,OAdf,SAAcprC,GACV,OACI,4BACKA,EAAMvgB,MAAM2L,IAAI,SAAC/B,EAAG0H,GAAJ,OACb,kBAAC,GAAD,CAAUsI,IAAKtI,EAAOqjD,MAAO/qD,EAAE+qD,MAAOgoC,WAAY/yF,EAAE6K,kBCQrD4qF,OAZf,SAAmB9+E,GACf,OACI,2BACI,kBAAC,GAAD,CAAUvL,KAAMuL,EAAMvL,SCiBnB4Y,OAlBf,SAAerN,GAAQ,IACXxc,EAAmCwc,EAAnCxc,MAAO8Q,EAA4B0L,EAA5B1L,QAAcuS,GAAc7G,EAAnB9Y,IAAmB8Y,EAAd6G,WAE7B,OACI,gCACI,kBAAC,KAAD,CAAYrjB,MAAOA,EAAOqG,KAAMqL,IAAepH,YAAa8tF,IAAuB/0E,UAAWA,IAC9F,kBAAC,GAAD,CAASpS,KAAMH,EAAQG,KAAMC,OAAQJ,EAAQI,WCK1CqqF,OAbf,SAAsB/+E,GAClB,OACI,6BACI,kBAAC,GAAD,CAAUvL,KAAMuL,EAAMvL,SCkBnBuqF,OArBf,SAAmBh/E,GAAQ,IACfvL,EAAiBuL,EAAjBvL,KAAMC,EAAWsL,EAAXtL,OACd,OACI,+BACI,kBAAC,GAAD,CAAUD,KAAMA,IACfC,GACG,8BACI,kBAAC,GAAD,CAAUD,KAAMC,OC4CrBuqF,G,2MAhDXh/E,YAAc,SAAAhX,GACVA,EAAMkX,iBACNlX,EAAMiX,kBAFa,IAIXhZ,EAAQ,EAAK8Y,MAAb9Y,IAER1G,KAAgB8G,aAAa,CACzB,QAAS,6BACTJ,S,wEAIE,IAAD,EACoDM,KAAKwY,MAAtDzL,EADH,EACGA,OAAqBunF,GADxB,EACWt+E,YADX,EACwBs+E,aAAatmF,EADrC,EACqCA,MAAOtO,EAD5C,EAC4CA,IAE3C0c,EAAIk4E,EAAc,EAAI,IAAIthF,KAAmB,IAAdshF,GAAsB,KACrDoD,EAAyB3qF,GAAUqP,EACnCu7E,EAAgBv7E,GAAKrP,EAE3B,OACI,4BACI,kBAAC+O,GAAA,EAAD,CAAUpc,IAAKA,EAAK0Z,QAASpZ,KAAKyY,aAC7BzK,GAEJ2pF,GACG,iCACK5qF,EACA2qF,GAA0B,WAC1Bt7E,GAAK,0BAAMq4E,SAAUr4E,EAAEs4E,eAAgBvhF,aAAWiJ,EAAG,uB,GA7BjDlC,IAAMC,WC2BpBy9E,OA5Bf,SAAyBp/E,GACrB,OACI,oCACI,4BACI,kBAAC,GAAD,CAAUvL,KAAMuL,EAAMpL,UAE1B,wBAAIyX,UAAU,oBACTrM,EAAM7K,SAAS/J,IAAI,SAAA/B,GAAC,OACjB,kBAAC,GAAD,CACIgQ,IAAKhQ,EAAEnC,IACPA,IAAKmC,EAAEnC,IACPsO,MAAOnM,EAAEmM,MACTgI,YAAanU,EAAEmU,YACfha,MAAO6F,EAAE7F,MACT+Q,OAAQlL,EAAEkL,OACVunF,YAAazyF,EAAEg2F,oBCExBzE,UAhBf,SAAmB56E,GAAQ,IACfo8E,EAA4Bp8E,EAA5Bo8E,WAAY9nF,EAAgB0L,EAAhB1L,QAAS2zB,EAAOjoB,EAAPioB,GAE7B,OACI,yBAAK5b,UAAU,aACV+vE,EAAWhxF,IAAI,SAAC/B,EAAG0H,GAAJ,OAAcsrF,GAAahzF,EAAG4+B,EAAIl3B,KAClD,kBAAC,GAAD,CAAS0D,KAAMH,EAAQG,KAAMC,OAAQJ,EAAQI,YCI1C4qF,OAZf,SAAmBt/E,GACf,OACI,4BACI,kBAAC,GAAD,CAAUvL,KAAMuL,EAAM5K,cCSnBmqF,OAZf,SAAkBv/E,GACd,OACI,4BACI,kBAAC,GAAD,CAAUvL,KAAMuL,EAAM3K,aCSnBmqF,OAZf,SAAex/E,GACX,OACI,4BACI,kBAAC,GAAD,CAAUvL,KAAMuL,EAAMxK,UCSnBiqF,OAZf,SAAcz/E,GACV,OACI,2BACI,kBAAC,GAAD,CAAUvL,KAAMuL,EAAMvL,SCUnBirF,OAbf,SAAsB1/E,GAClB,OACI,uBAAGvV,KAAI,iBAAYuV,EAAMk7E,eACrB,kBAAC,GAAD,CAAUzmF,KAAMuL,EAAMvL,SCSnBkrF,OAZf,SAAe3/E,GACX,OACI,8BACI,kBAAC,GAAD,CAAUvL,KAAMuL,EAAMvL,SC0EnBmrF,G,2MAjEX7zD,oCAAsC,SAAAhsC,GAAW,IACrC0D,EAAa,EAAKuc,MAAlBvc,SACR,GAAKA,EAAL,CAF4C,IAIpCa,EAAcb,EAAda,UACR,GAAKA,EAAL,CAEA,IAAMnE,EAAOmE,EAAUd,MACvB,GAAKrD,EAAL,CAR4C,IAUpCoG,EAAWxG,EAAXwG,OAEJpG,EAAKc,KAAOsF,GAIhB,EAAKg1B,kB,EAGT4+D,2BAA6B,SAAAp6F,GAAW,IAC5B0D,EAAa,EAAKuc,MAAlBvc,SACR,GAAKA,EAAL,CAEA,IAAMtD,EAAOsD,EAASA,SACtB,GAAKtD,EAAL,CALmC,IAO3BoG,EAAWxG,EAAXwG,OAEJpG,EAAKc,KAAOsF,GAIhB,EAAKg1B,iB,mFAzCL/vB,IAAU/K,GAAG,oCAAqC+G,KAAKukC,qCACvDvgC,IAAU/K,GAAG,2BAA4B+G,KAAK2yF,8B,6CAI9C3uF,IAAU7K,IAAI,oCAAqC6G,KAAKukC,qCACxDvgC,IAAU7K,IAAI,2BAA4B6G,KAAK2yF,8B,0CAsC/BltF,EAAOC,GACvB,MAAM,6EAAN,OAAoFD,EAApF,YAA6FC,EAA7F,oB,+BAGM,IAAD,EAC+B1F,KAAKwY,MAAjCvc,EADH,EACGA,SAAUyJ,EADb,EACaA,OAAQD,EADrB,EACqBA,MAC1B,IAAKxJ,EAAU,OAAO,KAFjB,IAIGa,EAA8Bb,EAA9Ba,UAAqBnE,EAASsD,EAAnBA,SACbuzB,EAAe3jB,YAAO/O,EAAYA,EAAUd,MAAQ,MACpD05B,EAAM7pB,YAAOlT,GAEnB,OACI,yBACI+8B,IAAKA,GAAOlG,GAAgBxvB,KAAKq4F,oBAAoB,EAAG,GACxD5yF,MAAOA,EAAQ,EAAIA,EAAQ,KAC3BC,OAAQA,EAAS,EAAIA,EAAS,KAC9BkwB,WAAW,EACXC,IAAI,S,GAhED3b,IAAMC,WCWVm+E,OAZf,SAAgB9/E,GACZ,OACI,2BACI,kBAAC,GAAD,CAAUvL,KAAMuL,EAAMvL,SCSnBsrF,OAZf,SAAgB//E,GACZ,OACI,8BACI,kBAAC,GAAD,CAAUvL,KAAMuL,EAAMvL,SCUnBurF,OAbf,SAAqBhgF,GACjB,OACI,uBAAGvV,KAAI,cAASuV,EAAM6rC,cAClB,kBAAC,GAAD,CAAUp3C,KAAMuL,EAAMvL,SCJlC,SAASwrF,GAAMjgF,GACX,OAAOA,EAAMvL,KAGjBwrF,GAAMltC,UAAY,CACdt+C,KAAMu+C,KAAUktC,OAAOjtC,YAGZgtC,UCKAE,OAZf,SAAuBngF,GACnB,OACI,6BACI,kBAAC,GAAD,CAAUvL,KAAMuL,EAAMvL,SCSnB2rF,OAZf,SAAmBpgF,GACf,OACI,6BACI,kBAAC,GAAD,CAAUvL,KAAMuL,EAAMvL,SCSnB4rF,OAZf,SAAqBrgF,GACjB,OACI,6BACI,kBAAC,GAAD,CAAUvL,KAAMuL,EAAMvL,SCUnB4mF,OAbf,SAAgBr7E,GACZ,OACI,uBAAG/e,GAAI+e,EAAMyR,MACT,kBAAC,GAAD,CAAUhd,KAAMuL,EAAMvL,SCWnB6rF,OAdf,SAAetgF,GACX,OACI,oCACKA,EAAMtK,MAAMtK,IAAI,SAAC/B,EAAG0H,GAAJ,OACb,kBAAC,GAAD,CAAUsI,IAAKtI,EAAO0D,KAAMpL,QCQ7Bk3F,OAZf,SAAmBvgF,GACf,OACI,6BACI,kBAAC,GAAD,CAAUvL,KAAMuL,EAAMvL,SC4BnB+rF,G,2MA5BXvgF,YAAc,SAAAhX,GACVA,EAAMkX,iBACNlX,EAAMiX,kBAFa,IAIXhZ,EAAQ,EAAK8Y,MAAb9Y,IAER1G,KAAgB8G,aAAa,CACzB,QAAS,6BACTJ,S,wEAIE,IAAD,EACiBM,KAAKwY,MAAnBvL,EADH,EACGA,KAAMvN,EADT,EACSA,IAEd,OACI,kBAACoc,GAAA,EAAD,CAAUpc,IAAKA,EAAK0Z,QAASpZ,KAAKyY,aAC9B,kBAAC,GAAD,CAAUxL,KAAMA,S,GAlBdiN,IAAMC,WC0BTi5E,UA1Bf,SAAe56E,GAAQ,IACX1L,EAA8C0L,EAA9C1L,QAASgB,EAAqC0K,EAArC1K,MAAOmrF,EAA8BzgF,EAA9BygF,WAAYC,EAAkB1gF,EAAlB0gF,UAAWz4D,EAAOjoB,EAAPioB,GAE/C,OACI,2BAAO04D,QAASD,EAAY,GAAK,KAAME,OAAQH,EAAa,EAAI,IAC1DjF,GAAYlnF,IACV,iCACI,kBAAC,GAAD,CAAUG,KAAMH,KAGxB,+BACKgB,EAAMlK,IAAI,SAACmK,EAAKsrF,GACb,OAAO,wBAAIxnF,IAAKwnF,GAAWtrF,EAAInK,IAAI,SAAC/B,EAAG0H,GAAJ,OAAcsrF,GAAahzF,EAAG4+B,EAAIl3B,YCY1E+vF,OAzBf,SAAmB9gF,GAAQ,IACfvL,EAAoDuL,EAApDvL,KAAMssF,EAA8C/gF,EAA9C+gF,SAAUC,EAAoChhF,EAApCghF,QAASC,EAA2BjhF,EAA3BihF,QAAS1qB,EAAkBv2D,EAAlBu2D,MAAO2qB,EAAWlhF,EAAXkhF,OACjD,GAAI1F,GAAY/mF,GAAO,OAAO,KAE9B,IAAM0sF,EAAa,CACfC,QAASJ,EACTK,QAASJ,EACT1qB,MAAO+qB,GAAuB/qB,GAC9B2qB,OAAQK,GAAqBL,IAG3B79F,EAAU,kBAAC,GAAD,CAAUoR,KAAMA,IAEhC,OAAOssF,EAAW,uBAAQI,EAAa99F,GAAgB,uBAAQ89F,EAAa99F,I,UCOjE7D,OAnBf,SAAawgB,GAAQ,IACTrc,EAAsBqc,EAAtBrc,SAAU2Q,EAAY0L,EAAZ1L,QAElB,OACI,gCACI,kBAACmZ,GAAA,EAAD,CAAUxgB,MAAO5H,IAAmB6H,OAAQ5H,IAAoB3B,SAAUA,IAC1E,kBAAC,GAAD,CAAS8Q,KAAMH,EAAQG,KAAMC,OAAQJ,EAAQI,WCW1Ckc,OAjBf,SAAe5Q,GAAQ,IACXzc,EAA8Byc,EAA9Bzc,MAAO+Q,EAAuB0L,EAAvB1L,QAASuS,EAAc7G,EAAd6G,UAExB,OACI,gCACI,kBAAC,KAAD,CAAYtjB,MAAOA,EAAOuK,YAAa8d,IAAoB/E,UAAWA,IACtE,kBAAC,GAAD,CAASpS,KAAMH,EAAQG,KAAMC,OAAQJ,EAAQI,WCC1C8sF,OAVf,SAAkBxhF,GACd,OAAO,+BCqBIoR,OAnBf,SAAepR,GAAQ,IACXlc,EAAsDkc,EAAtDlc,MAAOwQ,EAA+C0L,EAA/C1L,QAAiCuS,GAAc7G,EAAtCyhF,aAAsCzhF,EAAxB0hF,SAAwB1hF,EAAd6G,WAEhD,OACI,gCACI,kBAAC,KAAD,CAAY/iB,MAAOA,EAAOgK,YAAa8tF,IAAuB/0E,UAAWA,IACzE,kBAAC,GAAD,CAASpS,KAAMH,EAAQG,KAAMC,OAAQJ,EAAQI,WjDyClD,SAASitF,GAAqBpyF,EAAO+E,EAASonF,EAAOznF,EAAagS,GAGrE,GAAK1W,EAAL,CAKA,OAAQA,EAAM,UACV,IAAK,YAAc,IACEpP,EAASoP,EAApBjM,UACN,IAAKnD,EAAM,OAGX,GADAA,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EAC7B8lB,GAAc9lB,EAAKgB,MAAMoS,sBAEzB,YADA/H,IAAUa,oBAAoBlM,EAAKc,GAAIsO,GAEpC,GAAI0W,GAAc9lB,EAAKwC,OAAO+Q,oBAEjC,YADAlI,IAAU0a,iBAAiB/lB,EAAKc,GAAIsO,GAGpC5E,YAASxK,EAAMoP,EAAO/D,IAAU9G,oBAhB7B,EACG,EAeiEvE,EAAKc,KAGhF2gG,YAA4B,CACxBryF,QACA+E,UACAonF,QACAznF,gBAEJ,MAEJ,IAAK,QAAU,IACE9T,EAASoP,EAAhBhM,MACN,IAAKpD,EAAM,OAGX,GADAA,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EAC7B8lB,GAAc9lB,EAAKgB,MAAMoS,sBAEzB,YADA/H,IAAUa,oBAAoBlM,EAAKc,GAAIsO,GAEpC,GAAI0W,GAAc9lB,EAAKwC,OAAO+Q,oBAEjC,YADAlI,IAAU0a,iBAAiB/lB,EAAKc,GAAIsO,GAGpC5E,YAASxK,EAAMoP,EAAO/D,IAAU3G,gBAvC7B,EACG,EAsC6D1E,EAAKc,KAG5ET,KAAgB8G,aAAa,CACzB,QAAS,0BACT2M,cACAynF,UAEJ,MAEJ,IAAK,QACDkG,YAA4B,CACxBryF,QACA+E,UACAonF,QACAznF,gBAEJ,MAEJ,IAAK,QAAU,IACE9T,EAASoP,EAAhBzL,MACN,IAAK3D,EAAM,OAGX,GADAA,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EAC7B8lB,GAAc9lB,EAAKgB,MAAMoS,sBAEzB,YADA/H,IAAUa,oBAAoBlM,EAAKc,GAAIsO,GAEpC,GAAI0W,GAAc9lB,EAAKwC,OAAO+Q,oBAEjC,YADAlI,IAAU0a,iBAAiB/lB,EAAKc,GAAIsO,GAGpC5E,YAASxK,EAAMoP,EAAO/D,IAAUnF,gBAtE7B,EACG,EAqE6DlG,EAAKc,KAG5E2gG,YAA4B,CACxBryF,QACA+E,UACAonF,QACAznF,kBAOT,SAASooF,GAAaX,EAAOzzD,GAAsB,IAAlB5uB,EAAiB,4DAAX8nB,EAC1C,IAAKu6D,EAAO,OAAO,KAEnB,IAAI56C,EAAU,KACd,OAAQ46C,EAAM,UACV,IAAK,kBACD56C,EAAU,kBAAC,GAAD,CAAQrvB,KAAMiqE,EAAMjqE,OAC9B,MAEJ,IAAK,qBACDqvB,EACI,kBAAC,GAAD,CACI46C,MAAOA,EACPpnF,QAASonF,EAAMpnF,QACfhR,UAAWo4F,EAAMp4F,UACjBm+F,aAAc/F,EAAMC,cACpB90E,UAAW,kBAAM86E,GAAqBjG,EAAMp4F,UAAWo4F,EAAMpnF,QAASonF,EAAOzzD,GAAI,MAGzF,MAEJ,IAAK,iBACD6Y,EACI,kBAAC,GAAD,CACIxsC,QAASonF,EAAMpnF,QACf/Q,MAAOm4F,EAAMn4F,MACbsjB,UAAW,kBAAM86E,GAAqBjG,EAAMn4F,MAAOm4F,EAAMpnF,QAASonF,EAAOzzD,GAAI,MAGrF,MAEJ,IAAK,sBACD6Y,EAAU,kBAAC,GAAD,CAAYvsC,OAAQmnF,EAAMnnF,OAAQunF,YAAaJ,EAAM2D,eAC/D,MAEJ,IAAK,sBACDv+C,EAAU,kBAAC,GAAD,CAAYpsC,OAAQgnF,EAAMhnF,OAAQD,KAAMinF,EAAMjnF,OACxD,MAEJ,IAAK,mBACDqsC,EAAU,kBAAC,GAAD,CAASs7C,WAAYV,EAAMxnF,YAAaI,QAASonF,EAAMpnF,UACjE,MAEJ,IAAK,oBACDwsC,EAAU,kBAAC,GAAD,CAAUtrC,MAAOkmF,EAAMlmF,MAAOhS,MAAOk4F,EAAMl4F,MAAO2Z,SAAUu+E,EAAMv+E,WAC5E,MAEJ,IAAK,iBACD2jC,EAAU,kBAAC,GAAD,CAAOnsC,MAAO+mF,EAAM/mF,QAC9B,MAEJ,IAAK,mBACDmsC,EAAU,kBAAC,GAAD,CAASlsC,OAAQ8mF,EAAM9mF,OAAQwnF,WAAYV,EAAMxnF,YAAaqoF,OAAQb,EAAMmG,UACtF,MAEJ,IAAK,mBACD/gD,EAAU,kBAAC,GAAD,MACV,MAEJ,IAAK,oBACDA,EACI,kBAAC,GAAD,CACI55C,IAAKw0F,EAAMx0F,IACX82F,KAAMtC,EAAMsC,KACZ8D,YAAapG,EAAM7mF,aACnB5H,MAAOyuF,EAAMzuF,MACbC,OAAQwuF,EAAMxuF,OACdoH,QAASonF,EAAMpnF,QACf2pF,YAAavC,EAAMqG,cACnB7D,eAAgBxC,EAAMsG,kBAG9B,MAEJ,IAAK,wBACDlhD,EACI,kBAAC,GAAD,CACI55C,IAAKw0F,EAAMx0F,IACXqN,OAAQmnF,EAAMnnF,OACdkqF,YAAa/C,EAAM5mF,aACnByF,KAAMmhF,EAAMnhF,KACZ6hF,WAAYV,EAAMxnF,YAClBI,QAASonF,EAAMpnF,UAGvB,MAEJ,IAAK,kBACDwsC,EAAU,kBAAC,GAAD,CAAQ/rC,OAAQ2mF,EAAM3mF,SAChC,MAEJ,IAAK,kBACD+rC,EAAU,kBAAC,GAAD,CAAQlsC,OAAQ8mF,EAAM9mF,SAChC,MAEJ,IAAK,kBACDksC,EAAU,kBAAC,GAAD,CAAQ9rC,OAAQ0mF,EAAM1mF,SAChC,MAEJ,IAAK,gBACD8rC,EAAU,kBAAC,GAAD,CAAMrhD,MAAOi8F,EAAMj8F,QAC7B,MAEJ,IAAK,oBACDqhD,EAAU,kBAAC,GAAD,CAAUsT,MAAOsnC,EAAMtnC,MAAOgoC,WAAYV,EAAMxnF,cAC1D,MAEJ,IAAK,eACD4sC,EACI,kBAAC,GAAD,CACIn9C,SAAU+3F,EAAM/3F,SAChBwJ,KAAMuuF,EAAMvuF,KACZF,MAAOyuF,EAAMzuF,MACbC,OAAQwuF,EAAMxuF,OACdoH,QAASonF,EAAMpnF,UAGvB,MAEJ,IAAK,qBACDwsC,EAAU,kBAAC,GAAD,CAAWrsC,KAAMinF,EAAMjnF,OACjC,MAEJ,IAAK,iBACDqsC,EACI,kBAAC,GAAD,CACIxsC,QAASonF,EAAMpnF,QACf9Q,MAAOk4F,EAAMl4F,MACb0D,IAAKw0F,EAAMx0F,IACX2f,UAAW,kBAAM86E,GAAqBjG,EAAMl4F,MAAOk4F,EAAMpnF,QAASonF,EAAOzzD,GAAI,MAGrF,MAEJ,IAAK,wBACD6Y,EAAU,kBAAC,GAAD,CAAcrsC,KAAMinF,EAAMjnF,KAAMyV,SAAUwxE,EAAMxxE,WAC1D,MAEJ,IAAK,qBACD42B,EAAU,kBAAC,GAAD,CAAWpsC,OAAQgnF,EAAMhnF,OAAQD,KAAMinF,EAAMjnF,OACvD,MAEJ,IAAK,0BACDqsC,EACI,kBAAC,GAAD,CACI55C,IAAKw0F,EAAMx0F,IACXsO,MAAOkmF,EAAMlmF,MACbgI,YAAak+E,EAAMl+E,YACnBha,MAAOk4F,EAAMl4F,MACb+Q,OAAQmnF,EAAMnnF,OACdunF,YAAaJ,EAAM2D,eAG3B,MAEJ,IAAK,2BACDv+C,EAAU,kBAAC,GAAD,CAAiBlsC,OAAQ8mF,EAAM9mF,OAAQO,SAAUumF,EAAMvmF,WACjE,MAEJ,IAAK,qBACD2rC,EAAU,kBAAC,GAAD,CAAWs7C,WAAYV,EAAMxnF,YAAaI,QAASonF,EAAMpnF,UACnE,MAEJ,IAAK,qBACDwsC,EAAU,kBAAC,GAAD,CAAW1rC,UAAWsmF,EAAMtmF,YACtC,MAEJ,IAAK,oBACD0rC,EAAU,kBAAC,GAAD,CAAUzrC,SAAUqmF,EAAMrmF,WACpC,MAEJ,IAAK,iBACDyrC,EACI,kBAAC,GAAD,CACIxsC,QAASonF,EAAMpnF,QACfgB,MAAOomF,EAAMpmF,MACbmrF,WAAY/E,EAAMuG,YAClBvB,UAAWhF,EAAMwG,aAGzB,MAEJ,IAAK,qBACDphD,EACI,kBAAC,GAAD,CACIrsC,KAAMinF,EAAMjnF,KACZssF,SAAUrF,EAAMyG,UAChBnB,QAAStF,EAAMsF,QACfC,QAASvF,EAAMuF,QACf1qB,MAAOmlB,EAAMnlB,MACb2qB,OAAQxF,EAAMwF,SAGtB,MAEJ,IAAK,iBACDpgD,EAAU,kBAAC,GAAD,CAAOtrC,MAAOkmF,EAAMlmF,QAC9B,MAEJ,IAAK,iBACDsrC,EACI,kBAAC,GAAD,CACIxsC,QAASonF,EAAMpnF,QACfxQ,MAAO43F,EAAM53F,MACb29F,aAAc/F,EAAMC,cACpB+F,SAAUhG,EAAM0G,UAChBv7E,UAAW,kBAAM86E,GAAqBjG,EAAM53F,MAAO43F,EAAMpnF,QAASonF,EAAOzzD,GAAI,MAO7F,OAAI6Y,EACO,kBAAC,GAAD,CAAcznC,IAAKA,GAAMynC,GAG7B,wCAAU46C,EAAM,SAAhB,MA6FJ,SAASF,GAAYR,GACxB,IAAKA,EAAU,OAAO,EAEtB,OAAQA,EAAS,UACb,IAAK,iBAGD,OAAOQ,GAFUR,EAATvmF,MAIZ,IAAK,eAGD,OAAO+mF,GAFUR,EAATvmF,MAIZ,IAAK,uBAGD,OAAO+mF,GAFUR,EAATvmF,MAIZ,IAAK,gBAGD,OAAO+mF,GAFUR,EAATvmF,MAIZ,IAAK,eACD,OAAO,EAEX,IAAK,iBAGD,OAAO+mF,GAFUR,EAATvmF,MAIZ,IAAK,iBAGD,OAAO+mF,GAFUR,EAATvmF,MAIZ,IAAK,sBAGD,OAAO+mF,GAFUR,EAATvmF,MAIZ,IAAK,gBAGD,OAAO+mF,GAFUR,EAATvmF,MAIZ,IAAK,wBAGD,OAAO+mF,GAFUR,EAATvmF,MAIZ,IAAK,oBAGD,OAAO+mF,GAFUR,EAATvmF,MAIZ,IAAK,sBAGD,OAAO+mF,GAFUR,EAATvmF,MAIZ,IAAK,YAGD,OAFkBumF,EAAVtlF,MAEKgC,MAAM8jF,IAEvB,IAAK,oBAGD,OAAOA,GAFUR,EAATvmF,MAIZ,IAAK,cAGD,OAAO+mF,GAFUR,EAATvmF,MAMhB,OAAO,EAGJ,SAAS6sF,GAAuB/qB,GACnC,IAAKA,EAAO,OAAO,KAEnB,OAAQA,EAAM,UACV,IAAK,qCACD,MAAO,SAEX,IAAK,mCACD,MAAO,OAEX,IAAK,oCACD,MAAO,QAIf,OAAO,KAGJ,SAASgrB,GAAqBL,GACjC,IAAKA,EAAQ,OAAO,KAEpB,OAAQA,EAAO,UACX,IAAK,mCACD,MAAO,SAEX,IAAK,mCACD,MAAO,SAEX,IAAK,gCACD,MAAO,MAIf,OAAO,KAGJ,SAASmB,GAAe3G,GAC3B,IAAKA,EAAO,MAAO,GAEnB,OAAQA,EAAM,UACV,IAAK,kBACD,MAAO,GAEX,IAAK,qBAGL,IAAK,iBACD,MAAO,CAACA,EAAMpnF,SAElB,IAAK,sBAGL,IAAK,sBAGL,IAAK,oBACD,MAAO,GAEX,IAAK,mBACD,IAAMguF,EAAc5G,EAAMxnF,YAAY9I,IAAI,SAAA/B,GAAC,OAAKA,GAAL,oBAAWg5F,GAAeh5F,OAErE,MAAO,GAAGqa,OAAO6+E,MAAM,GAAID,GAE/B,IAAK,iBACD,MAAO,CAAC5G,EAAM/mF,OAElB,IAAK,mBACD,IAAM2tF,EAAc5G,EAAMxnF,YAAY9I,IAAI,SAAA/B,GAAC,OAAKA,GAAL,oBAAWg5F,GAAeh5F,OAErE,MAAO,GAAGqa,OAAO6+E,MAAM,GAAID,GAE/B,IAAK,mBACD,MAAO,GAEX,IAAK,oBACD,MAAO,CAAC5G,EAAMpnF,SAElB,IAAK,wBACD,IAAMguF,EAAc5G,EAAMxnF,YAAY9I,IAAI,SAAA/B,GAAC,OAAKA,GAAL,oBAAWg5F,GAAeh5F,OAErE,MAAO,GAAGqa,OAAO6+E,MAAM,CAAC7G,EAAMpnF,SAAUguF,GAE5C,IAAK,kBAGL,IAAK,kBAGL,IAAK,kBACD,MAAO,GAEX,IAAK,gBACD,IAAMA,EAAc5G,EAAMj8F,MAAM2L,IAAI,SAAA/B,GAAC,OAAKA,GAAL,oBAAWg5F,GAAeh5F,OAE/D,MAAO,GAAGqa,OAAO6+E,MAAM,GAAID,GAE/B,IAAK,oBACD,IAAMA,EAAc5G,EAAMxnF,YAAY9I,IAAI,SAAA/B,GAAC,OAAKA,GAAL,oBAAWg5F,GAAeh5F,OAErE,MAAO,GAAGqa,OAAO6+E,MAAM,GAAID,GAE/B,IAAK,eACD,MAAO,CAAC5G,EAAMpnF,SAElB,IAAK,qBACD,MAAO,GAEX,IAAK,iBACD,MAAO,CAAConF,EAAMpnF,SAElB,IAAK,wBAGL,IAAK,qBAGL,IAAK,0BACD,MAAO,GAEX,IAAK,2BACD,OAAO,aAAIonF,EAAMvmF,UAErB,IAAK,qBACD,IAAMmtF,EAAc5G,EAAMxnF,YAAY9I,IAAI,SAAA/B,GAAC,OAAKA,GAAL,oBAAWg5F,GAAeh5F,OAErE,MAAO,GAAGqa,OAAO6+E,MAAM,CAAC7G,EAAMpnF,SAAUguF,GAE5C,IAAK,qBAGL,IAAK,oBACD,MAAO,GAEX,IAAK,iBACD,OAAO,aAAI5G,EAAMpmF,OAErB,IAAK,qBAGL,IAAK,iBACD,MAAO,GAEX,IAAK,iBACD,MAAO,CAAComF,EAAMpnF,SAItB,MAAO,GAGJ,SAASkuF,GAAc9G,GAC1B,IAAKA,EAAO,OAAO,KAEnB,OAAQA,EAAM,UACV,IAAK,qBACD,OAAOA,EAAMp4F,UAEjB,IAAK,iBACD,OAAOo4F,EAAMl4F,MAEjB,IAAK,iBACD,OAAOk4F,EAAM53F,MAIrB,OAAO,KAiCJ,SAAS2+F,GAAkB/G,GAC9B,IAAKA,EAAO,OAAO,EAEnB,OAAQA,EAAM,UACV,IAAK,qBAGL,IAAK,iBAGL,IAAK,iBACD,OAAO,EAIf,OAAO,E,WkDnuBLgH,G,iLACQ,IAAD,EACwBl7F,KAAKwY,MAA1B2iF,EADH,EACGA,aAAc16D,EADjB,EACiBA,GACtB,IAAKA,EAAI,OAAO,KAFX,IAIG/zB,EAAwB+zB,EAAxB/zB,YAAa0uF,EAAW36D,EAAX26D,OACrB,GAAK1uF,EAAL,CAEA,IAAMzD,EAASyD,EAAY9I,IAAI,SAAC/B,EAAG0H,GAAJ,OAAcsrF,GAAahzF,EAAG4+B,EAAIl3B,KAEjE,OACI,6BAASysB,IAAKmlE,EAAcE,IAAKD,EAAS,MAAQ,OAC7CnyF,Q,GAZKiR,IAAM89C,eA4Bb9Y,GALCC,YACZmH,cACA8sC,GAGWl0C,CAAQg8C,IClCR3wE,eACX,0BAAMnO,EAAE,4bACR,QCFWmO,eACX,0BAAMnO,EAAE,gmCACR,SCAEk/E,I,kNACF7iF,YAAc,SAAAhX,GACVA,EAAMiX,mB,wEAGA,IACEzL,EAASjN,KAAKwY,MAAdvL,KAER,OACI,yBAAK4X,UAAU,gBAAgBzL,QAASpZ,KAAKyY,aACzC,yBAAKoM,UAAU,sBAAsB5X,Q,GAV1BiN,IAAMC,YAoBjCmhF,GAAalhF,aAAe,GAEbkhF,UC6PAC,G,YAxQX,WAAY/iF,GAAQ,IAAD,8BACf,4CAAMA,KA+DV6qE,wBAA0B,SAAA9qF,GAAW,IACzBwG,EAAWxG,EAAXwG,OADwB,EAER,EAAKyZ,MAArBzQ,EAFwB,EAExBA,MAAO1F,EAFiB,EAEjBA,KACP1J,EAAS,EAAKugB,MAAdvgB,KAER,GAAIA,GAAQA,EAAKc,KAAOsF,EAAQ,CAAC,IAAD,EACY6J,YAAcb,EAAO1F,GADjC,mBACrBoD,EADqB,KACdC,EADc,KACN/M,EADM,KACAgT,EADA,KAG5B,EAAKmN,SAAS,CACVrT,QACAC,SACA/M,OACA+8B,IAAK7pB,YAAOlT,GACZgT,eA7EO,EAkFnB6vF,iCAAmC,SAAAjjG,GAAW,IAClCwG,EAAWxG,EAAXwG,OACWpG,EAAS,EAAKugB,MAAzBpc,UAEJnE,GAAQA,EAAKc,KAAOsF,GACpB,EAAKg1B,eApFT,EAAK4L,SAAWzlB,IAAM0a,YAEtB,EAAK1b,MAAQ,GALE,E,iFAsCflV,IAAU/K,GAAG,wBAAyB+G,KAAKqjF,yBAC3Cr/E,IAAU/K,GAAG,wBAAyB+G,KAAKqjF,yBAC3Cr/E,IAAU/K,GAAG,4BAA6B+G,KAAKqjF,yBAC/Cr/E,IAAU/K,GAAG,iCAAkC+G,KAAKw7F,kCACpDx3F,IAAU/K,GAAG,qCAAsC+G,KAAKw7F,oC,6CAIxDx3F,IAAU7K,IAAI,wBAAyB6G,KAAKqjF,yBAC5Cr/E,IAAU7K,IAAI,wBAAyB6G,KAAKqjF,yBAC5Cr/E,IAAU7K,IAAI,4BAA6B6G,KAAKqjF,yBAChDr/E,IAAU7K,IAAI,iCAAkC6G,KAAKw7F,kCACrDx3F,IAAU7K,IAAI,qCAAsC6G,KAAKw7F,oC,yCAG1CpmE,EAAWC,EAAWC,GAAW,IACxCI,EAAQ11B,KAAKkZ,MAAbwc,IAER,GAAIL,EAAUK,MAAQA,EAAK,CACvB,IAAMlJ,EAASxsB,KAAK2/B,SAAS3iB,QAC7B,IAAKwP,EAAQ,OAEbA,EAAOggB,U,+BA+BL,IAAD,SAC2BxsC,KAAKwY,MAA7BzQ,EADH,EACGA,MAAO+E,EADV,EACUA,QAASpN,EADnB,EACmBA,IACxB,IAAKqI,EAAO,OAAO,KAFd,MAcD/H,KAAKkZ,MATLzT,EALC,EAKDA,MACAC,EANC,EAMDA,OACA/M,EAPC,EAODA,KACA+8B,EARC,EAQDA,IACA/pB,EATC,EASDA,SACA6rE,EAVC,EAUDA,eACAC,EAXC,EAWDA,gBACA36E,EAZC,EAYDA,UACA2+F,EAbC,EAaDA,UAEJ,IAAK9iG,EAAM,OAAO,KAElB,IAAM+iG,EAAgB5+F,EAAYkH,IAAUhF,QAAQlC,EAAUrD,KAAOqD,EAAUoC,KAAO,KAChFswB,EAAexrB,IAAUvE,WAAWi8F,GACpC/lE,EAAYrP,aAAmB,CAAE7gB,MAAO+xE,EAAgB9xE,OAAQ+xE,IAElEkkB,EAAal2F,EACbm2F,EAAcl2F,EAClB,GAAIif,KAAK8B,IAAIk1E,EAAYC,GAAe,IAAK,CACzC,IAAM/1F,EAAQ,IAAM8e,KAAK8B,IAAIk1E,EAAYC,GAEzCA,EAAcA,GADdD,EAAaA,EAAaC,EAAc,IAAMj3E,KAAKC,MAAM+2E,EAAa91F,IAC7B,IAAM8e,KAAKC,MAAMg3E,EAAc/1F,GAG5E,IAAIhK,EAAU,KACRkB,EAAS24B,EAAM,4BAAQA,IAAKA,EAAKltB,KAAMmD,IAAe,KAC5D,OAAQ5D,EAAM,UACV,IAAK,QACDlM,EACI,yBAAKgpB,UAAU,gCACX,2BACImR,IAAKh2B,KAAK2/B,SACV9a,UAAU,oCACVzL,QAASpZ,KAAK67F,mBACdjX,UAAQ,EACRrkD,UAAQ,EACR96B,MAAOk2F,EACPj2F,OAAQk2F,EACR/W,OAAQ,WACJ,EAAK/rE,SAAS,CAAE2iF,WAAW,IAC3BziG,KAAgB8G,aAAa,CACzB,QAAS,iCAGjB6sC,UAAW,WACP,IAAMngB,EAAS,EAAKmT,SAAS3iB,QACzBwP,IACAA,EAAOrB,OAAS+Y,KAAY/Y,SAGpC25D,QAAS,WACL9rF,KAAgB8G,aAAa,CACzB,QAAS,kCAGjBklF,QAAS,WACLhsF,KAAgB8G,aAAa,CACzB,QAAS,kCAGjBg8F,eAAgB,WACZ,IAAMtvE,EAAS,EAAKmT,SAAS3iB,QACzBwP,GACAxzB,KAAgB8G,aAAa,CACzB,QAAS,0BACTqrB,OAAQqB,EAAOrB,WAI1BpuB,IAEH0+F,KACI/lE,GAAOlG,EACL,yBACI3K,UAAWC,IAAW,uCAAwC,CAC1D,gBAAiB6Q,IAErBD,IAAKlG,EACLqG,IAAI,GACJpwB,MAAOk2F,EACPj2F,OAAQk2F,IAGZ,yBACI/2E,UAAU,uCACV9hB,MAAO,CACH0C,MAAOk2F,EACPj2F,OAAQk2F,OAMhC,MAEJ,IAAK,YACD//F,EACI,yBAAKgpB,UAAU,gCACX,2BACImR,IAAKh2B,KAAK2/B,SACV9a,UAAU,oCACVzL,QAASpZ,KAAK67F,mBACd5lE,MAAI,EACJsK,UAAQ,EACR96B,MAAOk2F,EACPj2F,OAAQk2F,EACR/W,OAAQ,WACJ,EAAK/rE,SAAS,CAAE2iF,WAAW,MAE9B1+F,IAEH0+F,KACI/lE,GAAOlG,EACL,yBACI3K,UAAWC,IAAW,uCAAwC,CAC1D,gBAAiB6Q,IAErBD,IAAKlG,EACLqG,IAAI,GACJpwB,MAAOk2F,EACPj2F,OAAQk2F,IAGZ,yBACI/2E,UAAU,uCACV9hB,MAAO,CACH0C,MAAOk2F,EACPj2F,OAAQk2F,OAMhC,MAEJ,QACI//F,EACI,yBAAKgpB,UAAU,6BAA6B6Q,IAAKA,EAAKG,IAAI,GAAGzc,QAASpZ,KAAK67F,qBAKvF,OACI,yBAAKh3E,UAAU,wBACVhpB,EACD,kBAACyyB,GAAA,EAAD,CAAc31B,KAAMA,EAAMg4B,OAAQ,IACjC7jB,KAAaknF,GAAYlnF,EAAQG,QAAU+mF,GAAYlnF,EAAQI,SAAWxN,IACvE,kBAAC,GAAD,CACIuN,KACI,oCACI,kBAAC,GAAD,CAASA,KAAMH,EAAQG,KAAMC,OAAQJ,EAAQI,SAC7C,kBAAC4O,GAAA,EAAD,CAAUpc,IAAKA,W,gDA/OX8Y,EAAOU,GAAQ,IACnCnR,EAA8ByQ,EAA9BzQ,MAAO1F,EAAuBmW,EAAvBnW,KAAuBmW,EAAjB1L,QAAiB0L,EAAR9Y,IAE9B,GAAIqI,IAAUmR,EAAM6iF,UAAW,CAAC,IAAD,EACWnzF,YAAcb,EAAO1F,GADhC,mBACtBoD,EADsB,KACfC,EADe,KACP/M,EADO,KACDgT,EADC,KAE3BhT,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EAFN,MAIwBgQ,YAAmBZ,GAJ3C,mBAItByvE,EAJsB,KAINC,EAJM,KAIW36E,EAJX,KAO3B,OAFAA,EAAYkH,IAAUlK,IAAIgD,EAAUrD,KAAOqD,EAEpC,CACHi/F,UAAWh0F,EAEXi0F,MAAO,EACPP,WAAW,EACXh2F,QACAC,SACA/M,OACA+8B,IAAK7pB,YAAOlT,GACZgT,WACA6rE,iBACAC,kBACA36E,aAIR,OAAO,S,GAnC6Bod,IAAMC,WCwBnC8hF,I,kNAhCXxjF,YAAc,SAAAhX,GACVA,EAAMiX,kBADa,MAGW,EAAKF,MAA3Bm5B,EAHW,EAGXA,SAAUv4B,EAHC,EAGDA,QAEdu4B,GAEJv4B,EAAQ3X,I,wEAGF,IAAD,EACkDzB,KAAKwY,MAApDm5B,EADH,EACGA,SAAUuqD,EADb,EACaA,KAAM/iF,EADnB,EACmBA,SAAU0L,EAD7B,EAC6BA,UAAW9hB,EADxC,EACwCA,MAEvC2jC,EAAK5hB,IACP6sB,EAAW,+BAAiC,sBAC5C,CAAEuqD,KAAMA,GACRr3E,GAGJ,OACI,yBAAKA,UAAW6hB,EAAI3jC,MAAOA,EAAOqW,QAASpZ,KAAKyY,aAC3CU,O,GAtBee,IAAMC,YCwBvBgiF,I,wLAxBD,IAAD,EAC8Bn8F,KAAKwY,MAAhCxK,EADH,EACGA,MAAOH,EADV,EACUA,SAAU9K,EADpB,EACoBA,MAEzB,OACI,yBAAK8hB,UAAU,2BAA2B9hB,MAAOA,GAC7C,yBAAK8hB,UAAU,oCACX,8BAAO7W,GACNyJ,QAAQ5J,IACL,qCAEKA,S,GAXOqM,IAAMC,YC6B3BiiF,I,kNAlCX3jF,YAAc,SAAAhX,GACVA,EAAMiX,kBADa,MAGW,EAAKF,MAA3BY,EAHW,EAGXA,QAHW,EAGFu4B,UAIjBv4B,EAAQ3X,I,wEAGF,IAAD,EAC0CzB,KAAKwY,MAA5Cs5B,EADH,EACGA,QAAS34B,EADZ,EACYA,SAAUw4B,EADtB,EACsBA,SAAU3jC,EADhC,EACgCA,MAErC,OACI,yBACI6W,UAAWC,IAAW,6BAA8B,CAChD,qCAAsCgtB,EACtC,sCAAuCH,IAE3C3jC,MAAOA,EACPoL,QAASpZ,KAAKyY,aACbU,O,GAtBqBe,IAAMC,Y,UCEtCkiF,G,YACF,WAAY7jF,GAAQ,IAAD,uBACf,4CAAMA,KA4CV6qE,wBAA0B,SAAA9qF,GAAW,IACzBwG,EAAW,EAAKma,MAAhBna,OAEJA,IAAWxG,EAAOwG,QAClB,EAAK+Z,SAAS,CACV64B,SAAU0qD,EAA0BC,aAAav9F,MAlD1C,EA2DnB0Z,YAAc,SAAAhX,GACVA,EAAMiX,kBADa,IAGXU,EAAY,EAAKZ,MAAjBY,QACa,EAAKF,MAAlBy4B,UAGRv4B,EAAQ3X,IAlEO,IAGP1C,EAAWyZ,EAAXzZ,OAHO,OAKf,EAAKma,MAAQ,CACTqjF,gBAAiBx9F,EACjBA,OAAQA,EACR4yC,SAAU0qD,EAA0BC,aAAav9F,IARtC,E,iFA4BfiF,IAAU/K,GAAG,4BAA6B+G,KAAKqjF,yBAC/Cr/E,IAAU/K,GAAG,uBAAwB+G,KAAKqjF,yBAC1Cr/E,IAAU/K,GAAG,2BAA4B+G,KAAKqjF,yBAC9Cr/E,IAAU/K,GAAG,wBAAyB+G,KAAKqjF,yBAC3Cr/E,IAAU/K,GAAG,uBAAwB+G,KAAKqjF,yBAC1Cr/E,IAAU/K,GAAG,wBAAyB+G,KAAKqjF,2B,6CAI3Cr/E,IAAU7K,IAAI,4BAA6B6G,KAAKqjF,yBAChDr/E,IAAU7K,IAAI,uBAAwB6G,KAAKqjF,yBAC3Cr/E,IAAU7K,IAAI,2BAA4B6G,KAAKqjF,yBAC/Cr/E,IAAU7K,IAAI,wBAAyB6G,KAAKqjF,yBAC5Cr/E,IAAU7K,IAAI,uBAAwB6G,KAAKqjF,yBAC3Cr/E,IAAU7K,IAAI,wBAAyB6G,KAAKqjF,2B,+BA2BtC,IAAD,EACuBrjF,KAAKwY,MAAzBxK,EADH,EACGA,MAAOmL,EADV,EACUA,SACPw4B,EAAa3xC,KAAKkZ,MAAlBy4B,SAER,OACI,kBAAC,GAAD,CAAyBA,SAAUA,EAAU3jC,MAAOA,EAAOoL,QAASpZ,KAAKyY,aACpEU,GAAY,kBAAC,KAAD,U,gDA/DOX,EAAOU,GAAQ,IACnCna,EAAWyZ,EAAXzZ,OAGR,OAAIA,IAFwBma,EAApBqjF,gBAGG,CACHA,gBAAiBx9F,EACjBA,OAAQA,EACR4yC,SAAU0qD,EAA0BC,aAAav9F,IAIlD,S,GAzByBmb,IAAMC,WAAxCkiF,GAwDKC,aAAe,SAAAv9F,GAClB,OAAQ0Y,QAAQzT,IAAUhF,QAAQD,KA+B3Bs9F,UC9DTG,I,mBACF,WAAYhkF,GAAQ,IAAD,8BACf,4CAAMA,KAsBVsmC,UAAY,SAAAr9C,GACc,KAAlBA,EAAM67C,QACN,EAAKtkC,cACoB,KAAlBvX,EAAM67C,QACb,EAAKm/C,iBACoB,KAAlBh7F,EAAM67C,SACb,EAAKmmC,cA7BM,EAwDnBgZ,eAAiB,SAAAh7F,GACTA,GACAA,EAAMiX,kBAFY,MAKI,EAAKQ,MAAvB3P,EALc,EAKdA,MAAON,EALO,EAKPA,OACT+iB,EAAYziB,EAAQ,EAE1B,GAAK,EAAKmzF,iBAAiBnzF,EAAON,GAElC,OAAO,EAAK0zF,UAAU3wE,IAlEP,EA4EnBy3D,WAAa,SAAAhiF,GACLA,GACAA,EAAMiX,kBAFQ,MAKQ,EAAKQ,MAAvB3P,EALU,EAKVA,MAAON,EALG,EAKHA,OACT+iB,EAAYziB,EAAQ,EAE1B,GAAK,EAAKqzF,aAAarzF,EAAON,GAE9B,OAAO,EAAK0zF,UAAU3wE,IAtFP,EAyFnB2wE,UAAY,SAAApzF,GAAU,IACVN,EAAW,EAAKiQ,MAAhBjQ,OAER,QAAIM,EAAQ,OACRA,GAASN,EAAOhL,UAEpB,EAAK6a,SAAS,CACVvP,QACAmzF,iBAAkB,EAAKA,iBAAiBnzF,EAAON,GAC/C2zF,aAAc,EAAKA,aAAarzF,EAAON,KAG3CW,YAA4BL,EAAON,IAC5B,KAtGQ,EAyGnB+P,YAAc,WACVohF,YAA4B,MADZ,MAGU,EAAKlhF,MAAvB3P,EAHQ,EAGRA,MAAON,EAHC,EAGDA,QACA,IAAXM,GACAD,YAAkCC,EAAON,IA9G9B,EAkHnB49C,cAAgB,WAAO,IACX9+C,EAAU,EAAKyQ,MAAfzQ,MAEFw0C,EAAsB5zB,aAAqB5gB,EAAO,MACnDw0C,GAELZ,YAAQY,IAxHO,EA2HnBsgD,WAAa,WAAO,IACR90F,EAAU,EAAKyQ,MAAfzQ,MAERD,YAAUC,EAAO,OA3HjB,EAAKmR,MAAQ,CACT3P,OAAQ,EACRmzF,kBAAkB,EAClBE,cAAc,EACd3zF,OAAQ,IAGZ,EAAK8xD,gBAAkB,IAAIrD,GAAgB,EAAK5Y,WAVjC,E,iFAcf9+C,KAAK8zB,cAELmnC,GAAgBC,IAAIl7D,KAAK+6D,mB,6CAIzBE,GAAgBiD,OAAOl+D,KAAK+6D,mB,oCAajB,IAAD,EACY/6D,KAAKwY,MAAnBioB,EADE,EACFA,GAAI14B,EADF,EACEA,MAENkB,E3D+qBP,SAA6Bw3B,GAChC,IAAKA,EAAI,MAAO,GADoB,IAG5B/zB,EAAgB+zB,EAAhB/zB,YAEFzD,EAAS,GASf,OARAyD,EAAYzS,QAAQ,SAAA4H,GAChBoH,EAAO/I,KAAK2B,GACQg5F,GAAeh5F,GACvB5H,QAAQ,SAAA8D,GAChBkL,EAAO/I,KAAKnC,OAIbkL,EAAOnH,OAAOm5F,I2D7rBF6B,CAAoBr8D,GAC7Bl3B,EAAQN,EAAOoe,UAAU,SAAAxlB,GAAC,OAAIm5F,GAAcn5F,KAAOkG,IAEzD/H,KAAK8Y,SAAS,CACV7P,SACAM,QACAmzF,iBAAkB18F,KAAK08F,iBAAiBnzF,EAAON,GAC/C2zF,aAAc58F,KAAK48F,aAAarzF,EAAON,KAG3CW,YAA4BL,EAAON,K,uCAGtBM,EAAON,GACpB,OAAe,IAAXM,GAEcA,EAAQ,EACPN,EAAOhL,S,mCAgBjBsL,EAAON,GAChB,OAAe,IAAXM,GAEcA,EAAQ,GACN,I,+BAwDd,IAAD,EACevJ,KAAKwY,MAAjBnW,EADH,EACGA,KAAM4L,EADT,EACSA,EADT,EAEqDjO,KAAKkZ,MAAvD3P,EAFH,EAEGA,MAAON,EAFV,EAEUA,OAAQ2zF,EAFlB,EAEkBA,aAAcF,EAFhC,EAEgCA,iBACrC,IAAKzzF,EAAQ,OAAO,KACpB,IAAe,IAAXM,EAAc,OAAO,KAEzB,IAAM2qF,EAAQjrF,EAAOM,GACfxB,EAAQizF,GAAc9G,GACtBpnF,E3D0hBP,SAAyBonF,GAC5B,IAAKA,EAAO,OAAO,KAEnB,OAAQA,EAAM,UACV,IAAK,qBAGL,IAAK,iBAGL,IAAK,iBACD,OAAOA,EAAMpnF,QAIrB,OAAO,K2DziBaiwF,CAAgB7I,GAC1Bx0F,E3D2iBP,SAAqBw0F,GACxB,IAAKA,EAAO,OAAO,KAEnB,OAAQA,EAAM,UACV,IAAK,iBACD,OAAOA,EAAMx0F,IAIrB,OAAO,K2DpjBSs9F,CAAY9I,GATnB,EAWyBtrF,YAAcb,EAAO1F,GAX9C,mBAWiB1J,GAXjB,gBAaDqV,EAAQ,GACW,UAAnBjG,EAAM,WACNiG,EAAQC,EAAE,gBAES,UAAnBlG,EAAM,SACNiG,EAAQC,EAAE,eACgB,cAAnBlG,EAAM,WACbiG,EAAQC,EAAE,cAEd,IAAMgvF,EAAWh0F,EAAOhL,OAExB,OACI,yBAAK4mB,UAAWC,IAAW,4BAA6B,yBACpD,yBAAKD,UAAU,uBACX,kBAAC,GAAD,CACI7W,MAAOA,EACPH,SAAUovF,GAAY1zF,GAAS,EAArB,UAA4BA,EAAQ,EAApC,eAA4C0zF,GAAa,KACnEl6F,MAAO,CAAEkxC,WAAY,OAEzB,kBAAC,GAAD,CAA2BjmC,MAAOC,EAAE,QAASlP,OAAQpG,EAAKc,GAAI2f,QAASpZ,KAAK68F,aAC5E,kBAAC,GAAD,CAAyB7uF,MAAOC,EAAE,WAAYmL,QAASpZ,KAAK6mD,eACxD,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAyB74C,MAAOC,EAAE,SAAUmL,QAASpZ,KAAKgZ,aACtD,kBAACw6B,EAAA,EAAD,QAGR,yBAAK3uB,UAAU,wBACX,yBAAKA,UAAU,4BACX,kBAAC,GAAD,CAAmB8sB,UAAWirD,EAAcV,MAAI,EAAC9iF,QAASpZ,KAAKyjF,YAC3D,kBAAC,GAAD,QAGR,yBAAK5+D,UAAU,+BACX,kBAAC,GAAD,CAA+B9c,MAAOA,EAAO1F,KAAMA,EAAMyK,QAASA,EAASpN,IAAKA,KAEpF,yBAAKmlB,UAAU,6BACX,kBAAC,GAAD,CAAmB8sB,UAAW+qD,EAAkBR,MAAI,EAAC9iF,QAASpZ,KAAKy8F,gBAC/D,kBAAC,GAAD,CAAoB15F,MAAO,CAAE29B,UAAW,4B,GArL/BxmB,IAAMC,YAyM5B+kC,GALCC,YACZ9kC,cACA+4E,GAGWl0C,CAAQs9C,I,UC/MjBU,I,mBACF,WAAY1kF,GAAQ,IAAD,8BACf,4CAAMA,KAyEVsnB,uCAAyC,SAAAvnC,GAAW,IACxCsD,EAAYtD,EAAZsD,QACR,GAAKA,EAAL,CAF+C,IAOvCkM,EAAqClM,EAArCkM,MAAO+E,EAA8BjR,EAA9BiR,QAASpN,EAAqB7D,EAArB6D,IAAK+M,EAAgB5Q,EAAhB4Q,YAEzB,EAAK+L,MAAM/L,cAAgBA,GAE/B,EAAKqM,SAAS,CAAE/Q,QAAO+E,UAASpN,aAR5B,EAAKoZ,SAAS,CAAE/Q,MAAO,KAAM+E,QAAS,KAAMpN,IAAK,QA7EtC,EAwFnBy9F,6BAxFmB,sCAwFY,WAAM5kG,GAAN,qBAAAC,EAAA,wDAC3ByC,QAAQoF,IAAI,kCAAmC9H,GACvCmH,EAAQnH,EAARmH,IACFokC,EAAStR,KAAiBC,aACxBhmB,EAAgB,EAAK+L,MAArB/L,YAEJq3B,IAAWr3B,EANY,qDAQvBA,IAAe/M,EAAI0qB,WAAW3d,EAAY/M,KARnB,oBASjB09F,EAAO,IAAIz9F,IAAID,GAAK09F,KACtB19F,EAAI+iB,QAAQ,OAAS/iB,EAAIzB,OAAS,EAVf,wBAWnB,EAAKumD,UAAU,UAXI,+BAcZ44C,IAAQ,EAAKC,aAAaD,EAAM,UAdpB,mDAmB3BlU,GAAgBxpF,GAnBW,0CAxFZ,wDAgMnBo/C,UAAY,SAAAr9C,GACR,GAAsB,KAAlBA,EAAM67C,QAAgB,CAGtB,GAFkB,EAAKpkC,MAAfnR,MAIJ,YADAqyF,YAA4B,MAIhC,EAAKphF,gBAzMM,EAiNnBskF,WAAa,WAAO,IAAD,EACgB,EAAKpkF,MAA5B+qE,EADO,EACPA,QADO,EACEsZ,UAEb,EAAK/4C,UAAU,UAIfy/B,EACAjrF,KAAgB8G,aAAa,CACzB,QAAS,gCAKjB,EAAKkZ,eA/NU,EAkOnBoxC,aAAe,WACX,IAAM9Q,EAAU,EAAKkkD,iBAAiBxgF,QACtC,EAAKlE,SAAS,CACVykF,UAAWjkD,EAAQkL,UAAY,KAGnC,EAAKkrC,qBArOL,EAAK30B,gBAAkB,IAAIrD,GAAgB,EAAK5Y,WAChD,EAAK2+C,WAAavjF,IAAM0a,YACxB,EAAK4oE,iBAAmBtjF,IAAM0a,YAE9B,EAAK1b,MAAQ,GAEb,EAAKw2E,kBAAoB7lB,aAAS,EAAK6lB,kBAAmB,KAT3C,E,mFA2BGrgE,EAAWC,EAAW4F,GAAc,IAC9CzoB,EAAgBzM,KAAKwY,MAArB/L,YAD6C,EAEDzM,KAAKkZ,MAAjDqkF,EAF6C,EAE7CA,UAAWtZ,EAFkC,EAElCA,QAASl8E,EAFyB,EAEzBA,MAAO+E,EAFkB,EAElBA,QAASpN,EAFS,EAETA,IAE5C,OAAI+M,IAAgB4iB,EAAU5iB,cAI1B8wF,IAAcjuE,EAAUiuE,YAIxBtZ,IAAY30D,EAAU20D,UAItBl8E,IAAUunB,EAAUvnB,QAIpB+E,IAAYwiB,EAAUxiB,SAItBpN,IAAQ4vB,EAAU5vB,U,0CAQtBM,KAAK09F,SAAU,EACf19F,KAAKoqD,eAEL6Q,GAAgBC,IAAIl7D,KAAK+6D,iBACzBvoC,KAAiBv5B,GAAG,6BAA8B+G,KAAKm9F,8BACvD3qE,KAAiBv5B,GAAG,uCAAwC+G,KAAK8/B,0C,6CAIjE9/B,KAAK09F,SAAU,EACfziC,GAAgBiD,OAAOl+D,KAAK+6D,iBAC5BvoC,KAAiBr5B,IAAI,6BAA8B6G,KAAKm9F,8BACxD3qE,KAAiBr5B,IAAI,uCAAwC6G,KAAK8/B,0C,mCAuCzDs9D,EAAM5nC,GACf,IAAK4nC,EAAM,OAAO,EAElB,IAAMO,EAAgB1hG,SAASu5F,eAAe4H,EAAK3hF,OAAO,IAC1D,GAAIkiF,EAAe,CACf,IAAMC,EAAU,GACZC,GAAW,EACXC,EAAiBH,EACrB,IACIG,EAAiBA,EAAeltD,YAEI,YAA5BktD,EAAet7E,SACfo7E,EAAQ19F,KAAK49F,GACsB,YAA5BA,EAAet7E,WACtBq7E,GAAW,GAGfA,GAAW,SAETA,GASV,OAPAD,EAAQ3jG,QAAQ,SAAA4H,GAAC,OAAKA,EAAEjB,MAAO,IAE/B+8F,EAAcI,eAAe,CACzB7J,MAAO,SACP1+B,cAGG,EAGX,OAAO,I,gCAGDA,GACN,IAAMlc,EAAUt5C,KAAKw9F,iBAAiBxgF,QAEtC,OAAQw4C,GACJ,IAAK,SACDhR,GAAUlL,GACV,MAEJ,QACIA,EAAQmc,SAAS,CACbtkB,IAAK,EACLqkB,gB,yCAMGpgC,EAAWC,EAAWC,GAAW,IAAD,EAClBt1B,KAAKwY,MAA1B/L,EADuC,EACvCA,YADuC,EAC1B/M,IACrBzE,QAAQoF,IAAI,0BAA2BoM,EAAY/M,IAAK+M,EAAY/M,MAAQ01B,EAAU3oB,YAAY/M,KAElG,IAAM09F,EAAO,IAAIz9F,IAAI8M,EAAY/M,KAAK09F,KAClChoE,EAAU3oB,cAAgBA,IACtB2oB,EAAU3oB,YAAY/M,MAAQ+M,EAAY/M,IACtC+M,EAAY/M,IAAI+iB,QAAQ,OAAShW,EAAY/M,IAAIzB,OAAS,GAC1DhD,QAAQoF,IAAI,0CACZL,KAAKwkD,UAAU,SACR44C,GACPniG,QAAQoF,IAAI,uCAAwC+8F,GACpDp9F,KAAKq9F,aAAaD,EAAM,UAExBniG,QAAQoF,IAAI,0CACZL,KAAKwkD,UAAU,SAGf44C,GACAniG,QAAQoF,IAAI,uCAAwC+8F,GACpDp9F,KAAKq9F,aAAaD,EAAM,UAExBniG,QAAQoF,IAAI,4CACZL,KAAKwkD,UAAU,WAIvBxkD,KAAKoqD,kB,oCAkBTg/B,YAAsB,Q,0CA8BtB,GAAKppF,KAAK09F,QAAV,CADgB,IAGRjxF,EAAgBzM,KAAKwY,MAArB/L,YACR,GAAKA,EAAL,CAOA,IAXgB,IAMRC,EAAgBD,EAAhBC,YAEFzD,EAAS,IAAIjR,IACbC,EAAQ03F,aAAY3vF,KAAKw9F,iBAAkBx9F,KAAKy9F,YAE7C1/F,EAAI,EAAGA,EAAI9F,EAAMgG,OAAQF,IAAK,CACnC,IAAMm2F,EAAQxnF,EAAYzU,EAAM8F,IAChCkL,EAAOvQ,IAAIw7F,EAAOA,GAEE2G,GAAe3G,GACvBj6F,QAAQ,SAAA4H,GAAC,OAAIoH,EAAOvQ,IAAImJ,EAAGA,KAG3C7I,KAAgB8G,aAAa,CACzB,QAAS,2BACTmJ,e,+BAIE,IAAD,EAC4BjJ,KAAKwY,MAArB/L,GADZ,EACGkN,QADH,EACYlN,aADZ,EAE+CzM,KAAKkZ,MAAxCqkF,GAFZ,EAEGtZ,QAFH,EAEYsZ,WAAWx1F,EAFvB,EAEuBA,MAAO+E,EAF9B,EAE8BA,QAASpN,EAFvC,EAEuCA,IAC5C,OAAK+M,EAGD,kBAAC,GAAUuxF,SAAX,CAAoBptF,MAAOnE,GACvB,yBAAKupB,IAAKh2B,KAAKw9F,iBAAkB34E,UAAU,iBAAiBumC,SAAUprD,KAAKoqD,cACvE,yBAAKvlC,UAAU,6BAA6BzL,QAASpZ,KAAKs9F,YACtD,kBAAC,GAAD,CACIz4E,UAAU,6BACV9hB,MAAO,CAAEk7F,WAAY,cACrB7kF,QAASpZ,KAAKs9F,YACd,kBAAC,GAAD,CACIv6F,MAAO,CACHm7F,WAAY,2BACZx9D,UAAW68D,EAAY,gBAAkB,oBAKzD,yBAAK14E,UAAU,iCACX,6BACI,kBAAC,GAAD,CAASmR,IAAKh2B,KAAKy9F,eAG3B,yBAAK54E,UAAU,+BACX,kBAAC,GAAD,CAAmBA,UAAU,8BAA8BzL,QAASpZ,KAAKgZ,aACrE,kBAACw6B,EAAA,EAAD,SAIXzrC,GAAS,kBAAC,GAAD,CAAwBA,MAAOA,EAAO1F,KAAMqL,IAAeZ,QAASA,EAASpN,IAAKA,KA7B3E,Q,gDA3PG8Y,EAAOU,GACnC,OAAIV,EAAM/L,cAAgByM,EAAMkmB,gBACrB,CACHA,gBAAiB5mB,EAAM/L,YACvBw3E,QAASzxD,KAAiByxD,UAC1BsZ,WAAW,EACXx1F,MAAO,KACP+E,QAAS,KACTpN,IAAK,MAIN,S,GAzBawa,IAAMC,YA+SnBE,iBAAkB6iF,ICjRlBiB,I,mBAxCX,WAAY3lF,GAAQ,qEACVA,I,sEAGA,IAAD,EACyBxY,KAAKwY,MAA3B7b,EADH,EACGA,OAAQE,EADX,EACWA,UAEVjB,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,KAJhB,IAMGmX,EAASnX,EAATmX,KAEF7Q,EAAS0a,aAAgBhhB,GACzBwiG,EAAW/hF,aAAYtJ,GAEvBsrF,EAAcn8F,EAAS,kBAACqjB,GAAA,EAAD,CAAUrjB,OAAQA,IAAa,kBAAC,EAAD,CAAUvF,OAAQA,IAE9E,OACI,yBAAKkoB,UAAU,cACX,yBAAKA,UAAU,sBACVw5E,EACD,yBAAKx5E,UAAU,sBACX,yBAAKA,UAAU,kBACX,kBAACwa,GAAA,EAAD,CAAe1iC,OAAQA,EAAQuF,OAAQA,KAE3C,yBAAK2iB,UAAU,uBACX,8BAAOu5E,W,GA3BXlkF,IAAMC,YCQxBmkF,I,mBACF,WAAY9lF,GAAQ,IAAD,8BACf,4CAAMA,KAgFVm6E,2BAA6B,SAAAp6F,GAAW,IAAD,EACL,EAAKigB,MAA3B7b,EAD2B,EAC3BA,OAAQE,EADmB,EACnBA,UAEZF,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,WACjD,EAAK0hG,uBArFM,EAyFnBA,oBAzFmB,qBAyFG,oCAAA/lG,EAAA,0DACY,EAAKggB,MAA3B7b,EADU,EACVA,OAAQE,EADE,EACFA,UAEX8gB,aAAgBhhB,EAAQE,GAHX,wDAOVlE,EAAS,EAAKugB,MAAdvgB,KAPU,SAQUwV,YAAiBxV,GAR3B,OAQZy7B,EARY,OAUlB,EAAKtb,SAAS,CAAEsb,kBAVE,yCAzFH,EAsGnBivD,wBAA0B,SAAA9qF,GAAW,IAAD,EACI,EAAKigB,MAAjC7b,EADwB,EACxBA,OAAQE,EADgB,EAChBA,UAAWwF,EADK,EACLA,KAE3B,GAAI1F,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,UAAW,CAAC,IAAD,EACpBiM,YAAanM,EAAQE,EAAWwF,GADZ,mBACrDoD,EADqD,KAC9CC,EAD8C,KACtC/M,EADsC,KAChCgT,EADgC,KAG5D,EAAKmN,SAAS,CACVrT,QACAC,SACA/M,OACA+8B,IAAK7pB,YAAOlT,GACZgT,eAjHO,EAsHnB6vF,iCAAmC,SAAAjjG,GAAW,IAAD,EACX,EAAKigB,MAA3B7b,EADiC,EACjCA,OAAQE,EADyB,EACzBA,UAEhB,GAAIF,IAAWpE,EAAOoE,QAAUE,IAActE,EAAOsE,UAAW,CAAC,IAAD,EAC9BgM,YAAoBlM,EAAQE,GADE,mBACrD4I,EADqD,KAC9CC,EAD8C,KACtC/M,EADsC,KAE5D,EAAKmgB,SAAS,CACV0+D,eAAgB/xE,EAChBgyE,gBAAiB/xE,EACjB5I,UAAWnE,MA9HJ,EAmInBkwD,uBAAyB,SAAAtwD,GAAW,IAAD,EACQ,EAAKigB,MAApC7b,EADuB,EACvBA,OAAQE,EADe,EACfA,UAAWwF,EADI,EACJA,KAAM4L,EADF,EACEA,EACzBrR,EAAwBrE,EAAxBqE,QAAS+hB,EAAepmB,EAAfomB,WAEjB,GAAIhiB,IAAWC,GAAWC,IAAc8hB,EAAY,CAAC,IAAD,EACR7V,YAAanM,EAAQE,EAAWwF,GADxB,mBACzCoD,EADyC,KAClCC,EADkC,KAC1B/M,EAD0B,KACpBgT,EADoB,KAE1C/P,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACnCoQ,EAAO+O,aAAQpgB,EAAS,KAAMqS,GACpC,EAAK6K,SAAS,CACVrT,QACAC,SACA/M,OACA+8B,IAAK7pB,YAAOlT,GACZgT,WACAsB,WAjJO,EAsJnB4uF,mBAAqB,SAAAp6F,GACbA,GAAOA,EAAMiX,mBAvJF,EA0JnB8lF,YAAc,SAAAxC,GACV,EAAKljF,SAAS,CACVkjF,WAzJJ,EAAK9iF,MAAQ,GAEb,EAAKymB,SAAWzlB,IAAM0a,YACtB,EAAKJ,UAAYta,IAAM0a,YAEvB,EAAK2pE,sBARU,E,iFA8Cfv6F,IAAU/K,GAAG,2BAA4B+G,KAAK2yF,4BAC9C3uF,IAAU/K,GAAG,wBAAyB+G,KAAKqjF,yBAC3Cr/E,IAAU/K,GAAG,wBAAyB+G,KAAKqjF,yBAC3Cr/E,IAAU/K,GAAG,4BAA6B+G,KAAKqjF,yBAC/Cr/E,IAAU/K,GAAG,iCAAkC+G,KAAKw7F,kCACpDx3F,IAAU/K,GAAG,qCAAsC+G,KAAKw7F,kCACxD33F,KAAa5K,GAAG,uBAAwB+G,KAAK6oD,0B,6CAI7C7kD,IAAU7K,IAAI,2BAA4B6G,KAAK2yF,4BAC/C3uF,IAAU7K,IAAI,wBAAyB6G,KAAKqjF,yBAC5Cr/E,IAAU7K,IAAI,wBAAyB6G,KAAKqjF,yBAC5Cr/E,IAAU7K,IAAI,4BAA6B6G,KAAKqjF,yBAChDr/E,IAAU7K,IAAI,iCAAkC6G,KAAKw7F,kCACrDx3F,IAAU7K,IAAI,qCAAsC6G,KAAKw7F,kCACzD33F,KAAa1K,IAAI,uBAAwB6G,KAAK6oD,0B,yCAG/BzzB,EAAWC,EAAWC,GAAW,IAAD,EACjBt1B,KAAKwY,MAA3B7b,EADuC,EACvCA,OAAQE,EAD+B,EAC/BA,UACR64B,EAAQ11B,KAAKkZ,MAAbwc,IAMR,GAJIN,EAAUz4B,SAAWA,GAAUy4B,EAAUv4B,YAAcA,GACvDmD,KAAKu+F,sBAGLlpE,EAAUK,MAAQA,EAAK,CACvB,IAAMlJ,EAASxsB,KAAK2/B,SAAS3iB,QAC7B,IAAKwP,EAAQ,OAEbA,EAAOggB,U,+BAmFL,IAAD,SACyBxsC,KAAKwY,MAA3B7b,EADH,EACGA,OAAQE,EADX,EACWA,UADX,EAcDmD,KAAKkZ,MAVLzT,GAJC,EAGD2uB,cAHC,EAID3uB,OACAC,EALC,EAKDA,OACA/M,EANC,EAMDA,KACA+8B,EAPC,EAODA,IACA/pB,EARC,EAQDA,SACAsB,EATC,EASDA,KACAuqE,EAVC,EAUDA,eACAC,EAXC,EAWDA,gBACA36E,EAZC,EAYDA,UACA2+F,EAbC,EAaDA,UAEJ,IAAK9iG,EAAM,OAAO,KAIlB,IAAM+iG,EAAgB5+F,EAAYkH,IAAUhF,QAAQlC,EAAUrD,KAAOqD,EAAUoC,KAAO,KAChFswB,EAAexrB,IAAUvE,WAAWi8F,GACpC/lE,EAAYrP,aAAmB,CAAE7gB,MAAO+xE,EAAgB9xE,OAAQ+xE,IAEhEgnB,EAAU/gF,aAAe/gB,EAAQE,GACjC6hG,EAAc7gF,aAAmBlhB,EAAQE,GACzC8hG,EAAWhhF,aAAgBhhB,EAAQE,GAErC8+F,EAAal2F,EACbm2F,EAAcl2F,EAClB,GAAIif,KAAK8B,IAAIk1E,EAAYC,GAAe,IAAK,CACzC,IAAM/1F,EAAQ,IAAM8e,KAAK8B,IAAIk1E,EAAYC,GAEzCA,EAAcA,GADdD,EAAaA,EAAaC,EAAc,IAAMj3E,KAAKC,MAAM+2E,EAAa91F,IAC7B,IAAM8e,KAAKC,MAAMg3E,EAAc/1F,GAG5E,IAAIhK,EAAU,KACRkB,EAAS24B,EAAM,4BAAQA,IAAKA,EAAKltB,KAAMmD,IAAe,KAC5D,GAAI8yF,EACA5iG,EACI,yBAAKgpB,UAAU,gCACX,2BACImR,IAAKh2B,KAAK2/B,SACV9a,UAAU,oCACVzL,QAASpZ,KAAK67F,mBACdjX,UAAQ,EACRrkD,UAAQ,EACR96B,MAAOk2F,EACPj2F,OAAQk2F,EACR/W,OAAQ,WACJ,EAAK/rE,SAAS,CAAE2iF,WAAW,IAC3BziG,KAAgB8G,aAAa,CACzB,QAAS,iCAGjB6sC,UAAW,WACP,IAAMngB,EAAS,EAAKmT,SAAS3iB,QACzBwP,IACAA,EAAOrB,OAAS+Y,KAAY/Y,SAGpC25D,QAAS,WACL9rF,KAAgB8G,aAAa,CACzB,QAAS,kCAGjBklF,QAAS,WACLhsF,KAAgB8G,aAAa,CACzB,QAAS,kCAGjBg8F,eAAgB,WACZ,IAAMtvE,EAAS,EAAKmT,SAAS3iB,QACzBwP,GACAxzB,KAAgB8G,aAAa,CACzB,QAAS,0BACTqrB,OAAQqB,EAAOrB,WAI1BpuB,IAEH0+F,KACI/lE,GAAOlG,EACL,yBACI3K,UAAWC,IAAW,uCAAwC,CAC1D,gBAAiB6Q,IAErBD,IAAKlG,EACLqG,IAAI,GACJpwB,MAAOk2F,EACPj2F,OAAQk2F,IAGZ,yBACI/2E,UAAU,uCACV9hB,MAAO,CACH0C,MAAOk2F,EACPj2F,OAAQk2F,YAM7B,GAAI8C,EACP7iG,EACI,yBAAKgpB,UAAU,gCACX,2BACImR,IAAKh2B,KAAK2/B,SACV9a,UAAU,oCACVzL,QAASpZ,KAAK67F,mBACd5lE,MAAI,EACJsK,UAAQ,EACR96B,MAAOk2F,EACPj2F,OAAQk2F,EACR/W,OAAQ,WACJ,EAAK/rE,SAAS,CAAE2iF,WAAW,MAE9B1+F,IAEH0+F,KACI/lE,GAAOlG,EACL,yBACI3K,UAAWC,IAAW,uCAAwC,CAC1D,gBAAiB6Q,IAErBD,IAAKlG,EACLqG,IAAI,GACJpwB,MAAOk2F,EACPj2F,OAAQk2F,IAGZ,yBACI/2E,UAAU,uCACV9hB,MAAO,CACH0C,MAAOk2F,EACPj2F,OAAQk2F,YAM7B,GAAI+C,EAAU,CAUC3+F,KAAKkZ,MAAf8iF,MAERngG,EAAU,UAaVA,EAAU,yBAAKgpB,UAAU,6BAA6B6Q,IAAKA,EAAKG,IAAI,GAAGzc,QAASpZ,KAAK67F,qBAGzF,OACI,yBAAKh3E,UAAU,wBACX,kBAAC,IAAMiR,SAAP,CAAgBC,SAAS,IAAIl6B,GAE7B,kBAACyyB,GAAA,EAAD,CAAc31B,KAAMA,EAAMg4B,OAAQ,IACjC1jB,GAAQA,EAAKhP,OAAS,GAAK,kBAAC,GAAD,CAAcgP,KAAMA,Q,gDAnU5BuL,EAAOU,GAAQ,IACnCvc,EAA+B6b,EAA/B7b,OAAQE,EAAuB2b,EAAvB3b,UAAWwF,EAAYmW,EAAZnW,KAAM4L,EAAMuK,EAANvK,EAEjC,GAAItR,IAAWuc,EAAM4mC,YAAcjjD,IAAcqc,EAAM+4C,cAAe,CAAC,IAAD,EAC5BnpD,YAAanM,EAAQE,EAAWwF,GADJ,mBAC7DoD,EAD6D,KACtDC,EADsD,KAC9C/M,EAD8C,KACxCgT,EADwC,KAElEhT,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EAFiC,MAIfkQ,YAAoBlM,EAAQE,GAJb,mBAI7D26E,EAJ6D,KAI7CC,EAJ6C,KAI5B36E,EAJ4B,KAKlEA,EAAYkH,IAAUlK,IAAIgD,EAAUrD,KAAOqD,EAE3C,IAAMlB,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACnCoQ,EAAO+O,aAAQpgB,EAAS,KAAMqS,GAEpC,MAAO,CACH6xC,WAAYnjD,EACZs1D,cAAep1D,EAEfm/F,MAAO,EACPP,WAAW,EACXh2F,QACAC,SACA/M,OACA+8B,IAAK7pB,YAAOlT,GACZgT,WACAsB,OACAuqE,iBACAC,kBACA36E,aAIR,OAAO,S,GA3CkBod,IAAMC,YA2VxBE,iBAAkBikF,IChU3BM,I,mBACF,WAAYpmF,GAAQ,IAAD,uBACf,4CAAMA,KA6FVsmC,UAAY,SAAAr9C,GACR,GAAsB,KAAlBA,EAAM67C,QAAgB,CAEtB,GADqC,EAAKpkC,MAAlC2lF,yBACsB,OAE9B,EAAK7lF,mBACoB,KAAlBvX,EAAM67C,QACb,EAAKmmC,aACoB,KAAlBhiF,EAAM67C,SACb,EAAKm/C,kBAvGM,EA2GnB5zC,uBAAyB,SAAAtwD,GAAW,IACxBqE,EAAkDrE,EAAlDqE,QAAS+hB,EAAyCpmB,EAAzComB,WAAYqqC,EAA6BzwD,EAA7BywD,YAAaC,EAAgB1wD,EAAhB0wD,YAClCtsD,EAAW,EAAK6b,MAAhB7b,OAFuB,EAGU,EAAKuc,MAAtC4lF,EAHuB,EAGvBA,iBAAkB5yE,EAHK,EAGLA,WAE1B,GAAIvvB,IAAWC,EAAf,CAEA,IAAMhB,EAAUiI,KAAa/J,IAAI8C,EAAS+hB,GAC1C,GAAK/iB,EAAL,CAKA,GAHAyN,YAAuB,CAACzN,IAEL2hB,aAAeyrC,KAAiBzrC,aAAe0rC,GAClD,CACZ,GACI,EAAKv/C,QAAQzL,QAAU,IACtB,EAAK8gG,kBACF71C,aAAQvqC,EAAY,EAAKjV,QAAQ,GAAGjQ,GAAI,EAAKiQ,QAAQ,EAAKA,QAAQzL,OAAS,GAAGxE,KACpF,CAGE,IAFA,IAAIulG,GAAW,EACXt1F,EAAU,GACL3L,EAAI,EAAGA,EAAI,EAAK2L,QAAQzL,OAAQF,IACjC,EAAK2L,QAAQ3L,GAAGtE,GAAKklB,EACrBjV,EAAQxJ,KAAK,EAAKwJ,QAAQ3L,KAErBihG,IACDA,GAAW,EACXt1F,EAAQxJ,KAAKtE,IAEjB8N,EAAQxJ,KAAK,EAAKwJ,QAAQ3L,KAGlC,EAAK2L,QAAUA,EAGnB,IAAMH,EAAQ,EAAKG,QAAQ2d,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAOqlG,IACnD,EAAKhmF,SAAS,CACV8jF,aAAc,EAAKA,aAAarzF,GAChCmzF,iBAAkB,EAAKA,iBAAiBnzF,GACxC2iB,WAAYA,EAAa,IAKjC,IADuB3O,aAAeyrC,IAAgBzrC,aAAe0rC,GAClD,CACf,IAAIg2C,EAAa,EAAKv1F,QAGtB,GAFA,EAAKA,QAAU,EAAKA,QAAQ5H,OAAO,SAAAD,GAAC,OAAIA,EAAEpI,KAAOklB,IAE7CmgF,IAAqBngF,EAAY,CACjC,IAAMugF,EAAY,IAAIlnG,IACtBknG,EAAUxmG,IAAIimB,EAAYA,GAE1B,EAAK8M,gBAAgBwzE,EAAYC,GACjC,EAAKpmF,SAAS,CACVoT,WAAYvH,KAAK8B,IAAIyF,EAAa,EAAG,SAEtC,CACH,IAAM3iB,EAAQ,EAAKG,QAAQ2d,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAOqlG,IACnD,EAAKhmF,SAAS,CACV8jF,aAAc,EAAKA,aAAarzF,GAChCmzF,iBAAkB,EAAKA,iBAAiBnzF,GACxC2iB,WAAYvH,KAAK8B,IAAIyF,EAAa,EAAG,UAxKlC,EA8KnBq9B,uBAAyB,SAAAhxD,GAAW,IACxBqE,EAAuCrE,EAAvCqE,QAASoF,EAA8BzJ,EAA9ByJ,YAAa80E,EAAiBv+E,EAAjBu+E,aACtBn6E,EAAW,EAAK6b,MAAhB7b,OAFuB,EAGU,EAAKuc,MAAtC4lF,EAHuB,EAGvBA,iBAAkB5yE,EAHK,EAGLA,WAE1B,GAAK4qD,GACDn6E,IAAWC,EAAf,CAEA,IAAMsiG,EAAYl9F,EAAY8a,OAAO,SAACC,EAAaoiF,GAE/C,OADApiF,EAAYrkB,IAAIymG,EAAWA,GACpBpiF,GACR,IAAI/kB,KAEDinG,EAAa,EAAKv1F,QACpB01F,EAAeH,EAAWhhG,OAE9B,EAAKyL,QAAU,EAAKA,QAAQ5H,OAAO,SAAAD,GAAC,OAAKq9F,EAAUtlG,IAAIiI,EAAEpI,MACzD2lG,GAAgB,EAAK11F,QAAQzL,OAE7B,EAAK6a,SAAS,CAAEoT,WAAYvH,KAAK8B,IAAIyF,EAAakzE,EAAc,KAE3D,EAAK11F,QAAQzL,OAKdihG,EAAUtlG,IAAIklG,IACd,EAAKrzE,gBAAgBwzE,EAAYC,GALjCtgF,YAAsB,QApMX,EA6MnByqC,mBAAqB,SAAA9wD,GAAW,IACpBoE,EAAW,EAAK6b,MAAhB7b,OADmB,EAEc,EAAKuc,MAAtC4lF,EAFmB,EAEnBA,iBAAkB5yE,EAFC,EAEDA,WAElBtwB,EAAYrD,EAAZqD,QACR,GAAKA,GACA2hB,aAAe3hB,EAAQC,UAExBD,EAAQgB,UAAYD,GACnB,EAAKoiG,iBAAV,CAEA,EAAKr1F,QAAU,CAAC9N,GAASsgB,OAAO,EAAKxS,SACrC,IAAMH,EAAQ,EAAKG,QAAQ2d,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAOqlG,IAEnD,EAAKhmF,SAAS,CACV8jF,aAAc,EAAKA,aAAarzF,GAChCmzF,iBAAkB,EAAKA,iBAAiBnzF,GACxC2iB,WAAYA,EAAa,MA9Nd,EAkOnBmzE,UAAY,SAAC1iG,EAAQE,GACjB,IAAMjB,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,KAFU,IAIvBC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,MAAO,CACH,QAAS,iCAGjB,IAAK,eAKL,IAAK,eACD,MAAO,CACH,QAAS,qCAGjB,QACI,OAAO,OA1PA,EA+PnByjG,YA/PmB,qBA+PL,gDAAA9mG,EAAA,0DACoB,EAAKggB,MAA3B7b,EADE,EACFA,OAAQE,EADN,EACMA,UAEViF,EAAS,EAAKu9F,UAAU1iG,EAAQE,GAElCiE,EAAS,CACT,QAAS,WACT6C,SAAU,GACV2oB,YAAa,IAEbxqB,EAVM,gCAWS9I,KAAgBmI,KAAK,CAChC,QAAS,qBACTvE,QAASD,EACTwvB,MAAO,GACP1kB,eAAgB,EAChB2kB,gBAAiBvvB,EACjBoT,QAASsvF,IACTlzE,MAAO,EAAIkzE,IACXz9F,OAAQA,IAnBN,OAWNhB,EAXM,iBAuBV+b,aAAwB/b,EAAQ,EAAK4I,SACrC7F,KAAaC,SAAShD,EAAO6C,UAE7B,EAAK+F,QAAU5I,EAAO6C,SACtB,EAAKo7F,iBAA8C,IAA3Bj+F,EAAO6C,SAAS1F,OAEhC6gG,EAAqB,EAAK5lF,MAA1B4lF,iBACFv1F,EAAQ,EAAKG,QAAQ2d,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAOqlG,IAEnD,EAAKhmF,SAAS,CACV8jF,aAAc,EAAKA,aAAarzF,GAChCmzF,iBAAkB,EAAKA,iBAAiBnzF,MAG7B,IAAXA,EArCM,iBAsCN,EAAKG,QAAU,CAAC7F,KAAa/J,IAAI6C,EAAQmiG,IACzCn1F,YAA0B,EAAG,EAAKD,SAvC5B,2BAyCNC,YAA0BJ,EAAO,EAAKG,SAEhC5H,EAAS,EAAKu9F,UAAU1iG,EAAQE,GA3ChC,mDA8CAogG,EAAW,KACbhpF,EAAQ,EA/CN,IAAAzb,EAAA,qCAAAA,EAAA,qEAiDmBQ,KAAgBmI,KAAK,CACtC,QAAS,qBACTvE,QAASD,EACTwvB,MAAO,GACP1kB,eAAgB,EAChB2kB,gBAAiB,EAAK1iB,QAAQzL,OAAS,EAAI,EAAKyL,QAAQ,GAAGjQ,GAAK,EAChEwW,QAAS,GACToc,MAAO,IACPvqB,OAAQA,IAzDV,OAiDIhB,EAjDJ,OA2DFmT,GAASnT,EAAO6C,SAAS1F,OAEzB4e,aAAwB/b,EAAQ,EAAK4I,SACrC7F,KAAaC,SAAShD,EAAO6C,UAE7B,EAAK+F,QAAU5I,EAAO6C,SAASuY,OAAO,EAAKxS,SAC3C,EAAKq1F,iBAA8C,IAA3Bj+F,EAAO6C,SAAS1F,OAEhC6gG,EAAqB,EAAK5lF,MAA1B4lF,iBACFv1F,EAAQ,EAAKG,QAAQ2d,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAOqlG,IAEnD,EAAKhmF,SAAS,CACV8jF,aAAc,EAAKA,aAAarzF,GAChCmzF,iBAAkB,EAAKA,iBAAiBnzF,GACxCw1F,iBAAkB,EAAKA,iBACvB7yE,WAAYprB,EAAOwrB,cA1ErB,oDAgDE,EAAKyyE,oBAAoB9qF,EAAQgpF,GAhDnC,uHA/PK,EA+UnBjkF,YAAc,WACV4F,YAAsB,MADN,IAGRkgF,EAAqB,EAAK5lF,MAA1B4lF,iBACFv1F,EAAQ,EAAKG,QAAQ2d,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAOqlG,KACpC,IAAXv1F,GACAE,YAAgCF,EAAO,EAAKG,UArVjC,EAyVnBmzF,WAAa,WAAO,IACRlgG,EAAW,EAAK6b,MAAhB7b,OACAmiG,EAAqB,EAAK5lF,MAA1B4lF,iBAEFljG,EAAUiI,KAAa/J,IAAI6C,EAAQmiG,GACzC,GAAKljG,EAAL,CALe,IAOPC,EAAYD,EAAZC,QACR,GAAKA,EAAL,CAEA,IAAIkM,EAAQ,KACZ,OAAQlM,EAAQ,UACZ,IAAK,mBAGDkM,EAFsBlM,EAAdC,UAGR,MAEJ,IAAK,yBAGDiM,EAFkBlM,EAAVG,MAGR,MAEJ,IAAK,kBAGD+L,EAFqBlM,EAAbI,SAGR,MAEJ,IAAK,eAGD8L,EAFkBlM,EAAVG,MAGR,MAEJ,IAAK,cAAgB,IACTK,EAAaR,EAAbQ,SACR,IAAKA,EAAU,OAFC,IAIRP,EAAsCO,EAAtCP,UAAWG,EAA2BI,EAA3BJ,SAAUD,EAAiBK,EAAjBL,MAAOM,EAAUD,EAAVC,MAEpC,GAAIR,EAAW,CACXiM,EAAQjM,EACR,MAGJ,GAAIG,EAAU,CACV8L,EAAQ9L,EACR,MAGJ,GAAID,EAAO,CACP+L,EAAQ/L,EACR,MAGJ,GAAIM,EAAO,CACPyL,EAAQzL,EACR,MAEJ,MAEJ,IAAK,eAGDyL,EAFkBlM,EAAVS,MAOhBwL,YAAUC,EAAOnM,MAhaF,EAmanBirD,cAAgB,WAAO,IACXlqD,EAAW,EAAK6b,MAAhB7b,OACAmiG,EAAqB,EAAK5lF,MAA1B4lF,iBAERh4C,YAAgBnqD,EAAQ,CAACmiG,KAvaV,EA0anB/3C,aAAe,WACX,EAAKy4C,oBA3aU,EA8anB9C,iBAAmB,SAAAnzF,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP,EAAKG,QAAQzL,QAlbjB,EAqbnBw+F,eAAiB,SAAAh7F,GACTA,GACAA,EAAMiX,kBAFY,IAKdomF,EAAqB,EAAK5lF,MAA1B4lF,iBAEF9yE,EADQ,EAAKtiB,QAAQ2d,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAOqlG,IACzB,EAE1B,OAAO,EAAKnC,UAAU3wE,EAAW,WACzBA,IAAc,EAAKtiB,QAAQzL,OAAS,GACpC,EAAKwhG,kBAhcE,EAqcnBA,aArcmB,qBAqcJ,wCAAAjnG,EAAA,0DACmB,EAAKggB,MAA3B7b,EADG,EACHA,OAAQE,EADL,EACKA,UACRiiG,EAAqB,EAAK5lF,MAA1B4lF,iBAEFh9F,EAAS,EAAKu9F,UAAU1iG,EAAQE,GAElCiE,EAAS,CACT,QAAS,WACT6C,SAAU,GACV2oB,YAAa,IAEbxqB,EAXO,gCAYQ9I,KAAgBmI,KAAK,CAChC,QAAS,qBACTvE,QAASD,EACTwvB,MAAO,GACP1kB,eAAgB,EAChB2kB,gBAAiB0yE,EACjB7uF,OAAQ,EACRoc,MAAOkzE,IACPz9F,OAAQA,IApBL,OAYPhB,EAZO,cAwBX+b,aAAwB/b,EAAQ,EAAK4I,SACrC7F,KAAaC,SAAShD,EAAO6C,UAE7B,EAAK+F,QAAU,EAAKA,QAAQwS,OAAOpb,EAAO6C,UAEpC4F,EAAQ,EAAKG,QAAQ2d,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAOqlG,IAEnD,EAAKhmF,SAAS,CACV8jF,aAAc,EAAKA,aAAarzF,GAChCmzF,iBAAkB,EAAKA,iBAAiBnzF,GACxC2iB,WAAYprB,EAAOwrB,cAlCZ,0CArcI,EA2enBswE,aAAe,SAAArzF,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GA/eL,EAkfnBk6E,WAAa,SAAAhiF,GACLA,GACAA,EAAMiX,kBAFQ,IAKVomF,EAAqB,EAAK5lF,MAA1B4lF,iBAEF9yE,EADQ,EAAKtiB,QAAQ2d,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAOqlG,IACzB,EAE1B,OAAO,EAAKnC,UAAU3wE,EAAW,WACX,IAAdA,GACA,EAAK0zE,cA7fE,EAkgBnBA,SAlgBmB,qBAkgBR,wCAAAlnG,EAAA,0DACuB,EAAKggB,MAA3B7b,EADD,EACCA,OAAQE,EADT,EACSA,UACRiiG,EAAqB,EAAK5lF,MAA1B4lF,iBAEFh9F,EAAS,EAAKu9F,UAAU1iG,EAAQE,GAElCiE,EAAS,CACT,QAAS,WACT6C,SAAU,GACV2oB,YAAa,IAEbxqB,EAXG,gCAYY9I,KAAgBmI,KAAK,CAChC,QAAS,qBACTvE,QAASD,EACTwvB,MAAO,GACP1kB,eAAgB,EAChB2kB,gBAAiB0yE,EACjB7uF,QAASsvF,IACTlzE,MAAOkzE,IAAoB,EAC3Bz9F,OAAQA,IApBT,OAYHhB,EAZG,cAwBP+b,aAAwB/b,EAAQ,EAAK4I,SACrC7F,KAAaC,SAAShD,EAAO6C,UAE7B,EAAKo7F,iBAA8C,IAA3Bj+F,EAAO6C,SAAS1F,OACxC,EAAKyL,QAAU5I,EAAO6C,SAASuY,OAAO,EAAKxS,SAErCH,EAAQ,EAAKG,QAAQ2d,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAOqlG,IAEnD,EAAKhmF,SAAS,CACV8jF,aAAc,EAAKA,aAAarzF,GAChCmzF,iBAAkB,EAAKA,iBAAiBnzF,GACxCw1F,iBAAkB,EAAKA,iBACvB7yE,WAAYprB,EAAOwrB,cApChB,0CAlgBQ,EA0iBnBqwE,UAAY,SAACpzF,EAAOxJ,GAChB,QAAIwJ,EAAQ,OACRA,GAAS,EAAKG,QAAQzL,UAE1B,EAAK6a,SACD,CACIgmF,iBAAkB,EAAKp1F,QAAQH,GAAO9P,GACtCmjG,aAAc,EAAKA,aAAarzF,GAChCmzF,iBAAkB,EAAKA,iBAAiBnzF,IAE5CxJ,GAGJ4J,YAA0BJ,EAAO,EAAKG,UAC/B,KAxjBQ,EA2jBnB+hB,gBAAkB,SAACwzE,EAAYC,GAK3B,IAL0C,IAClCJ,EAAqB,EAAK5lF,MAA1B4lF,iBAEFv1F,EAAQ01F,EAAW53E,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAOqlG,IAC7Ca,EAAS,EACJ5hG,EAAIwL,EAAQ,EAAGxL,GAAK,EAAGA,IAC5B,GAAImhG,IAAcA,EAAUtlG,IAAIqlG,EAAWlhG,GAAGtE,IAAK,CAC/CkmG,EAASV,EAAWlhG,GAAGtE,GACvB,MAGR,IAAKkmG,EACD,IAAK,IAAI5hG,EAAIwL,EAAQ,EAAGxL,EAAIkhG,EAAWhhG,OAAQF,IAC3C,GAAImhG,IAAcA,EAAUtlG,IAAIqlG,EAAWlhG,GAAGtE,IAAK,CAC/CkmG,EAASV,EAAWlhG,GAAGtE,GACvB,MAKZ,GAAKkmG,EAAL,CAEA,IAAM3zE,EAAY,EAAKtiB,QAAQ2d,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAOkmG,IAEvD,OAAO,EAAKhD,UAAU3wE,EAAW,WACX,IAAdA,EACA,EAAK0zE,WACE1zE,IAAc,EAAKtiB,QAAQzL,OAAS,GAC3C,EAAKwhG,mBAvlBE,EA4lBnBD,iBAAmB,WACf,EAAK1mF,SAAS,CAAE+lF,0BAA0B,KA7lB3B,EAgmBnBe,kBAAoB,WAChB,EAAK9mF,SAAS,CAAE+lF,0BAA0B,KAjmB3B,EAomBnBzgE,WAAa,WACT,EAAKtlB,SAAS,CAAE+lF,0BAA0B,IAD3B,IAGPliG,EAAW,EAAK6b,MAAhB7b,OAHO,EAI4B,EAAKuc,MAAxC4lF,EAJO,EAIPA,iBAAkBe,EAJX,EAIWA,aAEpBjkG,EAAUiI,KAAa/J,IAAI6C,EAAQmiG,GACzC,GAAKljG,EAAL,CAPe,IASPmoB,EAA+DnoB,EAA/DmoB,6BAA8BC,EAAiCpoB,EAAjCooB,8BACjBD,GAAgCC,IAGrDhrB,KAAgBmI,KAAK,CACjB,QAAS,iBACTvE,QAASD,EACTqF,YAAa,CAAC88F,GACd78F,OAAQ+hB,GAAgC67E,MArnB7B,EAynBnBC,yBAA2B,SAAAr+F,GACvB,EAAKqX,SAAS,CAAE+mF,aAAcp+F,EAAMC,OAAOowC,WA1nB5B,EA6nBnBiuD,mBAAqB,WAAO,IAGpBC,EAAiB,uBACrB,OAHuB,EAAK9mF,MAApB5N,YAIJ,IAAK,uBACD00F,EAAiB,oBACjB,MAEJ,IAAK,oBACDA,EAAiB,qBACjB,MAEJ,IAAK,qBACDA,EAAiB,uBAKzB,EAAKlnF,SAAS,CACVxN,WAAY00F,KAjpBD,EAqpBnBC,kBAAoB,WAChB,GAAK,EAAKC,WAAV,CADsB,IAGdljF,EAAY,EAAKkjF,WAAjBljF,QACR,GAAKA,EAAL,CAJsB,IAOhBmjF,EADY,EAAKjnF,MAAf8iF,MACkB,EAAI,EAAI,GAElC,EAAKljF,SAAS,CAAEkjF,MAAOmE,IAEvBnjF,EAAQwhF,YAAY2B,MAhqBL,EAmqBnBxiB,eAAiB,SAAChhF,EAAQE,GACtB,IAAMjB,EAAUiI,KAAa/J,IAAI6C,EAAQE,GACzC,IAAKjB,EAAS,OAAO,EAFe,IAI5BioB,EAA8BjoB,EAA9BioB,iBAAkBhoB,EAAYD,EAAZC,QAC1B,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,OAAO,EAEX,QACI,OAAOgoB,IA5qBf,EAAKk3C,gBAAkB,IAAIrD,GAAgB,EAAK5Y,WAChD,EAAKohD,WAAahmF,IAAM0a,YACxB,EAAKlrB,QAAU,GALA,MAOe,EAAK8O,MAA3B7b,EAPO,EAOPA,OAAQE,EAPD,EAOCA,UAPD,OASf,EAAKqc,MAAQ,CACT8iF,MAAO,EACP1wF,WAAY,uBACZw0C,WAAYnjD,EACZs1D,cAAep1D,EACfiiG,iBAAkBjiG,EAClB+/F,cAAc,EACdF,kBAAkB,EAClBmC,0BAA0B,EAC1BgB,cAAc,GAlBH,E,mFAsBGxwE,EAAWC,GAAY,IAAD,EACVtvB,KAAKwY,MAA3B7b,EADgC,EAChCA,OAAQE,EADwB,EACxBA,UADwB,EAWpCmD,KAAKkZ,MARL5N,EAHoC,EAGpCA,WACAwzF,EAJoC,EAIpCA,iBACAD,EALoC,EAKpCA,yBACAE,EANoC,EAMpCA,iBACAnC,EAPoC,EAOpCA,aACAF,EARoC,EAQpCA,iBACAV,EAToC,EASpCA,MACA9vE,EAVoC,EAUpCA,WAGJ,OAAIoD,EAAUhkB,aAAeA,IAIzB+jB,EAAU1yB,SAAWA,IAIrB0yB,EAAUxyB,YAAcA,IAIxByyB,EAAUwvE,mBAAqBA,IAI/BxvE,EAAU8wE,kBAAoB1D,IAI9BptE,EAAUstE,eAAiBA,IAI3BttE,EAAUyvE,mBAAqBA,IAI/BzvE,EAAUpD,aAAeA,IAIzBoD,EAAUuvE,2BAA6BA,GAIvCvvE,EAAU0sE,QAAUA,Y,0CAQxBh8F,KAAKs/F,cAELrkC,GAAgBC,IAAIl7D,KAAK+6D,iBACzBl3D,KAAa5K,GAAG,uBAAwB+G,KAAKupD,wBAC7C1lD,KAAa5K,GAAG,mBAAoB+G,KAAKqpD,oBACzCxlD,KAAa5K,GAAG,uBAAwB+G,KAAK6oD,0B,6CAI7CoS,GAAgBiD,OAAOl+D,KAAK+6D,iBAC5Bl3D,KAAa1K,IAAI,uBAAwB6G,KAAKupD,wBAC9C1lD,KAAa1K,IAAI,mBAAoB6G,KAAKqpD,oBAC1CxlD,KAAa1K,IAAI,uBAAwB6G,KAAK6oD,0B,+BAylBxC,IAAD,EACiB7oD,KAAKwY,MAAnB7b,EADH,EACGA,OAAQsR,EADX,EACWA,EADX,EAYDjO,KAAKkZ,MATL5N,EAHC,EAGDA,WACAwzF,EAJC,EAIDA,iBACAD,EALC,EAKDA,yBACAgB,EANC,EAMDA,aACAd,EAPC,EAODA,iBACAnC,EARC,EAQDA,aACAF,EATC,EASDA,iBAEAxwE,GAXC,EAUD8vE,MAVC,EAWD9vE,YAGA3iB,GAAS,EACT2iB,GAAc6yE,IACdx1F,EAAQvJ,KAAK0J,QAAQ2d,UAAU,SAAAxlB,GAAC,OAAIA,EAAEpI,KAAOqlG,KAEjD,IAAM7B,EAAWt4E,KAAK8B,IAAIzmB,KAAK0J,QAAQzL,OAAQiuB,GAEzCtwB,EAAUiI,KAAa/J,IAAI6C,EAAQmiG,GACjC96E,EAA+DpoB,EAA/DooB,6BAA8BD,EAAiCnoB,EAAjCmoB,6BAEhC25D,EAAe15D,GAAgCD,EAC/C45D,EAAiB39E,KAAK29E,eAAehhF,EAAQmiG,GAE/CuB,EAA4B,GAE5BA,EADA3iF,aAAe/gB,EAAQmiG,GACK7wF,EAAE,yBACvB4P,aAAmBlhB,EAAQmiG,GACN7wF,EAAE,uBAEFA,EAAE,yBAElC,IAAMqyF,EAAqBzB,EACvB,kBAAC,IAAD,CACIvlF,mBAAoB,EACpB1Y,KAAMi+F,EACNtlF,QAASvZ,KAAK4/F,kBACdpmF,kBAAgB,qBAChB,kBAAC,IAAD,CAAa/f,GAAG,qBAAqBwU,EAAE,YACvC,kBAAC,KAAD,KACI,kBAAC4L,GAAA,EAAD,KAAoBwmF,GACnBr8E,GACG,kBAAC27C,GAAA,EAAD,CACI/S,MAAO3+C,EAAE,gBACT2xD,QACI,kBAACkE,GAAA,EAAD,CAAU9+C,MAAM,UAAUpU,MAAM,YAAY86B,SAAU1rC,KAAK8/F,2BAE/DhuD,QAAS+tD,KAIrB,kBAAC/lF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQX,QAASpZ,KAAK4/F,kBAAmB56E,MAAM,WAC1C/W,EAAE,WAEP,kBAAC8L,EAAA,EAAD,CAAQX,QAASpZ,KAAKo+B,WAAYpZ,MAAM,WACnC/W,EAAE,SAIf,KA9DC,EAgEmCnF,YAAanM,EAAQmiG,EAAkB14F,KAhE1E,mBAgEiBzN,GAhEjB,gBAkECoG,GAlED,KAkEUpG,EAAOA,EAAKc,GAAK,GAC5BuU,EAAQC,EAAE,eASd,OARIyP,aAAe/gB,EAAQmiG,GACvB9wF,EAAQC,EAAE,eACH4P,aAAmBlhB,EAAQmiG,GAClC9wF,EAAQC,EAAE,aACH0P,aAAgBhhB,EAAQmiG,KAC/B9wF,EAAQ,IAIR,yBAAK6W,UAAWC,IAAW,eAAgBxZ,IACvC,yBAAKuZ,UAAU,uBACX,kBAAC,GAAD,CAAWloB,OAAQA,EAAQE,UAAWiiG,IACtC,kBAAC,GAAD,CACI9wF,MAAOA,EACPH,SAAUovF,GAAY1zF,GAAS,EAArB,UAA4B0zF,EAAW1zF,EAAvC,eAAmD0zF,GAAa,OAE9E,kBAAC,GAAD,CAA2BjvF,MAAOC,EAAE,QAASlP,OAAQA,EAAQqa,QAASpZ,KAAK68F,aAC3E,kBAAC,GAAD,CACI7uF,MAAOC,EAAE,WACT0jC,UAAWgsC,EACXvkE,QAASpZ,KAAK6mD,eACd,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAyB74C,MAAOC,EAAE,UAAW0jC,UAAW+rC,EAActkE,QAASpZ,KAAK+mD,cAChF,kBAACgR,GAAD,OAEJ,kBAAC,GAAD,CAAyB/pD,MAAOC,EAAE,SAAUmL,QAASpZ,KAAKgZ,aACtD,kBAACw6B,EAAA,EAAD,QAGR,yBAAK3uB,UAAU,uBAAuBzL,QAASpZ,KAAKy8F,gBAChD,yBAAK53E,UAAU,4BACX,kBAAC,GAAD,CAAmB8sB,UAAW+qD,EAAkBR,MAAI,EAAC9iF,QAASpZ,KAAKy8F,gBAC/D,kBAAC,GAAD,QAIR,yBAAK53E,UAAU,+BACX,kBAAC,GAAD,CACImR,IAAKh2B,KAAKkgG,WACVvjG,OAAQA,EACRE,UAAWiiG,EACXz8F,KAAM+D,IACNgT,QAASpZ,KAAKy8F,kBAItB,yBAAK53E,UAAU,6BACX,kBAAC,GAAD,CAAmB8sB,UAAWirD,EAAcV,MAAI,EAAC9iF,QAASpZ,KAAKyjF,YAC3D,kBAAC,GAAD,CAAoB1gF,MAAO,CAAE29B,UAAW,uBAInD4/D,O,GA9yBSpmF,IAAMC,YAyzBjBE,iBAAkBukF,ICtwBlB2B,I,mBA7FX,WAAY/nF,GAAQ,IAAD,uBACf,4CAAMA,KA0CVof,uBAAyB,SAAAr/B,GAAW,IAAD,EACL,EAAKigB,MAAvB7b,EADuB,EACvBA,OAAQX,EADe,EACfA,MAEhB,GAAIW,IAAWpE,EAAOoE,QAAUX,EAAMmO,IAAI1Q,KAAOlB,EAAOwG,OAAQ,CAC5D,IAAMpG,EAAOqL,IAAUlK,IAAIvB,EAAOwG,SAAW,EAAKma,MAAMvgB,KACxD,EAAKmgB,SAAS,CACVngB,KAAMA,MAjDC,EAsDnB++B,uBAAyB,SAAAn/B,GAAW,IAAD,EACL,EAAKigB,MAAvB7b,EADuB,EACvBA,OAAQX,EADe,EACfA,MAGhB,GAFeoO,YAAczN,KAEdpE,EAAO2J,QAAUlG,EAAMmO,IAAI1Q,KAAOlB,EAAOwG,OAAQ,CAC5D,IAAMpG,EAAOqL,IAAUlK,IAAIvB,EAAOwG,SAAW,EAAKma,MAAMvgB,KACxD,EAAKmgB,SAAS,CACVngB,KAAMA,MA7DC,EAkEnBkjG,mBAAqB,SAAAp6F,GACbA,GAAOA,EAAMiX,kBAEjB,EAAKF,MAAMY,QAAQ3X,IArEJ,MAGW,EAAK+W,MAAvB7b,EAHO,EAGPA,OAAQX,EAHD,EAGCA,MAELrD,EAASqD,EAAdmO,IALS,OAMfxR,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EAEjC,EAAKugB,MAAQ,CACT4mC,WAAYnjD,EACZq8B,UAAWh9B,EACXyJ,MAAOwoB,KACPvoB,OAAQuoB,KACRt1B,KAAMA,GAbK,E,iFAkCfqL,IAAU/K,GAAG,uBAAwB+G,KAAK43B,wBAC1C5zB,IAAU/K,GAAG,uBAAwB+G,KAAK03B,0B,6CAI1C1zB,IAAU7K,IAAI,uBAAwB6G,KAAK43B,wBAC3C5zB,IAAU7K,IAAI,uBAAwB6G,KAAK03B,0B,+BAgCrC,IAAD,EAC2B13B,KAAKkZ,MAAdvgB,GADlB,EACG8M,MADH,EACUC,OADV,EACkB/M,MACvB,IAAKA,EAAM,OAAO,KAElB,IAAMuG,EAAO8E,IAAUhF,QAAQrG,EAAKc,KAAOd,EAAKuG,KAC1Cw2B,EAAM1xB,IAAUvE,WAAWP,GAEjC,OACI,yBAAK2lB,UAAU,wBACX,yBAAKA,UAAU,6BAA6B6Q,IAAKA,EAAKG,IAAI,GAAGzc,QAASpZ,KAAK67F,qBAC3E,kBAACvtE,GAAA,EAAD,CAAc31B,KAAMA,Q,gDAjEA6f,EAAOU,GAAQ,IACnCvc,EAAkB6b,EAAlB7b,OAAQX,EAAUwc,EAAVxc,MAEhB,OAAIW,IAAWuc,EAAM4mC,YAAc9jD,IAAUkd,EAAM8f,UACxC,CACH8mB,WAAYnjD,EACZq8B,UAAWh9B,EACXyJ,MAAOwoB,KACPvoB,OAAQuoB,KACRt1B,KAAMqD,EAAMmO,KAIb,S,GA/ByB+P,IAAMC,YCsC/BqmF,G,YAhCX,WAAYhoF,GAAQ,qEACVA,I,sEAGA,IAAD,EACoBxY,KAAKwY,MAAtB7b,EADH,EACGA,OAAQoW,EADX,EACWA,KAEhB,OACI,yBAAK8R,UAAU,cACX,yBAAKA,UAAU,sBACX,kBAAC,EAAD,CAAUloB,OAAQA,EAAQsY,mBAAmB,IAC7C,yBAAK4P,UAAU,sBACX,yBAAKA,UAAU,kBACX,kBAACwa,GAAA,EAAD,CAAe1iC,OAAQA,KAE1BoW,GACG,yBAAK8R,UAAU,uBACX,8BAAO9R,W,GAlBRmH,IAAMC,WCoB/BsmF,G,YACF,WAAYjoF,GAAQ,IAAD,uBACf,4CAAMA,KA6EV+vC,cAAgB,SAAA9mD,GAIZ,GAHAA,EAAMkX,iBACNlX,EAAMiX,kBAEgB,KAAlBjX,EAAM67C,QAAgB,CAEtB,GADqC,EAAKpkC,MAAlC2lF,yBACsB,OAE9B,EAAK7lF,mBACoB,KAAlBvX,EAAM67C,QACb,EAAKm/C,iBACoB,KAAlBh7F,EAAM67C,SACb,EAAKmmC,cA1FM,EA8FnB6b,YA9FmB,sCA8FL,WAAMtjG,GAAN,iBAAAxD,EAAA,wDACFmE,EAAW,EAAK6b,MAAhB7b,OAEHuZ,YAAcvZ,GAHT,iEAKW3D,KAAgBmI,KAAK,CACtC,QAAS,uBACTgE,QAASiF,YAAczN,GACvBsT,OAAQ,EACRoc,MAAO,MATD,OAKJvrB,EALI,OAYV,EAAK4I,QAAU5I,EAAOmJ,OACtB,EAAK80F,iBAA4C,IAAzBj+F,EAAOmJ,OAAOhM,OAExB,EAEd,EAAK6a,SAAS,CACV4nF,aAHU,EAIV9D,aAAc,EAAKA,aAJT,GAKVF,iBAAkB,EAAKA,iBALb,GAMVxwE,WAAYprB,EAAOwrB,cAGvBhiB,YAAiC3N,EATnB,EASkC,EAAK+M,SAxB3C,0CA9FK,wDAyHnBsP,YAAc,WACV0rC,YAA6B,OA1Hd,EA6HnBm4C,WAAa,WAAO,IACRlgG,EAAW,EAAK6b,MAAhB7b,OADO,EAEsB,EAAKuc,MAAlCwnF,EAFO,EAEPA,aAAcx0E,EAFP,EAEOA,WAEhB7wB,EAAO0O,IAAUjQ,IAAI6C,GAC3B,GAAKtB,EAAL,CAEA,IAAIkO,GAAS,EACT2iB,IACA3iB,EAAQm3F,GAGZ,IAAM1kG,EACFuN,EAAQ,GAAKA,EAAQ,EAAKG,QAAQzL,OAASoM,YAAgB,EAAKX,QAAQH,IAAU2N,YAAiBva,GACvG,GAAKX,GACAA,EAAMmO,IAAX,CAEA,IAAMxR,EAAOqL,IAAUlK,IAAIkC,EAAMmO,IAAI1Q,KAAOuC,EAAMmO,IAC7CxR,GAELsP,YAAetP,EAAMA,EAAKc,GAAK,OAAQ4B,EAAM,kBAAM2I,IAAUzI,oBAAoBoB,EAAQhE,EAAKc,SAjJ/E,EAoJnBotD,cAAgB,WAAO,IACXlqD,EAAW,EAAK6b,MAAhB7b,OADU,EAEmB,EAAKuc,MAAlCwnF,EAFU,EAEVA,aAEJn3F,GAAS,EAJK,EAEI2iB,aAIlB3iB,EAAQm3F,GAGZ,IAAIC,EAAY,KAGhB,GADkB,EAAKj3F,SAAWH,GAAS,GAAKA,EAAQ,EAAKG,QAAQzL,OACtD,CACX,IAAMjC,EAAQqO,YAAgB,EAAKX,QAAQH,IAC3C,IAAKvN,EAAO,OAFD,IAIArD,EAASqD,EAAdmO,IACN,IAAKxR,EAAM,OAEXgoG,EAAY,CACR,QAAS,cACTlnG,GAAId,EAAKc,QAEV,CACH,IAAMmnG,EAAY1pF,YAAiBva,GACnC,IAAKikG,EAAW,OAFb,IAIUjoG,EAASioG,EAAdz2F,IACR,IAAKxR,EAAM,OAEX,IAAMuG,EAAO8E,IAAUhF,QAAQrG,EAAKc,IACpC,IAAKyF,EAAM,OAEXyhG,EAAY,CACR,QAAS,gBACTr/F,KAAMpC,EACN+qB,KAAM,IAId,GAAK02E,EAAL,CAEA,IAAMpkD,EAAsB,CACxB,QAAS,oBACTvgD,MAAO2kG,EACP7jG,UAAW,KACX+rB,uBAAwB,GACxBpjB,MAAOwoB,KACPvoB,OAAQuoB,KACRnhB,QAAS,CACL,QAAS,gBACTG,KAAM,GACN6C,SAAU,MAEdoN,IAAK,GAGTy+B,YAAQY,KA7MO,EAgNnBwK,aAAe,WAAO,IAAD,EACa,EAAKvuC,MAA3B7b,EADS,EACTA,OADS,KACDE,UACqB,EAAKqc,OAAlCwnF,EAFS,EAETA,aAEJn3F,GAAS,EAJI,EAEK2iB,aAIlB3iB,EAAQm3F,GAGZ,IAAM1kG,EACFuN,EAAQ,GAAKA,EAAQ,EAAKG,QAAQzL,OAASoM,YAAgB,EAAKX,QAAQH,IAAU2N,YAAiBva,GAEvG,GAAIX,EAAO,CACP,IAAIrD,EAAOqD,EAAMmO,IAEjB,GADAxR,EAAOqL,IAAUlK,IAAInB,EAAKc,KAAOd,EACvB,CACN,IAAMlB,EAAQuM,IAAU68F,oBAExB78F,IAAUlF,gBAAgBrH,EAAOkB,MAlO1B,EAuOnB+jG,iBAAmB,SAAAnzF,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP,EAAKG,QAAQzL,QA3OjB,EA8OnBw+F,eAAiB,SAAAh7F,GACTA,GACAA,EAAMiX,kBAFY,IAMhBsT,EADmB,EAAK9S,MAAtBwnF,aACyB,EAEjC,OAAO,EAAK/D,UAAU3wE,EAAW,WACzBA,IAAc,EAAKtiB,QAAQzL,OAAS,GACpC,EAAKwhG,kBAxPE,EA6PnBA,aA7PmB,qBA6PJ,sBAAAjnG,EAAA,wHA7PI,EAiQnBokG,aAAe,SAAArzF,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GArQL,EAwQnBk6E,WAAa,SAAAhiF,GACLA,GACAA,EAAMiX,kBAFQ,IAMZsT,EADmB,EAAK9S,MAAtBwnF,aACyB,EAEjC,OAAO,EAAK/D,UAAU3wE,EAAW,WACX,IAAdA,GACA,EAAK0zE,cAlRE,EAuRnBA,SAvRmB,qBAuRR,sBAAAlnG,EAAA,wHAvRQ,EA2RnBmkG,UAAY,SAACpzF,EAAOxJ,GAChB,GAAIwJ,EAAQ,EAAG,OAAO,EACtB,GAAIA,GAAS,EAAKG,QAAQzL,OAAQ,OAAO,EAEzC,EAAK6a,SACD,CACI4nF,aAAcn3F,EACdqzF,aAAc,EAAKA,aAAarzF,GAChCmzF,iBAAkB,EAAKA,iBAAiBnzF,IAE5CxJ,GAVyB,IAarBpD,EAAW,EAAK6b,MAAhB7b,OAGR,OADA2N,YAAiC3N,EAAQ4M,EAAO,EAAKG,UAC9C,GAxSP,EAAKA,QAAU,GACf,EAAKqxD,gBAAkB,IAAIrD,GAAgB,EAAKnP,eAJjC,MAMY,EAAK/vC,MAAxB7b,EANO,EAMPA,OAAQoC,EAND,EAMCA,OAND,OAQf,EAAKma,MAAQ,CACT4mC,WAAYnjD,EACZmkG,WAAY/hG,EACZ2hG,aAAc,EACd9D,cAAc,EACdF,kBAAkB,EAClBmC,0BAA0B,GAdf,E,mFAkBGxvE,EAAWC,GAAY,IAAD,EACVtvB,KAAKwY,MAA3B7b,EADgC,EAChCA,OAAQE,EADwB,EACxBA,UADwB,EASpCmD,KAAKkZ,MANL6nF,EAHoC,EAGpCA,cACArE,EAJoC,EAIpCA,iBACAE,EALoC,EAKpCA,aACAmC,EANoC,EAMpCA,iBACA7yE,EAPoC,EAOpCA,WACA2yE,EARoC,EAQpCA,yBAGJ,OAAIxvE,EAAU1yB,SAAWA,IAIrB0yB,EAAUxyB,YAAcA,IAIxByyB,EAAUyxE,gBAAkBA,IAI5BzxE,EAAU8wE,kBAAoB1D,IAI9BptE,EAAUstE,eAAiBA,IAI3BttE,EAAUyvE,mBAAqBA,IAI/BzvE,EAAUpD,aAAeA,GAIzBoD,EAAUuvE,2BAA6BA,U,0CAO1B,IACTliG,EAAWqD,KAAKwY,MAAhB7b,OACFX,EAAQkb,YAAiBva,GAC/BqN,YAA8BrN,EAAQ,CAACX,IAEvCgE,KAAKs/F,YAAYtjG,GAEjBi/D,GAAgBC,IAAIl7D,KAAK+6D,mB,6CAIzBE,GAAgBiD,OAAOl+D,KAAK+6D,mB,+BAmOtB,IAAD,EACiB/6D,KAAKwY,MAAnB7b,EADH,EACGA,OAAQsR,EADX,EACWA,EADX,EAUDjO,KAAKkZ,MAPLwnF,EAHC,EAGDA,aACA9D,EAJC,EAIDA,aACAF,EALC,EAKDA,iBAEAxwE,GAPC,EAMD6yE,iBANC,EAOD7yE,YAKA3iB,GAZC,EAQDs1F,yBARC,EASDgB,cAGS,GACT3zE,IACA3iB,EAAQm3F,GAGZ,IACMM,EAAYz3F,GAAS,GAAKA,EAAQvJ,KAAK0J,QAAQzL,OAC/CjC,EAAQglG,GAAuB,IAAVz3F,EAAcc,YAAgBrK,KAAK0J,QAAQH,IAAU2N,YAAiBva,GAC3FwxB,EAAmB6yE,EAAYhhG,KAAK0J,QAAQH,GAAS,KAC9C5Q,EAASqD,EAAdmO,IAER,OACI,yBAAK0a,UAAWC,IAAW,eAAgB,yBACvC,yBAAKD,UAAU,uBACX,kBAAC,GAAD,CAAkBloB,OAAQA,EAAQoW,KAAMmb,YAAwBC,KAChE,kBAAC,GAAD,CACIngB,MAAOC,EAAE,eACTJ,SAAUqe,GAAc3iB,GAAS,EAAvB,UAA8BA,EAAQ,EAAtC,eAA8C2iB,GAAe,OAE3E,kBAAC,GAAD,CAA2Ble,MAAOC,EAAE,QAASlP,OAAQpG,EAAKc,GAAI2f,QAASpZ,KAAK68F,aAC5E,kBAAC,GAAD,CAA2B7uF,MAAOC,EAAE,WAAYlP,OAAQpG,EAAKc,GAAI2f,QAASpZ,KAAK6mD,eAC3E,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAyB74C,MAAOC,EAAE,UAAW0jC,UAAQ,EAACv4B,QAASpZ,KAAK+mD,cAChE,kBAACgR,GAAD,OAEJ,kBAAC,GAAD,CAAyB/pD,MAAOC,EAAE,SAAUmL,QAASpZ,KAAKgZ,aACtD,kBAACw6B,EAAA,EAAD,QAGR,yBAAK3uB,UAAU,uBAAuBzL,QAASpZ,KAAKy8F,gBAChD,yBAAK53E,UAAU,4BACX,kBAAC,GAAD,CAAmB8sB,UAAWirD,EAAcV,MAAI,EAAC9iF,QAASpZ,KAAKyjF,YAC3D,kBAAC,GAAD,QAIR,yBAAK5+D,UAAU,+BACX,kBAAC,GAAD,CAA2BloB,OAAQA,EAAQX,MAAOA,EAAOod,QAASpZ,KAAKy8F,kBAG3E,yBAAK53E,UAAU,6BACX,kBAAC,GAAD,CAAmB8sB,UAAW+qD,EAAkBR,MAAI,EAAC9iF,QAASpZ,KAAKy8F,gBAC/D,kBAAC,GAAD,CAAoB15F,MAAO,CAAE29B,UAAW,uBAtCjC,U,GAhUFxmB,IAAMC,WAoXxBE,iBAAkBomF,IC1X3BQ,I,mBACF,WAAYzoF,GAAQ,IAAD,8BACf,4CAAMA,KAyCV8Z,iCAAmC,SAAA/5B,GAAW,IAClCsD,EAAYtD,EAAZsD,QAER,EAAKid,SAAS,CACVooF,mBAAoBrlG,KA9CT,EAkDnBslG,uBAAyB,SAAA5oG,GAAW,IACxBoE,EAA6BpE,EAA7BoE,OAAQE,EAAqBtE,EAArBsE,UAAW+b,EAAUrgB,EAAVqgB,MAE3B,EAAKmyE,iBAAiBpuF,EAAQE,EAAW+b,IArD1B,EAwDnBwoF,uBAAyB,SAAA7oG,GAAW,IACxB2J,EAAkB3J,EAAlB2J,OAAQ0W,EAAUrgB,EAAVqgB,MAEhB,EAAKkyE,iBAAiB5oF,EAAQ0W,IA3Df,EA8DnB4yD,oCAAsC,SAAAjzE,GAClC,EAAKugB,SAAS,CACV2yD,qBAAsB54C,KAAiB44C,wBAhE5B,EAoEnB34C,iCAAmC,SAAAv6B,GAC/B,EAAKugB,SAAS,CAAEka,mBAAoBH,KAAiBG,sBArEtC,EAwEnBC,wCAA0C,SAAA16B,GACtC,EAAKugB,SAAS,CACVqa,0BAA2BN,KAAiBM,6BA1EjC,EA8EnBkuE,sBAAwB,SAAA9oG,GAAW,IACvB+nD,EAAS/nD,EAAT+nD,KAER,EAAKxnC,SAAS,CAAEyD,YAAa+jC,KAjFd,EAoFnByqC,iBAAmB,SAACpuF,GAA6C,IAArCE,EAAoC,uDAAxB,KAAM+b,EAAkB,wDACtDqqC,EAAgBpwB,KAAiBqwB,YACjCo+C,EAAsBzuE,KAAiBD,aACvCksE,EAAmBjsE,KAAiBylC,eAEtC1/C,EACI0oF,IAAwB3kG,GACxB3D,KAAgB8G,aAAa,CACzB,QAAS,2BACTnD,WAORsmD,IAAkBtmD,GAAUE,GAAaiiG,IAAqBjiG,GAC9D,EAAK0kG,iBAAiBvkF,QAAQwzE,kBAC1B3zF,GACA00F,YAAiB50F,EAAQE,IAEtBomD,IAAkBtmD,GAAWE,EAGpC7D,KAAgBmqD,UAAUxmD,EAAQE,GAFlC,EAAK0kG,iBAAiBvkF,QAAQ8zE,iBA1GnB,EAgHnBhG,iBAhHmB,sCAgHA,WAAO5oF,EAAQ0W,GAAf,eAAApgB,EAAA,wDACV0J,EADU,iEAGIlJ,KAAgBmI,KAAK,CACpC,QAAS,oBACTgE,QAASjD,EACTk5C,OAAO,IANI,OAGT//C,EAHS,OASf,EAAK0vF,iBAAiB1vF,EAAK5B,GAAI,KAAMmf,GATtB,yCAhHA,wDAGf,EAAK2oF,iBAAmBrnF,IAAM0a,YAE9B,EAAK1b,MAAQ,CACTuyD,qBAAsB54C,KAAiB44C,qBACvCz4C,mBAAoBH,KAAiBG,mBACrCG,0BAA2BN,KAAiBM,0BAC5C5W,YAAa,KACb2kF,mBAAoB,MAVT,E,iFAqBf97F,IAAUnM,GAAG,uBAAwB+G,KAAKohG,wBAC1Cr3F,IAAU9Q,GAAG,uBAAwB+G,KAAKmhG,wBAE1CtuE,KAAiB55B,GAAG,oCAAqC+G,KAAKwrE,qCAC9D34C,KAAiB55B,GAAG,iCAAkC+G,KAAK8yB,kCAC3DD,KAAiB55B,GAAG,wCAAyC+G,KAAKizB,yCAClEJ,KAAiB55B,GAAG,sBAAuB+G,KAAKqhG,uBAChD7uE,KAAiBv5B,GAAG,iCAAkC+G,KAAKsyB,oC,6CAI3DltB,IAAUjM,IAAI,uBAAwB6G,KAAKohG,wBAC3Cr3F,IAAU5Q,IAAI,uBAAwB6G,KAAKmhG,wBAE3CtuE,KAAiB15B,IAAI,oCAAqC6G,KAAKwrE,qCAC/D34C,KAAiB15B,IAAI,iCAAkC6G,KAAK8yB,kCAC5DD,KAAiB15B,IAAI,wCAAyC6G,KAAKizB,yCACnEJ,KAAiB15B,IAAI,sBAAuB6G,KAAKqhG,uBACjD7uE,KAAiBr5B,IAAI,iCAAkC6G,KAAKsyB,oC,+BAqFtD,IAAD,EAODtyB,KAAKkZ,MALLgoF,EAFC,EAEDA,mBACAz1B,EAHC,EAGDA,qBACAz4C,EAJC,EAIDA,mBACAG,EALC,EAKDA,0BACA5W,EANC,EAMDA,YAGJ,OACI,oCACI,yBACIsI,UAAWC,IAAW,OAAQ,CAC1B,oBAAqB2mD,KAEzB,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAez1C,IAAKh2B,KAAKuhG,mBACxB91B,GAAwB,kBAAC,GAAD,OAE5By1B,GAAsB,kBAAC,GAAkBA,GACzCluE,GAAsB,kBAAC,GAAgBA,GACvCG,GAA6B,kBAAC,GAAuBA,GACrD5W,GAAe,kBAAC,GAAkBA,Q,GAnJ5BrC,IAAMC,YA2JvB+kC,GAAUC,YACZqiD,IACAxpD,GAGWkH,aAAQ+hD","file":"static/js/4.86dea759.chunk.js","sourcesContent":["/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport EventEmitter from './EventEmitter';\r\nimport { getLocationId } from '../Utils/Message';\r\nimport { FILE_PRIORITY, IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH, THUMBNAIL_PRIORITY } from '../Constants';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nconst useReadFile = true;\r\nconst useDownloadFile = true;\r\n\r\nclass FileStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.reset();\r\n\r\n        this.addTdLibListener();\r\n    }\r\n\r\n    reset = () => {\r\n        this.callbacks = [];\r\n\r\n        //this.transactionCount = 0;\r\n        this.db = null;\r\n        this.urls = new WeakMap();\r\n        this.dataUrls = new Map();\r\n        this.items = new Map();\r\n        this.blobItems = new Map();\r\n        this.locationItems = new Map();\r\n\r\n        this.downloads = new Map();\r\n        this.uploads = new Map();\r\n    };\r\n\r\n    onUpdate = async update => {\r\n        switch (update['@type']) {\r\n            case 'updateAuthorizationState': {\r\n                await this.onUpdateAuthorizationState(update);\r\n\r\n                break;\r\n            }\r\n            case 'updateFile': {\r\n                this.set(update.file);\r\n\r\n                this.onUpdateFile(update);\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onClientUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'clientUpdateAudioThumbnailBlob': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateAudioBlob': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateDocumentBlob': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateSendFiles': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.on('update', this.onUpdate);\r\n        TdLibController.on('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.off('update', this.onUpdate);\r\n        TdLibController.off('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    onUpdateAuthorizationState = async update => {\r\n        if (!update) return;\r\n\r\n        const { authorization_state } = update;\r\n        if (!authorization_state) return;\r\n\r\n        switch (authorization_state['@type']) {\r\n            case 'authorizationStateWaitTdlibParameters': {\r\n                await this.initDB();\r\n                break;\r\n            }\r\n            case 'authorizationStateClosed': {\r\n                this.reset();\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateFile = update => {\r\n        if (!update) return;\r\n\r\n        const { file } = update;\r\n        if (!file) return;\r\n\r\n        this.handleDownloads(file);\r\n        this.handleUploads(file);\r\n    };\r\n\r\n    handleDownloads = file => {\r\n        const { arr, id, idb_key, local } = file;\r\n        delete file.arr;\r\n\r\n        if (!this.downloads.has(id)) return;\r\n        if (!local.is_downloading_completed) return;\r\n        if (!useReadFile && !idb_key && !arr) return;\r\n\r\n        const items = this.downloads.get(id);\r\n        if (!items) return;\r\n\r\n        this.downloads.delete(id);\r\n\r\n        const store = this.getStore();\r\n\r\n        items.forEach(item => {\r\n            switch (item['@type']) {\r\n                case 'animation': {\r\n                    this.handleAnimation(store, item, file, arr, null);\r\n                    break;\r\n                }\r\n                case 'audio': {\r\n                    this.handleAudio(store, item, file, arr, null);\r\n                    break;\r\n                }\r\n                case 'chat': {\r\n                    this.handleChat(store, item, file, arr);\r\n                    break;\r\n                }\r\n                case 'document': {\r\n                    this.handleDocument(store, item, file, arr, null);\r\n                    break;\r\n                }\r\n                case 'game': {\r\n                    this.handleGame(store, item, file, arr, null);\r\n                    break;\r\n                }\r\n                case 'location': {\r\n                    this.handleLocation(store, item, file, arr, null);\r\n                    break;\r\n                }\r\n                case 'message': {\r\n                    this.handleMessage(store, item, file, arr);\r\n                    break;\r\n                }\r\n                case 'pageBlockMap': {\r\n                    this.handlePageBlockMap(store, item, file, arr, null);\r\n                    break;\r\n                }\r\n                case 'photo': {\r\n                    this.handlePhoto(store, item, file, arr, null);\r\n                    break;\r\n                }\r\n                case 'sticker': {\r\n                    this.handleSticker(store, item, file, arr, null);\r\n                    break;\r\n                }\r\n                case 'video': {\r\n                    this.handleVideo(store, item, file, arr, null);\r\n                    break;\r\n                }\r\n                case 'videoNote': {\r\n                    this.handleVideoNote(store, item, file, arr, null);\r\n                    break;\r\n                }\r\n                case 'voiceNote': {\r\n                    this.handleVoiceNote(store, item, file, arr, null);\r\n                    break;\r\n                }\r\n                case 'user': {\r\n                    this.handleUser(store, item, file, arr);\r\n                    break;\r\n                }\r\n                default:\r\n                    console.error('FileStore.onUpdateFile unhandled item', item);\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n\r\n    handleUploads = file => {\r\n        const { id, remote } = file;\r\n        delete file.arr;\r\n\r\n        if (!this.uploads.has(id)) return;\r\n        if (remote.is_uploading_completed) return;\r\n\r\n        this.uploads.delete(id);\r\n    };\r\n\r\n    handleChat = (store, chat, file, arr) => {\r\n        if (!chat) return;\r\n\r\n        this.getLocalFile(\r\n            store,\r\n            file,\r\n            arr,\r\n            () => this.updateChatPhotoBlob(chat.id, file.id),\r\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\r\n        );\r\n    };\r\n\r\n    handleUser = (store, user, file, arr) => {\r\n        if (!user) return;\r\n\r\n        this.getLocalFile(\r\n            store,\r\n            file,\r\n            arr,\r\n            () => this.updateUserPhotoBlob(user.id, file.id),\r\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\r\n        );\r\n    };\r\n\r\n    handleMessage = (store, message, file, arr) => {\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageAnimation': {\r\n                const { animation } = content;\r\n\r\n                this.handleAnimation(store, animation, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageAudio': {\r\n                const { audio } = content;\r\n\r\n                this.handleAudio(store, audio, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageChatChangePhoto': {\r\n                const { photo } = content;\r\n\r\n                this.handlePhoto(store, photo, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageDocument': {\r\n                const { document } = content;\r\n\r\n                this.handleDocument(store, document, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageGame': {\r\n                const { game } = content;\r\n\r\n                this.handleGame(store, game, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageLocation': {\r\n                const { location } = content;\r\n\r\n                this.handleLocation(store, location, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messagePhoto': {\r\n                const { photo } = content;\r\n\r\n                this.handlePhoto(store, photo, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageSticker': {\r\n                const { sticker } = content;\r\n\r\n                this.handleSticker(store, sticker, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageText': {\r\n                const { web_page } = content;\r\n                if (!web_page) break;\r\n\r\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\r\n\r\n                if (animation) {\r\n                    this.handleAnimation(store, animation, file, arr, message);\r\n                }\r\n\r\n                if (audio) {\r\n                    this.handleAudio(store, audio, file, arr, message);\r\n                }\r\n\r\n                if (document) {\r\n                    this.handleDocument(store, document, file, arr, message);\r\n                }\r\n\r\n                if (photo) {\r\n                    this.handlePhoto(store, photo, file, arr, message);\r\n                }\r\n\r\n                if (sticker) {\r\n                    this.handleSticker(store, sticker, file, arr, message);\r\n                }\r\n\r\n                if (video) {\r\n                    this.handleVideo(store, video, file, arr, message);\r\n                }\r\n\r\n                if (voice_note) {\r\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\r\n                }\r\n\r\n                if (video_note) {\r\n                    this.handleVideoNote(store, video_note, file, arr, message);\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageVenue': {\r\n                const { venue } = content;\r\n                const { location } = venue;\r\n\r\n                this.handleLocation(store, location, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageVideo': {\r\n                const { video } = content;\r\n\r\n                this.handleVideo(store, video, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageVideoNote': {\r\n                const { video_note } = content;\r\n\r\n                this.handleVideoNote(store, video_note, file, arr, message);\r\n                break;\r\n            }\r\n            case 'messageVoiceNote': {\r\n                const { voice_note } = content;\r\n\r\n                this.handleVoiceNote(store, voice_note, file, arr, message);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    handleAnimation = (store, animation, file, arr, obj) => {\r\n        const chatId = obj ? obj.chat_id : 0;\r\n        const messageId = obj ? obj.id : 0;\r\n\r\n        if (animation.thumbnail) {\r\n            const source = animation.thumbnail.photo;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateAnimationThumbnailBlob(chatId, messageId, file.id),\r\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || animation)\r\n                );\r\n            }\r\n        }\r\n\r\n        if (animation.animation) {\r\n            const source = animation.animation;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateAnimationBlob(chatId, messageId, file.id),\r\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || animation)\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    handleAudio = (store, audio, file, arr, obj) => {\r\n        const chatId = obj ? obj.chat_id : 0;\r\n        const messageId = obj ? obj.id : 0;\r\n\r\n        if (audio.album_cover_thumbnail) {\r\n            const source = audio.album_cover_thumbnail.photo;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateAudioThumbnailBlob(chatId, messageId, file.id),\r\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || audio)\r\n                );\r\n            }\r\n        }\r\n\r\n        if (audio.audio) {\r\n            const source = audio.audio;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateAudioBlob(chatId, messageId, file.id),\r\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || audio)\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    handleGame = (store, game, file, arr, message) => {\r\n        if (!game) return;\r\n\r\n        const { animation, photo } = game;\r\n        if (photo) {\r\n            this.handlePhoto(store, photo, file, arr, message);\r\n        }\r\n\r\n        if (animation) {\r\n            this.handleAnimation(store, animation, file, arr, message);\r\n        }\r\n    };\r\n\r\n    handleDocument = (store, document, file, arr, obj) => {\r\n        const chatId = obj ? obj.chat_id : 0;\r\n        const messageId = obj ? obj.id : 0;\r\n\r\n        if (document.thumbnail) {\r\n            const { photo: source } = document.thumbnail;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateDocumentThumbnailBlob(chatId, messageId, file.id),\r\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || document)\r\n                );\r\n            }\r\n        }\r\n\r\n        if (document.document) {\r\n            const { document: source } = document;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateDocumentBlob(chatId, messageId, file.id),\r\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || document)\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    handleLocation = (store, location, file, arr, obj) => {\r\n        const chatId = obj ? obj.chat_id : 0;\r\n        const messageId = obj ? obj.id : 0;\r\n\r\n        const locationId = getLocationId(location);\r\n        if (locationId) {\r\n            const source = this.getLocationFile(locationId);\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\r\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || location)\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    handlePageBlockMap = (store, pageBlockMap, file, arr, obj) => {\r\n        const chatId = obj ? obj.chat_id : 0;\r\n        const messageId = obj ? obj.id : 0;\r\n\r\n        const { location } = pageBlockMap;\r\n        const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\r\n        if (locationId) {\r\n            const source = this.getLocationFile(locationId);\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\r\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || pageBlockMap)\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    handlePhoto = (store, photo, file, arr, obj) => {\r\n        const chatId = obj ? obj.chat_id : 0;\r\n        const messageId = obj ? obj.id : 0;\r\n\r\n        if (photo) {\r\n            for (let i = 0; i < photo.sizes.length; i++) {\r\n                const photoSize = photo.sizes[i];\r\n                if (photoSize) {\r\n                    const source = photoSize.photo;\r\n                    if (source && source.id === file.id) {\r\n                        this.getLocalFile(\r\n                            store,\r\n                            source,\r\n                            arr,\r\n                            () => this.updatePhotoBlob(chatId, messageId, file.id),\r\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || photo)\r\n                        );\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSticker = (store, sticker, file, arr, obj) => {\r\n        const chatId = obj ? obj.chat_id : 0;\r\n        const messageId = obj ? obj.id : 0;\r\n\r\n        if (sticker.thumbnail) {\r\n            const source = sticker.thumbnail.photo;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\r\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\r\n                );\r\n            }\r\n        }\r\n\r\n        if (sticker.sticker) {\r\n            const source = sticker.sticker;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\r\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\r\n        const chatId = obj ? obj.chat_id : 0;\r\n        const messageId = obj ? obj.id : 0;\r\n\r\n        if (voiceNote.voice) {\r\n            const source = voiceNote.voice;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateVoiceNoteBlob(chatId, messageId, file.id),\r\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || voiceNote)\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\r\n        const chatId = obj ? obj.chat_id : 0;\r\n        const messageId = obj ? obj.id : 0;\r\n\r\n        if (videoNote.thumbnail) {\r\n            const source = videoNote.thumbnail.photo;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateVideoNoteThumbnailBlob(chatId, messageId, file.id),\r\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || videoNote)\r\n                );\r\n            }\r\n        }\r\n\r\n        if (videoNote.video) {\r\n            const source = videoNote.video;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateVideoNoteBlob(chatId, messageId, file.id),\r\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || videoNote)\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    handleVideo = (store, video, file, arr, obj) => {\r\n        const chatId = obj ? obj.chat_id : 0;\r\n        const messageId = obj ? obj.id : 0;\r\n\r\n        if (video.thumbnail) {\r\n            const source = video.thumbnail.photo;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateVideoThumbnailBlob(chatId, messageId, file.id),\r\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || video)\r\n                );\r\n            }\r\n        }\r\n\r\n        if (video.video) {\r\n            const source = video.video;\r\n            if (source && source.id === file.id) {\r\n                this.getLocalFile(\r\n                    store,\r\n                    source,\r\n                    arr,\r\n                    () => this.updateVideoBlob(chatId, messageId, file.id),\r\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || video)\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    async initDB(callback) {\r\n        /*if (this.store) return;\r\n            if (this.initiatingDB) return;\r\n\r\n            this.initiatingDB = true;\r\n            this.store = localForage.createInstance({\r\n                name: 'tdlib'\r\n            });\r\n            this.initiatingDB = false;\r\n\r\n            return;*/\r\n        if (this.db) {\r\n            // console.log('[FileStore] db exists');\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        if (this.initiatingDB) {\r\n            // console.log('[FileStore] add callback');\r\n            if (callback) this.callbacks.push(callback);\r\n            return;\r\n        }\r\n\r\n        // console.log('[FileStore] start initDB');\r\n        if (callback) this.callbacks.push(callback);\r\n\r\n        this.initiatingDB = true;\r\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\r\n        this.initiatingDB = false;\r\n\r\n        // console.log('[FileStore] stop initDB');\r\n\r\n        if (this.callbacks.length) {\r\n            // console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\r\n            for (let i = 0; i < this.callbacks.length; i++) {\r\n                this.callbacks[i]();\r\n            }\r\n            this.callbacks = [];\r\n        }\r\n    }\r\n\r\n    openDB() {\r\n        return new Promise((resolve, reject) => {\r\n            const request = window.indexedDB.open('tdlib');\r\n            request.onsuccess = () => resolve(request.result);\r\n            request.onerror = () => reject(request.error);\r\n        });\r\n    }\r\n\r\n    getStore() {\r\n        if (useReadFile) {\r\n            return undefined;\r\n        }\r\n\r\n        //console.log('FileStore.getStore ' + this.transactionCount++);\r\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\r\n    }\r\n\r\n    getReadWriteStore() {\r\n        if (useReadFile) {\r\n            return undefined;\r\n        }\r\n\r\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\r\n    }\r\n\r\n    deleteLocalFile = (store, file) => {};\r\n\r\n    getLocalFile(store, file, arr, callback, faultCallback) {\r\n        if (!useDownloadFile) {\r\n            return;\r\n        }\r\n\r\n        if (useReadFile) {\r\n            file = this.get(file.id) || file;\r\n            if (file && file.local && !file.local.is_downloading_completed) {\r\n                faultCallback();\r\n                return;\r\n            }\r\n\r\n            (async file => {\r\n                // console.log('[fs] readFile file_id=' + file.id);\r\n                const response = await TdLibController.send({\r\n                    '@type': 'readFile',\r\n                    file_id: file.id\r\n                });\r\n\r\n                // console.log(`[fs] readFile result file_id=${file.id}`, file, response);\r\n                this.setBlob(file.id, response.data);\r\n            })(file).then(callback, faultCallback);\r\n\r\n            return;\r\n        }\r\n\r\n        let idb_key = file.idb_key;\r\n        if (!idb_key) {\r\n            file = this.get(file.id) || file;\r\n            idb_key = file.idb_key;\r\n        }\r\n\r\n        if (!idb_key && !arr) {\r\n            faultCallback();\r\n            return;\r\n        }\r\n\r\n        if (arr) {\r\n            file.blob = new Blob([arr]);\r\n            this.setBlob(file.id, file.blob);\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (file.blob) {\r\n            //callback();\r\n            return;\r\n        }\r\n\r\n        // if (this.getBlob(file.id)){\r\n        //     return;\r\n        // }\r\n\r\n        const request = store.get(idb_key);\r\n        request.onsuccess = event => {\r\n            const blob = event.target.result;\r\n\r\n            if (blob) {\r\n                file.blob = blob;\r\n                this.setBlob(file.id, file.blob);\r\n                callback();\r\n            } else {\r\n                faultCallback();\r\n            }\r\n        };\r\n        request.onerror = () => {\r\n            faultCallback();\r\n        };\r\n    }\r\n\r\n    getRemoteFile(fileId, priority, obj) {\r\n        if (!useDownloadFile) {\r\n            return;\r\n        }\r\n\r\n        const items = this.downloads.get(fileId) || [];\r\n        if (items.some(x => x === obj)) return;\r\n\r\n        items.push(obj);\r\n        this.downloads.set(fileId, items);\r\n\r\n        TdLibController.send({\r\n            '@type': 'downloadFile',\r\n            file_id: fileId,\r\n            priority: priority\r\n        });\r\n    }\r\n\r\n    cancelGetRemoteFile(fileId, obj) {\r\n        if (!this.downloads.has(fileId)) return;\r\n\r\n        if (!obj) {\r\n            this.downloads.delete(fileId);\r\n        } else {\r\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\r\n            this.downloads.set(fileId, items);\r\n        }\r\n\r\n        TdLibController.send({\r\n            '@type': 'cancelDownloadFile',\r\n            file_id: fileId,\r\n            only_if_pending: false\r\n        });\r\n    }\r\n\r\n    uploadFile(fileId, obj) {\r\n        if (this.uploads.has(fileId)) {\r\n            let items = this.uploads.get(fileId);\r\n            items.push(obj);\r\n        } else {\r\n            this.uploads.set(fileId, [obj]);\r\n        }\r\n\r\n        console.log('[perf] uploadFile file_id=' + fileId);\r\n    }\r\n\r\n    cancelUploadFile(fileId, obj) {\r\n        if (this.uploads.has(fileId)) {\r\n            this.uploads.delete(fileId);\r\n            console.log('cancel_upload_message id=' + obj.id);\r\n            TdLibController.send({\r\n                '@type': 'deleteMessages',\r\n                chat_id: obj.chat_id,\r\n                message_ids: [obj.id],\r\n                revoke: true\r\n            });\r\n        }\r\n    }\r\n\r\n    get = fileId => {\r\n        return this.items.get(fileId);\r\n    };\r\n\r\n    set = file => {\r\n        this.items.set(file.id, file);\r\n    };\r\n\r\n    getBlob = fileId => {\r\n        return this.blobItems.get(fileId);\r\n    };\r\n\r\n    setBlob = (fileId, blob) => {\r\n        this.blobItems.set(fileId, blob);\r\n    };\r\n\r\n    deleteBlob = fileId => {\r\n        this.blobItems.delete(fileId);\r\n    };\r\n\r\n    getLocationFile = locationId => {\r\n        const fileId = this.locationItems.get(locationId);\r\n\r\n        return this.get(fileId);\r\n    };\r\n\r\n    setLocationFile = (locationId, file) => {\r\n        this.locationItems.set(locationId, file.id);\r\n\r\n        this.set(file);\r\n    };\r\n\r\n    getDataUrl = id => {\r\n        if (!id) {\r\n            return null;\r\n        }\r\n\r\n        if (this.dataUrls.has(id)) {\r\n            return this.dataUrls.get(id);\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    setDataUrl = (id, dataUrl) => {\r\n        this.dataUrls.set(id, dataUrl);\r\n    };\r\n\r\n    deleteDataUrl = id => {\r\n        this.dataUrls.delete(id);\r\n    };\r\n\r\n    getBlobUrl = blob => {\r\n        if (!blob) {\r\n            return null;\r\n        }\r\n\r\n        if (this.urls.has(blob)) {\r\n            return this.urls.get(blob);\r\n        }\r\n\r\n        const url = URL.createObjectURL(blob);\r\n        this.urls.set(blob, url);\r\n\r\n        return url;\r\n    };\r\n\r\n    deleteBlobUrl = blob => {\r\n        if (this.urls.has(blob)) {\r\n            this.urls.delete(blob);\r\n        }\r\n    };\r\n\r\n    updatePhotoBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdatePhotoBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateAudioThumbnailBlob',\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateAudioBlob = (chatId, messageId, fileId) => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateAudioBlob',\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateVoiceNoteBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateVideoNoteBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateAnimationThumbnailBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateAnimationBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateAnimationBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateDocumentBlob = (chatId, messageId, fileId) => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDocumentBlob',\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateVideoThumbnailBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateVideoBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateVideoBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateStickerThumbnailBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateStickerBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateStickerBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateLocationBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateLocationBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\r\n        this.emit('clientUpdateDocumentThumbnailBlob', {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            fileId: fileId\r\n        });\r\n    };\r\n\r\n    updateUserPhotoBlob(userId, fileId) {\r\n        this.emit('clientUpdateUserBlob', {\r\n            userId: userId,\r\n            fileId: fileId\r\n        });\r\n    }\r\n\r\n    updateChatPhotoBlob(chatId, fileId) {\r\n        this.emit('clientUpdateChatBlob', {\r\n            chatId: chatId,\r\n            fileId: fileId\r\n        });\r\n    }\r\n}\r\n\r\nconst store = new FileStore();\r\nwindow.file = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\r\nimport { getChatUserId } from './Chat';\r\nimport { getProfilePhoto } from './User';\r\nimport { getLocationId } from './Message';\r\nimport {\r\n    FILE_PRIORITY,\r\n    IV_LOCATION_HEIGHT,\r\n    IV_LOCATION_WIDTH,\r\n    IV_PHOTO_SIZE,\r\n    LOCATION_HEIGHT,\r\n    LOCATION_SCALE,\r\n    LOCATION_WIDTH,\r\n    LOCATION_ZOOM,\r\n    PHOTO_BIG_SIZE,\r\n    PHOTO_SIZE,\r\n    PRELOAD_ANIMATION_SIZE,\r\n    PRELOAD_AUDIO_SIZE,\r\n    PRELOAD_DOCUMENT_SIZE,\r\n    PRELOAD_STICKER_SIZE,\r\n    PRELOAD_VIDEO_SIZE,\r\n    PRELOAD_VIDEONOTE_SIZE,\r\n    PRELOAD_VOICENOTE_SIZE,\r\n    THUMBNAIL_PRIORITY\r\n} from '../Constants';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport FileStore from '../Stores/FileStore';\r\nimport MessageStore from '../Stores/MessageStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nfunction getSizeString(size) {\r\n    if (!size) return `0 B`;\r\n\r\n    if (size < 1024) {\r\n        return `${size} B`;\r\n    }\r\n\r\n    if (size < 1024 * 1024) {\r\n        return `${(size / 1024).toFixed(1)} KB`;\r\n    }\r\n\r\n    if (size < 1024 * 1024 * 1024) {\r\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\r\n    }\r\n\r\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\r\n}\r\n\r\nfunction getFileSize(file) {\r\n    if (!file) return '';\r\n\r\n    let size = file.size;\r\n    if (!size) return '';\r\n\r\n    return getSizeString(size);\r\n}\r\n\r\nfunction getBigPhoto(photo) {\r\n    if (!photo) return null;\r\n\r\n    return photo.big;\r\n}\r\n\r\nfunction saveData(data, filename, mime) {\r\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\r\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\r\n        // IE workaround for \"HTML7007: One or more blob URLs were\r\n        // revoked by closing the blob for which they were created.\r\n        // These URLs will no longer resolve as the data backing\r\n        // the URL has been freed.\"\r\n        window.navigator.msSaveBlob(blob, filename);\r\n    } else {\r\n        let blobURL = window.URL.createObjectURL(blob);\r\n        let tempLink = document.createElement('a');\r\n        tempLink.style.display = 'none';\r\n        tempLink.href = blobURL;\r\n        tempLink.setAttribute('download', filename);\r\n\r\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\r\n        // target if the browser does not support the HTML5 download attribute.\r\n        // This allows you to download files in desktop safari if pop up blocking\r\n        // is enabled.\r\n        if (typeof tempLink.download === 'undefined') {\r\n            tempLink.setAttribute('target', '_blank');\r\n        }\r\n\r\n        document.body.appendChild(tempLink);\r\n        tempLink.click();\r\n        document.body.removeChild(tempLink);\r\n        window.URL.revokeObjectURL(blobURL);\r\n    }\r\n}\r\n\r\nfunction saveBlob(blob, filename) {\r\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\r\n        // IE workaround for \"HTML7007: One or more blob URLs were\r\n        // revoked by closing the blob for which they were created.\r\n        // These URLs will no longer resolve as the data backing\r\n        // the URL has been freed.\"\r\n        window.navigator.msSaveBlob(blob, filename);\r\n    } else {\r\n        let blobURL = window.URL.createObjectURL(blob);\r\n        let tempLink = document.createElement('a');\r\n        tempLink.style.display = 'none';\r\n        tempLink.href = blobURL;\r\n        tempLink.setAttribute('download', filename);\r\n\r\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\r\n        // target if the browser does not support the HTML5 download attribute.\r\n        // This allows you to download files in desktop safari if pop up blocking\r\n        // is enabled.\r\n        if (typeof tempLink.download === 'undefined') {\r\n            tempLink.setAttribute('target', '_blank');\r\n        }\r\n\r\n        document.body.appendChild(tempLink);\r\n        tempLink.click();\r\n        document.body.removeChild(tempLink);\r\n        window.URL.revokeObjectURL(blobURL);\r\n    }\r\n}\r\n\r\nasync function loadReplies(store, chatId, messageIds) {\r\n    if (!chatId) return;\r\n    if (!messageIds) return;\r\n    if (!messageIds.length) return;\r\n\r\n    const result = await TdLibController.send({\r\n        '@type': 'getMessages',\r\n        chat_id: chatId,\r\n        message_ids: messageIds\r\n    });\r\n\r\n    result.messages = result.messages.map((message, i) => {\r\n        return (\r\n            message || {\r\n                '@type': 'deletedMessage',\r\n                chat_id: chatId,\r\n                id: messageIds[i],\r\n                content: null\r\n            }\r\n        );\r\n    });\r\n\r\n    MessageStore.setItems(result.messages);\r\n\r\n    for (let i = messageIds.length - 1; i >= 0; i--) {\r\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\r\n    }\r\n\r\n    store = FileStore.getStore();\r\n\r\n    loadReplyContents(store, result.messages);\r\n}\r\n\r\nfunction loadReplyContents(store, messages) {\r\n    for (let i = messages.length - 1; i >= 0; i--) {\r\n        const message = messages[i];\r\n        if (!message) {\r\n            continue;\r\n        }\r\n\r\n        const { content } = message;\r\n        if (content) {\r\n            switch (content['@type']) {\r\n                case 'messageAnimation': {\r\n                    const { animation } = content;\r\n\r\n                    loadAnimationThumbnailContent(store, animation, message);\r\n                    break;\r\n                }\r\n                case 'messageAudio': {\r\n                    const { audio } = content;\r\n\r\n                    loadAudioThumbnailContent(store, audio, message);\r\n                    break;\r\n                }\r\n                case 'messageChatChangePhoto': {\r\n                    const { photo } = content;\r\n\r\n                    loadPhotoContent(store, photo, message);\r\n                    break;\r\n                }\r\n                case 'messageDocument': {\r\n                    const { document } = content;\r\n\r\n                    loadDocumentThumbnailContent(store, document, message);\r\n                    break;\r\n                }\r\n                case 'messageGame': {\r\n                    const { game } = content;\r\n\r\n                    loadGameThumbnailContent(store, game, message);\r\n                    break;\r\n                }\r\n                case 'messagePhoto': {\r\n                    const { photo } = content;\r\n\r\n                    loadPhotoContent(store, photo, message);\r\n                    break;\r\n                }\r\n                case 'messageSticker': {\r\n                    const { sticker } = content;\r\n\r\n                    loadStickerThumbnailContent(store, sticker, message);\r\n                    break;\r\n                }\r\n                case 'messageText': {\r\n                    const { web_page } = content;\r\n                    if (!web_page) break;\r\n\r\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\r\n\r\n                    if (photo) {\r\n                        loadPhotoContent(store, photo, message);\r\n                        break;\r\n                    }\r\n\r\n                    if (animation) {\r\n                        loadAnimationThumbnailContent(store, animation, message);\r\n                        break;\r\n                    }\r\n\r\n                    if (audio) {\r\n                        loadAudioThumbnailContent(store, audio, message);\r\n                        break;\r\n                    }\r\n\r\n                    if (document) {\r\n                        loadDocumentThumbnailContent(store, document, message);\r\n                        break;\r\n                    }\r\n\r\n                    if (sticker) {\r\n                        loadStickerThumbnailContent(store, sticker, message);\r\n                        break;\r\n                    }\r\n\r\n                    if (video) {\r\n                        loadVideoThumbnailContent(store, video, message);\r\n                        break;\r\n                    }\r\n\r\n                    if (video_note) {\r\n                        loadVideoNoteThumbnailContent(store, video_note, message);\r\n                        break;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageVideo': {\r\n                    const { video } = content;\r\n\r\n                    loadVideoThumbnailContent(store, video, message);\r\n                    break;\r\n                }\r\n                case 'messageVideoNote': {\r\n                    const { video_note } = content;\r\n\r\n                    loadVideoNoteThumbnailContent(store, video_note, message);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\r\n    if (!audio) return;\r\n\r\n    let { audio: file } = audio;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id, size } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateAudioBlob(chatId, messageId, id),\r\n        () => {\r\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\r\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || audio);\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nfunction loadAudioThumbnailContent(store, audio, message) {\r\n    if (!audio) return false;\r\n\r\n    const { album_cover_thumbnail: photoSize } = audio;\r\n    if (!photoSize) return false;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return false;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(file.id);\r\n    if (blob) return true;\r\n\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateAudioThumbnailBlob(chatId, messageId, id),\r\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || audio)\r\n    );\r\n\r\n    return true;\r\n}\r\n\r\nfunction cancelLoadAnimationContent(animation) {\r\n    const { animation: file } = animation;\r\n    if (!file) return;\r\n\r\n    const { id } = file;\r\n\r\n    const blob = file.blob || FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    FileStore.cancelGetRemoteFile(id);\r\n}\r\n\r\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\r\n    if (!animation) return;\r\n\r\n    let { animation: file } = animation;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id, size } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateAnimationBlob(chatId, messageId, id),\r\n        () => {\r\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\r\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || animation);\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nfunction cancelLoadAnimationThumbnailContent(animation) {\r\n    if (!animation) return;\r\n\r\n    const { thumbnail: photoSize } = animation;\r\n    if (!photoSize) return;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    FileStore.cancelGetRemoteFile(id);\r\n}\r\n\r\nfunction loadAnimationThumbnailContent(store, animation, message) {\r\n    if (!animation) return false;\r\n\r\n    const { thumbnail: photoSize } = animation;\r\n    if (!photoSize) return false;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return false;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(file.id);\r\n    if (blob) return true;\r\n\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateAnimationThumbnailBlob(chatId, messageId, id),\r\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || animation)\r\n    );\r\n\r\n    return true;\r\n}\r\n\r\nfunction loadContactContent(store, contact, message) {\r\n    if (!contact) return;\r\n    if (!message) return;\r\n\r\n    const { user_id } = contact;\r\n    const user = UserStore.get(user_id);\r\n    if (!user) return;\r\n\r\n    loadUserContent(store, user);\r\n}\r\n\r\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\r\n    if (!document) return;\r\n\r\n    let { document: file } = document;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id, size } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateDocumentBlob(chatId, messageId, id),\r\n        () => {\r\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\r\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || document);\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nfunction loadDocumentThumbnailContent(store, document, message) {\r\n    if (!document) return false;\r\n\r\n    const { thumbnail: photoSize } = document;\r\n    if (!photoSize) return false;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return false;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(file.id);\r\n    if (blob) return true;\r\n\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateDocumentThumbnailBlob(chatId, messageId, id),\r\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || document)\r\n    );\r\n\r\n    return true;\r\n}\r\n\r\nfunction loadGameContent(store, game, message, useFileSize = true) {\r\n    if (!game) return;\r\n\r\n    const { animation } = game;\r\n\r\n    loadAnimationContent(store, animation, message, useFileSize);\r\n}\r\n\r\nfunction loadGameThumbnailContent(store, game, message) {\r\n    if (!game) return false;\r\n\r\n    const { photo, animation } = game;\r\n    if (loadAnimationThumbnailContent(store, animation, message)) {\r\n        return true;\r\n    }\r\n\r\n    loadPhotoContent(store, photo, message);\r\n    return true;\r\n}\r\n\r\nasync function loadPageBlockMapContent(store, pageBlockMap, message) {\r\n    if (!pageBlockMap) return;\r\n\r\n    const { location } = pageBlockMap;\r\n    const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\r\n    if (!locationId) return;\r\n\r\n    let file = FileStore.getLocationFile(locationId);\r\n    if (!file) {\r\n        file = await TdLibController.send({\r\n            '@type': 'getMapThumbnailFile',\r\n            location,\r\n            width: IV_LOCATION_WIDTH,\r\n            height: IV_LOCATION_HEIGHT,\r\n            zoom: LOCATION_ZOOM,\r\n            scale: LOCATION_SCALE,\r\n            chat_id: message ? message.chat_id : 0\r\n        });\r\n        FileStore.setLocationFile(locationId, file);\r\n\r\n        store = FileStore.getStore();\r\n    }\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(file.id);\r\n    if (blob) return;\r\n\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\r\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || pageBlockMap)\r\n    );\r\n}\r\n\r\nasync function loadLocationContent(store, location, message) {\r\n    if (!location) return;\r\n\r\n    const locationId = getLocationId(location);\r\n    if (!locationId) return;\r\n\r\n    let file = FileStore.getLocationFile(locationId);\r\n    if (!file) {\r\n        file = await TdLibController.send({\r\n            '@type': 'getMapThumbnailFile',\r\n            location,\r\n            width: LOCATION_WIDTH,\r\n            height: LOCATION_HEIGHT,\r\n            zoom: LOCATION_ZOOM,\r\n            scale: LOCATION_SCALE,\r\n            chat_id: message ? message.chat_id : 0\r\n        });\r\n        FileStore.setLocationFile(locationId, file);\r\n\r\n        store = FileStore.getStore();\r\n    }\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(file.id);\r\n    if (blob) return;\r\n\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\r\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || location)\r\n    );\r\n}\r\n\r\nfunction cancelLoadBigPhotoContent(photo) {\r\n    if (!photo) return;\r\n\r\n    const { sizes } = photo;\r\n    if (!sizes) return;\r\n\r\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\r\n    if (!photoSize) return;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    FileStore.cancelGetRemoteFile(id);\r\n}\r\n\r\nfunction loadBigPhotoContent(store, photo, message) {\r\n    if (!photo) return;\r\n\r\n    const { sizes } = photo;\r\n    if (!sizes) return;\r\n\r\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\r\n    if (!photoSize) return;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\r\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\r\n    );\r\n}\r\n\r\nfunction loadPhotoContent(store, photo, message, displaySize = PHOTO_SIZE) {\r\n    if (!photo) return;\r\n\r\n    const { sizes } = photo;\r\n    if (!sizes) return;\r\n\r\n    const photoSize = getPhotoSize(sizes, displaySize);\r\n    if (!photoSize) return;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\r\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\r\n    );\r\n}\r\n\r\nfunction loadPhotoThumbnailContent(store, photo, message) {\r\n    if (!photo) return false;\r\n    if (!message) return false;\r\n\r\n    const thumbSize = getPhotoThumbnailSize(photo.sizes);\r\n    if (!thumbSize) return false;\r\n\r\n    const photoSize = getPhotoSize(photo.sizes);\r\n    if (photoSize === thumbSize) return;\r\n\r\n    let { photo: file } = thumbSize;\r\n    if (!file) return false;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return true;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\r\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\r\n    );\r\n\r\n    return true;\r\n}\r\n\r\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\r\n    if (!sticker) return;\r\n\r\n    let { sticker: file } = sticker;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id, size } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\r\n        () => {\r\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\r\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nfunction loadStickerThumbnailContent(store, sticker, message) {\r\n    if (!sticker) return false;\r\n\r\n    const { thumbnail: photoSize } = sticker;\r\n    if (!photoSize) return false;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return false;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return true;\r\n\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\r\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\r\n    );\r\n\r\n    return true;\r\n}\r\n\r\nfunction cancelLoadVideoContent(video) {\r\n    if (!video) return;\r\n\r\n    let { video: file } = video;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    FileStore.cancelGetRemoteFile(id);\r\n}\r\n\r\nfunction loadVideoContent(store, video, message, useFileSize = true) {\r\n    if (!video) return;\r\n\r\n    let { video: file } = video;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id, size } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateVideoBlob(chatId, messageId, id),\r\n        () => {\r\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\r\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || video);\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nfunction cancelLoadVideoThumbnailContent(video) {\r\n    if (!video) return;\r\n\r\n    const { thumbnail: photoSize } = video;\r\n    if (!photoSize) return false;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return false;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return true;\r\n\r\n    FileStore.cancelGetRemoteFile(id);\r\n}\r\n\r\nfunction loadVideoThumbnailContent(store, video, message) {\r\n    if (!video) return false;\r\n\r\n    const { thumbnail: photoSize } = video;\r\n    if (!photoSize) return false;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return false;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return true;\r\n\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateVideoThumbnailBlob(chatId, messageId, id),\r\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || video)\r\n    );\r\n\r\n    return true;\r\n}\r\n\r\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\r\n    if (!videoNote) return;\r\n\r\n    let { video: file } = videoNote;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id, size } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateVideoNoteBlob(chatId, messageId, id),\r\n        () => {\r\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\r\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || videoNote);\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\r\n    if (!videoNote) return false;\r\n\r\n    const { thumbnail: photoSize } = videoNote;\r\n    if (!photoSize) return false;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return false;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return true;\r\n\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateVideoNoteThumbnailBlob(chatId, messageId, id),\r\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || videoNote)\r\n    );\r\n\r\n    return true;\r\n}\r\n\r\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\r\n    if (!voiceNote) return;\r\n\r\n    let { voice: file } = voiceNote;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    const { id, size } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateVoiceNoteBlob(chatId, messageId, id),\r\n        () => {\r\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\r\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || voiceNote);\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nfunction loadMessageContents(store, messages) {\r\n    const users = new Map();\r\n    let chatId = 0;\r\n    const replies = new Map();\r\n\r\n    for (let i = messages.length - 1; i >= 0; i--) {\r\n        const message = messages[i];\r\n        if (!message) {\r\n            continue;\r\n        }\r\n\r\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\r\n\r\n        if (sender_user_id) {\r\n            users.set(sender_user_id, sender_user_id);\r\n        }\r\n\r\n        if (reply_to_message_id) {\r\n            chatId = chat_id;\r\n            replies.set(reply_to_message_id, reply_to_message_id);\r\n        }\r\n\r\n        if (content) {\r\n            switch (content['@type']) {\r\n                case 'messageAnimation': {\r\n                    const { animation } = content;\r\n\r\n                    loadAnimationContent(store, animation, message);\r\n                    loadAnimationThumbnailContent(store, animation, message);\r\n                    break;\r\n                }\r\n                case 'messageAudio': {\r\n                    const { audio } = content;\r\n\r\n                    loadAudioContent(store, audio, message);\r\n                    loadAudioThumbnailContent(store, audio, message);\r\n                    break;\r\n                }\r\n                case 'messageChatChangePhoto': {\r\n                    const { photo } = content;\r\n\r\n                    loadPhotoContent(store, photo, message);\r\n                    loadBigPhotoContent(store, photo, message);\r\n                    break;\r\n                }\r\n                case 'messageContact': {\r\n                    const { contact } = content;\r\n\r\n                    loadContactContent(store, contact, message);\r\n                    break;\r\n                }\r\n                case 'messageDocument': {\r\n                    const { document } = content;\r\n\r\n                    loadDocumentContent(store, document, message);\r\n                    loadDocumentThumbnailContent(store, document, message);\r\n                    break;\r\n                }\r\n                case 'messageGame': {\r\n                    const { game } = content;\r\n\r\n                    loadGameContent(store, game, message);\r\n                    loadGameThumbnailContent(store, game, message);\r\n                    break;\r\n                }\r\n                case 'messageLocation': {\r\n                    const { location } = content;\r\n\r\n                    loadLocationContent(store, location, message);\r\n                    break;\r\n                }\r\n                case 'messageText': {\r\n                    const { web_page } = content;\r\n                    if (!web_page) {\r\n                        break;\r\n                    }\r\n\r\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\r\n                    let loadPhoto = true;\r\n\r\n                    if (animation) {\r\n                        loadAnimationContent(store, animation, message);\r\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\r\n                    }\r\n\r\n                    if (audio) {\r\n                        loadAudioContent(store, audio, message);\r\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\r\n                    }\r\n\r\n                    if (document) {\r\n                        loadDocumentContent(store, document, message);\r\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\r\n                    }\r\n\r\n                    if (sticker) {\r\n                        loadStickerContent(store, sticker, message);\r\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\r\n                    }\r\n\r\n                    if (video) {\r\n                        // loadVideoContent(store, video, message); // start loading only on video click event\r\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\r\n                    }\r\n\r\n                    if (video_note) {\r\n                        loadVideoNoteContent(store, video_note, message);\r\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\r\n                    }\r\n\r\n                    if (voice_note) {\r\n                        loadVoiceNoteContent(store, voice_note, message);\r\n                    }\r\n\r\n                    if (loadPhoto) {\r\n                        loadBigPhotoContent(store, photo, message);\r\n                        loadPhotoContent(store, photo, message);\r\n                        loadPhotoThumbnailContent(store, photo, message);\r\n                    }\r\n                    break;\r\n                }\r\n                case 'messagePhoto': {\r\n                    const { photo } = content;\r\n\r\n                    loadBigPhotoContent(store, photo, message);\r\n                    loadPhotoContent(store, photo, message);\r\n                    loadPhotoThumbnailContent(store, photo, message);\r\n                    break;\r\n                }\r\n                case 'messageSticker': {\r\n                    const { sticker } = content;\r\n\r\n                    loadStickerContent(store, sticker, message);\r\n                    loadStickerThumbnailContent(store, sticker, message);\r\n                    break;\r\n                }\r\n                case 'messageVenue': {\r\n                    const { venue } = content;\r\n                    const { location } = venue;\r\n\r\n                    loadLocationContent(store, location, message);\r\n                    break;\r\n                }\r\n                case 'messageVideo': {\r\n                    const { video } = content;\r\n\r\n                    // loadVideoContent(store, video, message); // start loading only on video click event\r\n                    loadVideoThumbnailContent(store, video, message);\r\n                    break;\r\n                }\r\n                case 'messageVideoNote': {\r\n                    const { video_note } = content;\r\n\r\n                    loadVideoNoteContent(store, video_note, message);\r\n                    loadVideoNoteThumbnailContent(store, video_note, message);\r\n                    break;\r\n                }\r\n                case 'messageVoiceNote': {\r\n                    const { voice_note } = content;\r\n\r\n                    loadVoiceNoteContent(store, voice_note, message);\r\n                    break;\r\n                }\r\n                default: {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadUsersContent(store, [...users.keys()]);\r\n    loadReplies(store, chatId, [...replies.keys()]);\r\n}\r\n\r\nexport function saveMedia(media, message) {\r\n    if (!media) return;\r\n\r\n    switch (media['@type']) {\r\n        case 'animation': {\r\n            saveAnimation(media, message);\r\n            break;\r\n        }\r\n        case 'document': {\r\n            saveDocument(media, message);\r\n            break;\r\n        }\r\n        case 'photo': {\r\n            savePhoto(media, message);\r\n            break;\r\n        }\r\n        case 'video': {\r\n            saveVideo(media, message);\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nfunction saveAnimation(animation, message) {\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    if (!animation) return;\r\n\r\n    const { animation: file, file_name } = animation;\r\n    if (!file) return;\r\n\r\n    const { id: fileId } = file;\r\n\r\n    saveOrDownload(file, file_name || fileId, message || animation, () =>\r\n        FileStore.updateAnimationBlob(chatId, messageId, fileId)\r\n    );\r\n}\r\n\r\nfunction saveDocument(document, message) {\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    if (!document) return;\r\n\r\n    const { document: file, file_name } = document;\r\n    if (!file) return;\r\n\r\n    const { id: fileId } = file;\r\n\r\n    saveOrDownload(file, file_name || fileId, message || document, () =>\r\n        FileStore.updateDocumentBlob(chatId, messageId, fileId)\r\n    );\r\n}\r\n\r\nfunction saveVideo(video, message) {\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    if (!video) return;\r\n\r\n    const { video: file, file_name } = video;\r\n    if (!file) return;\r\n\r\n    const { id: fileId } = file;\r\n\r\n    saveOrDownload(file, file_name || fileId, message || video, () =>\r\n        FileStore.updateVideoBlob(chatId, messageId, fileId)\r\n    );\r\n}\r\n\r\nfunction savePhoto(photo, message) {\r\n    const chatId = message ? message.chat_id : 0;\r\n    const messageId = message ? message.id : 0;\r\n\r\n    if (!photo) return;\r\n\r\n    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\r\n    if (!photoSize) return;\r\n\r\n    const { photo: file } = photoSize;\r\n    if (!file) return;\r\n\r\n    const { id: fileId } = file;\r\n\r\n    saveOrDownload(file, fileId + '.jpg', message || photo, () => FileStore.updatePhotoBlob(chatId, messageId, fileId));\r\n}\r\n\r\nfunction saveOrDownload(file, fileName, obj, callback) {\r\n    if (!file) return;\r\n    if (!fileName) return;\r\n\r\n    if (file.arr) {\r\n        saveData(file.arr, fileName);\r\n        return;\r\n    }\r\n\r\n    let blob = FileStore.getBlob(file.id) || file.blob;\r\n    if (blob) {\r\n        saveBlob(blob, fileName);\r\n        return;\r\n    }\r\n\r\n    download(file, obj, () => {\r\n        if (callback) callback();\r\n\r\n        blob = FileStore.getBlob(file.id) || file.blob;\r\n        if (blob) {\r\n            saveBlob(blob, fileName);\r\n        }\r\n    });\r\n}\r\n\r\nfunction download(file, obj, callback) {\r\n    if (!file) return;\r\n    const { id, local } = file;\r\n\r\n    const blob = FileStore.getBlob(id);\r\n    if (blob) {\r\n        return;\r\n    }\r\n\r\n    if (local.is_downloading_completed) {\r\n        const store = FileStore.getStore();\r\n\r\n        FileStore.getLocalFile(store, file, null, callback, () => {\r\n            if (local.can_be_downloaded) {\r\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\r\n            }\r\n        });\r\n        return;\r\n    }\r\n\r\n    if (local.can_be_downloaded) {\r\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\r\n    }\r\n}\r\n\r\nfunction getViewerThumbnail(media) {\r\n    if (!media) return [0, 0, null];\r\n\r\n    switch (media['@type']) {\r\n        case 'animation': {\r\n            const { thumbnail } = media;\r\n            if (thumbnail) {\r\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\r\n            }\r\n            break;\r\n        }\r\n        case 'document': {\r\n            const { thumbnail } = media;\r\n            if (thumbnail) {\r\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\r\n            }\r\n            break;\r\n        }\r\n        case 'photo': {\r\n            return getViewerFile(media, PHOTO_SIZE);\r\n        }\r\n        case 'video': {\r\n            const { thumbnail } = media;\r\n            if (thumbnail) {\r\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\r\n            }\r\n            break;\r\n        }\r\n        default: {\r\n            return [0, 0, null];\r\n        }\r\n    }\r\n\r\n    return [0, 0, null];\r\n}\r\n\r\nfunction getMediaPreviewFile(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return [0, 0, null];\r\n\r\n    const { content } = message;\r\n    if (!content) return [0, 0, null];\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAnimation': {\r\n            const { animation } = content;\r\n            if (animation && animation.thumbnail) {\r\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\r\n            }\r\n            break;\r\n        }\r\n        case 'messageChatChangePhoto': {\r\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\r\n        }\r\n        case 'messageDocument': {\r\n            const { document } = content;\r\n            if (document) {\r\n                return [50, 50, document.document];\r\n            }\r\n            break;\r\n        }\r\n        case 'messagePhoto': {\r\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            if (web_page) {\r\n                const { animation, document, video, photo } = web_page;\r\n\r\n                if (animation && animation.thumbnail) {\r\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\r\n                }\r\n\r\n                if (document) {\r\n                    return [50, 50, document.document];\r\n                }\r\n\r\n                if (video && video.thumbnail) {\r\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\r\n                }\r\n\r\n                if (photo) {\r\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 'messageVideo': {\r\n            const { video } = content;\r\n            if (video.thumbnail) {\r\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\r\n            }\r\n            break;\r\n        }\r\n        default: {\r\n            return [0, 0, null];\r\n        }\r\n    }\r\n\r\n    return [0, 0, null];\r\n}\r\n\r\nfunction getViewerFile(media, size) {\r\n    if (!size) return [0, 0, null, ''];\r\n\r\n    switch (media['@type']) {\r\n        case 'animation': {\r\n            return [media.width, media.height, media.animation, media.mime_type];\r\n        }\r\n        case 'photo': {\r\n            const photoSize = getSize(media.sizes, size);\r\n            if (photoSize) {\r\n                return [photoSize.width, photoSize.height, photoSize.photo, ''];\r\n            }\r\n            break;\r\n        }\r\n        case 'document': {\r\n            return [50, 50, document.document, document.mime_type];\r\n        }\r\n        case 'video': {\r\n            return [media.width, media.height, media.video, media.mime_type];\r\n        }\r\n        default: {\r\n        }\r\n    }\r\n\r\n    return [0, 0, null, ''];\r\n}\r\n\r\nfunction getMediaFile(chatId, messageId, size) {\r\n    if (!size) return [0, 0, null];\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return [0, 0, null, ''];\r\n\r\n    const { content } = message;\r\n    if (!content) return [0, 0, null, ''];\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAnimation': {\r\n            const { animation } = content;\r\n            if (animation) {\r\n                const { width, height, animation: file, mime_type } = animation;\r\n                return [width, height, file, mime_type];\r\n            }\r\n            break;\r\n        }\r\n        case 'messageChatChangePhoto': {\r\n            const { photo } = content;\r\n            if (photo) {\r\n                const photoSize = getSize(photo.sizes, size);\r\n                if (photoSize) {\r\n                    const { width, height, photo: file } = photoSize;\r\n                    return [width, height, file, ''];\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 'messageDocument': {\r\n            const { document } = content;\r\n            if (document) {\r\n                const { document: file, mime_type } = document;\r\n                return [50, 50, file, mime_type];\r\n            }\r\n            break;\r\n        }\r\n        case 'messagePhoto': {\r\n            const { photo } = content;\r\n            if (photo) {\r\n                const photoSize = getSize(photo.sizes, size);\r\n                if (photoSize) {\r\n                    const { width, height, photo: file } = photoSize;\r\n                    return [width, height, file, ''];\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            if (web_page) {\r\n                const { animation, document, photo, video } = web_page;\r\n                if (animation) {\r\n                    const { width, height, animation: file, mime_type } = animation;\r\n                    return [width, height, file, mime_type];\r\n                }\r\n\r\n                if (document) {\r\n                    const { document: file, mime_type } = document;\r\n                    return [50, 50, file, mime_type];\r\n                }\r\n\r\n                if (photo) {\r\n                    const photoSize = getSize(photo.sizes, size);\r\n                    if (photoSize) {\r\n                        const { width, height, photo: file } = photoSize;\r\n                        return [width, height, file, ''];\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                if (video) {\r\n                    const { width, height, video: file, mime_type } = video;\r\n                    return [width, height, file, mime_type];\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 'messageVideo': {\r\n            const { video } = content;\r\n            if (video) {\r\n                const { width, height, video: file, mime_type } = video;\r\n                return [width, height, file, mime_type];\r\n            }\r\n            break;\r\n        }\r\n        default: {\r\n        }\r\n    }\r\n\r\n    return [0, 0, null, ''];\r\n}\r\n\r\nexport function cancelLoadIVMediaViewerContent(blocks) {\r\n    if (!blocks) return;\r\n    if (!blocks.length) return;\r\n\r\n    for (let i = 0; i < blocks.length; i++) {\r\n        const content = blocks[i];\r\n        if (content) {\r\n            switch (content['@type']) {\r\n                case 'pageBlockAnimation': {\r\n                    const { animation } = content;\r\n                    if (!animation) break;\r\n\r\n                    cancelLoadAnimationThumbnailContent(animation);\r\n                    cancelLoadAnimationContent(animation);\r\n                    break;\r\n                }\r\n                case 'pageBlockPhoto': {\r\n                    const { photo } = content;\r\n                    if (!photo) break;\r\n\r\n                    cancelLoadBigPhotoContent(photo);\r\n                    break;\r\n                }\r\n                case 'pageBlockVideo': {\r\n                    const { video } = content;\r\n                    if (!video) break;\r\n\r\n                    cancelLoadVideoThumbnailContent(video);\r\n                    cancelLoadVideoContent(video);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction cancelLoadMediaViewerContent(messages) {\r\n    if (!messages) return;\r\n    if (!messages.length) return;\r\n\r\n    for (let i = 0; i < messages.length; i++) {\r\n        let message = messages[i];\r\n        const { content } = message;\r\n        if (content) {\r\n            switch (content['@type']) {\r\n                case 'messageAnimation': {\r\n                    const { animation } = content;\r\n                    if (!animation) break;\r\n\r\n                    cancelLoadAnimationThumbnailContent(animation);\r\n                    cancelLoadAnimationContent(animation);\r\n                    break;\r\n                }\r\n                case 'messagePhoto': {\r\n                    const { photo } = content;\r\n                    if (!photo) break;\r\n\r\n                    cancelLoadBigPhotoContent(photo);\r\n                    break;\r\n                }\r\n                case 'messageVideo': {\r\n                    const { video } = content;\r\n                    if (!video) break;\r\n\r\n                    cancelLoadVideoThumbnailContent(video);\r\n                    cancelLoadVideoContent(video);\r\n                    break;\r\n                }\r\n                case 'messageText': {\r\n                    const { web_page } = message.content;\r\n                    if (web_page) {\r\n                        const { animation, photo, video } = web_page;\r\n\r\n                        if (animation) {\r\n                            cancelLoadAnimationThumbnailContent(animation);\r\n                            cancelLoadAnimationContent(animation);\r\n                        }\r\n\r\n                        if (photo) {\r\n                            cancelLoadBigPhotoContent(photo);\r\n                        }\r\n\r\n                        if (video) {\r\n                            cancelLoadVideoThumbnailContent(video);\r\n                            cancelLoadVideoContent(video);\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadIVMediaViewerContent(blocks, useSizeLimit = false) {\r\n    if (!blocks) return;\r\n    if (!blocks.length) return;\r\n\r\n    const store = FileStore.getStore();\r\n\r\n    for (let i = 0; i < blocks.length; i++) {\r\n        const content = blocks[i];\r\n        if (content) {\r\n            switch (content['@type']) {\r\n                case 'pageBlockAnimation': {\r\n                    const { animation } = content;\r\n\r\n                    loadAnimationContent(store, animation, null, useSizeLimit);\r\n                    loadAnimationThumbnailContent(store, animation, null);\r\n                    break;\r\n                }\r\n                case 'pageBlockPhoto': {\r\n                    const { photo } = content;\r\n\r\n                    loadBigPhotoContent(store, photo, null);\r\n                    break;\r\n                }\r\n                case 'pageBlockVideo': {\r\n                    const { video } = content;\r\n\r\n                    loadVideoThumbnailContent(store, video, null);\r\n                    loadVideoContent(store, video, null, useSizeLimit);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\r\n    if (!messages) return;\r\n    if (!messages.length) return;\r\n\r\n    const store = FileStore.getStore();\r\n\r\n    for (let i = 0; i < messages.length; i++) {\r\n        let message = messages[i];\r\n        const { content } = message;\r\n        if (content) {\r\n            switch (content['@type']) {\r\n                case 'messageAnimation': {\r\n                    const { animation } = content;\r\n\r\n                    loadAnimationContent(store, animation, message, useSizeLimit);\r\n                    loadAnimationThumbnailContent(store, animation, message);\r\n                    break;\r\n                }\r\n                case 'messageChatChangePhoto': {\r\n                    const { photo } = content;\r\n\r\n                    loadBigPhotoContent(store, photo, message);\r\n                    break;\r\n                }\r\n                case 'messageDocument': {\r\n                    const { document } = content;\r\n\r\n                    loadDocumentContent(store, document, message, useSizeLimit);\r\n                    break;\r\n                }\r\n                case 'messagePhoto': {\r\n                    const { photo } = content;\r\n\r\n                    loadBigPhotoContent(store, photo, message);\r\n                    break;\r\n                }\r\n                case 'messageText': {\r\n                    const { web_page } = message.content;\r\n                    if (!web_page) {\r\n                        break;\r\n                    }\r\n\r\n                    const { animation, document, photo, video } = web_page;\r\n                    let loadPhoto = true;\r\n\r\n                    if (animation) {\r\n                        loadAnimationContent(store, animation, message, useSizeLimit);\r\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\r\n                    }\r\n\r\n                    if (document) {\r\n                        loadDocumentContent(store, document, message, useSizeLimit);\r\n                        loadPhoto = false;\r\n                    }\r\n\r\n                    if (video) {\r\n                        loadVideoContent(store, video, message, useSizeLimit);\r\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\r\n                    }\r\n\r\n                    if (loadPhoto) {\r\n                        loadBigPhotoContent(store, photo, message);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageVideo': {\r\n                    const { video } = content;\r\n\r\n                    loadVideoThumbnailContent(store, video, message);\r\n                    loadVideoContent(store, video, message, useSizeLimit);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function cancelPreloadIVMediaViewerContent(index, blocks) {\r\n    if (!blocks.length) return;\r\n\r\n    const preload = [];\r\n    if (index > 0) {\r\n        preload.push(blocks[index - 1]);\r\n    }\r\n    if (index < blocks.length - 1) {\r\n        preload.push(blocks[index + 1]);\r\n    }\r\n\r\n    cancelLoadIVMediaViewerContent([blocks[index]]);\r\n    cancelLoadIVMediaViewerContent(blocks);\r\n}\r\n\r\nfunction cancelPreloadMediaViewerContent(index, history) {\r\n    if (!history.length) return;\r\n\r\n    const messages = [];\r\n    if (index > 0) {\r\n        messages.push(history[index - 1]);\r\n    }\r\n    if (index < history.length - 1) {\r\n        messages.push(history[index + 1]);\r\n    }\r\n\r\n    cancelLoadMediaViewerContent([history[index]]);\r\n    cancelLoadMediaViewerContent(messages);\r\n}\r\n\r\nfunction preloadMediaViewerContent(index, history) {\r\n    if (!history.length) return;\r\n\r\n    const messages = [];\r\n    if (index > 0) {\r\n        messages.push(history[index - 1]);\r\n    }\r\n    if (index < history.length - 1) {\r\n        messages.push(history[index + 1]);\r\n    }\r\n\r\n    loadMediaViewerContent([history[index]], false);\r\n    loadMediaViewerContent(messages, true);\r\n}\r\n\r\nexport function preloadIVMediaViewerContent(index, blocks) {\r\n    if (!blocks.length) return;\r\n\r\n    const preload = [];\r\n    if (index > 0) {\r\n        preload.push(blocks[index - 1]);\r\n    }\r\n    if (index < blocks.length - 1) {\r\n        preload.push(blocks[index + 1]);\r\n    }\r\n\r\n    loadIVMediaViewerContent([blocks[index]], false);\r\n    loadIVMediaViewerContent(preload, true);\r\n}\r\n\r\nfunction loadUserFileContent(store, file, userId) {\r\n    if (!file) return;\r\n\r\n    const { id } = file;\r\n    file = FileStore.get(id) || file;\r\n\r\n    const user = UserStore.get(userId);\r\n    if (!user) return;\r\n\r\n    const blob = file.blob || FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateUserPhotoBlob(userId, id),\r\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\r\n    );\r\n}\r\n\r\nfunction loadChatFileContent(store, file, chatId) {\r\n    if (!file) return;\r\n\r\n    const { id } = file;\r\n    file = FileStore.get(id) || file;\r\n\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return;\r\n\r\n    const dataUrl = FileStore.getDataUrl(id);\r\n    if (dataUrl) return;\r\n\r\n    const blob = file.blob || FileStore.getBlob(id);\r\n    if (blob) return;\r\n\r\n    FileStore.getLocalFile(\r\n        store,\r\n        file,\r\n        null,\r\n        () => FileStore.updateChatPhotoBlob(chatId, id),\r\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\r\n    );\r\n}\r\n\r\nfunction loadProfileMediaViewerContent(chatId, photos) {\r\n    if (!photos) return;\r\n\r\n    const store = FileStore.getStore();\r\n\r\n    photos.forEach(photo => {\r\n        switch (photo['@type']) {\r\n            case 'chatPhoto': {\r\n                const { small, big } = photo;\r\n\r\n                loadChatFileContent(store, small, chatId);\r\n                loadChatFileContent(store, big, chatId);\r\n                break;\r\n            }\r\n            case 'profilePhoto': {\r\n                const userId = getChatUserId(chatId);\r\n\r\n                const { small, big } = photo;\r\n\r\n                loadUserFileContent(store, small, userId);\r\n                loadUserFileContent(store, big, userId);\r\n                break;\r\n            }\r\n            case 'userProfilePhoto': {\r\n                photo = getProfilePhoto(photo);\r\n                if (!photo) break;\r\n\r\n                const userId = getChatUserId(chatId);\r\n\r\n                const { small, big } = photo;\r\n\r\n                loadUserFileContent(store, small, userId);\r\n                loadUserFileContent(store, big, userId);\r\n                break;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\r\n    if (!history.length) return;\r\n\r\n    const items = [];\r\n    if (index > 0) {\r\n        items.push(history[index - 1]);\r\n    }\r\n    if (index < history.length - 1) {\r\n        items.push(history[index + 1]);\r\n    }\r\n    if (index >= 0 && index < history.length) {\r\n        items.push(history[index]);\r\n    }\r\n\r\n    loadProfileMediaViewerContent(chatId, items);\r\n}\r\n\r\nfunction loadUserContent(store, userId) {\r\n    const user = UserStore.get(userId);\r\n    if (!user) return;\r\n\r\n    const { profile_photo } = user;\r\n    if (!profile_photo) return;\r\n\r\n    const { small: file } = profile_photo;\r\n\r\n    loadUserFileContent(store, file, userId);\r\n}\r\n\r\nfunction loadUsersContent(store, ids) {\r\n    if (!ids) return;\r\n\r\n    ids.forEach(id => loadUserContent(store, id));\r\n}\r\n\r\nfunction loadChatContent(store, chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return;\r\n\r\n    const { photo } = chat;\r\n    loadChatPhotoContent(store, photo, chat.id);\r\n}\r\n\r\nfunction loadChatPhotoContent(store, photo, chatId) {\r\n    if (!photo) return;\r\n\r\n    const { small: file } = photo;\r\n\r\n    loadChatFileContent(store, file, chatId);\r\n}\r\n\r\nfunction loadChatsContent(store, ids) {\r\n    if (!ids) return;\r\n\r\n    ids.forEach(id => loadChatContent(store, id));\r\n}\r\n\r\nfunction loadDraftContent(store, chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return;\r\n\r\n    const { draft_message } = chat;\r\n    if (!draft_message) return;\r\n\r\n    const { reply_to_message_id } = draft_message;\r\n    if (!reply_to_message_id) return;\r\n\r\n    loadReplies(store, chatId, [reply_to_message_id]);\r\n}\r\n\r\nexport function loadRecentStickersContent(store, recent) {\r\n    if (!recent) return;\r\n\r\n    const { stickers } = recent;\r\n    loadStickersContent(store, stickers);\r\n}\r\n\r\nfunction loadStickerSetContent(store, stickerSet) {\r\n    if (!stickerSet) return;\r\n\r\n    const { stickers } = stickerSet;\r\n    loadStickersContent(store, stickers);\r\n}\r\n\r\nexport function loadBackgroundsContent(store, backgrounds) {\r\n    if (!backgrounds) return;\r\n\r\n    backgrounds.forEach(background => {\r\n        loadBackgroundContent(store, background, false);\r\n    });\r\n}\r\n\r\nexport function loadBackgroundContent(store, background, full = false) {\r\n    if (!background) return;\r\n\r\n    switch (background.type['@type']) {\r\n        case 'backgroundTypeFill': {\r\n            break;\r\n        }\r\n        case 'backgroundTypePattern': {\r\n            const { document } = background;\r\n            if (document) {\r\n                loadDocumentThumbnailContent(store, document, null);\r\n                if (full) loadDocumentContent(store, document, null, false);\r\n            }\r\n            break;\r\n        }\r\n        case 'backgroundTypeWallpaper': {\r\n            const { document } = background;\r\n            if (document) {\r\n                loadDocumentThumbnailContent(store, document, null);\r\n                if (full) loadDocumentContent(store, document, null, false);\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nfunction loadStickersContent(store, stickers) {\r\n    if (!stickers) return;\r\n\r\n    stickers.forEach(sticker => {\r\n        loadStickerThumbnailContent(store, sticker, null);\r\n        if (sticker.is_animated) {\r\n            loadStickerContent(store, sticker, null);\r\n        }\r\n    });\r\n}\r\n\r\nfunction isGifMimeType(mimeType) {\r\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\r\n}\r\n\r\nfunction getSrc(file) {\r\n    const dataUrl = file && FileStore.getDataUrl(file.id);\r\n    if (dataUrl) return dataUrl;\r\n\r\n    const blob = getBlob(file);\r\n\r\n    return FileStore.getBlobUrl(blob) || '';\r\n}\r\n\r\nfunction getBlob(file) {\r\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\r\n}\r\n\r\nfunction getDownloadedSize(file) {\r\n    if (!file) return '0';\r\n    if (!file.local) return '0';\r\n    if (!file.local.is_downloading_active) return '0';\r\n\r\n    return getSizeString(file.local.downloaded_size);\r\n}\r\n\r\nfunction getUploadedSize(file) {\r\n    if (!file) return '0';\r\n    if (!file.remote) return '0';\r\n    if (!file.remote.is_uploading_active) return '0';\r\n\r\n    return getSizeString(file.remote.uploaded_size);\r\n}\r\n\r\nfunction getExtension(fileName) {\r\n    if (!fileName) {\r\n        return '';\r\n    }\r\n\r\n    const parts = fileName.split('.');\r\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\r\n        return '';\r\n    }\r\n    return parts.pop().toLowerCase();\r\n}\r\n\r\nfunction loadInstantViewContent(instantView) {\r\n    if (!instantView) return;\r\n\r\n    const { page_blocks } = instantView;\r\n    if (!page_blocks) return;\r\n\r\n    const store = FileStore.getStore();\r\n\r\n    page_blocks.forEach(pageBlock => loadPageBlockContent(store, pageBlock));\r\n}\r\n\r\nfunction loadPageBlockContent(store, b) {\r\n    if (!b) return;\r\n\r\n    switch (b['@type']) {\r\n        case 'pageBlockAnchor': {\r\n            break;\r\n        }\r\n        case 'pageBlockAnimation': {\r\n            const { animation, caption } = b;\r\n\r\n            loadAnimationThumbnailContent(store, animation, null);\r\n            loadAnimationContent(store, animation, null);\r\n            loadPageBlockContent(store, caption);\r\n            break;\r\n        }\r\n        case 'pageBlockAudio': {\r\n            const { audio, caption } = b;\r\n\r\n            loadAudioThumbnailContent(store, audio, null);\r\n            loadAudioContent(store, audio, null);\r\n            loadPageBlockContent(store, caption);\r\n            break;\r\n        }\r\n        case 'pageBlockAuthorDate': {\r\n            const { author } = b;\r\n\r\n            loadRichTextContent(store, author);\r\n            break;\r\n        }\r\n        case 'pageBlockBlockQuote': {\r\n            const { text, credit } = b;\r\n\r\n            loadRichTextContent(store, text);\r\n            loadRichTextContent(store, credit);\r\n            break;\r\n        }\r\n        // actually not a pageBlock child but load content in the same way\r\n        case 'pageBlockCaption': {\r\n            const { text, credit } = b;\r\n\r\n            loadRichTextContent(store, text);\r\n            loadRichTextContent(store, credit);\r\n            break;\r\n        }\r\n        case 'pageBlockChatLink': {\r\n            const { photo } = b;\r\n\r\n            loadChatPhotoContent(store, photo, 0);\r\n            break;\r\n        }\r\n        case 'pageBlockCollage': {\r\n            const { page_blocks, caption } = b;\r\n\r\n            loadPageBlockContent(store, caption);\r\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\r\n            break;\r\n        }\r\n        case 'pageBlockCover': {\r\n            const { cover } = b;\r\n\r\n            loadPageBlockContent(store, cover);\r\n            break;\r\n        }\r\n        case 'pageBlockDetails': {\r\n            const { header, page_blocks } = b;\r\n\r\n            loadPageBlockContent(store, header);\r\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\r\n            break;\r\n        }\r\n        case 'pageBlockDivider': {\r\n            break;\r\n        }\r\n        case 'pageBlockEmbedded': {\r\n            const { poster_photo, caption } = b;\r\n\r\n            loadPhotoContent(store, poster_photo, null);\r\n            loadPageBlockContent(store, caption);\r\n            break;\r\n        }\r\n        case 'pageBlockEmbeddedPost': {\r\n            const { author_photo, page_blocks, caption } = b;\r\n\r\n            loadPhotoContent(store, author_photo, null);\r\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\r\n            loadPageBlockContent(store, caption);\r\n            break;\r\n        }\r\n        case 'pageBlockFooter': {\r\n            const { footer } = b;\r\n\r\n            loadRichTextContent(store, footer);\r\n            break;\r\n        }\r\n        case 'pageBlockHeader': {\r\n            const { header } = b;\r\n\r\n            loadRichTextContent(store, header);\r\n            break;\r\n        }\r\n        case 'pageBlockKicker': {\r\n            const { kicker } = b;\r\n\r\n            loadRichTextContent(store, kicker);\r\n            break;\r\n        }\r\n        case 'pageBlockList': {\r\n            const { items } = b;\r\n\r\n            items.forEach(x => loadPageBlockContent(store, x));\r\n            break;\r\n        }\r\n        // actually not a pageBlock child but load content in the same way\r\n        case 'pageBlockListItem': {\r\n            const { page_blocks } = b;\r\n\r\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\r\n            break;\r\n        }\r\n        case 'pageBlockMap': {\r\n            const { caption } = b;\r\n\r\n            loadPageBlockMapContent(store, b, null);\r\n            loadPageBlockContent(store, caption);\r\n            break;\r\n        }\r\n        case 'pageBlockParagraph': {\r\n            const { text } = b;\r\n\r\n            loadRichTextContent(store, text);\r\n            break;\r\n        }\r\n        case 'pageBlockPhoto': {\r\n            const { photo, caption } = b;\r\n\r\n            loadPhotoContent(store, photo, null, IV_PHOTO_SIZE);\r\n            loadPageBlockContent(store, caption);\r\n            break;\r\n        }\r\n        case 'pageBlockPreformatted': {\r\n            const { text } = b;\r\n\r\n            loadRichTextContent(store, text);\r\n            break;\r\n        }\r\n        case 'pageBlockPullQuote': {\r\n            const { text, credit } = b;\r\n\r\n            loadRichTextContent(store, text);\r\n            loadRichTextContent(store, credit);\r\n            break;\r\n        }\r\n        case 'pageBlockRelatedArticles': {\r\n            const { header, articles } = b;\r\n\r\n            loadRichTextContent(store, header);\r\n            articles.forEach(x => loadPageBlockContent(store, x));\r\n            break;\r\n        }\r\n        // actually not a pageBlock child but load content in the same way\r\n        case 'pageBlockRelatedArticle': {\r\n            const { photo } = b;\r\n\r\n            loadPhotoContent(store, photo, null);\r\n            break;\r\n        }\r\n        case 'pageBlockSlideshow': {\r\n            const { page_blocks, caption } = b;\r\n\r\n            loadPageBlockContent(store, caption);\r\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\r\n            break;\r\n        }\r\n        case 'pageBlockSubheader': {\r\n            const { subheader } = b;\r\n\r\n            loadRichTextContent(store, subheader);\r\n            break;\r\n        }\r\n        case 'pageBlockSubtitle': {\r\n            const { subtitle } = b;\r\n\r\n            loadRichTextContent(store, subtitle);\r\n            break;\r\n        }\r\n        case 'pageBlockTable': {\r\n            const { caption, cells } = b;\r\n\r\n            loadRichTextContent(store, caption);\r\n            cells.forEach(row => row.forEach(x => loadPageBlockContent(store, x)));\r\n            break;\r\n        }\r\n        // actually not a pageBlock child but load content in the same way\r\n        case 'pageBlockTableCell': {\r\n            const { text } = b;\r\n\r\n            loadRichTextContent(store, text);\r\n            break;\r\n        }\r\n        case 'pageBlockTitle': {\r\n            const { title } = b;\r\n\r\n            loadRichTextContent(store, title);\r\n            break;\r\n        }\r\n        case 'pageBlockVideo': {\r\n            const { video, caption } = b;\r\n\r\n            loadVideoThumbnailContent(store, video, null);\r\n            loadVideoContent(store, video, null);\r\n            loadPageBlockContent(store, caption);\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nfunction loadRichTextContent(store, t) {\r\n    if (!t) return;\r\n\r\n    switch (t['@type']) {\r\n        case 'richTextAnchor': {\r\n            const { text } = t;\r\n\r\n            loadRichTextContent(store, text);\r\n            break;\r\n        }\r\n        case 'richTextBold': {\r\n            const { text } = t;\r\n\r\n            loadRichTextContent(store, text);\r\n            break;\r\n        }\r\n        case 'richTextEmailAddress': {\r\n            const { text } = t;\r\n\r\n            loadRichTextContent(store, text);\r\n            break;\r\n        }\r\n        case 'richTextFixed': {\r\n            const { text } = t;\r\n\r\n            loadRichTextContent(store, text);\r\n            break;\r\n        }\r\n        case 'richTextIcon': {\r\n            const { document } = t;\r\n\r\n            loadDocumentThumbnailContent(store, document, null);\r\n            loadDocumentContent(store, document, null, false);\r\n            break;\r\n        }\r\n        case 'richTextItalic': {\r\n            const { text } = t;\r\n\r\n            loadRichTextContent(store, text);\r\n            break;\r\n        }\r\n        case 'richTextMarked': {\r\n            const { text } = t;\r\n\r\n            loadRichTextContent(store, text);\r\n            break;\r\n        }\r\n        case 'richTextPhoneNumber': {\r\n            const { text } = t;\r\n\r\n            loadRichTextContent(store, text);\r\n            break;\r\n        }\r\n        case 'richTextPlain': {\r\n            const { text } = t;\r\n\r\n            loadRichTextContent(store, text);\r\n            break;\r\n        }\r\n        case 'richTexts': {\r\n            const { texts } = t;\r\n\r\n            texts.forEach(x => loadRichTextContent(store, x));\r\n            break;\r\n        }\r\n        case 'richTextStrikethrough': {\r\n            const { text } = t;\r\n\r\n            loadRichTextContent(store, text);\r\n            break;\r\n        }\r\n        case 'richTextSubscript': {\r\n            const { text } = t;\r\n\r\n            loadRichTextContent(store, text);\r\n            break;\r\n        }\r\n        case 'richTextSuperscript': {\r\n            const { text } = t;\r\n\r\n            loadRichTextContent(store, text);\r\n            break;\r\n        }\r\n        case 'richTextUnderline': {\r\n            const { text } = t;\r\n\r\n            loadRichTextContent(store, text);\r\n            break;\r\n        }\r\n        case 'richTextUrl': {\r\n            const { text } = t;\r\n\r\n            loadRichTextContent(store, text);\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getAnimationData(file) {\r\n    return new Promise(resolve => {\r\n        if (!file) {\r\n            resolve(null);\r\n            return;\r\n        }\r\n\r\n        const blob = FileStore.getBlob(file.id);\r\n        if (!blob) {\r\n            resolve(null);\r\n            return;\r\n        }\r\n\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = event => resolve(JSON.parse(event.target.result));\r\n        fileReader.onerror = () => resolve(null);\r\n        fileReader.onabort = () => resolve(null);\r\n        fileReader.readAsText(blob);\r\n    });\r\n}\r\n\r\nexport {\r\n    getFileSize,\r\n    getSizeString,\r\n    saveData,\r\n    saveBlob,\r\n    loadMessageContents,\r\n    loadMediaViewerContent,\r\n    preloadMediaViewerContent,\r\n    cancelLoadMediaViewerContent,\r\n    cancelPreloadMediaViewerContent,\r\n    loadProfileMediaViewerContent,\r\n    preloadProfileMediaViewerContent,\r\n    loadChatContent,\r\n    loadChatsContent,\r\n    loadDraftContent,\r\n    loadInstantViewContent,\r\n    loadStickerContent,\r\n    loadStickersContent,\r\n    loadStickerSetContent,\r\n    loadStickerThumbnailContent,\r\n    loadUserContent,\r\n    loadUsersContent,\r\n    saveOrDownload,\r\n    download,\r\n    getMediaFile,\r\n    getMediaPreviewFile,\r\n    isGifMimeType,\r\n    getSrc,\r\n    getBlob,\r\n    getDownloadedSize,\r\n    getUploadedSize,\r\n    getExtension,\r\n    getViewerFile,\r\n    getViewerThumbnail,\r\n    getAnimationData\r\n};\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport dateFormat from '../Utils/Date';\r\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\r\nimport { getSupergroupStatus } from './Supergroup';\r\nimport { getBasicGroupStatus } from './BasicGroup';\r\nimport { getLetters } from './Common';\r\nimport { getContent } from './Message';\r\nimport { isServiceMessage } from './ServiceMessage';\r\nimport { formatPhoneNumber } from './Phone';\r\nimport { getChannelStatus } from './Channel';\r\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\r\nimport BasicGroupStore from '../Stores/BasicGroupStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport NotificationStore from '../Stores/NotificationStore';\r\nimport SupergroupStore from '../Stores/SupergroupStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nexport function canUnpinMessage(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { pinned_message_id } = chat;\r\n\r\n    return pinned_message_id > 0;\r\n}\r\n\r\nexport function isChatArchived(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { chat_list } = chat;\r\n    if (!chat_list) return false;\r\n\r\n    return chat_list['@type'] === 'chatListArchive';\r\n}\r\n\r\nexport function canSetChatChatList(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { is_sponsored, chat_list } = chat;\r\n    if (is_sponsored) return false;\r\n    if (!chat_list) return false;\r\n\r\n    if (chat_list['@type'] === 'chatListMain') {\r\n        if (isMeChat(chatId) || chatId === SERVICE_NOTIFICATIONS_USER_ID) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function draftEquals(draft1, draft2) {\r\n    if (!draft1 && !draft2) return true;\r\n    if (draft1 && !draft2) return false;\r\n    if (draft2 && !draft1) return false;\r\n\r\n    const { input_message_text: inputMessageText1, reply_to_message_id: replyToMessageId1 } = draft1;\r\n    const { input_message_text: inputMessageText2, reply_to_message_id: replyToMessageId2 } = draft2;\r\n\r\n    if (replyToMessageId1 !== replyToMessageId2) {\r\n        return false;\r\n    }\r\n\r\n    if (inputMessageText1['@type'] !== inputMessageText2['@type']) {\r\n        return false;\r\n    }\r\n\r\n    if (inputMessageText1['@type'] !== 'inputMessageText') {\r\n        return true;\r\n    }\r\n\r\n    const { text: formattedText1 } = inputMessageText1;\r\n    const { text: formattedText2 } = inputMessageText2;\r\n\r\n    if (!formattedText1 && !formattedText2) return true;\r\n    if (formattedText1 && !formattedText2) return false;\r\n    if (formattedText2 && !formattedText1) return false;\r\n\r\n    const { text: text1, entities: entities1 } = formattedText1;\r\n    const { text: text2, entities: entities2 } = formattedText2;\r\n\r\n    if (text1 !== text2) {\r\n        return false;\r\n    }\r\n\r\n    return entitiesEquals(entities1, entities2);\r\n}\r\n\r\nfunction entitiesEquals(entities1, entities2) {\r\n    if (!entities1 && !entities2) return true;\r\n    if (entities1 && !entities2) return false;\r\n    if (entities2 && !entities1) return false;\r\n\r\n    if (entities1.length !== entities2.length) {\r\n        return false;\r\n    }\r\n\r\n    const map = new Map();\r\n    entities1.forEach(x => {\r\n        map.set(`${x.type['@type']}_${x.offset}_${x.length}`, x);\r\n    });\r\n\r\n    return entities2.every(x => map.has(`${x.type['@type']}_${x.offset}_${x.length}`));\r\n}\r\n\r\nfunction getGroupChatTypingString(inputTypingManager) {\r\n    if (!inputTypingManager) return null;\r\n\r\n    let size = inputTypingManager.actions.size;\r\n    if (size > 2) {\r\n        return `${size} people are typing`;\r\n    } else if (size > 1) {\r\n        let firstUser;\r\n        let secondUser;\r\n        for (let userId of inputTypingManager.actions.keys()) {\r\n            if (!firstUser) {\r\n                firstUser = UserStore.get(userId);\r\n            } else if (!secondUser) {\r\n                secondUser = UserStore.get(userId);\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!firstUser || !secondUser) {\r\n            return `${size} people are typing`;\r\n        }\r\n\r\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\r\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\r\n\r\n        if (!firstUser || !secondUser) {\r\n            return `${size} people are typing`;\r\n        }\r\n\r\n        return `${firstUser} and ${secondUser} are typing`;\r\n    } else {\r\n        let firstUser;\r\n        if (inputTypingManager.actions.size >= 1) {\r\n            for (let userId of inputTypingManager.actions.keys()) {\r\n                if (!firstUser) {\r\n                    firstUser = UserStore.get(userId);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!firstUser) {\r\n                return `1 person is typing`;\r\n            }\r\n\r\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\r\n\r\n            if (!firstUser) {\r\n                return `1 person is typing`;\r\n            }\r\n\r\n            let action = inputTypingManager.actions.values().next().value.action;\r\n            switch (action['@type']) {\r\n                case 'chatActionRecordingVideo':\r\n                    return `${firstUser} is recording a video`;\r\n                case 'chatActionRecordingVideoNote':\r\n                    return `${firstUser} is recording a video message`;\r\n                case 'chatActionRecordingVoiceNote':\r\n                    return `${firstUser} is recording a voice message`;\r\n                case 'chatActionStartPlayingGame':\r\n                    return `${firstUser} is playing a game`;\r\n                case 'chatActionUploadingDocument':\r\n                    return `${firstUser} is sending a file`;\r\n                case 'chatActionUploadingPhoto':\r\n                    return `${firstUser} is sending a photo`;\r\n                case 'chatActionUploadingVideo':\r\n                    return `${firstUser} is sending a video`;\r\n                case 'chatActionUploadingVideoNote':\r\n                    return `${firstUser} is sending a video message`;\r\n                case 'chatActionUploadingVoiceNote':\r\n                    return `${firstUser} is sending a voice message`;\r\n                case 'chatActionChoosingContact':\r\n                case 'chatActionChoosingLocation':\r\n                case 'chatActionTyping':\r\n                default:\r\n                    return `${firstUser} is typing`;\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getPrivateChatTypingString(inputTypingManager) {\r\n    if (!inputTypingManager) return null;\r\n\r\n    if (inputTypingManager.actions.size >= 1) {\r\n        let action = inputTypingManager.actions.values().next().value.action;\r\n        switch (action['@type']) {\r\n            case 'chatActionRecordingVideo':\r\n                return 'recording a video';\r\n            case 'chatActionRecordingVideoNote':\r\n                return 'recording a video message';\r\n            case 'chatActionRecordingVoiceNote':\r\n                return 'recording a voice message';\r\n            case 'chatActionStartPlayingGame':\r\n                return 'playing a game';\r\n            case 'chatActionUploadingDocument':\r\n                return 'sending a file';\r\n            case 'chatActionUploadingPhoto':\r\n                return 'sending a photo';\r\n            case 'chatActionUploadingVideo':\r\n                return 'sending a video';\r\n            case 'chatActionUploadingVideoNote':\r\n                return 'sending a video message';\r\n            case 'chatActionUploadingVoiceNote':\r\n                return 'sending a voice message';\r\n            case 'chatActionChoosingContact':\r\n            case 'chatActionChoosingLocation':\r\n            case 'chatActionTyping':\r\n            default:\r\n                return 'typing';\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getChatTypingString(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n    if (!chat.type) return null;\r\n\r\n    let typingManager = ChatStore.getTypingManager(chat.id);\r\n    if (!typingManager) return null;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            const typingString = getPrivateChatTypingString(typingManager);\r\n            return typingString ? typingString + '...' : null;\r\n        }\r\n        case 'chatTypeBasicGroup':\r\n        case 'chatTypeSupergroup': {\r\n            const typingString = getGroupChatTypingString(typingManager);\r\n            return typingString ? typingString + '...' : null;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getMessageSenderFullName(message, t = k => k) {\r\n    if (!message) return null;\r\n    if (isServiceMessage(message)) return null;\r\n    if (!message.sender_user_id) return null;\r\n\r\n    return getUserFullName(message.sender_user_id, null, t);\r\n}\r\n\r\nfunction getMessageSenderName(message, t = k => k) {\r\n    if (!message) return null;\r\n    if (isServiceMessage(message)) return null;\r\n\r\n    const chat = ChatStore.get(message.chat_id);\r\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\r\n        return null;\r\n    }\r\n\r\n    return getUserShortName(message.sender_user_id, t);\r\n}\r\n\r\nfunction getLastMessageSenderName(chat, t = k => k) {\r\n    if (!chat) return null;\r\n\r\n    return getMessageSenderName(chat.last_message, t);\r\n}\r\n\r\nfunction getLastMessageContent(chat, t = key => key) {\r\n    if (!chat) return null;\r\n\r\n    const { last_message } = chat;\r\n    if (!last_message) return null;\r\n\r\n    return getContent(last_message, t);\r\n}\r\n\r\nfunction showChatUnreadMessageIcon(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { is_marked_as_unread, last_message, last_read_outbox_message_id } = chat;\r\n    if (!last_message) return false;\r\n\r\n    const { is_outgoing } = last_message;\r\n\r\n    return (\r\n        is_outgoing && last_message.id > last_read_outbox_message_id && !is_marked_as_unread && !showChatDraft(chatId)\r\n    );\r\n}\r\n\r\nfunction showChatUnreadMentionCount(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { unread_mention_count } = chat;\r\n\r\n    return unread_mention_count > 0;\r\n}\r\n\r\nfunction showChatUnreadCount(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\r\n\r\n    return (\r\n        unread_count > 1 ||\r\n        (unread_count === 1 && unread_mention_count === 0) ||\r\n        (is_marked_as_unread && unread_count === 0 && unread_mention_count === 0)\r\n    );\r\n}\r\n\r\nfunction isChatUnread(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\r\n\r\n    return is_marked_as_unread || unread_count > 0;\r\n}\r\n\r\nfunction isChatMuted(chatId) {\r\n    return getChatMuteFor(chatId) > 0;\r\n}\r\n\r\nfunction getChatMuteFor(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return 0;\r\n\r\n    const { notification_settings } = chat;\r\n    if (!notification_settings) return 0;\r\n\r\n    const { use_default_mute_for, mute_for } = notification_settings;\r\n\r\n    if (use_default_mute_for) {\r\n        const settings = getScopeNotificationSettings(chatId);\r\n\r\n        return settings ? settings.mute_for : false;\r\n    }\r\n\r\n    return mute_for;\r\n}\r\n\r\nexport function getScopeNotificationSettings(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            return NotificationStore.settings.get('notificationSettingsScopePrivateChats');\r\n        }\r\n        case 'chatTypeBasicGroup':\r\n        case 'chatTypeSupergroup': {\r\n            let settings = null;\r\n            if (isChannelChat(chatId)) {\r\n                settings = NotificationStore.settings.get('notificationSettingsScopeChannelChats');\r\n            } else {\r\n                settings = NotificationStore.settings.get('notificationSettingsScopeGroupChats');\r\n            }\r\n            return settings;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getMessageDate(message) {\r\n    const date = new Date(message.date * 1000);\r\n\r\n    const dayStart = new Date();\r\n    dayStart.setHours(0, 0, 0, 0);\r\n    if (date > dayStart) {\r\n        return dateFormat(date, 'H:MM');\r\n    }\r\n\r\n    const now = new Date();\r\n    const day = now.getDay();\r\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\r\n    const monday = new Date(now.setDate(weekStart));\r\n    if (date > monday) {\r\n        return dateFormat(date, 'ddd');\r\n    }\r\n\r\n    return dateFormat(date, 'd.mm.yyyy');\r\n}\r\n\r\nfunction getLastMessageDate(chat) {\r\n    if (!chat) return null;\r\n    if (!chat.last_message) return null;\r\n    if (!chat.last_message.date) return null;\r\n    if (showChatDraft(chat.id)) return null;\r\n\r\n    return getMessageDate(chat.last_message);\r\n}\r\n\r\nfunction getChatSubtitleWithoutTyping(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n\r\n    const { type } = chat;\r\n    if (!type) return null;\r\n\r\n    switch (type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n            if (basicGroup) {\r\n                return getBasicGroupStatus(basicGroup, chatId);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            const user = UserStore.get(type.user_id);\r\n            if (user) {\r\n                return getUserStatus(user);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(type.supergroup_id);\r\n            if (supergroup) {\r\n                return supergroup.is_channel\r\n                    ? getChannelStatus(supergroup, chatId)\r\n                    : getSupergroupStatus(supergroup, chatId);\r\n            }\r\n\r\n            break;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\r\n    if (isMeChat(chatId) && showSavedMessages) {\r\n        return null;\r\n    }\r\n\r\n    const chatTypingString = getChatTypingString(chatId);\r\n    if (chatTypingString) {\r\n        return chatTypingString;\r\n    }\r\n\r\n    return getChatSubtitleWithoutTyping(chatId);\r\n}\r\n\r\nfunction getChatLetters(chat, t) {\r\n    if (!chat) return null;\r\n\r\n    let title = chat.title || t('HiddenName');\r\n    if (title.length === 0) return null;\r\n\r\n    let letters = getLetters(title);\r\n    if (letters && letters.length > 0) {\r\n        return letters;\r\n    }\r\n\r\n    return chat.title.charAt(0);\r\n}\r\n\r\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n    if (!chat.type) return false;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            return false;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            const user = UserStore.get(chat.type.user_id);\r\n            if (user) {\r\n                return isUserOnline(user);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction isAccentChatSubtitle(chatId) {\r\n    const typingString = getChatTypingString(chatId);\r\n    if (typingString) return false;\r\n\r\n    return isAccentChatSubtitleWithoutTyping(chatId);\r\n}\r\n\r\nfunction getChatUsername(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n    if (!chat.type) return null;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            return null;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            const user = UserStore.get(chat.type.user_id);\r\n            if (user) {\r\n                return user.username;\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n            if (supergroup) {\r\n                return supergroup.username;\r\n            }\r\n            break;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getChatPhoneNumber(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n    if (!chat.type) return null;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            return null;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            const user = UserStore.get(chat.type.user_id);\r\n            if (user) {\r\n                return formatPhoneNumber(user.phone_number);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getChatBio(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n    if (!chat.type) return null;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n            if (fullInfo) {\r\n                return fullInfo.description;\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\r\n            if (fullInfo) {\r\n                return fullInfo.bio;\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\r\n            if (fullInfo) {\r\n                return fullInfo.description;\r\n            }\r\n\r\n            break;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction isPrivateChat(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n    if (!chat.type) return false;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup':\r\n        case 'chatTypeSupergroup': {\r\n            return false;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction isGroupChat(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n    if (!chat.type) return false;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup':\r\n        case 'chatTypeSupergroup': {\r\n            return true;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction isChannelChat(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n    if (!chat.type) return false;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n\r\n            return supergroup && supergroup.is_channel;\r\n        }\r\n        case 'chatTypeBasicGroup':\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction isChatMember(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type } = chat;\r\n    if (!type) return false;\r\n\r\n    switch (type['@type']) {\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(type.supergroup_id);\r\n            if (supergroup && supergroup.status) {\r\n                switch (supergroup.status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return false;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return supergroup.status.is_member;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return false;\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        return supergroup.status.is_member;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 'chatTypeBasicGroup': {\r\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n            if (basicGroup && basicGroup.status) {\r\n                switch (basicGroup.status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return false;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return basicGroup.status.is_member;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return false;\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        return true;\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        return basicGroup.status.is_member;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n\r\n    if (isMeChat(chatId) && showSavedMessages) {\r\n        return t('SavedMessages');\r\n    }\r\n\r\n    return chat.title || t('HiddenName');\r\n}\r\n\r\nexport function isDeletedPrivateChat(chatId) {\r\n    const fallbackValue = false;\r\n\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return fallbackValue;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup':\r\n        case 'chatTypeSupergroup': {\r\n            return false;\r\n        }\r\n        case 'chatTypeSecret':\r\n        case 'chatTypePrivate': {\r\n            const user = UserStore.get(chat.type.user_id);\r\n\r\n            return user && user.type['@type'] === 'userTypeDeleted';\r\n        }\r\n    }\r\n\r\n    return fallbackValue;\r\n}\r\n\r\nfunction isMeChat(chatId) {\r\n    const fallbackValue = false;\r\n\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return fallbackValue;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup':\r\n        case 'chatTypeSupergroup': {\r\n            return false;\r\n        }\r\n        case 'chatTypeSecret':\r\n        case 'chatTypePrivate': {\r\n            return UserStore.getMyId() === chat.type.user_id;\r\n        }\r\n    }\r\n\r\n    return fallbackValue;\r\n}\r\n\r\nfunction getGroupChatMembers(chatId) {\r\n    const fallbackValue = [];\r\n\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return fallbackValue;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n            if (fullInfo) {\r\n                return fullInfo.members || fallbackValue;\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            break;\r\n        }\r\n        case 'chatTypeSecret':\r\n        case 'chatTypePrivate': {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return fallbackValue;\r\n}\r\n\r\nasync function getChatFullInfo(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n\r\n    const { type } = chat;\r\n    if (!type) return null;\r\n\r\n    switch (type['@type']) {\r\n        case 'chatTypePrivate': {\r\n            return await TdLibController.send({\r\n                '@type': 'getUserFullInfo',\r\n                user_id: type.user_id\r\n            });\r\n        }\r\n        case 'chatTypeSecret': {\r\n            return await TdLibController.send({\r\n                '@type': 'getUserFullInfo',\r\n                user_id: type.user_id\r\n            });\r\n        }\r\n        case 'chatTypeBasicGroup': {\r\n            return await TdLibController.send({\r\n                '@type': 'getBasicGroupFullInfo',\r\n                basic_group_id: type.basic_group_id\r\n            });\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            return await TdLibController.send({\r\n                '@type': 'getSupergroupFullInfo',\r\n                supergroup_id: type.supergroup_id\r\n            });\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction hasBasicGroupId(chatId, basicGroupId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type } = chat;\r\n\r\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\r\n}\r\n\r\nfunction isSupergroup(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type } = chat;\r\n\r\n    return type && type['@type'] === 'chatTypeSupergroup';\r\n}\r\n\r\nfunction getSupergroupId(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type } = chat;\r\n\r\n    if (type && type['@type'] === 'chatTypeSupergroup') {\r\n        return type.supergroup_id;\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\nfunction hasSupergroupId(chatId, supergroupId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type } = chat;\r\n\r\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\r\n}\r\n\r\nfunction hasUserId(chatId, userId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type } = chat;\r\n\r\n    return (\r\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\r\n    );\r\n}\r\n\r\nfunction getChatUserId(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return 0;\r\n\r\n    const { type } = chat;\r\n\r\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\r\n}\r\n\r\nfunction getPhotoFromChat(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n\r\n    if (isPrivateChat(chatId)) {\r\n        const user = UserStore.get(getChatUserId(chatId));\r\n        if (user) {\r\n            return user.profile_photo;\r\n        }\r\n    }\r\n\r\n    return chat.photo;\r\n}\r\n\r\nfunction canSendMediaMessages(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type, permissions: globalPermissions } = chat;\r\n    if (!type) return false;\r\n    if (!globalPermissions) return false;\r\n\r\n    const { can_send_media_messages } = globalPermissions;\r\n\r\n    switch (type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n            if (!basicGroup) return false;\r\n\r\n            const { status } = basicGroup;\r\n            if (!status) return false;\r\n\r\n            const { is_member, permissions } = status;\r\n\r\n            switch (status['@type']) {\r\n                case 'chatMemberStatusAdministrator': {\r\n                    return true;\r\n                }\r\n                case 'chatMemberStatusBanned': {\r\n                    return false;\r\n                }\r\n                case 'chatMemberStatusCreator': {\r\n                    return is_member;\r\n                }\r\n                case 'chatMemberStatusLeft': {\r\n                    return false;\r\n                }\r\n                case 'chatMemberStatusMember': {\r\n                    return true;\r\n                }\r\n                case 'chatMemberStatusRestricted': {\r\n                    return is_member && permissions && permissions.can_send_media_messages;\r\n                }\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            return can_send_media_messages;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n            if (!supergroup) return false;\r\n\r\n            const { status } = supergroup;\r\n            if (!status) return false;\r\n\r\n            const { is_member, permissions } = status;\r\n\r\n            switch (status['@type']) {\r\n                case 'chatMemberStatusAdministrator': {\r\n                    return true;\r\n                }\r\n                case 'chatMemberStatusBanned': {\r\n                    return false;\r\n                }\r\n                case 'chatMemberStatusCreator': {\r\n                    return is_member; //can_send_media_messages && is_member;\r\n                }\r\n                case 'chatMemberStatusLeft': {\r\n                    return false;\r\n                }\r\n                case 'chatMemberStatusMember': {\r\n                    return can_send_media_messages && !supergroup.is_channel;\r\n                }\r\n                case 'chatMemberStatusRestricted': {\r\n                    return can_send_media_messages && is_member && permissions && permissions.can_send_media_messages;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getChatShortTitle(chatId, showSavedMessages = false, t = k => k) {\r\n    if (isMeChat(chatId) && showSavedMessages) {\r\n        return t('SavedMessages');\r\n    }\r\n\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n    if (!chat.type) return null;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            return chat.title;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            return chat.title;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            return getUserShortName(chat.type.user_id, t);\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getGroupChatMembersCount(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return null;\r\n    if (!chat.type) return null;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\r\n            if (basicGroup) {\r\n                return basicGroup.member_count;\r\n            }\r\n\r\n            return 0;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n            if (supergroup) {\r\n                return supergroup.member_count;\r\n            }\r\n\r\n            return 0;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\nfunction canClearHistory(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n    if (!chat.type) return false;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            return true;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n            if (supergroup) {\r\n                return !Boolean(supergroup.username);\r\n            }\r\n\r\n            return true;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction canDeleteChat(chatId) {\r\n    return !isMeChat(chatId);\r\n}\r\n\r\nfunction canSendPolls(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type, permissions: globalPermissions } = chat;\r\n    if (!type) return false;\r\n    if (!globalPermissions) return false;\r\n\r\n    const { can_send_polls } = globalPermissions;\r\n\r\n    switch (type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n            if (!basicGroup) return false;\r\n\r\n            const { status } = basicGroup;\r\n            if (!status) return false;\r\n\r\n            const { is_member, permissions } = status;\r\n\r\n            switch (status['@type']) {\r\n                case 'chatMemberStatusAdministrator': {\r\n                    return true;\r\n                }\r\n                case 'chatMemberStatusBanned': {\r\n                    return false;\r\n                }\r\n                case 'chatMemberStatusCreator': {\r\n                    return is_member;\r\n                }\r\n                case 'chatMemberStatusLeft': {\r\n                    return false;\r\n                }\r\n                case 'chatMemberStatusMember': {\r\n                    return true;\r\n                }\r\n                case 'chatMemberStatusRestricted': {\r\n                    return is_member && permissions && permissions.can_send_polls;\r\n                }\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            return can_send_polls;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(type.supergroup_id);\r\n            if (!supergroup) return false;\r\n\r\n            const { status } = supergroup;\r\n            if (!status) return false;\r\n\r\n            const { is_member, permissions } = status;\r\n\r\n            switch (status['@type']) {\r\n                case 'chatMemberStatusAdministrator': {\r\n                    return true;\r\n                }\r\n                case 'chatMemberStatusBanned': {\r\n                    return false;\r\n                }\r\n                case 'chatMemberStatusCreator': {\r\n                    return is_member; //can_send_polls && is_member;\r\n                }\r\n                case 'chatMemberStatusLeft': {\r\n                    return false;\r\n                }\r\n                case 'chatMemberStatusMember': {\r\n                    return can_send_polls && !supergroup.is_channel;\r\n                }\r\n                case 'chatMemberStatusRestricted': {\r\n                    return can_send_polls && is_member && permissions && permissions.can_send_polls;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction canSendMessages(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type, permissions: globalPermissions } = chat;\r\n    if (!type) return false;\r\n    if (!globalPermissions) return false;\r\n\r\n    const { can_send_messages } = globalPermissions;\r\n\r\n    switch (type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n            if (!basicGroup) return false;\r\n\r\n            const { status } = basicGroup;\r\n            if (!status) return false;\r\n\r\n            const { is_member, permissions } = status;\r\n\r\n            switch (status['@type']) {\r\n                case 'chatMemberStatusAdministrator': {\r\n                    return true;\r\n                }\r\n                case 'chatMemberStatusBanned': {\r\n                    return false;\r\n                }\r\n                case 'chatMemberStatusCreator': {\r\n                    return is_member;\r\n                }\r\n                case 'chatMemberStatusLeft': {\r\n                    return false;\r\n                }\r\n                case 'chatMemberStatusMember': {\r\n                    return true;\r\n                }\r\n                case 'chatMemberStatusRestricted': {\r\n                    return is_member && permissions && permissions.can_send_messages;\r\n                }\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            return can_send_messages;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(type.supergroup_id);\r\n            if (!supergroup) return false;\r\n\r\n            const { status } = supergroup;\r\n            if (!status) return false;\r\n\r\n            const { is_member, permissions } = status;\r\n\r\n            switch (status['@type']) {\r\n                case 'chatMemberStatusAdministrator': {\r\n                    return true;\r\n                }\r\n                case 'chatMemberStatusBanned': {\r\n                    return false;\r\n                }\r\n                case 'chatMemberStatusCreator': {\r\n                    return is_member; //can_send_messages && is_member;\r\n                }\r\n                case 'chatMemberStatusLeft': {\r\n                    return false;\r\n                }\r\n                case 'chatMemberStatusMember': {\r\n                    return can_send_messages && !supergroup.is_channel;\r\n                }\r\n                case 'chatMemberStatusRestricted': {\r\n                    return can_send_messages && is_member && permissions && permissions.can_send_messages;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction showChatDraft(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    const draft = getChatDraft(chatId);\r\n\r\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\r\n}\r\n\r\nfunction getChatDraft(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n\r\n    if (chat) {\r\n        const { draft_message } = chat;\r\n        if (draft_message) {\r\n            const { input_message_text } = draft_message;\r\n            if (input_message_text) {\r\n                return input_message_text.text;\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getChatDraftReplyToMessageId(chatId) {\r\n    let replyToMessageId = 0;\r\n    const chat = ChatStore.get(chatId);\r\n    if (chat) {\r\n        const { draft_message } = chat;\r\n        if (draft_message) {\r\n            replyToMessageId = draft_message.reply_to_message_id;\r\n        }\r\n    }\r\n\r\n    return replyToMessageId;\r\n}\r\n\r\nfunction canPinMessages(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type, permissions: globalPermissions } = chat;\r\n    if (!type) return false;\r\n    if (!globalPermissions) return false;\r\n\r\n    const { can_pin_messages } = globalPermissions;\r\n\r\n    switch (type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n            if (!basicGroup) return false;\r\n\r\n            const { status } = basicGroup;\r\n            if (!status) return false;\r\n\r\n            const { is_member, permissions } = status;\r\n\r\n            switch (status['@type']) {\r\n                case 'chatMemberStatusAdministrator': {\r\n                    return status.can_pin_messages;\r\n                }\r\n                case 'chatMemberStatusBanned': {\r\n                    return false;\r\n                }\r\n                case 'chatMemberStatusCreator': {\r\n                    return false;\r\n                }\r\n                case 'chatMemberStatusLeft': {\r\n                    return false;\r\n                }\r\n                case 'chatMemberStatusMember': {\r\n                    return false;\r\n                }\r\n                case 'chatMemberStatusRestricted': {\r\n                    return is_member && permissions && permissions.can_pin_messages;\r\n                }\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            return can_pin_messages;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(type.supergroup_id);\r\n            if (!supergroup) return false;\r\n\r\n            const { status } = supergroup;\r\n            if (!status) return false;\r\n\r\n            const { is_member, permissions } = status;\r\n\r\n            switch (status['@type']) {\r\n                case 'chatMemberStatusAdministrator': {\r\n                    return can_pin_messages || status.can_pin_messages;\r\n                }\r\n                case 'chatMemberStatusBanned': {\r\n                    return false;\r\n                }\r\n                case 'chatMemberStatusCreator': {\r\n                    return is_member; //can_pin_messages && is_member;\r\n                }\r\n                case 'chatMemberStatusLeft': {\r\n                    return false;\r\n                }\r\n                case 'chatMemberStatusMember': {\r\n                    return false;\r\n                }\r\n                case 'chatMemberStatusRestricted': {\r\n                    return can_pin_messages && is_member && permissions && permissions.can_pin_messages;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction isChatVerified(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type } = chat;\r\n    if (!type) return false;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            return false;\r\n        }\r\n        case 'chatTypePrivate':\r\n        case 'chatTypeSecret': {\r\n            const user = UserStore.get(type.user_id);\r\n\r\n            return user && user.is_verified;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            const supergroup = SupergroupStore.get(type.supergroup_id);\r\n\r\n            return supergroup && supergroup.is_verified;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction isChatSecret(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    const { type } = chat;\r\n    if (!type) return false;\r\n\r\n    switch (chat.type['@type']) {\r\n        case 'chatTypeBasicGroup': {\r\n            return false;\r\n        }\r\n        case 'chatTypePrivate': {\r\n            return false;\r\n        }\r\n        case 'chatTypeSecret': {\r\n            return true;\r\n        }\r\n        case 'chatTypeSupergroup': {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport {\r\n    showChatDraft,\r\n    getChatDraft,\r\n    getChatDraftReplyToMessageId,\r\n    getChatTypingString,\r\n    showChatUnreadMessageIcon,\r\n    showChatUnreadMentionCount,\r\n    showChatUnreadCount,\r\n    getChatMuteFor,\r\n    getChatSubtitle,\r\n    getChatSubtitleWithoutTyping,\r\n    getLastMessageSenderName,\r\n    getMessageSenderName,\r\n    getMessageSenderFullName,\r\n    getLastMessageContent,\r\n    getLastMessageDate,\r\n    getMessageDate,\r\n    getChatLetters,\r\n    isAccentChatSubtitle,\r\n    isAccentChatSubtitleWithoutTyping,\r\n    isChatMuted,\r\n    getChatUsername,\r\n    getChatPhoneNumber,\r\n    getChatBio,\r\n    isPrivateChat,\r\n    isGroupChat,\r\n    isChannelChat,\r\n    isChatUnread,\r\n    isChatMember,\r\n    isChatVerified,\r\n    isChatSecret,\r\n    getChatTitle,\r\n    getGroupChatMembers,\r\n    getChatFullInfo,\r\n    hasBasicGroupId,\r\n    hasSupergroupId,\r\n    isSupergroup,\r\n    getSupergroupId,\r\n    hasUserId,\r\n    getChatUserId,\r\n    getPhotoFromChat,\r\n    getChatShortTitle,\r\n    getGroupChatMembersCount,\r\n    isMeChat,\r\n    canClearHistory,\r\n    canDeleteChat,\r\n    canPinMessages,\r\n    canSendMediaMessages,\r\n    canSendMessages,\r\n    canSendPolls\r\n};\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ChatStore from '../Stores/ChatStore';\r\n\r\nfunction getBasicGroupStatus(basicGroup, chatId) {\r\n    if (!basicGroup) return null;\r\n\r\n    const { status, member_count: count } = basicGroup;\r\n\r\n    if (\r\n        status &&\r\n        (status['@type'] === 'chatMemberStatusBanned' ||\r\n            status['@type'] === 'chatMemberStatusLeft' ||\r\n            (status['@type'] === 'chatMemberStatusCreator' && !status.is_member))\r\n    ) {\r\n        return 'group is inaccessible';\r\n    }\r\n\r\n    if (!count) return '0 members';\r\n    if (count === 1) return '1 member';\r\n\r\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\r\n    if (onlineCount > 1) {\r\n        return `${count} members, ${onlineCount} online`;\r\n    }\r\n\r\n    return `${count} members`;\r\n}\r\n\r\nexport { getBasicGroupStatus };\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport SupergroupStore from '../Stores/SupergroupStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\n\r\nexport function getChannelStatus(supergroup, chatId) {\r\n    if (!supergroup) return '';\r\n\r\n    let { status, is_channel, member_count: count } = supergroup;\r\n    if (!is_channel) return '';\r\n\r\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\r\n        return 'channel is inaccessible';\r\n    }\r\n\r\n    if (!count) {\r\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\r\n        if (fullInfo) {\r\n            count = fullInfo.member_count;\r\n        }\r\n    }\r\n\r\n    if (!count) return '0 subscribers';\r\n    if (count === 1) return '1 subscriber';\r\n\r\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\r\n    if (onlineCount > 1) {\r\n        return `${count} subscribers, ${onlineCount} online`;\r\n    }\r\n\r\n    return `${count} subscribers`;\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport SupergroupStore from '../Stores/SupergroupStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\n\r\nexport function getSupergroupStatus(supergroup, chatId) {\r\n    if (!supergroup) return null;\r\n\r\n    let { status, is_channel, member_count: count } = supergroup;\r\n\r\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\r\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\r\n    }\r\n\r\n    if (!count) {\r\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\r\n        if (fullInfo) {\r\n            count = fullInfo.member_count;\r\n        }\r\n    }\r\n\r\n    if (!count) return '0 members';\r\n    if (count === 1) return '1 member';\r\n\r\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\r\n    if (onlineCount > 1) {\r\n        return `${count} members, ${onlineCount} online`;\r\n    }\r\n\r\n    return `${count} members`;\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport { openChat, openUser } from '../../Actions/Client';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MentionLink.css';\r\nimport { isGroupChat } from '../../Utils/Chat';\r\n\r\nclass MentionLink extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { userId, username } = props;\r\n\r\n        if (state.prevUserId !== userId || state.prevUsername !== username) {\r\n            return {\r\n                prevUserId: userId,\r\n                prevUsername: username,\r\n                error: false\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleClick = async event => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        const { userId, username, popup } = this.props;\r\n        if (userId) {\r\n            openUser(userId, popup);\r\n        } else if (username) {\r\n            const chat = await TdLibController.send({\r\n                '@type': 'searchPublicChat',\r\n                username\r\n            }).catch(() => {\r\n                this.setState({ error: true });\r\n            });\r\n\r\n            if (chat) {\r\n                if (isGroupChat(chat.id)) {\r\n                    openChat(chat.id, null, false);\r\n                } else {\r\n                    openChat(chat.id, null, popup);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ error: false });\r\n    };\r\n\r\n    handleDialogClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { children, t, title, username } = this.props;\r\n        const { error } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <a title={title} onClick={this.handleClick}>\r\n                    {children}\r\n                </a>\r\n                {error && (\r\n                    <Dialog\r\n                        transitionDuration={0}\r\n                        open={true}\r\n                        onClose={this.handleClose}\r\n                        onClick={this.handleDialogClick}\r\n                        aria-labelledby='confirm-dialog-title'>\r\n                        <DialogTitle id='confirm-dialog-title'>{t('Error')}</DialogTitle>\r\n                        <DialogContent classes={{ root: 'safe-link-content-root' }}>\r\n                            <DialogContentText>{`Can't find username ${username}.`}</DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose}>{t('Ok')}</Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMentionLink.propTypes = {\r\n    userId: PropTypes.number,\r\n    username: PropTypes.string,\r\n    title: PropTypes.string,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nMentionLink.defaultProps = {\r\n    popup: true\r\n};\r\n\r\nexport default withTranslation()(MentionLink);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport emojiRegex from 'emoji-regex';\r\nimport MentionLink from '../Components/Additional/MentionLink';\r\nimport Poll from '../Components/Message/Media/Poll';\r\nimport SafeLink from '../Components/Additional/SafeLink';\r\nimport dateFormat from '../Utils/Date';\r\nimport { searchChat, setMediaViewerContent } from '../Actions/Client';\r\nimport { getChatTitle, isMeChat } from './Chat';\r\nimport { openUser } from './../Actions/Client';\r\nimport { getFitSize, getPhotoSize, getSize } from './Common';\r\nimport { download, saveOrDownload } from './File';\r\nimport { getAudioTitle } from './Media';\r\nimport { getDecodedUrl } from './Url';\r\nimport { getServiceMessageContent } from './ServiceMessage';\r\nimport { getUserFullName } from './User';\r\nimport {\r\n    LOCATION_HEIGHT,\r\n    LOCATION_SCALE,\r\n    LOCATION_WIDTH,\r\n    LOCATION_ZOOM,\r\n    PHOTO_DISPLAY_SIZE,\r\n    PHOTO_SIZE\r\n} from '../Constants';\r\nimport AppStore from '../Stores/ApplicationStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport FileStore from '../Stores/FileStore';\r\nimport MessageStore from '../Stores/MessageStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nexport function isMetaBubble(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) {\r\n        return false;\r\n    }\r\n\r\n    const { content } = message;\r\n    if (!content) {\r\n        return false;\r\n    }\r\n\r\n    const { caption } = content;\r\n    if (caption && caption.text && caption.text.length > 0) {\r\n        return false;\r\n    }\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAnimation': {\r\n            return true;\r\n        }\r\n        case 'messageLocation': {\r\n            return true;\r\n        }\r\n        case 'messagePhoto': {\r\n            return true;\r\n        }\r\n        case 'messageSticker': {\r\n            return true;\r\n        }\r\n        case 'messageVideo': {\r\n            return true;\r\n        }\r\n        case 'messageVideoNote': {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport function isMessageUnread(chatId, messageId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) {\r\n        return false;\r\n    }\r\n\r\n    const { last_read_inbox_message_id, last_read_outbox_message_id } = chat;\r\n\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) {\r\n        return false;\r\n    }\r\n\r\n    const { id, is_outgoing } = message;\r\n    const isMe = isMeChat(chatId);\r\n    if (is_outgoing && isMe) {\r\n        return false;\r\n    }\r\n\r\n    return is_outgoing ? id > last_read_outbox_message_id : id > last_read_inbox_message_id;\r\n}\r\n\r\nfunction getAuthor(message, t = k => k) {\r\n    if (!message) return null;\r\n\r\n    const { forward_info } = message;\r\n\r\n    if (forward_info) {\r\n        switch (forward_info['@type']) {\r\n            case 'messageForwardedFromUser': {\r\n                if (forward_info.sender_user_id > 0) {\r\n                    const user = UserStore.get(forward_info.sender_user_id);\r\n                    if (user) {\r\n                        return getUserFullName(forward_info.sender_user_id, null, t);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'messageForwardedPost': {\r\n                const chat = ChatStore.get(forward_info.chat_id);\r\n                if (chat) {\r\n                    return chat.title;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return getTitle(message, t);\r\n}\r\n\r\nfunction getTitle(message, t = k => k) {\r\n    if (!message) return null;\r\n\r\n    const { sender_user_id, chat_id } = message;\r\n\r\n    if (sender_user_id) {\r\n        const user = UserStore.get(sender_user_id);\r\n        if (user) {\r\n            return getUserFullName(sender_user_id, null, t);\r\n        }\r\n    }\r\n\r\n    if (chat_id) {\r\n        const chat = ChatStore.get(chat_id);\r\n        if (chat) {\r\n            return chat.title;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction substring(text, start, end) {\r\n    if (start < 0) start = 0;\r\n    if (start > text.length - 1) start = text.length - 1;\r\n    if (end < start) end = start;\r\n    if (end > text.length) end = text.length;\r\n\r\n    return text.substring(start, end);\r\n}\r\n\r\nfunction stopPropagation(event) {\r\n    event.stopPropagation();\r\n}\r\n\r\nfunction searchCurrentChat(event, text) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n\r\n    const { chatId } = AppStore;\r\n\r\n    searchChat(chatId, text);\r\n}\r\n\r\nfunction getFormattedText(formattedText, t = k => k) {\r\n    if (formattedText['@type'] !== 'formattedText') return null;\r\n\r\n    const { text, entities } = formattedText;\r\n    if (!text) return null;\r\n    if (!entities) return text;\r\n\r\n    let deleteLineBreakAfterPre = false;\r\n    let result = [];\r\n    let index = 0;\r\n    for (let i = 0; i < entities.length; i++) {\r\n        const entity = entities[i];\r\n        const { offset, length, type } = entity;\r\n\r\n        // skip nested entities\r\n        if (index > offset) {\r\n            continue;\r\n        }\r\n\r\n        let textBefore = substring(text, index, offset);\r\n        const textBeforeLength = textBefore.length;\r\n        if (textBefore) {\r\n            if (deleteLineBreakAfterPre && textBefore.length > 0 && textBefore[0] === '\\n') {\r\n                textBefore = textBefore.substr(1);\r\n                deleteLineBreakAfterPre = false;\r\n            }\r\n            if (textBefore) {\r\n                result.push(textBefore);\r\n            }\r\n        }\r\n\r\n        const entityKey = offset;\r\n        let entityText = substring(text, offset, offset + length);\r\n        if (deleteLineBreakAfterPre && entityText.length > 0 && entityText[0] === '\\n') {\r\n            entityText = entityText.substr(1);\r\n            deleteLineBreakAfterPre = false;\r\n        }\r\n\r\n        switch (type['@type']) {\r\n            case 'textEntityTypeBold': {\r\n                result.push(<strong key={entityKey}>{entityText}</strong>);\r\n                break;\r\n            }\r\n            case 'textEntityTypeBotCommand': {\r\n                const command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\r\n                result.push(\r\n                    <a key={entityKey} onClick={stopPropagation} href={`tg://bot_command?command=${command}&bot=`}>\r\n                        {entityText}\r\n                    </a>\r\n                );\r\n                break;\r\n            }\r\n            case 'textEntityTypeCashtag': {\r\n                result.push(\r\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\r\n                        {entityText}\r\n                    </a>\r\n                );\r\n                break;\r\n            }\r\n            case 'textEntityTypeCode': {\r\n                result.push(<code key={entityKey}>{entityText}</code>);\r\n                break;\r\n            }\r\n            case 'textEntityTypeEmailAddress': {\r\n                result.push(\r\n                    <a\r\n                        key={entityKey}\r\n                        href={`mailto:${entityText}`}\r\n                        onClick={stopPropagation}\r\n                        target='_blank'\r\n                        rel='noopener noreferrer'>\r\n                        {entityText}\r\n                    </a>\r\n                );\r\n                break;\r\n            }\r\n            case 'textEntityTypeHashtag': {\r\n                result.push(\r\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\r\n                        {entityText}\r\n                    </a>\r\n                );\r\n                break;\r\n            }\r\n            case 'textEntityTypeItalic': {\r\n                result.push(<em key={entityKey}>{entityText}</em>);\r\n                break;\r\n            }\r\n            case 'textEntityTypeMentionName': {\r\n                result.push(\r\n                    <MentionLink key={entityKey} userId={type.user_id} title={getUserFullName(type.user_id, null, t)}>\r\n                        {entityText}\r\n                    </MentionLink>\r\n                );\r\n                break;\r\n            }\r\n            case 'textEntityTypeMention': {\r\n                result.push(\r\n                    <MentionLink key={entityKey} username={entityText}>\r\n                        {entityText}\r\n                    </MentionLink>\r\n                );\r\n                break;\r\n            }\r\n            case 'textEntityTypePhoneNumber': {\r\n                result.push(\r\n                    <a key={entityKey} href={`tel:${entityText}`} onClick={stopPropagation}>\r\n                        {entityText}\r\n                    </a>\r\n                );\r\n                break;\r\n            }\r\n            case 'textEntityTypePre': {\r\n                result.push(<pre key={entityKey}>{entityText}</pre>);\r\n                deleteLineBreakAfterPre = true;\r\n                break;\r\n            }\r\n            case 'textEntityTypePreCode': {\r\n                result.push(\r\n                    <pre key={entityKey}>\r\n                        <code>{entityText}</code>\r\n                    </pre>\r\n                );\r\n                deleteLineBreakAfterPre = true;\r\n                break;\r\n            }\r\n            case 'textEntityTypeTextUrl': {\r\n                const url = type.url ? type.url : entityText;\r\n\r\n                result.push(\r\n                    <SafeLink key={entityKey} url={url}>\r\n                        {entityText}\r\n                    </SafeLink>\r\n                );\r\n                break;\r\n            }\r\n            case 'textEntityTypeUrl': {\r\n                result.push(\r\n                    <SafeLink key={entityKey} url={entityText}>\r\n                        {entityText}\r\n                    </SafeLink>\r\n                );\r\n                break;\r\n            }\r\n            default:\r\n                result.push(entityText);\r\n                break;\r\n        }\r\n\r\n        index += textBeforeLength + entity.length;\r\n    }\r\n\r\n    if (index < text.length) {\r\n        let textAfter = text.substring(index);\r\n        if (deleteLineBreakAfterPre && textAfter.length > 0 && textAfter[0] === '\\n') {\r\n            textAfter = textAfter.substr(1);\r\n        }\r\n        if (textAfter) {\r\n            result.push(textAfter);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction getText(message, meta, t = k => k) {\r\n    if (!message) return null;\r\n\r\n    let result = [];\r\n\r\n    const { content } = message;\r\n    if (!content) return [...result, meta];\r\n\r\n    const { text, caption } = content;\r\n\r\n    if (text && text['@type'] === 'formattedText' && text.text) {\r\n        result = getFormattedText(text, t);\r\n    } else if (caption && caption['@type'] === 'formattedText' && caption.text) {\r\n        const formattedText = getFormattedText(caption, t);\r\n        if (formattedText) {\r\n            result = result.concat(formattedText);\r\n        }\r\n    }\r\n\r\n    return result && result.length > 0 ? [...result, meta] : [];\r\n}\r\n\r\nfunction getWebPage(message) {\r\n    if (!message) return null;\r\n    if (!message.content) return null;\r\n\r\n    return message.content.web_page;\r\n}\r\n\r\nfunction getDate(date) {\r\n    if (!date) return null;\r\n\r\n    const d = new Date(date * 1000);\r\n\r\n    return dateFormat(d, 'H:MM'); //date.toDateString();\r\n}\r\n\r\nfunction getDateHint(date) {\r\n    if (!date) return null;\r\n\r\n    const d = new Date(date * 1000);\r\n    return dateFormat(d, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\r\n}\r\n\r\nfunction isForwardOriginHidden(forwardInfo) {\r\n    if (!forwardInfo) return false;\r\n\r\n    const { origin } = forwardInfo;\r\n    if (!origin) return false;\r\n\r\n    switch (origin['@type']) {\r\n        case 'messageForwardOriginUser': {\r\n            return false;\r\n        }\r\n        case 'messageForwardOriginHiddenUser': {\r\n            return true;\r\n        }\r\n        case 'messageForwardOriginChannel': {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getForwardTitle(forwardInfo, t = key => key) {\r\n    if (!forwardInfo) return '';\r\n\r\n    const { origin } = forwardInfo;\r\n    if (!origin) return '';\r\n\r\n    switch (origin['@type']) {\r\n        case 'messageForwardOriginUser': {\r\n            const { sender_user_id } = origin;\r\n\r\n            return getUserFullName(sender_user_id, null, t);\r\n        }\r\n        case 'messageForwardOriginHiddenUser': {\r\n            const { sender_name } = origin;\r\n\r\n            return sender_name;\r\n        }\r\n        case 'messageForwardOriginChannel': {\r\n            const { chat_id, author_signature } = origin;\r\n\r\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\r\n        }\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\nfunction getUnread(message) {\r\n    if (!message) return false;\r\n    if (!message.chat_id) return false;\r\n    if (!message.is_outgoing) return false;\r\n\r\n    let chat = ChatStore.get(message.chat_id);\r\n    if (!chat) return false;\r\n\r\n    return chat.last_read_outbox_message_id < message.id;\r\n}\r\n\r\nfunction getSenderUserId(message) {\r\n    if (!message) return null;\r\n\r\n    return message.sender_user_id;\r\n}\r\n\r\nfunction filterDuplicateMessages(result, history) {\r\n    if (result.messages.length === 0) return;\r\n    if (history.length === 0) return;\r\n\r\n    const map = history.reduce(function(accumulator, current) {\r\n        accumulator.set(current.id, current.id);\r\n        return accumulator;\r\n    }, new Map());\r\n\r\n    result.messages = result.messages.filter(x => !map.has(x.id));\r\n}\r\n\r\nfunction filterMessages(messages) {\r\n    return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\r\n}\r\n\r\nfunction getContent(message, t = key => key) {\r\n    if (!message) return null;\r\n\r\n    const { content } = message;\r\n    if (!content) return null;\r\n\r\n    let caption = '';\r\n    if (content.caption && content.caption.text) {\r\n        caption = `, ${content.caption.text}`;\r\n    }\r\n\r\n    if (message.ttl > 0) {\r\n        return getServiceMessageContent(message);\r\n    }\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAnimation': {\r\n            return t('AttachGif') + caption;\r\n        }\r\n        case 'messageAudio': {\r\n            return t('AttachMusic') + caption;\r\n        }\r\n        case 'messageBasicGroupChatCreate': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageCall': {\r\n            return t('Call') + caption;\r\n        }\r\n        case 'messageChatAddMembers': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageChatChangePhoto': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageChatChangeTitle': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageChatDeleteMember': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageChatDeletePhoto': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageChatJoinByLink': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageChatSetTtl': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageChatUpgradeFrom': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageChatUpgradeTo': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageContact': {\r\n            return t('AttachContact') + caption;\r\n        }\r\n        case 'messageContactRegistered': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageCustomServiceAction': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageDocument': {\r\n            const { document } = content;\r\n            if (document && document.file_name) {\r\n                return document.file_name + caption;\r\n            }\r\n\r\n            return t('AttachDocument') + caption;\r\n        }\r\n        case 'messageExpiredPhoto': {\r\n            return t('AttachPhoto') + caption;\r\n        }\r\n        case 'messageExpiredVideo': {\r\n            return t('AttachVideo') + caption;\r\n        }\r\n        case 'messageGame': {\r\n            return t('AttachGame') + caption;\r\n        }\r\n        case 'messageGameScore': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageInvoice': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageLocation': {\r\n            return t('AttachLocation') + caption;\r\n        }\r\n        case 'messagePassportDataReceived': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messagePassportDataSent': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messagePaymentSuccessful': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messagePaymentSuccessfulBot': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messagePhoto': {\r\n            return t('AttachPhoto') + caption;\r\n        }\r\n        case 'messagePoll': {\r\n            const { poll } = content;\r\n\r\n            return '📊 ' + (poll.question || t('Poll')) + caption;\r\n        }\r\n        case 'messagePinMessage': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageScreenshotTaken': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageSticker': {\r\n            const { sticker } = content;\r\n            let emoji = '';\r\n            if (sticker && sticker.emoji) {\r\n                emoji = sticker.emoji;\r\n            }\r\n\r\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\r\n        }\r\n        case 'messageSupergroupChatCreate': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageText': {\r\n            return content.text.text + caption;\r\n        }\r\n        case 'messageUnsupported': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        case 'messageVenue': {\r\n            return t('AttachLocation') + caption;\r\n        }\r\n        case 'messageVideo': {\r\n            return t('AttachVideo') + caption;\r\n        }\r\n        case 'messageVideoNote': {\r\n            return t('AttachRound') + caption;\r\n        }\r\n        case 'messageVoiceNote': {\r\n            return t('AttachAudio') + caption;\r\n        }\r\n        case 'messageWebsiteConnected': {\r\n            return getServiceMessageContent(message);\r\n        }\r\n        default: {\r\n            return t('UnsupportedAttachment');\r\n        }\r\n    }\r\n}\r\n\r\nfunction isMediaContent(content) {\r\n    if (!content) return false;\r\n\r\n    return content['@type'] === 'messagePhoto';\r\n}\r\n\r\nfunction getLocationId(\r\n    location,\r\n    width = LOCATION_WIDTH,\r\n    height = LOCATION_HEIGHT,\r\n    zoom = LOCATION_ZOOM,\r\n    scale = LOCATION_SCALE\r\n) {\r\n    if (!location) return null;\r\n\r\n    const { longitude, latitude } = location;\r\n    return `loc=${latitude},${longitude}&size=${width},${height}&scale=${scale}&zoom=${zoom}`;\r\n}\r\n\r\nfunction isVideoMessage(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return false;\r\n\r\n    const { content } = message;\r\n    if (!content) return false;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageVideo': {\r\n            return true;\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            return Boolean(web_page.video);\r\n        }\r\n        default: {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nfunction isLottieMessage(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return false;\r\n\r\n    const { content } = message;\r\n    if (!content) return false;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageDocument': {\r\n            const { document } = content;\r\n            if (!document) return false;\r\n\r\n            const { file_name } = document;\r\n\r\n            return file_name && file_name.toLowerCase().endsWith('.json');\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            if (!web_page) return false;\r\n\r\n            const { document } = web_page;\r\n            if (!document) return false;\r\n\r\n            const { file_name } = document;\r\n\r\n            return file_name && file_name.toLowerCase().endsWith('.json');\r\n        }\r\n        default: {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nfunction isAnimationMessage(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return false;\r\n\r\n    const { content } = message;\r\n    if (!content) return false;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAnimation': {\r\n            return true;\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            return Boolean(web_page.animation);\r\n        }\r\n        default: {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nfunction isContentOpened(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return true;\r\n\r\n    const { content } = message;\r\n    if (!content) return true;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageVoiceNote': {\r\n            return content.is_listened;\r\n        }\r\n        case 'messageVideoNote': {\r\n            return content.is_viewed;\r\n        }\r\n        default: {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getMediaTitle(message, t = k => k) {\r\n    if (!message) return null;\r\n\r\n    const { content } = message;\r\n    if (!content) return null;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAudio': {\r\n            const { audio } = content;\r\n            if (audio) {\r\n                return getAudioTitle(audio);\r\n            }\r\n            break;\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            if (web_page) {\r\n                const { audio } = web_page;\r\n                if (audio) {\r\n                    return getAudioTitle(audio);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return getAuthor(message, t);\r\n}\r\n\r\nfunction hasAudio(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return false;\r\n\r\n    const { content } = message;\r\n    if (!content) return false;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAudio': {\r\n            const { audio } = content;\r\n            if (audio) {\r\n                return true;\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            if (web_page) {\r\n                const { audio } = web_page;\r\n                if (audio) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            break;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction hasVideoNote(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return false;\r\n\r\n    const { content } = message;\r\n    if (!content) return false;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageVideoNote': {\r\n            const { video_note } = content;\r\n            if (video_note) {\r\n                return true;\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            if (web_page) {\r\n                const { video_note } = web_page;\r\n                if (video_note) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            break;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getSearchMessagesFilter(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return null;\r\n\r\n    const { content } = message;\r\n    if (!content) return null;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAudio': {\r\n            const { audio } = content;\r\n            if (audio) {\r\n                return {\r\n                    '@type': 'searchMessagesFilterAudio'\r\n                };\r\n            }\r\n            break;\r\n        }\r\n        case 'messageVoiceNote': {\r\n            const { voice_note } = content;\r\n            if (voice_note) {\r\n                return {\r\n                    '@type': 'searchMessagesFilterVoiceNote'\r\n                };\r\n            }\r\n            break;\r\n        }\r\n        case 'messageVideoNote': {\r\n            const { video_note } = content;\r\n            if (video_note) {\r\n                return null;\r\n\r\n                return {\r\n                    '@type': 'searchMessagesFilterVideoNote'\r\n                };\r\n            }\r\n            break;\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            if (web_page) {\r\n                const { audio, voice_note, video_note } = web_page;\r\n                if (audio) {\r\n                    return null;\r\n\r\n                    return {\r\n                        '@type': 'searchMessagesFilterAudio'\r\n                    };\r\n                }\r\n\r\n                if (voice_note) {\r\n                    return null;\r\n\r\n                    return {\r\n                        '@type': 'searchMessagesFilterVoiceNote'\r\n                    };\r\n                }\r\n\r\n                if (video_note) {\r\n                    return null;\r\n\r\n                    return {\r\n                        '@type': 'searchMessagesFilterVideoNote'\r\n                    };\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction openAnimation(animation, message, fileCancel) {\r\n    if (!animation) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    let { animation: file } = animation;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    if (fileCancel && file.local.is_downloading_active) {\r\n        FileStore.cancelGetRemoteFile(file.id, message);\r\n        return;\r\n    } else if (fileCancel && file.remote.is_uploading_active) {\r\n        FileStore.cancelUploadFile(file.id, message);\r\n        return;\r\n    } else {\r\n        // download file at loadMediaViewerContent instead\r\n        // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\r\n    }\r\n\r\n    TdLibController.clientUpdate({\r\n        '@type': 'clientUpdateActiveAnimation',\r\n        chatId: chat_id,\r\n        messageId: id\r\n    });\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    setMediaViewerContent({\r\n        chatId: chat_id,\r\n        messageId: id\r\n    });\r\n}\r\n\r\nfunction openAudio(audio, message, fileCancel) {\r\n    if (!audio) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    let { audio: file } = audio;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    if (fileCancel && file.local.is_downloading_active) {\r\n        FileStore.cancelGetRemoteFile(file.id, message);\r\n        return;\r\n    } else if (fileCancel && file.remote.is_uploading_active) {\r\n        FileStore.cancelUploadFile(file.id, message);\r\n        return;\r\n    } else {\r\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\r\n    }\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    TdLibController.clientUpdate({\r\n        '@type': 'clientUpdateMediaActive',\r\n        chatId: chat_id,\r\n        messageId: id\r\n    });\r\n}\r\n\r\nfunction openChatPhoto(photo, message, fileCancel) {\r\n    if (!photo) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    const photoSize = getPhotoSize(photo.sizes);\r\n    if (!photoSize) return;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    if (fileCancel && file.local.is_downloading_active) {\r\n        FileStore.cancelGetRemoteFile(file.id, message);\r\n        return;\r\n    } else if (fileCancel && file.remote.is_uploading_active) {\r\n        FileStore.cancelUploadFile(file.id, message);\r\n        return;\r\n    }\r\n\r\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    setMediaViewerContent({\r\n        chatId: chat_id,\r\n        messageId: id\r\n    });\r\n}\r\n\r\nfunction openContact(contact, message, fileCancel) {\r\n    if (!contact) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    openUser(contact.user_id, true);\r\n}\r\n\r\nfunction openDocument(document, message, fileCancel) {\r\n    if (!document) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    let { document: file } = document;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    if (fileCancel && file.local.is_downloading_active) {\r\n        FileStore.cancelGetRemoteFile(file.id, message);\r\n        return;\r\n    } else if (fileCancel && file.remote.is_uploading_active) {\r\n        FileStore.cancelUploadFile(file.id, message);\r\n        return;\r\n    }\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    if (isLottieMessage(chat_id, id)) {\r\n        TdLibController.send({\r\n            '@type': 'openMessageContent',\r\n            chat_id: chat_id,\r\n            message_id: id\r\n        });\r\n\r\n        setMediaViewerContent({\r\n            chatId: chat_id,\r\n            messageId: id\r\n        });\r\n    } else {\r\n        saveOrDownload(file, document.file_name, message);\r\n    }\r\n}\r\n\r\nfunction openGame(game, message, fileCancel) {\r\n    if (!game) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    const { animation } = game;\r\n    if (animation) {\r\n        let { animation: file } = animation;\r\n        if (!file) return;\r\n\r\n        file = FileStore.get(file.id) || file;\r\n        if (fileCancel && file.local.is_downloading_active) {\r\n            FileStore.cancelGetRemoteFile(file.id, message);\r\n            return;\r\n        } else if (fileCancel && file.remote.is_uploading_active) {\r\n            FileStore.cancelUploadFile(file.id, message);\r\n            return;\r\n        }\r\n\r\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\r\n    }\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    TdLibController.clientUpdate({\r\n        '@type': 'clientUpdateActiveAnimation',\r\n        chatId: chat_id,\r\n        messageId: id\r\n    });\r\n}\r\n\r\nfunction openPhoto(photo, message, fileCancel) {\r\n    if (!photo) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    const photoSize = getPhotoSize(photo.sizes);\r\n    if (!photoSize) return;\r\n\r\n    let { photo: file } = photoSize;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    if (fileCancel && file.local.is_downloading_active) {\r\n        FileStore.cancelGetRemoteFile(file.id, message);\r\n        return;\r\n    } else if (fileCancel && file.remote.is_uploading_active) {\r\n        FileStore.cancelUploadFile(file.id, message);\r\n        return;\r\n    }\r\n\r\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    setMediaViewerContent({\r\n        chatId: chat_id,\r\n        messageId: id\r\n    });\r\n}\r\n\r\nasync function openSticker(sticker, message, fileCancel) {\r\n    if (!sticker) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    const { set_id } = sticker;\r\n    if (!set_id) return;\r\n\r\n    const stickerSet = await TdLibController.send({\r\n        '@type': 'getStickerSet',\r\n        set_id\r\n    });\r\n\r\n    if (!stickerSet) return;\r\n\r\n    TdLibController.clientUpdate({\r\n        '@type': 'clientUpdateStickerSet',\r\n        stickerSet\r\n    });\r\n}\r\n\r\nfunction openVideo(video, message, fileCancel) {\r\n    if (!video) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    let { video: file } = video;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    if (fileCancel && file.local.is_downloading_active) {\r\n        FileStore.cancelGetRemoteFile(file.id, message);\r\n        return;\r\n    } else if (fileCancel && file.remote.is_uploading_active) {\r\n        FileStore.cancelUploadFile(file.id, message);\r\n        return;\r\n    }\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    setMediaViewerContent({\r\n        chatId: chat_id,\r\n        messageId: id\r\n    });\r\n}\r\n\r\nfunction openVideoNote(videoNote, message, fileCancel) {\r\n    if (!videoNote) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    let { video: file } = videoNote;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    if (fileCancel && file.local.is_downloading_active) {\r\n        FileStore.cancelGetRemoteFile(file.id, message);\r\n        return;\r\n    } else if (fileCancel && file.remote.is_uploading_active) {\r\n        FileStore.cancelUploadFile(file.id, message);\r\n        return;\r\n    }\r\n\r\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    TdLibController.clientUpdate({\r\n        '@type': 'clientUpdateMediaActive',\r\n        chatId: chat_id,\r\n        messageId: id\r\n    });\r\n}\r\n\r\nfunction openVoiceNote(voiceNote, message, fileCancel) {\r\n    if (!voiceNote) return;\r\n    if (!message) return;\r\n\r\n    const { chat_id, id } = message;\r\n\r\n    let { voice: file } = voiceNote;\r\n    if (!file) return;\r\n\r\n    file = FileStore.get(file.id) || file;\r\n    if (fileCancel && file.local.is_downloading_active) {\r\n        FileStore.cancelGetRemoteFile(file.id, message);\r\n        return;\r\n    } else if (fileCancel && file.remote.is_uploading_active) {\r\n        FileStore.cancelUploadFile(file.id, message);\r\n        return;\r\n    } else {\r\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\r\n    }\r\n\r\n    TdLibController.send({\r\n        '@type': 'openMessageContent',\r\n        chat_id: chat_id,\r\n        message_id: id\r\n    });\r\n\r\n    TdLibController.clientUpdate({\r\n        '@type': 'clientUpdateMediaActive',\r\n        chatId: chat_id,\r\n        messageId: id\r\n    });\r\n}\r\n\r\nfunction openMedia(chatId, messageId, fileCancel = true) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return;\r\n\r\n    const { content } = message;\r\n    if (!content) return null;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAnimation': {\r\n            const { animation } = content;\r\n            if (animation) {\r\n                openAnimation(animation, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageAudio': {\r\n            const { audio } = content;\r\n            if (audio) {\r\n                // openDocument(audio, message, fileCancel);\r\n                openAudio(audio, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageChatChangePhoto': {\r\n            const { photo } = content;\r\n            if (photo) {\r\n                openChatPhoto(photo, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageContact': {\r\n            const { contact } = content;\r\n            if (contact) {\r\n                openContact(contact, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageDocument': {\r\n            const { document } = content;\r\n            if (document) {\r\n                openDocument(document, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageGame': {\r\n            const { game } = content;\r\n            if (game) {\r\n                openGame(game, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messagePhoto': {\r\n            const { photo } = content;\r\n            if (photo) {\r\n                openPhoto(photo, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageSticker': {\r\n            const { sticker } = content;\r\n            if (sticker) {\r\n                openSticker(sticker, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            if (web_page) {\r\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\r\n\r\n                if (animation) {\r\n                    openAnimation(animation, message, fileCancel);\r\n                }\r\n\r\n                if (audio) {\r\n                    openAudio(audio, message, fileCancel);\r\n                }\r\n\r\n                if (document) {\r\n                    openDocument(document, message, fileCancel);\r\n                }\r\n\r\n                if (sticker) {\r\n                    openSticker(sticker, message, fileCancel);\r\n                }\r\n\r\n                if (video) {\r\n                    openVideo(video, message, fileCancel);\r\n                }\r\n\r\n                if (video_note) {\r\n                    openVideoNote(video_note, message, fileCancel);\r\n                }\r\n\r\n                if (voice_note) {\r\n                    openVoiceNote(voice_note, message, fileCancel);\r\n                }\r\n\r\n                if (photo) {\r\n                    openPhoto(photo, message, fileCancel);\r\n                }\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageVideo': {\r\n            const { video } = content;\r\n            if (video) {\r\n                openVideo(video, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageVideoNote': {\r\n            const { video_note } = content;\r\n            if (video_note) {\r\n                openVideoNote(video_note, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageVoiceNote': {\r\n            const { voice_note } = content;\r\n            if (voice_note) {\r\n                openVoiceNote(voice_note, message, fileCancel);\r\n            }\r\n\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nfunction isDeletedMessage(message) {\r\n    return message && message['@type'] === 'deletedMessage';\r\n}\r\n\r\nexport function getReplyMinithumbnail(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return;\r\n\r\n    const { content } = message;\r\n    if (!content) return null;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAnimation': {\r\n            const { animation } = content;\r\n            if (!animation) return null;\r\n\r\n            const { minithumbnail } = animation;\r\n            return minithumbnail || null;\r\n        }\r\n        case 'messageAudio': {\r\n            return null;\r\n        }\r\n        case 'messageChatChangePhoto': {\r\n            const { photo } = content;\r\n            if (!photo) return null;\r\n\r\n            return photo.minithumbnail || null;\r\n        }\r\n        case 'messageDocument': {\r\n            const { document } = content;\r\n            if (!document) return null;\r\n\r\n            const { minithumbnail } = document;\r\n            return minithumbnail || null;\r\n        }\r\n        case 'messageGame': {\r\n            const { game } = content;\r\n            if (!game) return null;\r\n\r\n            const { animation, photo } = game;\r\n            if (animation) {\r\n                const { minithumbnail } = animation;\r\n                if (minithumbnail) {\r\n                    return minithumbnail;\r\n                }\r\n            }\r\n\r\n            if (photo) {\r\n                return photo.minithumbnail || null;\r\n            }\r\n\r\n            return null;\r\n        }\r\n        case 'messagePhoto': {\r\n            const { photo } = content;\r\n            if (!photo) return null;\r\n\r\n            return photo.minithumbnail || null;\r\n        }\r\n        case 'messageSticker': {\r\n            return null;\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            if (web_page) {\r\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\r\n                if (photo) {\r\n                    return photo.minithumbnail || null;\r\n                }\r\n                if (animation) {\r\n                    const { minithumbnail } = animation;\r\n                    return minithumbnail || null;\r\n                }\r\n                if (audio) {\r\n                    return null;\r\n                }\r\n                if (document) {\r\n                    const { minithumbnail } = document;\r\n                    return minithumbnail || null;\r\n                }\r\n                if (sticker) {\r\n                    return null;\r\n                }\r\n                if (video) {\r\n                    const { minithumbnail } = video;\r\n                    return minithumbnail || null;\r\n                }\r\n                if (video_note) {\r\n                    const { minithumbnail } = video_note;\r\n                    return minithumbnail || null;\r\n                }\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageVideo': {\r\n            const { video } = content;\r\n            if (!video) return null;\r\n\r\n            const { minithumbnail } = video;\r\n            return minithumbnail || null;\r\n        }\r\n        case 'messageVideoNote': {\r\n            const { video_note } = content;\r\n            if (!video_note) return null;\r\n\r\n            const { minithumbnail } = video_note;\r\n            return minithumbnail || null;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getReplyPhotoSize(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return;\r\n\r\n    const { content } = message;\r\n    if (!content) return null;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAnimation': {\r\n            const { animation } = content;\r\n            if (!animation) return null;\r\n\r\n            const { thumbnail } = animation;\r\n            return thumbnail || null;\r\n        }\r\n        case 'messageAudio': {\r\n            const { audio } = content;\r\n            if (!audio) return null;\r\n\r\n            const { album_cover_thumbnail } = audio;\r\n            return album_cover_thumbnail || null;\r\n        }\r\n        case 'messageChatChangePhoto': {\r\n            const { photo } = content;\r\n            if (!photo) return null;\r\n\r\n            return getPhotoSize(photo.sizes);\r\n        }\r\n        case 'messageDocument': {\r\n            const { document } = content;\r\n            if (!document) return null;\r\n\r\n            const { thumbnail } = document;\r\n            return thumbnail || null;\r\n        }\r\n        case 'messageGame': {\r\n            const { game } = content;\r\n            if (!game) return null;\r\n\r\n            const { animation, photo } = game;\r\n            if (animation) {\r\n                const { thumbnail } = animation;\r\n                if (thumbnail) {\r\n                    return thumbnail;\r\n                }\r\n            }\r\n\r\n            if (photo) {\r\n                return getPhotoSize(photo.sizes);\r\n            }\r\n\r\n            return null;\r\n        }\r\n        case 'messagePhoto': {\r\n            const { photo } = content;\r\n            if (!photo) return null;\r\n\r\n            return getPhotoSize(photo.sizes);\r\n        }\r\n        case 'messageSticker': {\r\n            const { sticker } = content;\r\n            if (!sticker) return null;\r\n\r\n            const { thumbnail } = sticker;\r\n            return thumbnail || null;\r\n        }\r\n        case 'messageText': {\r\n            const { web_page } = content;\r\n            if (web_page) {\r\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\r\n                if (photo) {\r\n                    return getPhotoSize(photo.sizes);\r\n                }\r\n                if (animation) {\r\n                    const { thumbnail } = animation;\r\n                    return thumbnail || null;\r\n                }\r\n                if (audio) {\r\n                    const { album_cover_thumbnail } = audio;\r\n                    return album_cover_thumbnail || null;\r\n                }\r\n                if (document) {\r\n                    const { thumbnail } = document;\r\n                    return thumbnail || null;\r\n                }\r\n                if (sticker) {\r\n                    const { thumbnail } = sticker;\r\n                    return thumbnail || null;\r\n                }\r\n                if (video) {\r\n                    const { thumbnail } = video;\r\n                    return thumbnail || null;\r\n                }\r\n                if (video_note) {\r\n                    const { thumbnail } = video_note;\r\n                    return thumbnail || null;\r\n                }\r\n            }\r\n\r\n            break;\r\n        }\r\n        case 'messageVideo': {\r\n            const { video } = content;\r\n            if (!video) return null;\r\n\r\n            const { thumbnail } = video;\r\n            return thumbnail || null;\r\n        }\r\n        case 'messageVideoNote': {\r\n            const { video_note } = content;\r\n            if (!video_note) return null;\r\n\r\n            const { thumbnail } = video_note;\r\n            return thumbnail || null;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getEmojiMatches(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return 0;\r\n\r\n    const { content } = message;\r\n    if (!content) return 0;\r\n    if (content['@type'] !== 'messageText') return 0;\r\n\r\n    const { text: textContent } = content;\r\n    if (!textContent) return;\r\n    if (textContent['@type'] !== 'formattedText') return 0;\r\n\r\n    const { text, entities } = textContent;\r\n    if (!text) return 0;\r\n    if (entities && entities.length > 0) return 0;\r\n\r\n    let lastIndex = 0;\r\n    let emojiMatches = 0;\r\n    let m;\r\n    const re = emojiRegex();\r\n    do {\r\n        m = re.exec(text);\r\n\r\n        if (m) {\r\n            emojiMatches += 1;\r\n            // none-emoji symbol between prev and current emojis or before first\r\n            if (lastIndex !== m.index) {\r\n                emojiMatches = 0;\r\n                break;\r\n            }\r\n            // more than 3 emojis in a row\r\n            if (emojiMatches > 3) {\r\n                emojiMatches = 0;\r\n                break;\r\n            }\r\n            lastIndex = re.lastIndex;\r\n        }\r\n        // none-emoji symbol at the end\r\n        if (!m && lastIndex !== text.length) {\r\n            emojiMatches = 0;\r\n            break;\r\n        }\r\n    } while (m);\r\n\r\n    return emojiMatches;\r\n}\r\n\r\nfunction messageComparatorDesc(left, right) {\r\n    return left.id - right.id;\r\n}\r\n\r\nfunction checkInclusion(index, entities) {\r\n    if (!entities) return false;\r\n    if (!entities.length) return false;\r\n\r\n    for (let i = 0; i < entities.length; i++) {\r\n        if (index >= entities[i].offset && index < entities[i].offset + entities[i].length) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction checkIntersection(startIndex, endIndex, entities) {\r\n    if (!entities) return false;\r\n    if (!entities.length) return false;\r\n\r\n    for (let i = 0; i < entities.length; i++) {\r\n        if (startIndex <= entities[i].offset && entities[i].offset + entities[i].length - 1 <= endIndex) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction checkEntity(startIndex, endIndex, entities) {\r\n    return (\r\n        !checkInclusion(startIndex, entities) &&\r\n        !checkInclusion(endIndex, entities) &&\r\n        !checkIntersection(startIndex, endIndex, entities)\r\n    );\r\n}\r\n\r\nfunction removeOffsetAfter(start, countToRemove, entities) {\r\n    if (!entities) return;\r\n    if (!entities.length) return;\r\n\r\n    entities.forEach(e => {\r\n        if (e.offset > start) {\r\n            e.offset -= countToRemove;\r\n        }\r\n    });\r\n}\r\n\r\nfunction addOffsetAfter(start, countToAdd, entities) {\r\n    if (!entities) return;\r\n    if (!entities.length) return;\r\n\r\n    entities.forEach(e => {\r\n        if (e.offset > start) {\r\n            e.offset += countToAdd;\r\n        }\r\n    });\r\n}\r\n\r\nfunction removeEntities(startIndex, endIndex, entities) {\r\n    if (!entities) return;\r\n    if (!entities.length) return;\r\n\r\n    for (let i = 0; i < entities.length; i++) {\r\n        const entity = entities[i];\r\n        const entityStart = entity.offset;\r\n        const entityEnd = entity.offset + entity.length - 1;\r\n        if (\r\n            (startIndex <= entityStart && entityStart <= endIndex) ||\r\n            (startIndex <= entityEnd && entityEnd <= endIndex) ||\r\n            (entityStart < startIndex && endIndex > entityEnd)\r\n        ) {\r\n            entities.splice(i--, 1);\r\n        }\r\n    }\r\n}\r\n\r\nfunction addTextNode(offset, length, text, nodes) {\r\n    const node = document.createTextNode(text.substr(offset, length));\r\n    nodes.push(node);\r\n}\r\n\r\nexport function getNodes(text, entities, t = k => k) {\r\n    if (!text) return [];\r\n\r\n    entities = (entities || []).sort((a, b) => {\r\n        if (a.offset - b.offset !== 0) {\r\n            return a.offset - b.offset;\r\n        }\r\n\r\n        return b.length - a.length;\r\n    });\r\n\r\n    let nodes = [];\r\n    let offset = 0;\r\n    let prevEntity = null;\r\n    entities.forEach(x => {\r\n        if (x.offset - offset > 0) {\r\n            addTextNode(offset, x.offset - offset, text, nodes);\r\n            offset = x.offset;\r\n        }\r\n\r\n        if (!(prevEntity && checkInclusion(x.offset, [prevEntity]))) {\r\n            switch (x.type['@type']) {\r\n                case 'textEntityTypeBold': {\r\n                    const node = document.createElement('b');\r\n                    node.innerText = text.substr(x.offset, x.length);\r\n                    nodes.push(node);\r\n                    break;\r\n                }\r\n                case 'textEntityTypeBotCommand': {\r\n                    addTextNode(x.offset, x.length, text, nodes);\r\n                    break;\r\n                }\r\n                case 'textEntityTypeCashtag': {\r\n                    addTextNode(x.offset, x.length, text, nodes);\r\n                    break;\r\n                }\r\n                case 'textEntityTypeCode': {\r\n                    const node = document.createTextNode('`' + text.substr(x.offset, x.length) + '`');\r\n                    nodes.push(node);\r\n                    break;\r\n                }\r\n                case 'textEntityTypeEmailAddress': {\r\n                    addTextNode(x.offset, x.length, text, nodes);\r\n                    break;\r\n                }\r\n                case 'textEntityTypeHashtag': {\r\n                    addTextNode(x.offset, x.length, text, nodes);\r\n                    break;\r\n                }\r\n                case 'textEntityTypeItalic': {\r\n                    const node = document.createElement('i');\r\n                    node.innerText = text.substr(x.offset, x.length);\r\n                    nodes.push(node);\r\n                    break;\r\n                }\r\n                case 'textEntityTypeMention': {\r\n                    addTextNode(x.offset, x.length, text, nodes);\r\n                    break;\r\n                }\r\n                case 'textEntityTypeMentionName': {\r\n                    try {\r\n                        const { user_id } = x.type;\r\n                        const user = UserStore.get(user_id);\r\n                        if (user) {\r\n                            const node = document.createElement('a');\r\n                            // node.href = getDecodedUrl(url, false);\r\n                            node.title = getUserFullName(user_id, null, t);\r\n                            // node.target = '_blank';\r\n                            // node.rel = 'noopener noreferrer';\r\n                            node.dataset.userId = user_id;\r\n                            node.innerText = text.substr(x.offset, x.length);\r\n                            nodes.push(node);\r\n                        } else {\r\n                            addTextNode(x.offset, x.length, text, nodes);\r\n                        }\r\n                    } catch {\r\n                        addTextNode(x.offset, x.length, text, nodes);\r\n                    }\r\n                    break;\r\n                }\r\n                case 'textEntityTypePhoneNumber': {\r\n                    addTextNode(x.offset, x.length, text, nodes);\r\n                    break;\r\n                }\r\n                case 'textEntityTypePre': {\r\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\r\n                    nodes.push(node);\r\n                    break;\r\n                }\r\n                case 'textEntityTypePreCode': {\r\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\r\n                    nodes.push(node);\r\n                    break;\r\n                }\r\n                case 'textEntityTypeTextUrl': {\r\n                    try {\r\n                        const { url } = x.type;\r\n\r\n                        const node = document.createElement('a');\r\n                        node.href = getDecodedUrl(url, false);\r\n                        node.title = getDecodedUrl(url, false);\r\n                        node.target = '_blank';\r\n                        node.rel = 'noopener noreferrer';\r\n                        node.innerText = text.substr(x.offset, x.length);\r\n                        nodes.push(node);\r\n                    } catch {\r\n                        addTextNode(x.offset, x.length, text, nodes);\r\n                    }\r\n                    break;\r\n                }\r\n                case 'textEntityTypeUrl': {\r\n                    addTextNode(x.offset, x.length, text, nodes);\r\n                    break;\r\n                }\r\n                default: {\r\n                    addTextNode(x.offset, x.length, text, nodes);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            prevEntity = x;\r\n            offset += x.length;\r\n        }\r\n    });\r\n\r\n    if (offset < text.length) {\r\n        addTextNode(offset, text.length - offset, text, nodes);\r\n    }\r\n\r\n    return nodes;\r\n}\r\n\r\n// based on code from official Android Telegram client\r\n// https://github.com/DrKLO/Telegram/blob/28eb8dfd0ef959fd5ad7d5d22f1d32879707c0a0/TMessagesProj/src/main/java/org/telegram/messenger/MediaDataController.java#L3782\r\nexport function getEntities(text) {\r\n    const entities = [];\r\n    if (!text) return { text, entities };\r\n\r\n    text = text.replace(/<div><br><\\/div>/gi, '<br>');\r\n    text = text.replace(/<div>/gi, '<br>');\r\n    text = text.replace(/<\\/div>/gi, '');\r\n\r\n    text = text.split('<br>').join('\\n');\r\n\r\n    // console.log(`[ge] start text=${text}`);\r\n\r\n    let index = -1; // first index of end tag\r\n    let lastIndex = 0; // first index after end tag\r\n    let start = -1; // first index of start tag\r\n    let isPre = false;\r\n    const mono = '`';\r\n    const pre = '```';\r\n    const bold = '**';\r\n    const italic = '__';\r\n\r\n    // 0 looking for html entities\r\n    const result = new DOMParser().parseFromString(text, 'text/html');\r\n    let offset = 0;\r\n    let length = 0;\r\n    let finalText = '';\r\n    result.body.childNodes.forEach(node => {\r\n        const { textContent, nodeName } = node;\r\n\r\n        length = textContent.length;\r\n        finalText += textContent;\r\n\r\n        if (!checkEntity(offset, offset + length - 1, entities)) {\r\n            return;\r\n        }\r\n\r\n        switch (nodeName) {\r\n            case '#text': {\r\n                offset += length;\r\n                break;\r\n            }\r\n            case 'A': {\r\n                if (node.dataset.userId) {\r\n                    entities.push({\r\n                        '@type': 'textEntity',\r\n                        offset,\r\n                        length,\r\n                        type: { '@type': 'textEntityTypeMentionName', user_id: node.dataset.userId },\r\n                        textContent: finalText.substring(offset, offset + length)\r\n                    });\r\n                } else if (node.href) {\r\n                    entities.push({\r\n                        '@type': 'textEntity',\r\n                        offset,\r\n                        length,\r\n                        type: { '@type': 'textEntityTypeTextUrl', url: node.href },\r\n                        textContent: finalText.substring(offset, offset + length)\r\n                    });\r\n                }\r\n                offset += length;\r\n                break;\r\n            }\r\n            case 'B':\r\n            case 'STRONG': {\r\n                entities.push({\r\n                    '@type': 'textEntity',\r\n                    offset,\r\n                    length,\r\n                    type: { '@type': 'textEntityTypeBold' },\r\n                    textContent: finalText.substring(offset, offset + length)\r\n                });\r\n                offset += length;\r\n                break;\r\n            }\r\n            case 'BR': {\r\n                break;\r\n            }\r\n            case 'CODE': {\r\n                entities.push({\r\n                    '@type': 'textEntity',\r\n                    offset,\r\n                    length,\r\n                    type: { '@type': 'textEntityTypeCode' },\r\n                    textContent: finalText.substring(offset, offset + length)\r\n                });\r\n                offset += length;\r\n                break;\r\n            }\r\n            case 'I':\r\n            case 'EM': {\r\n                entities.push({\r\n                    '@type': 'textEntity',\r\n                    offset,\r\n                    length,\r\n                    type: { '@type': 'textEntityTypeItalic' },\r\n                    textContent: finalText.substring(offset, offset + length)\r\n                });\r\n                offset += length;\r\n                break;\r\n            }\r\n            case 'PRE': {\r\n                entities.push({\r\n                    '@type': 'textEntity',\r\n                    offset,\r\n                    length,\r\n                    type: { '@type': 'textEntityTypePre' },\r\n                    textContent: finalText.substring(offset, offset + length)\r\n                });\r\n                offset += length;\r\n                break;\r\n            }\r\n            default: {\r\n                offset += length;\r\n                break;\r\n            }\r\n        }\r\n    });\r\n    text = finalText;\r\n    // console.log(`[ge] HTML nodes text=${text}`, entities);\r\n\r\n    // 1 looking for ``` and ` in order to find mono and pre entities\r\n    while ((index = text.indexOf(isPre ? pre : mono, lastIndex)) !== -1) {\r\n        if (start === -1) {\r\n            // find start tag\r\n            isPre = text.length - index > 2 && text[index + 1] === mono && text[index + 2] === mono;\r\n            start = index;\r\n            lastIndex = index + (isPre ? 3 : 1);\r\n        } else {\r\n            // find end tag\r\n            for (let i = index + (isPre ? 3 : 1); i < text.length; i++) {\r\n                if (text[i] === mono) {\r\n                    index++;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            lastIndex = index + (isPre ? 3 : 1);\r\n            if (isPre) {\r\n                // add pre tag\r\n\r\n                let textBefore = text.substring(0, start);\r\n                let textContent = text.substring(start + 3, index);\r\n                let textAfter = text.substring(index + 3, text.length);\r\n\r\n                if (textContent.length > 0) {\r\n                    offset = start;\r\n                    length = index - start - 3;\r\n\r\n                    text = textBefore + textContent + textAfter;\r\n\r\n                    const entity = {\r\n                        '@type': 'textEntity',\r\n                        offset,\r\n                        length,\r\n                        language: '',\r\n                        type: { '@type': 'textEntityTypePre' },\r\n                        textContent: text.substring(offset, offset + length)\r\n                    };\r\n                    removeEntities(offset, offset + length - 1 + 6);\r\n                    removeOffsetAfter(offset + length, 6, entities);\r\n                    entities.push(entity);\r\n                    lastIndex -= 6;\r\n\r\n                    // clean text before\r\n                    if (textBefore.length > 0) {\r\n                        const lastChar = textBefore[textBefore.length - 1];\r\n                        if (lastChar !== '\\n') {\r\n                            if (lastChar === ' ' || lastChar === '\\xA0') {\r\n                                textBefore = textBefore.substr(0, textBefore.length - 1) + '\\n';\r\n                                text = textBefore + textContent + textAfter;\r\n                            } else {\r\n                                textBefore += '\\n';\r\n                                text = textBefore + textContent + textAfter;\r\n                                addOffsetAfter(offset - 1, 1, entities);\r\n                                lastIndex += 1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // clean text after\r\n                    if (textAfter.length > 0) {\r\n                        const firstChar = textAfter[0];\r\n                        if (firstChar !== '\\n') {\r\n                            if (firstChar === ' ' || firstChar === '\\xA0') {\r\n                                textAfter = '\\n' + textAfter.substr(1);\r\n                                text = textBefore + textContent + textAfter;\r\n                            } else {\r\n                                textAfter = '\\n' + textAfter;\r\n                                text = textBefore + textContent + textAfter;\r\n                                addOffsetAfter(offset + length - 1, 1, entities);\r\n                                lastIndex += 1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // clean text content\r\n                    if (textContent.length > 2) {\r\n                        if (textContent[0] === '\\n') {\r\n                            textContent = textContent.substring(1);\r\n                            text = textBefore + textContent + textAfter;\r\n                            entity.length -= 1;\r\n                            entity.textContent = textContent;\r\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\r\n                            lastIndex -= 1;\r\n                        }\r\n                    }\r\n\r\n                    if (textContent.length > 2) {\r\n                        if (textContent[textContent.length - 1] === '\\n') {\r\n                            textContent = textContent.substring(0, textContent.length - 1);\r\n                            text = textBefore + textContent + textAfter;\r\n                            entity.length -= 1;\r\n                            entity.textContent = textContent;\r\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\r\n                            lastIndex -= 1;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // add code tag\r\n                if (start + 1 !== index) {\r\n                    offset = start;\r\n                    length = index - start - 1;\r\n\r\n                    text =\r\n                        text.substring(0, start) +\r\n                        text.substring(start + 1, index) +\r\n                        text.substring(index + 1, text.length);\r\n\r\n                    const entity = {\r\n                        '@type': 'textEntity',\r\n                        offset,\r\n                        length,\r\n                        type: { '@type': 'textEntityTypeCode' },\r\n                        textContent: text.substring(offset, offset + length)\r\n                    };\r\n                    removeEntities(offset, offset + length - 1 + 2);\r\n                    removeOffsetAfter(offset + length, 2, entities);\r\n                    entities.push(entity);\r\n                    lastIndex -= 2;\r\n                }\r\n            }\r\n\r\n            start = -1;\r\n            isPre = false;\r\n        }\r\n    }\r\n\r\n    // 1.1 case when ``` is one ` mono symbol\r\n    if (start !== -1 && isPre) {\r\n        offset = start;\r\n        length = 1;\r\n\r\n        if (checkEntity(offset, offset + length + 2 - 1, entities)) {\r\n            text = text.substring(0, start) + text.substring(start + 2, text.length);\r\n\r\n            const entity = {\r\n                '@type': 'textEntity',\r\n                offset,\r\n                length,\r\n                type: { '@type': 'textEntityTypeCode' },\r\n                textContent: text.substring(offset, offset + length)\r\n            };\r\n            removeEntities(offset, offset + length - 1 + 2);\r\n            removeOffsetAfter(offset + length, 2, entities);\r\n            entities.push(entity);\r\n        }\r\n    }\r\n\r\n    // console.log(`[ge] pre and code text=${text}`, entities);\r\n    // 2 looking for bold, italic entities\r\n    for (let c = 0; c < 2; c++) {\r\n        lastIndex = 0;\r\n        start = -1;\r\n        const checkString = c === 0 ? bold : italic;\r\n        const checkChar = c === 0 ? '*' : '_';\r\n        while ((index = text.indexOf(checkString, lastIndex)) !== -1) {\r\n            if (start === -1) {\r\n                const prevChar = index === 0 ? ' ' : text[index - 1];\r\n                if (\r\n                    !checkInclusion(index, entities) &&\r\n                    (prevChar === ' ' || prevChar === '\\xA0' || prevChar === '\\n')\r\n                ) {\r\n                    start = index;\r\n                }\r\n                lastIndex = index + 2;\r\n            } else {\r\n                for (let a = index + 2; a < text.length; a++) {\r\n                    if (text[a] === checkChar) {\r\n                        index++;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n                lastIndex = index + 2;\r\n                if (checkInclusion(index, entities) || checkIntersection(start, index, entities)) {\r\n                    start = -1;\r\n                    continue;\r\n                }\r\n                if (start + 2 !== index) {\r\n                    offset = start;\r\n                    length = index - start - 2;\r\n                    text =\r\n                        text.substring(0, start) +\r\n                        text.substring(start + 2, index) +\r\n                        text.substring(index + 2, text.length);\r\n\r\n                    const entity = {\r\n                        '@type': 'textEntity',\r\n                        offset,\r\n                        length,\r\n                        language: '',\r\n                        type: { '@type': c === 0 ? 'textEntityTypeBold' : 'textEntityTypeItalic' },\r\n                        textContent: text.substring(offset, offset + length)\r\n                    };\r\n                    removeOffsetAfter(offset + length, 4, entities);\r\n                    entities.push(entity);\r\n                    lastIndex -= 4;\r\n                }\r\n                start = -1;\r\n            }\r\n        }\r\n    }\r\n    // console.log(`[ge] result text=${text}`, entities);\r\n\r\n    return { text, entities };\r\n}\r\n\r\nexport function canMessageBeEdited(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return false;\r\n\r\n    const { can_be_edited } = message;\r\n\r\n    return can_be_edited;\r\n}\r\n\r\nexport function showMessageForward(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return false;\r\n\r\n    const { forward_info, content } = message;\r\n\r\n    return forward_info && content && content['@type'] !== 'messageSticker' && content['@type'] !== 'messageAudio';\r\n}\r\n\r\nexport function isTextMessage(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return false;\r\n\r\n    const { content } = message;\r\n\r\n    return content && content['@type'] === 'messageText';\r\n}\r\n\r\nexport function isMessagePinned(chatId, messageId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return false;\r\n\r\n    return chat.pinned_message_id === messageId;\r\n}\r\n\r\nexport function canMessageBeUnvoted(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return false;\r\n\r\n    const { content } = message;\r\n    if (!content) return;\r\n    if (content['@type'] !== 'messagePoll') return;\r\n\r\n    const { poll } = content;\r\n    if (!poll) return false;\r\n\r\n    const { type, is_closed, options } = poll;\r\n    if (!type) return false;\r\n    if (type['@type'] !== 'pollTypeRegular') return false;\r\n    if (is_closed) return false;\r\n\r\n    return options.some(x => x.is_chosen || x.is_being_chosen);\r\n}\r\n\r\nexport function canMessageBeClosed(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return false;\r\n\r\n    const { content, can_be_edited } = message;\r\n    if (!content) return;\r\n    if (content['@type'] !== 'messagePoll') return;\r\n\r\n    return can_be_edited;\r\n}\r\n\r\nexport function canMessageBeForwarded(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n\r\n    return message && message.can_be_forwarded;\r\n}\r\n\r\nexport function canMessageBeDeleted(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n\r\n    return message && (message.can_be_deleted_only_for_self || message.can_be_deleted_for_all_users);\r\n}\r\n\r\nexport function getMessageStyle(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return null;\r\n\r\n    const { content } = message;\r\n    if (!content) return null;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAnimation': {\r\n            const { animation } = content;\r\n            if (!animation) return null;\r\n\r\n            const { width, height, thumbnail } = animation;\r\n\r\n            const size = { width, height } || thumbnail;\r\n            if (!size) return null;\r\n\r\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\r\n            if (!fitSize) return null;\r\n\r\n            return { width: fitSize.width };\r\n        }\r\n        case 'messagePhoto': {\r\n            const { photo } = content;\r\n            if (!photo) return null;\r\n\r\n            const size = getSize(photo.sizes, PHOTO_SIZE);\r\n            if (!size) return null;\r\n\r\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\r\n            if (!fitSize) return null;\r\n\r\n            return { width: fitSize.width };\r\n        }\r\n        case 'messageVideo': {\r\n            const { video } = content;\r\n            if (!video) return null;\r\n\r\n            const { thumbnail, width, height } = video;\r\n\r\n            const size = { width, height } || thumbnail;\r\n            if (!size) return null;\r\n\r\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE);\r\n            if (!fitSize) return null;\r\n\r\n            return { width: fitSize.width };\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport {\r\n    getAuthor,\r\n    getTitle,\r\n    getText,\r\n    getFormattedText,\r\n    getWebPage,\r\n    getContent,\r\n    getDate,\r\n    getDateHint,\r\n    isForwardOriginHidden,\r\n    getForwardTitle,\r\n    getUnread,\r\n    getSenderUserId,\r\n    filterDuplicateMessages,\r\n    filterMessages,\r\n    isMediaContent,\r\n    isDeletedMessage,\r\n    isVideoMessage,\r\n    isAnimationMessage,\r\n    isLottieMessage,\r\n    getLocationId,\r\n    isContentOpened,\r\n    getMediaTitle,\r\n    hasAudio,\r\n    hasVideoNote,\r\n    getSearchMessagesFilter,\r\n    openMedia,\r\n    getReplyPhotoSize,\r\n    getEmojiMatches,\r\n    messageComparatorDesc,\r\n    substring,\r\n    stopPropagation\r\n};\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport { getCallTitle } from '../../../Utils/Media';\r\nimport { getDurationString } from '../../../Utils/Common';\r\nimport './Call.css';\r\n\r\nclass Call extends React.Component {\r\n    render() {\r\n        const { chatId, messageId, duration, openMedia, title, meta } = this.props;\r\n\r\n        const callTitle = getCallTitle(chatId, messageId);\r\n        const durationString = getDurationString(Math.floor(duration || 0));\r\n\r\n        return (\r\n            <div className={classNames('document', { 'media-title': title })}>\r\n                <IconButton color='primary' aria-label='Call'>\r\n                    <CallIcon fontSize='large' />\r\n                </IconButton>\r\n                <div className='document-content'>\r\n                    <div className='document-title'>{callTitle}</div>\r\n                    <div className='document-action'>\r\n                        {durationString}\r\n                        {meta}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCall.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default Call;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport UserTile from '../../Tile/UserTile';\r\nimport { formatPhoneNumber } from '../../../Utils/Phone';\r\nimport { getUserFullName } from '../../../Utils/User';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport './Contact.css';\r\n\r\nclass Contact extends React.Component {\r\n    render() {\r\n        const { contact, title, openMedia, meta, caption, t } = this.props;\r\n        if (!contact) return null;\r\n\r\n        const { user_id: id, first_name, last_name, phone_number } = contact;\r\n\r\n        const user = UserStore.get(id) || {\r\n            '@type': 'user',\r\n            type: { '@type': 'userTypeRegular' },\r\n            id,\r\n            first_name,\r\n            last_name\r\n        };\r\n\r\n        const fullName = getUserFullName(id, user, t);\r\n        const number = formatPhoneNumber(phone_number);\r\n\r\n        return (\r\n            <div className={classNames('contact', { 'media-title': title })}>\r\n                <div className='contact-tile'>\r\n                    <UserTile userId={id} firstName={first_name} lastName={last_name} />\r\n                </div>\r\n                <div className='contact-content'>\r\n                    <div className='contact-name'>\r\n                        {id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\r\n                    </div>\r\n                    <div className='contact-phone'>\r\n                        {number}\r\n                        {!caption && meta}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    contact: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Contact);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Animation from './Animation';\r\nimport Photo from './Photo';\r\nimport { getFormattedText } from '../../../Utils/Message';\r\nimport { getFitSize, getSize } from '../../../Utils/Common';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\r\nimport './Game.css';\r\n\r\nclass Game extends React.Component {\r\n    getContent = () => {\r\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\r\n        if (!game) return null;\r\n\r\n        const { photo, animation } = game;\r\n\r\n        if (animation) {\r\n            const animationSrc = getSrc(animation.animation);\r\n            if (animationSrc || animation.thumbnail) {\r\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\r\n            }\r\n        }\r\n\r\n        if (photo) {\r\n            let style = {\r\n                width: 0,\r\n                height: 0\r\n            };\r\n            const photoSize = getSize(photo.sizes, size);\r\n            if (photoSize) {\r\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\r\n                if (fitPhotoSize) {\r\n                    style.width = fitPhotoSize.width;\r\n                    style.height = fitPhotoSize.height;\r\n                }\r\n            }\r\n\r\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    render() {\r\n        const { game, t } = this.props;\r\n        if (!game) return null;\r\n\r\n        const { title, text, description } = game;\r\n        const formattedText = getFormattedText(text, t);\r\n\r\n        return (\r\n            <div className='game'>\r\n                <div className='border' />\r\n                <div className='game-wrapper'>\r\n                    {title && <div className='game-title'>{title}</div>}\r\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\r\n                    {description && <div className='game-description'>{description}</div>}\r\n                    {this.getContent()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGame.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    game: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func,\r\n\r\n    size: PropTypes.number,\r\n    displaySize: PropTypes.number\r\n};\r\n\r\nGame.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    displaySize: PHOTO_DISPLAY_SIZE\r\n};\r\n\r\nexport default withTranslation()(Game);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Location from './Location';\r\nimport './Venue.css';\r\n\r\nclass Venue extends React.Component {\r\n    render() {\r\n        const { chatId, messageId, venue, openMedia, meta, title, caption } = this.props;\r\n        if (!venue) return null;\r\n\r\n        const { title: venueTitle, address, location } = venue;\r\n        if (!location) return null;\r\n\r\n        const { longitude, latitude } = location;\r\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\r\n\r\n        return (\r\n            <div className='venue'>\r\n                <Location\r\n                    type='venue'\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    location={location}\r\n                    openMedia={openMedia}\r\n                    title={title}\r\n                    caption={caption}\r\n                />\r\n                <div className='venue-content'>\r\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\r\n                        <div className='venue-title'>{venueTitle}</div>\r\n                    </a>\r\n                    <div className='venue-subtitle'>\r\n                        {address}\r\n                        {!caption && meta}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nVenue.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    venue: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default Venue;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../Constants';\r\nimport MessageStore from '../Stores/MessageStore';\r\nimport Animation from '../Components/Message/Media/Animation';\r\nimport Audio from '../Components/Message/Media/Audio';\r\nimport Call from '../Components/Message/Media/Call';\r\nimport Contact from '../Components/Message/Media/Contact';\r\nimport Document from '../Components/Message/Media/Document';\r\nimport Game from '../Components/Message/Media/Game';\r\nimport Location from '../Components/Message/Media/Location';\r\nimport Photo from '../Components/Message/Media/Photo';\r\nimport Poll from '../Components/Message/Media/Poll';\r\nimport Sticker, { StickerSourceEnum } from '../Components/Message/Media/Sticker';\r\nimport Venue from '../Components/Message/Media/Venue';\r\nimport Video from '../Components/Message/Media/Video';\r\nimport VideoNote from '../Components/Message/Media/VideoNote';\r\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\r\nimport React from 'react';\r\nimport { getRandomInt, readImageSize } from './Common';\r\nimport FileStore from '../Stores/FileStore';\r\n\r\nexport function getCallTitle(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return null;\r\n\r\n    const { content, is_outgoing } = message;\r\n    if (content['@type'] !== 'messageCall') return null;\r\n\r\n    const { discard_reason, duration } = content;\r\n    if (is_outgoing) {\r\n        return discard_reason['@type'] === 'callDiscardReasonMissed' ? 'Cancelled Call' : 'Outgoing Call';\r\n    } else if (discard_reason['@type'] === 'callDiscardReasonMissed') {\r\n        return 'Missed Call';\r\n    } else if (discard_reason['@type'] === 'callDiscardReasonDeclined') {\r\n        return 'Declined Call';\r\n    }\r\n\r\n    return 'Incoming Call';\r\n}\r\n\r\nexport function isEditedMedia(chatId, messageId) {\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (!message) return;\r\n\r\n    const { content } = message;\r\n    switch (content['@type']) {\r\n        case 'messageAnimation': {\r\n            return true;\r\n        }\r\n        case 'messageAudio': {\r\n            return true;\r\n        }\r\n        case 'messageDocument': {\r\n            return true;\r\n        }\r\n        case 'messagePhoto': {\r\n            return true;\r\n        }\r\n        case 'messageVideo': {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport function isValidAnimatedSticker(sticker, chatId, messageId) {\r\n    if (!sticker) return false;\r\n    if (!sticker.is_animated) return false;\r\n\r\n    const message = MessageStore.get(chatId, messageId);\r\n    if (message) {\r\n        const { sending_state } = message;\r\n        if (sending_state && !sticker.set_id) return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function isBlurredThumbnail(thumbnail, blurredSize = THUMBNAIL_BLURRED_SIZE_90) {\r\n    if (!thumbnail) return false;\r\n\r\n    return Math.max(thumbnail.width, thumbnail.height) < blurredSize;\r\n}\r\n\r\nexport function getAudioTitle(audio) {\r\n    if (!audio) return null;\r\n\r\n    const { file_name, title, performer } = audio;\r\n    const trimmedTitle = title ? title.trim() : '';\r\n    const trimmedPerformer = performer ? performer.trim() : '';\r\n\r\n    return trimmedTitle || trimmedPerformer\r\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\r\n        : file_name;\r\n}\r\n\r\nexport function getAudioShortTitle(audio) {\r\n    if (!audio) return null;\r\n\r\n    const { file_name, title, performer } = audio;\r\n    const trimmedTitle = title ? title.trim() : '';\r\n    const trimmedPerformer = performer ? performer.trim() : '';\r\n\r\n    return trimmedTitle || trimmedPerformer ? `${trimmedPerformer || 'Unknown Artist'}` : file_name;\r\n}\r\n\r\nexport function getAudioSubtitle(audio) {\r\n    if (!audio) return null;\r\n\r\n    const { title } = audio;\r\n    const trimmedTitle = title ? title.trim() : '';\r\n\r\n    return trimmedTitle || 'Unknown Track';\r\n}\r\n\r\nexport function getStickers(sets) {\r\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\r\n}\r\n\r\nexport function getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\r\n    const result = [];\r\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\r\n    if (row === -1) return [];\r\n    if (column === -1) return [];\r\n\r\n    const prevPrevRow = row - 2;\r\n    const prevRow = row - 1;\r\n    const nextRow = row + 1;\r\n    const nextNextRow = row + 2;\r\n\r\n    const prevColumn = column - 1;\r\n    const nextColumn = column + 1;\r\n\r\n    let skipPrevRow = prevRow < 0;\r\n    let skipPrePrevRow = prevPrevRow < 0;\r\n    if (!skipPrevRow) {\r\n        if (prevColumn >= 0) {\r\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\r\n            if (index === -1) {\r\n                skipPrevRow = true;\r\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\r\n                skipPrePrevRow = index === -1;\r\n            }\r\n            if (index !== -1) {\r\n                result.push(index);\r\n            }\r\n        }\r\n\r\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\r\n        if (index === -1) {\r\n            skipPrevRow = true;\r\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\r\n            skipPrePrevRow = index === -1;\r\n        }\r\n        if (index !== -1) {\r\n            result.push(index);\r\n        }\r\n\r\n        if (nextColumn < stickersPerRow) {\r\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\r\n            if (index === -1) {\r\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\r\n            }\r\n            if (index !== -1) {\r\n                result.push(index);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (prevColumn >= 0) {\r\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\r\n        if (index !== -1) {\r\n            result.push(index);\r\n        }\r\n    }\r\n\r\n    if (nextColumn < stickersPerRow) {\r\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\r\n        if (index !== -1) {\r\n            result.push(index);\r\n        }\r\n    }\r\n\r\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\r\n    let skipNextRow = nextRow >= totalRows;\r\n    let skipNextNextRow = nextRow >= totalRows;\r\n    if (!skipNextRow) {\r\n        if (prevColumn >= 0) {\r\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\r\n            if (index === -1) {\r\n                skipNextRow = true;\r\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\r\n                skipNextNextRow = index === -1;\r\n            }\r\n            if (index !== -1) {\r\n                result.push(index);\r\n            }\r\n        }\r\n\r\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\r\n        if (index === -1) {\r\n            skipNextRow = true;\r\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\r\n            skipNextNextRow = index === -1;\r\n        }\r\n        if (index !== -1) {\r\n            result.push(index);\r\n        }\r\n\r\n        if (nextColumn < stickersPerRow) {\r\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\r\n            if (index === -1) {\r\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\r\n            }\r\n            if (index !== -1) {\r\n                result.push(index);\r\n            }\r\n        }\r\n    }\r\n\r\n    const items = getStickers(sets);\r\n    return result.map(x => items[x]);\r\n}\r\n\r\nfunction toRowColumn(sticker, sets, stickersPerRow) {\r\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\r\n    if (setIndex === -1) return [-1, -1];\r\n\r\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\r\n    if (stickerIndex === -1) return [-1, -1];\r\n\r\n    let prevRows = 0;\r\n    for (let i = 0; i < setIndex; i++) {\r\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\r\n    }\r\n\r\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\r\n}\r\n\r\nfunction toIndex(row, column, sets, stickersPerRow) {\r\n    let index = -1;\r\n    let totalRows = 0;\r\n    let setIndex = -1;\r\n    for (let i = 0; i < sets.length; i++) {\r\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\r\n        totalRows += setRows;\r\n        if (totalRows > row) {\r\n            setIndex = i;\r\n            break;\r\n        }\r\n    }\r\n    if (setIndex === -1) return index;\r\n\r\n    let setRow = row;\r\n    let setColumn = column;\r\n    for (let i = 0; i < setIndex; i++) {\r\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\r\n        setRow -= setRows;\r\n    }\r\n\r\n    index = stickersPerRow * setRow + setColumn;\r\n\r\n    if (index >= sets[setIndex].stickers.length) return -1;\r\n\r\n    for (let i = 0; i < setIndex; i++) {\r\n        index += sets[i].stickers.length;\r\n    }\r\n\r\n    return index;\r\n}\r\n\r\nfunction getInputMediaThumbnail(thumbnail) {\r\n    if (!thumbnail) return null;\r\n\r\n    const { photo, width, height } = thumbnail;\r\n    if (!photo) return null;\r\n\r\n    return {\r\n        '@type': 'inputThumbnail',\r\n        thumbnail: {\r\n            '@type': 'inputFileId',\r\n            id: photo.id\r\n        },\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nfunction getInputMediaCaption(text) {\r\n    if (!text) return null;\r\n\r\n    return {\r\n        '@type': 'formattedText',\r\n        text: text,\r\n        entities: null\r\n    };\r\n}\r\n\r\nexport function getInputMediaContent(media, text) {\r\n    if (!media) return null;\r\n\r\n    switch (media['@type']) {\r\n        case 'animation': {\r\n            const { animation: file, thumbnail, width, height, duration } = media;\r\n\r\n            return {\r\n                '@type': 'inputMessageAnimation',\r\n                animation: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                thumbnail: getInputMediaThumbnail(thumbnail),\r\n                duration,\r\n                width,\r\n                height,\r\n                caption: getInputMediaCaption(text)\r\n            };\r\n        }\r\n        case 'audio': {\r\n            const { audio: file, album_cover_thumbnail: thumbnail, title, performer, duration } = media;\r\n\r\n            return {\r\n                '@type': 'inputMessageAudio',\r\n                audio: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                album_cover_thumbnail: getInputMediaThumbnail(thumbnail),\r\n                duration,\r\n                title,\r\n                performer,\r\n                caption: getInputMediaCaption(text)\r\n            };\r\n        }\r\n        case 'contact': {\r\n            return {\r\n                '@type': 'inputMessageContact',\r\n                contact: media\r\n            };\r\n        }\r\n        case 'document': {\r\n            const { document: file, thumbnail } = media;\r\n\r\n            return {\r\n                '@type': 'inputMessageDocument',\r\n                document: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                thumbnail: getInputMediaThumbnail(thumbnail),\r\n                caption: getInputMediaCaption(text)\r\n            };\r\n        }\r\n        case 'game': {\r\n            return null;\r\n        }\r\n        case 'invoice': {\r\n            return null;\r\n        }\r\n        case 'location': {\r\n            return {\r\n                '@type': 'inputMessageLocation',\r\n                location: media,\r\n                live_period: 0\r\n            };\r\n        }\r\n        case 'photo': {\r\n            const { sizes } = media;\r\n            if (!sizes.length) return null;\r\n\r\n            const thumbnail = sizes[0];\r\n            const photo = sizes[sizes.length - 1];\r\n            if (!photo) return null;\r\n\r\n            const { photo: file, width, height } = photo;\r\n\r\n            return {\r\n                '@type': 'inputMessagePhoto',\r\n                photo: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                thumbnail: getInputMediaThumbnail(thumbnail),\r\n                added_sticker_file_ids: [],\r\n                width,\r\n                height,\r\n                caption: getInputMediaCaption(text),\r\n                ttl: 0\r\n            };\r\n        }\r\n        case 'poll': {\r\n            return null;\r\n        }\r\n        case 'sticker': {\r\n            const { sticker: file, thumbnail, width, height } = media;\r\n\r\n            return {\r\n                '@type': 'inputMessageSticker',\r\n                sticker: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                thumbnail: getInputMediaThumbnail(thumbnail),\r\n                width,\r\n                height,\r\n                caption: getInputMediaCaption(text)\r\n            };\r\n        }\r\n        case 'venue': {\r\n            return {\r\n                '@type': 'inputMessageVenue',\r\n                venue: media\r\n            };\r\n        }\r\n        case 'video': {\r\n            const { video: file, thumbnail, width, height, duration, supports_streaming } = media;\r\n\r\n            return {\r\n                '@type': 'inputMessageVideo',\r\n                video: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                thumbnail: getInputMediaThumbnail(thumbnail),\r\n                added_sticker_file_ids: [],\r\n                duration,\r\n                width,\r\n                height,\r\n                supports_streaming,\r\n                caption: getInputMediaCaption(text),\r\n                ttl: 0\r\n            };\r\n        }\r\n        case 'videoNote': {\r\n            const { video: file, thumbnail, duration, length } = media;\r\n\r\n            return {\r\n                '@type': 'inputMessageVideoNote',\r\n                video: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                thumbnail: getInputMediaThumbnail(thumbnail),\r\n                duration,\r\n                length,\r\n                ttl: 0\r\n            };\r\n        }\r\n        case 'voiceNote': {\r\n            const { voice: file, duration, waveform } = media;\r\n\r\n            return {\r\n                '@type': 'inputMessageVideoNote',\r\n                voice_note: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                duration,\r\n                waveform\r\n            };\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getMedia(message, openMedia, hasTitle = false, hasCaption = false, inlineMeta = null) {\r\n    if (!message) return null;\r\n\r\n    const { chat_id, id, content } = message;\r\n    if (!content) return null;\r\n\r\n    switch (content['@type']) {\r\n        case 'messageAnimation':\r\n            return (\r\n                <Animation\r\n                    type='message'\r\n                    title={hasTitle}\r\n                    caption={hasCaption}\r\n                    chatId={chat_id}\r\n                    messageId={id}\r\n                    animation={content.animation}\r\n                    openMedia={openMedia}\r\n                />\r\n            );\r\n        case 'messageAudio':\r\n            return (\r\n                <Audio\r\n                    title={hasTitle}\r\n                    caption={hasCaption}\r\n                    chatId={chat_id}\r\n                    messageId={id}\r\n                    audio={content.audio}\r\n                    openMedia={openMedia}\r\n                    meta={inlineMeta}\r\n                />\r\n            );\r\n        case 'messageCall':\r\n            return (\r\n                <Call\r\n                    title={hasTitle}\r\n                    caption={hasCaption}\r\n                    chatId={chat_id}\r\n                    messageId={id}\r\n                    duraton={content.duration}\r\n                    discardReason={content.discard_reason}\r\n                    openMedia={openMedia}\r\n                    meta={inlineMeta}\r\n                />\r\n            );\r\n        case 'messageContact':\r\n            return (\r\n                <Contact\r\n                    title={hasTitle}\r\n                    caption={hasCaption}\r\n                    chatId={chat_id}\r\n                    messageId={id}\r\n                    contact={content.contact}\r\n                    openMedia={openMedia}\r\n                    meta={inlineMeta}\r\n                />\r\n            );\r\n        case 'messageDocument':\r\n            return (\r\n                <Document\r\n                    title={hasTitle}\r\n                    caption={hasCaption}\r\n                    chatId={chat_id}\r\n                    messageId={id}\r\n                    document={content.document}\r\n                    openMedia={openMedia}\r\n                    meta={inlineMeta}\r\n                />\r\n            );\r\n        case 'messageGame':\r\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\r\n        case 'messageLocation':\r\n            return (\r\n                <Location\r\n                    type='message'\r\n                    title={hasTitle}\r\n                    caption={hasCaption}\r\n                    chatId={chat_id}\r\n                    messageId={id}\r\n                    location={content.location}\r\n                    openMedia={openMedia}\r\n                />\r\n            );\r\n        case 'messagePhoto':\r\n            return (\r\n                <Photo\r\n                    type='message'\r\n                    title={hasTitle}\r\n                    caption={hasCaption}\r\n                    chatId={chat_id}\r\n                    messageId={id}\r\n                    photo={content.photo}\r\n                    openMedia={openMedia}\r\n                />\r\n            );\r\n        case 'messagePoll':\r\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} meta={inlineMeta} />;\r\n        case 'messageSticker':\r\n            return (\r\n                <Sticker\r\n                    chatId={chat_id}\r\n                    messageId={id}\r\n                    sticker={content.sticker}\r\n                    source={StickerSourceEnum.MESSAGE}\r\n                    openMedia={openMedia}\r\n                />\r\n            );\r\n        case 'messageText':\r\n            return null;\r\n        case 'messageVenue':\r\n            return (\r\n                <Venue\r\n                    type='message'\r\n                    title={hasTitle}\r\n                    caption={hasCaption}\r\n                    chatId={chat_id}\r\n                    messageId={id}\r\n                    venue={content.venue}\r\n                    openMedia={openMedia}\r\n                    meta={inlineMeta}\r\n                />\r\n            );\r\n        case 'messageVideo':\r\n            return (\r\n                <Video\r\n                    type='message'\r\n                    title={hasTitle}\r\n                    caption={hasCaption}\r\n                    chatId={chat_id}\r\n                    messageId={id}\r\n                    video={content.video}\r\n                    openMedia={openMedia}\r\n                />\r\n            );\r\n        case 'messageVideoNote':\r\n            return (\r\n                <VideoNote\r\n                    type='message'\r\n                    title={hasTitle}\r\n                    caption={hasCaption}\r\n                    chatId={chat_id}\r\n                    messageId={id}\r\n                    videoNote={content.video_note}\r\n                    openMedia={openMedia}\r\n                />\r\n            );\r\n        case 'messageVoiceNote':\r\n            return (\r\n                <VoiceNote\r\n                    type='message'\r\n                    title={hasTitle}\r\n                    caption={hasCaption}\r\n                    chatId={chat_id}\r\n                    messageId={id}\r\n                    voiceNote={content.voice_note}\r\n                    openMedia={openMedia}\r\n                    meta={inlineMeta}\r\n                />\r\n            );\r\n        default:\r\n            return [`[${content['@type']}]`, inlineMeta];\r\n    }\r\n}\r\n\r\nexport async function getMediaDocumentFromFile(file) {\r\n    if (!file) {\r\n        return null;\r\n    }\r\n\r\n    const fileId = -getRandomInt(1, 1000000);\r\n    FileStore.setBlob(fileId, file);\r\n\r\n    return {\r\n        '@type': 'messageDocument',\r\n        document: {\r\n            '@type': 'document',\r\n            file_name: file.name,\r\n            mime_type: file.type,\r\n            minithumbnail: null,\r\n            thumbnail: null,\r\n            document: {\r\n                '@type': 'file',\r\n                id: fileId,\r\n                size: file.size,\r\n                expected_size: file.expected_size,\r\n                local: {\r\n                    is_downloading_completed: true\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nexport async function getMediaPhotoFromFile(file) {\r\n    if (!file) {\r\n        return null;\r\n    }\r\n\r\n    if (file.type.startsWith('image')) {\r\n        const [width, height] = await readImageSize(file);\r\n\r\n        const fileId = -getRandomInt(1, 1000000);\r\n        FileStore.setBlob(fileId, file);\r\n\r\n        const photoSize = {\r\n            '@type': 'photoSize',\r\n            photo: {\r\n                '@type': 'file',\r\n                id: fileId,\r\n                size: file.size,\r\n                expected_size: file.expected_size,\r\n                local: {\r\n                    is_downloading_completed: true\r\n                }\r\n            },\r\n            width,\r\n            height\r\n        };\r\n\r\n        return {\r\n            '@type': 'messagePhoto',\r\n            photo: {\r\n                '@type': 'photo',\r\n                has_stickers: false,\r\n                minithumbnail: null,\r\n                sizes: [photoSize]\r\n            }\r\n        };\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M5.29289322,5.29289322 C5.68341751,4.90236893 6.31658249,4.90236893 6.70710678,5.29289322 L6.70710678,5.29289322 L12,10.585 L17.2928932,5.29289322 C17.6834175,4.90236893 18.3165825,4.90236893 18.7071068,5.29289322 C19.0976311,5.68341751 19.0976311,6.31658249 18.7071068,6.70710678 L13.415,12 L18.7071068,17.2928932 C19.0675907,17.6533772 19.0953203,18.2206082 18.7902954,18.6128994 L18.7071068,18.7071068 C18.3165825,19.0976311 17.6834175,19.0976311 17.2928932,18.7071068 L17.2928932,18.7071068 L12,13.415 L6.70710678,18.7071068 C6.31658249,19.0976311 5.68341751,19.0976311 5.29289322,18.7071068 C4.90236893,18.3165825 4.90236893,17.6834175 5.29289322,17.2928932 L10.585,12 L5.29289322,6.70710678 C4.93240926,6.34662282 4.90467972,5.77939176 5.20970461,5.38710056 Z' />,\r\n    'Close'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport EventEmitter from './EventEmitter';\r\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\r\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\r\nimport MessageStore from './MessageStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport { getRandomInt } from '../Utils/Common';\r\n\r\nconst RepeatEnum = Object.freeze({\r\n    NONE: 'NONE',\r\n    REPEAT: 'REPEAT',\r\n    REPEAT_ONE: 'REPEAT_ONE'\r\n});\r\n\r\nexport { RepeatEnum };\r\n\r\nclass PlayerStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        const { playbackRate, volume } = this.loadPlayerSettings();\r\n\r\n        this.playbackRate = playbackRate;\r\n        this.volume = volume;\r\n        this.repeat = RepeatEnum.NONE;\r\n        this.shuffle = false;\r\n\r\n        this.reset();\r\n\r\n        this.addTdLibListener();\r\n    }\r\n\r\n    reset = () => {\r\n        this.playlist = null;\r\n        this.message = null;\r\n        this.time = null;\r\n        this.videoStream = null;\r\n        this.instantView = null;\r\n        this.pageBlock = null;\r\n    };\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.on('update', this.onUpdate);\r\n        TdLibController.on('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.off('update', this.onUpdate);\r\n        TdLibController.off('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    onUpdate = async update => {\r\n        switch (update['@type']) {\r\n            case 'updateAuthorizationState': {\r\n                const { authorization_state } = update;\r\n                if (!authorization_state) break;\r\n\r\n                switch (authorization_state['@type']) {\r\n                    case 'authorizationStateClosed': {\r\n                        this.reset();\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    close = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaClose'\r\n        });\r\n    };\r\n\r\n    loadPlayerSettings() {\r\n        const player = localStorage.getItem('player') || {};\r\n\r\n        let { playbackRate, volume } = player;\r\n\r\n        playbackRate =\r\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\r\n                ? Number(playbackRate)\r\n                : PLAYER_PLAYBACKRATE_NORMAL;\r\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\r\n\r\n        return { playbackRate, volume };\r\n    }\r\n\r\n    savePlayerSettings() {\r\n        const { volume, playbackRate } = this;\r\n\r\n        localStorage.setItem('player', JSON.stringify({ volume, playbackRate }));\r\n    }\r\n\r\n    onClientUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'clientUpdateMediaClose': {\r\n                this.reset();\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaActive': {\r\n                const { chatId, messageId, instantView, pageBlock } = update;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (message) {\r\n                    this.message = message;\r\n                    this.emit(update['@type'], update);\r\n                    this.getPlaylist(chatId, messageId);\r\n\r\n                    return;\r\n                } else if (instantView && pageBlock) {\r\n                    this.instantView = instantView;\r\n                    this.pageBlock = pageBlock;\r\n                    this.emit(update['@type'], update);\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaVolume': {\r\n                const { volume } = update;\r\n\r\n                this.volume = volume;\r\n\r\n                this.savePlayerSettings();\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaRepeat': {\r\n                const { repeat } = update;\r\n\r\n                this.repeat = repeat;\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaShuffle': {\r\n                const { shuffle } = update;\r\n\r\n                this.shuffle = shuffle;\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaPlaybackRate': {\r\n                const { playbackRate } = update;\r\n\r\n                this.playbackRate = playbackRate;\r\n\r\n                this.savePlayerSettings();\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaPlay': {\r\n                this.playing = true;\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaTitleMouseOver': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaPause': {\r\n                this.playing = false;\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaSeek': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaSeeking': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaStop': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaNext': {\r\n                this.emit(update['@type'], update);\r\n\r\n                this.moveToNextMedia(false);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaPrev': {\r\n                this.emit(update['@type'], update);\r\n\r\n                this.moveToPrevMedia();\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaEnding': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaEnd': {\r\n                this.emit(update['@type'], update);\r\n\r\n                if (update.moveNext) {\r\n                    if (this.moveToNextMedia(true)) {\r\n                    } else {\r\n                        this.close();\r\n                    }\r\n                } else {\r\n                    this.close();\r\n                }\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaTime': {\r\n                const { duration, currentTime, timestamp } = update;\r\n\r\n                this.time = {\r\n                    currentTime: currentTime,\r\n                    duration: duration,\r\n                    timestamp: timestamp\r\n                };\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaCaptureStream': {\r\n                this.videoStream = update.stream;\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaViewerPlay': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaViewerPause': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaViewerEnded': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaPlaylistLoading': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaPlaylistPrev': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaPlaylist': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'clientUpdateMediaPlaylistNext': {\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    moveToPrevMedia = () => {\r\n        if (!this.playlist) return;\r\n        if (!this.message) return;\r\n\r\n        const { chat_id, id } = this.message;\r\n        const { messages } = this.playlist;\r\n        if (!messages) return;\r\n\r\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\r\n        if (index === -1) return;\r\n\r\n        if (index + 1 < messages.length) {\r\n            const message = messages[index + 1];\r\n\r\n            openMedia(message.chat_id, message.id, false);\r\n        }\r\n    };\r\n\r\n    moveToNextMedia = useRepeatShuffle => {\r\n        if (!this.playlist) return false;\r\n        if (!this.message) return false;\r\n\r\n        const { chat_id, id } = this.message;\r\n        const { messages } = this.playlist;\r\n        if (!messages) return false;\r\n\r\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\r\n        if (index === -1) return false;\r\n\r\n        let nextIndex = -1;\r\n        if (!useRepeatShuffle) {\r\n            nextIndex = index - 1;\r\n        } else {\r\n            switch (this.repeat) {\r\n                case RepeatEnum.NONE: {\r\n                    if (this.shuffle) {\r\n                        nextIndex = getRandomInt(0, messages.length);\r\n                    } else {\r\n                        nextIndex = index - 1;\r\n                    }\r\n                    break;\r\n                }\r\n                case RepeatEnum.REPEAT_ONE: {\r\n                    nextIndex = index;\r\n                    break;\r\n                }\r\n                case RepeatEnum.REPEAT: {\r\n                    if (this.shuffle) {\r\n                        nextIndex = getRandomInt(0, messages.length);\r\n                    } else {\r\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (nextIndex >= 0) {\r\n            const message = messages[nextIndex];\r\n\r\n            openMedia(message.chat_id, message.id, false);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    getPlaylist = async (chatId, messageId) => {\r\n        const { playlist: currentPlaylist } = this;\r\n\r\n        if (currentPlaylist) {\r\n            const { messages } = currentPlaylist;\r\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPlaylistLoading',\r\n            chatId: chatId,\r\n            messageId: messageId\r\n        });\r\n\r\n        const filter = getSearchMessagesFilter(chatId, messageId);\r\n        if (!filter) {\r\n            this.playlist = {\r\n                chatId: chatId,\r\n                messageId: messageId,\r\n                totalCount: 1,\r\n                messages: [MessageStore.get(chatId, messageId)]\r\n            };\r\n\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylist',\r\n                playlist: this.playlist\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: messageId,\r\n            offset: -50,\r\n            limit: 100,\r\n            filter: filter\r\n        });\r\n\r\n        MessageStore.setItems(result.messages);\r\n\r\n        const { total_count, messages } = result;\r\n\r\n        this.playlist = {\r\n            chatId: chatId,\r\n            messageId: messageId,\r\n            totalCount: total_count,\r\n            messages: messages\r\n        };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPlaylist',\r\n            playlist: this.playlist\r\n        });\r\n    };\r\n}\r\n\r\nconst store = new PlayerStore();\r\nwindow.player = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport dateFormat from '../Utils/Date';\r\nimport { getFirstLetter, getLetters, getSize } from './Common';\r\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\r\nimport UserStore from '../Stores/UserStore';\r\n\r\nfunction getUserStatus(user) {\r\n    if (!user) return null;\r\n    if (!user.status) return null;\r\n\r\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\r\n        return 'service notifications';\r\n    }\r\n\r\n    if (user.type && user.type['@type'] === 'userTypeBot') {\r\n        return 'bot';\r\n    }\r\n\r\n    switch (user.status['@type']) {\r\n        case 'userStatusEmpty': {\r\n            return 'last seen a long time ago';\r\n        }\r\n        case 'userStatusLastMonth': {\r\n            return 'last seen within a month';\r\n        }\r\n        case 'userStatusLastWeek': {\r\n            return 'last seen within a week';\r\n        }\r\n        case 'userStatusOffline': {\r\n            let { was_online } = user.status;\r\n            if (!was_online) return 'offline';\r\n\r\n            const now = new Date();\r\n            const wasOnline = new Date(was_online * 1000);\r\n            if (wasOnline > now) {\r\n                return 'last seen just now';\r\n            }\r\n\r\n            let diff = new Date(now - wasOnline);\r\n\r\n            // within a minute\r\n            if (diff.getTime() / 1000 < 60) {\r\n                return 'last seen just now';\r\n            }\r\n\r\n            // within an hour\r\n            if (diff.getTime() / 1000 < 60 * 60) {\r\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\r\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\r\n            }\r\n\r\n            // today\r\n            const today = new Date();\r\n            today.setHours(0, 0, 0, 0);\r\n            if (wasOnline > today) {\r\n                // up to 6 hours ago\r\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\r\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\r\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\r\n                }\r\n\r\n                // other\r\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\r\n            }\r\n\r\n            // yesterday\r\n            let yesterday = new Date();\r\n            yesterday.setDate(now.getDate() - 1);\r\n            today.setHours(0, 0, 0, 0);\r\n            if (wasOnline > yesterday) {\r\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\r\n            }\r\n\r\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\r\n        }\r\n        case 'userStatusOnline': {\r\n            return 'online';\r\n        }\r\n        case 'userStatusRecently': {\r\n            return 'last seen recently';\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction isUserOnline(user) {\r\n    if (!user) return false;\r\n\r\n    const { id, status, type } = user;\r\n    if (!status) return false;\r\n    if (!type) return false;\r\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\r\n\r\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\r\n}\r\n\r\nfunction getUserFullName(userId, user, t = k => k) {\r\n    user = UserStore.get(userId) || user;\r\n    if (!user) return null;\r\n\r\n    const { type, first_name, last_name } = user;\r\n    if (!type) return null;\r\n\r\n    switch (type['@type']) {\r\n        case 'userTypeBot':\r\n        case 'userTypeRegular': {\r\n            if (first_name && last_name) return `${first_name} ${last_name}`;\r\n            if (first_name) return first_name;\r\n            if (last_name) return last_name;\r\n        }\r\n        case 'userTypeDeleted':\r\n        case 'userTypeUnknown': {\r\n            return t('HiddenName');\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getUserShortName(userId, t = k => k) {\r\n    const user = UserStore.get(userId);\r\n    if (!user) return null;\r\n\r\n    const { type, first_name, last_name } = user;\r\n    if (!type) return null;\r\n\r\n    switch (type['@type']) {\r\n        case 'userTypeBot':\r\n        case 'userTypeRegular': {\r\n            if (first_name) return first_name;\r\n            if (last_name) return last_name;\r\n        }\r\n        case 'userTypeDeleted':\r\n        case 'userTypeUnknown': {\r\n            return t('HiddenName');\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction isUserBlocked(userId) {\r\n    const fullInfo = UserStore.getFullInfo(userId);\r\n    if (fullInfo) {\r\n        return fullInfo.is_blocked;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getUserLetters(userId, firstName, lastName, t) {\r\n    const user = UserStore.get(userId);\r\n    if (!user && !(firstName || lastName)) return null;\r\n\r\n    const title = getUserFullName(userId, null, t) || `${firstName} ${lastName}`.trim();\r\n    const letters = getLetters(title);\r\n    if (letters && letters.length > 0) {\r\n        return letters;\r\n    }\r\n\r\n    if (user) {\r\n        firstName = user.first_name;\r\n        lastName = user.last_name;\r\n    }\r\n\r\n    const firstNameSymbol = getFirstLetter(firstName) || firstName.charAt(0);\r\n    if (firstNameSymbol) return firstNameSymbol;\r\n\r\n    const lastNameSymbol = getFirstLetter(lastName) || lastName.charAt(0);\r\n    if (lastNameSymbol) return lastNameSymbol;\r\n\r\n    return '';\r\n}\r\n\r\nfunction getUserStatusOrder(user) {\r\n    if (!user) return 0;\r\n    if (!user.status) return 0;\r\n    if (user.type['@type'] === 'userTypeBot') return 0;\r\n\r\n    switch (user.status['@type']) {\r\n        case 'userStatusEmpty': {\r\n            return 1;\r\n        }\r\n        case 'userStatusLastMonth': {\r\n            return 10;\r\n        }\r\n        case 'userStatusLastWeek': {\r\n            return 100;\r\n        }\r\n        case 'userStatusOffline': {\r\n            return user.status.was_online;\r\n        }\r\n        case 'userStatusOnline': {\r\n            return user.status.expires;\r\n        }\r\n        case 'userStatusRecently': {\r\n            return 1000;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getProfilePhoto(photo) {\r\n    if (!photo) return null;\r\n\r\n    const { id, sizes } = photo;\r\n    if (!sizes) return null;\r\n    if (!sizes.length) return null;\r\n\r\n    const { photo: small } = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\r\n    const { photo: big } = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\r\n\r\n    return {\r\n        '@type': 'profilePhoto',\r\n        id,\r\n        small,\r\n        big\r\n    };\r\n}\r\n\r\nfunction getProfilePhotoDateHint(userProfilePhoto) {\r\n    if (!userProfilePhoto) return null;\r\n\r\n    const { added_date } = userProfilePhoto;\r\n    if (!added_date) return null;\r\n\r\n    const date = new Date(added_date * 1000);\r\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\r\n}\r\n\r\nexport function isDeletedUser(userId) {\r\n    const user = UserStore.get(userId);\r\n\r\n    return user && user.type['@type'] === 'userTypeDeleted';\r\n}\r\n\r\nexport {\r\n    getUserStatus,\r\n    isUserOnline,\r\n    getUserFullName,\r\n    isUserBlocked,\r\n    getUserLetters,\r\n    getUserStatusOrder,\r\n    getProfilePhoto,\r\n    getProfilePhotoDateHint,\r\n    getUserShortName\r\n};\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './FileProgress.css';\r\n\r\nclass FileProgress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.completeAnimation = false;\r\n        const { file } = this.props;\r\n        this.state = {\r\n            prevPropsFile: file,\r\n            prevFile: null,\r\n            file: FileStore.get(file.id) || file\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { file } = props;\r\n        const { prevPropsFile } = state;\r\n\r\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\r\n            return {\r\n                prevPropsFile: file,\r\n                prevFile: null,\r\n                file: FileStore.get(file.id) || file\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { download, upload, icon, thumbnailSrc } = this.props;\r\n\r\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.icon !== icon) {\r\n            return true;\r\n        }\r\n\r\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\r\n            return false;\r\n        }\r\n\r\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\r\n            return false;\r\n        }\r\n\r\n        const nextLocal = nextState.file ? nextState.file.local : null;\r\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\r\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\r\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\r\n        const isDownloadingCompleted =\r\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\r\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\r\n\r\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\r\n            return false;\r\n        }\r\n\r\n        if (nextState.file !== this.state.file) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.prevFile !== this.state.prevFile) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mount = true;\r\n        FileStore.on('updateFile', this.onUpdateFile);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mount = false;\r\n        FileStore.off('updateFile', this.onUpdateFile);\r\n    }\r\n\r\n    fileEquals(file1, file2) {\r\n        if (file1 === file2 && file1 === null) return true;\r\n        if (file1 !== null && file2 === null) return false;\r\n        if (file1 === null && file2 !== null) return false;\r\n\r\n        const { local: local1, remote: remote1 } = file1;\r\n        const { local: local2, remote: remote2 } = file2;\r\n\r\n        if (local1.can_be_deleted !== local2.can_be_deleted) return false;\r\n        if (local1.can_be_downloaded !== local2.can_be_downloaded) return false;\r\n        if (local1.download_offset !== local2.download_offset) return false;\r\n        if (local1.downloaded_prefix_size !== local2.downloaded_prefix_size) return false;\r\n        if (local1.downloaded_size !== local2.downloaded_size) return false;\r\n        if (local1.is_downloading_active !== local2.is_downloading_active) return false;\r\n        if (local1.is_downloading_completed !== local2.is_downloading_completed) return false;\r\n        if (local1.path !== local2.path) return false;\r\n\r\n        if (remote1.id !== remote2.id) return false;\r\n        if (remote1.is_uploading_active !== remote2.is_uploading_active) return false;\r\n        if (remote1.is_uploading_completed !== remote2.is_uploading_completed) return false;\r\n        if (remote1.uploaded_size !== remote2.uploaded_size) return false;\r\n\r\n        return true;\r\n    }\r\n\r\n    onUpdateFile = update => {\r\n        const currentFile = this.state.file;\r\n        const nextFile = update.file;\r\n\r\n        if (currentFile && currentFile.id === nextFile.id) {\r\n            if (this.fileEquals(nextFile, currentFile)) {\r\n                // console.log('[fp] update equals', nextFile, currentFile);\r\n            } else {\r\n                // console.log('[fp] update', nextFile, currentFile);\r\n                this.setState({ file: nextFile, prevFile: currentFile });\r\n            }\r\n        }\r\n    };\r\n\r\n    isDownloading = (file, prevFile) => {\r\n        if (!this.props.download) return false;\r\n\r\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\r\n        const isActive = file && file.local && file.local.is_downloading_active;\r\n\r\n        return wasActive || isActive;\r\n    };\r\n\r\n    isUploading = (file, prevFile) => {\r\n        if (!this.props.upload) return false;\r\n\r\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\r\n        const isActive = file && file.remote && file.remote.is_uploading_active;\r\n\r\n        return wasActive || isActive;\r\n    };\r\n\r\n    getProgressParams = (file, prevFile) => {\r\n        const { local, remote } = file;\r\n\r\n        let wasActive = false;\r\n        let isActive = false;\r\n        let isCompleted = false;\r\n        let progressSize = 0;\r\n        let size = 0;\r\n        if (this.isDownloading(file, prevFile)) {\r\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\r\n            isActive = local.is_downloading_active;\r\n            isCompleted = local.is_downloading_completed;\r\n            progressSize = local.downloaded_size;\r\n            size = file.size;\r\n            // console.log(\r\n            //     `FileProgress.getProgressParams isDownloading id=${\r\n            //         file.id\r\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\r\n            //     file,\r\n            //     prevFile\r\n            // );\r\n        } else if (this.isUploading(file, prevFile)) {\r\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\r\n            isActive = remote.is_uploading_active;\r\n            isCompleted = remote.is_uploading_completed;\r\n            progressSize = remote.uploaded_size;\r\n            size = file.size;\r\n            // console.log(\r\n            //     `FileProgress.getProgressParams isUploading id=${\r\n            //         file.id\r\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\r\n            //     file,\r\n            //     prevFile\r\n            // );\r\n        } else {\r\n            // console.log(\r\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\r\n            //         this.props.upload\r\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\r\n            //     file,\r\n            //     prevFile\r\n            // );\r\n        }\r\n\r\n        return [wasActive, isActive, isCompleted, progressSize, size];\r\n    };\r\n\r\n    render() {\r\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\r\n        const { file, prevFile } = this.state;\r\n        if (!file) return null;\r\n\r\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\r\n\r\n        let inProgress = isActive;\r\n        let progress = 0;\r\n        if (isActive) {\r\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\r\n        }\r\n\r\n        const startCompleteAnimation = wasActive && !isActive;\r\n        if (startCompleteAnimation) {\r\n            this.completeAnimation = true;\r\n            // console.log('FileProgress.render animationComplete=true');\r\n            progress = isCompleted ? 100 : 0;\r\n            inProgress = true;\r\n            setTimeout(() => {\r\n                this.completeAnimation = false;\r\n                if (!this.mount) return;\r\n                // console.log('FileProgress.render animationComplete=false');\r\n\r\n                this.setState({ prevFile: null });\r\n            }, ANIMATION_DURATION_300MS);\r\n        }\r\n\r\n        const style = {\r\n            zIndex: zIndex,\r\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\r\n        };\r\n\r\n        const isDownloadingCompleted =\r\n            file &&\r\n            file.local &&\r\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\r\n            !this.completeAnimation &&\r\n            !isActive;\r\n\r\n        // console.log(\r\n        //     `[fp]] render \\\\\r\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\r\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\r\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\r\n        //     is_downloading_completed=${isDownloadingCompleted}\r\n        //     completeIcon=${completeIcon}`,\r\n        //     file,\r\n        //     prevFile\r\n        // );\r\n        //cancelButton = true;\r\n        //inProgress = true;\r\n\r\n        if (isDownloadingCompleted) {\r\n            // console.log('FileProgress.render completeIcon');\r\n            if (completeIcon) {\r\n                return (\r\n                    <div className={classNames('file-progress', 'file-progress-complete')} style={style}>\r\n                        {completeIcon}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        if (inProgress || this.completeAnimation) {\r\n            // console.log('FileProgress.render inProgressIcon');\r\n            return (\r\n                <div className='file-progress' style={style}>\r\n                    <CircularProgress\r\n                        className='file-progress-indicator'\r\n                        classes={{ circle: 'file-progress-circle' }}\r\n                        variant='static'\r\n                        value={progress}\r\n                        size={48}\r\n                        thickness={2}\r\n                    />\r\n                    {cancelButton && <CloseIcon />}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (icon) {\r\n            // console.log('FileProgress.render icon');\r\n            return (\r\n                <div className='file-progress' style={style}>\r\n                    {icon}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nFileProgress.propTypes = {\r\n    file: PropTypes.object.isRequired,\r\n    thumbnailSrc: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n    cancelButton: PropTypes.bool,\r\n    download: PropTypes.bool,\r\n    upload: PropTypes.bool,\r\n    zIndex: PropTypes.number,\r\n\r\n    icon: PropTypes.node,\r\n    completeIcon: PropTypes.node\r\n};\r\n\r\nFileProgress.defaultProps = {\r\n    cancelButton: false,\r\n    download: true,\r\n    upload: false\r\n};\r\n\r\nexport default FileProgress;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { randomString } from './Helpers';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport PakoWorker from './pako.worker';\r\n\r\nconst worker = new PakoWorker();\r\nconst handlers = new Map();\r\n\r\nworker.onmessage = event => {\r\n    const { data } = event;\r\n    if (!data) return;\r\n\r\n    const { key, error, result, msg } = data;\r\n\r\n    const { resolve, reject } = handlers.get(key);\r\n    handlers.delete(key);\r\n\r\n    if (!error) {\r\n        resolve(result);\r\n    } else {\r\n        reject(msg);\r\n    }\r\n};\r\n\r\nexport async function inflateBlob(blob) {\r\n    const key = randomString();\r\n    return new Promise((resolve, reject) => {\r\n        handlers.set(key, { resolve, reject });\r\n        worker.postMessage({ key, blob });\r\n    });\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport function randomString() {\r\n    return (\r\n        '$' +\r\n        Math.random()\r\n            .toString(36)\r\n            .slice(2, 10)\r\n    );\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n// import Lottie from '../../Viewer/Lottie';\r\nimport { isBlurredThumbnail, isValidAnimatedSticker } from '../../../Utils/Media';\r\nimport { getFitSize } from '../../../Utils/Common';\r\nimport { getBlob, getSrc } from '../../../Utils/File';\r\nimport { inflateBlob } from '../../../Workers/BlobInflator';\r\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\r\nimport ApplicationStore from '../../../Stores/ApplicationStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport InstantViewStore from '../../../Stores/InstantViewStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport StickerStore from '../../../Stores/StickerStore';\r\nimport './Sticker.css';\r\n\r\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\r\n\r\nexport const StickerSourceEnum = Object.freeze({\r\n    HINTS: 'HINTS',\r\n    MESSAGE: 'MESSAGE',\r\n    PICKER_HEADER: 'PICKER_HEADER',\r\n    PICKER: 'PICKER',\r\n    PREVIEW: 'PREVIEW',\r\n    STICKER_SET: 'STICKER_SET',\r\n    UNKNOWN: 'UNKNOWN'\r\n});\r\n\r\nclass Sticker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.lottieRef = React.createRef();\r\n        this.windowFocused = window.hasFocus;\r\n        this.inView = false;\r\n        this.stickerPreview = StickerStore.stickerPreview;\r\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\r\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\r\n        this.openIV = Boolean(InstantViewStore.getCurrent());\r\n        this.dialogChatId = ApplicationStore.dialogChatId;\r\n\r\n        this.state = {\r\n            animationDate: null,\r\n            hasError: false\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log('[Sticker] render error', error, errorInfo);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, sticker, blur, displaySize } = this.props;\r\n        const { animationData } = this.state;\r\n\r\n        if (animationData !== nextState.animationData) {\r\n            return true;\r\n        }\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (sticker !== nextProps.sticker) {\r\n            return true;\r\n        }\r\n\r\n        if (blur !== nextProps.blur) {\r\n            return true;\r\n        }\r\n\r\n        if (displaySize !== nextProps.displaySize) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.sticker !== this.props.sticker) {\r\n            this.loadContent();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\r\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\r\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\r\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\r\n        StickerStore.on('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\r\n        StickerStore.on('clientUpdateStickerSet', this.onClientUpdateStickerSet);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\r\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\r\n        FileStore.off('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\r\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\r\n        StickerStore.off('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\r\n        StickerStore.off('clientUpdateStickerSet', this.onClientUpdateStickerSet);\r\n    }\r\n\r\n    onClientUpdateInstantViewContent = update => {\r\n        this.openIV = Boolean(InstantViewStore.getCurrent());\r\n\r\n        this.startStopAnimation();\r\n    };\r\n\r\n    onClientUpdateDialogChatId = update => {\r\n        this.dialogChatId = ApplicationStore.dialogChatId;\r\n\r\n        this.startStopAnimation();\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\r\n\r\n        this.startStopAnimation();\r\n    };\r\n\r\n    onClientUpdateProfileMediaViewerContent = update => {\r\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\r\n\r\n        this.startStopAnimation();\r\n    };\r\n\r\n    onClientUpdateStickerPreview = update => {\r\n        this.stickerPreview = update.sticker;\r\n\r\n        this.startStopAnimation();\r\n    };\r\n\r\n    onClientUpdateMessagesInView = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const key = `${chatId}_${messageId}`;\r\n\r\n        this.inView = update.messages.has(key);\r\n\r\n        this.startStopAnimation();\r\n    };\r\n\r\n    onClientUpdateStickerSet = update => {\r\n        const { stickerSet } = update;\r\n\r\n        this.openedStickerSet = stickerSet;\r\n\r\n        this.startStopAnimation();\r\n    };\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        const { focused } = update;\r\n        const { chatId, messageId, sticker } = this.props;\r\n\r\n        const isAnimated = isValidAnimatedSticker(sticker, chatId, messageId);\r\n        if (!isAnimated) return;\r\n\r\n        this.windowFocused = focused;\r\n        this.startStopAnimation();\r\n    };\r\n\r\n    startStopAnimation() {\r\n        const { autoplay } = this.props;\r\n\r\n        const player = this.lottieRef.current;\r\n        if (!player) return;\r\n\r\n        if (\r\n            this.windowFocused &&\r\n            !this.stickerPreview &&\r\n            !this.openMediaViewer &&\r\n            !this.openProfileMediaViewer &&\r\n            !this.openIV &&\r\n            !this.dialogChatId\r\n        ) {\r\n            if (this.entered) {\r\n                // console.log('[Sticker] play 1');\r\n                player.play();\r\n                this.pause = false;\r\n                return;\r\n            }\r\n\r\n            // console.log('[Sticker] startStopAnimation', this.openedStickerSet);\r\n            if (!this.openedStickerSet) {\r\n                if (this.paused) {\r\n                    // console.log('[Sticker] play 2');\r\n                    player.play();\r\n                    this.paused = false;\r\n                    return;\r\n                }\r\n\r\n                if (autoplay && this.inView) {\r\n                    // console.log('[Sticker] play 3');\r\n                    player.play();\r\n                    this.paused = false;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log('[Sticker] pause');\r\n        this.paused = player.pause();\r\n    }\r\n\r\n    onClientUpdateStickerBlob = update => {\r\n        const { sticker, is_animated } = this.props.sticker;\r\n        const { fileId } = update;\r\n\r\n        if (!sticker) return;\r\n\r\n        if (sticker.id === fileId) {\r\n            if (is_animated) {\r\n                this.loadContent();\r\n            } else {\r\n                this.forceUpdate();\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateStickerThumbnailBlob = update => {\r\n        const { thumbnail } = this.props.sticker;\r\n        if (!thumbnail) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    loadContent = async () => {\r\n        const { chatId, messageId, sticker: source, autoplay, play } = this.props;\r\n        const { is_animated, sticker } = source;\r\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\r\n\r\n        if (!is_animated) return;\r\n        if (!isAnimated) return;\r\n        if (!play) return;\r\n\r\n        const blob = getBlob(sticker);\r\n        if (!blob) return;\r\n\r\n        let animationData = null;\r\n        try {\r\n            // animationData = StickerStore.getAnimationData(blob);\r\n            // if (animationData) {\r\n            //     this.setState({ animationData });\r\n            //     return;\r\n            // }\r\n            const result = await inflateBlob(blob);\r\n            if (!result) return;\r\n\r\n            animationData = JSON.parse(result);\r\n            // StickerStore.setAnimationData(blob, animationData);\r\n        } catch (err) {\r\n            console.log('[Sticker] loadContent error', err);\r\n        }\r\n        if (!animationData) return;\r\n\r\n        if (autoplay) {\r\n            this.setState({ animationData });\r\n        } else {\r\n            this.animationData = animationData;\r\n        }\r\n    };\r\n\r\n    handleMouseEnter = event => {\r\n        const { animationData } = this;\r\n        // console.log('[Sticker] handleMouseEnter', animationData);\r\n        if (animationData) {\r\n            this.setState({ animationData }, () => {\r\n                this.handleAnimationMouseEnter();\r\n            });\r\n        }\r\n    };\r\n\r\n    handleAnimationMouseEnter = () => {\r\n        // console.log('[Sticker] handleAnimationMouseEnter 1');\r\n        if (this.props.autoplay) return;\r\n\r\n        this.entered = true;\r\n\r\n        const player = this.lottieRef.current;\r\n        if (!player) return;\r\n\r\n        // console.log('[Sticker] handleAnimationMouseEnter 2');\r\n        this.loopCount = 0;\r\n        this.startStopAnimation();\r\n    };\r\n\r\n    handleAnimationLoopComplete = () => {\r\n        if (this.props.autoplay) return;\r\n\r\n        const player = this.lottieRef.current;\r\n        if (!player) return;\r\n\r\n        if (!this.entered) this.loopCount += 1;\r\n        if (this.loopCount > 2) {\r\n            const { animationData } = this.state;\r\n            if (animationData) {\r\n                this.setState({ animationData: null });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleAnimationMouseOut = () => {\r\n        this.entered = false;\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            chatId,\r\n            messageId,\r\n            autoplay,\r\n            className,\r\n            displaySize,\r\n            blur,\r\n            sticker: source,\r\n            style,\r\n            openMedia,\r\n            preview\r\n        } = this.props;\r\n        const { thumbnail, sticker, width, height } = source;\r\n        const { animationData, hasError } = this.state;\r\n\r\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\r\n\r\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\r\n        const src = getSrc(sticker);\r\n        const isBlurred = isBlurredThumbnail(thumbnail);\r\n\r\n        if (hasError) {\r\n            const style = {\r\n                width: displaySize,\r\n                height: displaySize\r\n            };\r\n\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                style.background = '#ff000066';\r\n            }\r\n\r\n            return (\r\n                <div className={classNames('sticker', className)} style={style} onClick={openMedia}>\r\n                    <img\r\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\r\n                        draggable={false}\r\n                        src={thumbnailSrc}\r\n                        alt=''\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let content = null;\r\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\r\n        if (fitSize) {\r\n            content = isAnimated ? (\r\n                <>\r\n                    {animationData ? (\r\n                        <React.Suspense fallback={null}>\r\n                            <Lottie\r\n                                ref={this.lottieRef}\r\n                                options={{\r\n                                    autoplay: autoplay,\r\n                                    loop: true,\r\n                                    animationData,\r\n                                    renderer: 'svg',\r\n                                    rendererSettings: {\r\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\r\n                                        clearCanvas: false,\r\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\r\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\r\n                                        className: 'lottie-svg'\r\n                                    }\r\n                                }}\r\n                                eventListeners={[\r\n                                    {\r\n                                        eventName: 'loopComplete',\r\n                                        callback: this.handleAnimationLoopComplete\r\n                                    }\r\n                                ]}\r\n                                onMouseOut={this.handleAnimationMouseOut}\r\n                            />\r\n                        </React.Suspense>\r\n                    ) : (\r\n                        <img\r\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\r\n                            draggable={false}\r\n                            src={thumbnailSrc}\r\n                            alt=''\r\n                        />\r\n                    )}\r\n                </>\r\n            ) : (\r\n                <>\r\n                    {src && !preview ? (\r\n                        <img className='sticker-image' draggable={false} src={src} alt='' />\r\n                    ) : (\r\n                        <img\r\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\r\n                            draggable={false}\r\n                            src={thumbnailSrc}\r\n                            alt=''\r\n                        />\r\n                    )}\r\n                </>\r\n            );\r\n        }\r\n\r\n        const stickerStyle = {\r\n            width: fitSize ? fitSize.width : 0,\r\n            height: fitSize ? fitSize.height : 0,\r\n            ...style\r\n        };\r\n\r\n        return (\r\n            <div\r\n                className={classNames('sticker', className)}\r\n                style={stickerStyle}\r\n                onClick={openMedia}\r\n                onMouseEnter={this.handleMouseEnter}>\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSticker.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    sticker: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func,\r\n\r\n    autoplay: PropTypes.bool,\r\n    play: PropTypes.bool,\r\n    blur: PropTypes.bool,\r\n    displaySize: PropTypes.number,\r\n    preview: PropTypes.bool,\r\n    source: PropTypes.string\r\n};\r\n\r\nSticker.defaultProps = {\r\n    chatId: 0,\r\n    messageId: 0,\r\n    openMedia: () => {},\r\n\r\n    autoplay: true,\r\n    play: true,\r\n    blur: true,\r\n    displaySize: STICKER_DISPLAY_SIZE,\r\n    preview: false,\r\n    source: StickerSourceEnum.UNKNOWN\r\n};\r\n\r\nexport default Sticker;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport EventEmitter from './EventEmitter';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass StickerStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.reset();\r\n\r\n        this.addTdLibListener();\r\n    }\r\n\r\n    reset = () => {\r\n        this.stickerSet = null;\r\n        this.hint = null;\r\n        this.animationData = new WeakMap();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'updateAuthorizationState': {\r\n                const { authorization_state } = update;\r\n                if (!authorization_state) break;\r\n\r\n                switch (authorization_state['@type']) {\r\n                    case 'authorizationStateClosed': {\r\n                        this.reset();\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'updateInstalledStickerSets': {\r\n                const { sticker_set_ids } = update;\r\n                if (this.stickerSet) {\r\n                    const { id, is_installed } = this.stickerSet;\r\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\r\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\r\n                    }\r\n                }\r\n\r\n                this.emit('updateInstalledStickerSets', update);\r\n                break;\r\n            }\r\n            case 'updateRecentStickers': {\r\n                this.emit('updateRecentStickers', update);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onClientUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'clientUpdateStickerSend': {\r\n                this.emit('clientUpdateStickerSend', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateLocalStickersHint': {\r\n                const { hint } = update;\r\n\r\n                this.hint = hint;\r\n\r\n                this.emit('clientUpdateLocalStickersHint', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateRemoteStickersHint': {\r\n                const { hint } = update;\r\n\r\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\r\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\r\n                }\r\n\r\n                this.emit('clientUpdateRemoteStickersHint', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateStickerSet': {\r\n                const { stickerSet } = update;\r\n\r\n                this.stickerSet = stickerSet;\r\n\r\n                this.emit('clientUpdateStickerSet', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateStickerSetPosition': {\r\n                this.emit('clientUpdateStickerSetPosition', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateStickerPreview': {\r\n                this.emit('clientUpdateStickerPreview', update);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.on('update', this.onUpdate);\r\n        TdLibController.on('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.off('update', this.onUpdate);\r\n        TdLibController.off('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    getAnimationData(key) {\r\n        return this.animationData.get(key);\r\n    }\r\n\r\n    setAnimationData(key, data) {\r\n        this.animationData.set(key, data);\r\n    }\r\n}\r\n\r\nconst store = new StickerStore();\r\nwindow.sticker = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport EventEmitter from './EventEmitter';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass BasicGroupStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.reset();\r\n\r\n        this.addTdLibListener();\r\n    }\r\n\r\n    reset = () => {\r\n        this.items = new Map();\r\n        this.fullInfoItems = new Map();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'updateAuthorizationState': {\r\n                const { authorization_state } = update;\r\n                if (!authorization_state) break;\r\n\r\n                switch (authorization_state['@type']) {\r\n                    case 'authorizationStateClosed': {\r\n                        this.reset();\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'updateBasicGroup': {\r\n                this.set(update.basic_group);\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            case 'updateBasicGroupFullInfo': {\r\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\r\n\r\n                this.emit(update['@type'], update);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onClientUpdate = update => {};\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.on('update', this.onUpdate);\r\n        TdLibController.on('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.off('update', this.onUpdate);\r\n        TdLibController.off('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    get(groupId) {\r\n        return this.items.get(groupId);\r\n    }\r\n\r\n    set(group) {\r\n        this.items.set(group.id, group);\r\n    }\r\n\r\n    getFullInfo(id) {\r\n        return this.fullInfoItems.get(id);\r\n    }\r\n\r\n    setFullInfo(id, fullInfo) {\r\n        this.fullInfoItems.set(id, fullInfo);\r\n    }\r\n}\r\n\r\nconst store = new BasicGroupStore();\r\nwindow.basicgroup = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { getUserLetters, isDeletedUser } from '../../Utils/User';\r\nimport { getSrc, loadChatContent } from '../../Utils/File';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './UserTile.css';\r\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\r\n\r\nclass UserTile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            this.state = {\r\n                user: UserStore.get(this.props.userId),\r\n                loaded: false\r\n            };\r\n        } else {\r\n            this.state = {\r\n                loaded: false\r\n            };\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextProps.userId !== this.props.userId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.loaded !== this.state.loaded) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\r\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    onClientUpdateUserBlob = update => {\r\n        const { userId } = this.props;\r\n\r\n        if (userId !== update.userId) return;\r\n\r\n        if (this.state.loaded) {\r\n            this.setState({ loaded: false });\r\n        } else {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onClientUpdateChatBlob = update => {\r\n        const { userId } = this.props;\r\n        const { chatId } = update;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup':\r\n            case 'chatTypeSupergroup': {\r\n                return;\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id !== userId) return;\r\n\r\n                if (this.state.loaded) {\r\n                    this.setState({ loaded: false });\r\n                } else {\r\n                    this.forceUpdate();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateChatPhoto = update => {\r\n        const { userId } = this.props;\r\n        const { chat_id, photo } = update;\r\n\r\n        const chat = ChatStore.get(chat_id);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup':\r\n            case 'chatTypeSupergroup': {\r\n                return;\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id !== userId) return;\r\n\r\n                if (this.state.loaded) {\r\n                    this.setState({ loaded: false });\r\n                } else {\r\n                    this.forceUpdate();\r\n                }\r\n\r\n                if (photo) {\r\n                    const store = FileStore.getStore();\r\n                    loadChatContent(store, chat);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { userId } = this.props;\r\n\r\n        const chat = ChatStore.get(update.chat_id);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup':\r\n            case 'chatTypeSupergroup': {\r\n                return;\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id !== userId && !chat.photo) return;\r\n\r\n                this.forceUpdate();\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSelect = event => {\r\n        const { userId, onSelect } = this.props;\r\n        if (!onSelect) return;\r\n\r\n        event.stopPropagation();\r\n        onSelect(userId);\r\n    };\r\n\r\n    handleLoad = () => {\r\n        this.setState({ loaded: true });\r\n    };\r\n\r\n    render() {\r\n        const { className, userId, fistName, lastName, onSelect, small, dialog, poll, t } = this.props;\r\n        const { loaded } = this.state;\r\n\r\n        const user = UserStore.get(userId);\r\n        if (!user && !(fistName || lastName)) return null;\r\n\r\n        if (isDeletedUser(userId)) {\r\n            return (\r\n                <div\r\n                    className={classNames(\r\n                        className,\r\n                        'user-tile',\r\n                        'tile_color_0',\r\n                        { pointer: onSelect },\r\n                        { 'tile-dialog': dialog },\r\n                        { 'tile-small': small },\r\n                        { 'tile-poll': poll }\r\n                    )}\r\n                    onClick={this.handleSelect}>\r\n                    <div className='tile-photo'>\r\n                        <div className='tile-saved-messages'>\r\n                            <DeletedAccountIcon fontSize='default' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const letters = getUserLetters(userId, fistName, lastName, t);\r\n        const src = getSrc(user && user.profile_photo ? user.profile_photo.small : null);\r\n        const tileLoaded = src && loaded;\r\n\r\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\r\n\r\n        return (\r\n            <div\r\n                className={classNames(\r\n                    className,\r\n                    'user-tile',\r\n                    { [tileColor]: !tileLoaded },\r\n                    { pointer: onSelect },\r\n                    { 'tile-dialog': dialog },\r\n                    { 'tile-small': small },\r\n                    { 'tile-poll': poll }\r\n                )}\r\n                onClick={this.handleSelect}>\r\n                {!tileLoaded && (\r\n                    <div className='tile-photo'>\r\n                        <span className='tile-text'>{letters}</span>\r\n                    </div>\r\n                )}\r\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUserTile.propTypes = {\r\n    userId: PropTypes.number.isRequired,\r\n    firstName: PropTypes.string,\r\n    lastName: PropTypes.string,\r\n    onSelect: PropTypes.func,\r\n    small: PropTypes.bool\r\n};\r\n\r\nexport default withTranslation()(UserTile);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport FileProgress from '../../Viewer/FileProgress';\r\nimport { getSize, getFitSize } from '../../../Utils/Common';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './Photo.css';\r\n\r\nclass Photo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { photo, size, thumbnailSize } = props;\r\n        if (photo !== state.prevPhoto) {\r\n            return {\r\n                prevPhoto: photo,\r\n                photoSize: getSize(photo.sizes, size),\r\n                thumbSize: getSize(photo.sizes, thumbnailSize),\r\n                minithumbnail: photo ? photo.minithumbnail : null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    onClientUpdatePhotoBlob = update => {\r\n        const { photoSize, thumbSize } = this.state;\r\n        const { fileId } = update;\r\n\r\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { className, displaySize, openMedia, showProgress, title, caption, type, style } = this.props;\r\n        const { thumbSize, photoSize, minithumbnail } = this.state;\r\n\r\n        if (!photoSize) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\r\n        const src = getSrc(photoSize.photo);\r\n        const isBlurred = (!thumbSrc && miniSrc) || isBlurredThumbnail(thumbSize);\r\n\r\n        const fitPhotoSize = getFitSize(photoSize, displaySize, false);\r\n        if (!fitPhotoSize) return null;\r\n\r\n        // console.log('[photo] render', displaySize, fitPhotoSize);\r\n        const photoStyle = {\r\n            width: fitPhotoSize.width,\r\n            height: fitPhotoSize.height,\r\n            ...style\r\n        };\r\n\r\n        const hasSrc = Boolean(src || thumbSrc || miniSrc);\r\n\r\n        return (\r\n            <div\r\n                className={classNames(className, 'photo', {\r\n                    'photo-big': type === 'message',\r\n                    'photo-title': title,\r\n                    'photo-caption': caption,\r\n                    pointer: openMedia\r\n                })}\r\n                style={photoStyle}\r\n                onClick={openMedia}>\r\n                {hasSrc && (\r\n                    <img\r\n                        className={classNames('photo-image', {\r\n                            'media-blurred': !src && isBlurred,\r\n                            'media-mini-blurred': !src && !thumbSrc && isBlurred\r\n                        })}\r\n                        draggable={false}\r\n                        src={src || thumbSrc || miniSrc}\r\n                        alt=''\r\n                    />\r\n                )}\r\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPhoto.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    photo: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func,\r\n    showProgress: PropTypes.bool,\r\n\r\n    size: PropTypes.number,\r\n    thumbnailSize: PropTypes.number,\r\n    displaySize: PropTypes.number,\r\n    style: PropTypes.object\r\n};\r\n\r\nPhoto.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    showProgress: true\r\n};\r\n\r\nexport default Photo;\r\n","/*\r\n * Date Format 1.2.3\r\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\r\n * MIT license\r\n *\r\n * Includes enhancements by Scott Trenda <scott.trenda.net>\r\n * and Kris Kowal <cixar.com/~kris.kowal/>\r\n *\r\n * Accepts a date, a mask, or a date and a mask.\r\n * Returns a formatted version of the given date.\r\n * The date defaults to the current date/time.\r\n * The mask defaults to dateFormat.masks.default.\r\n */\r\n\r\nconst dateFormat = (function() {\r\n    const token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\r\n    const timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\r\n    const timezoneClip = /[^-+\\dA-Z]/g;\r\n\r\n    // Regexes and supporting functions are cached through closure\r\n    return function(date, mask, utc, gmt) {\r\n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\r\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\r\n            mask = date;\r\n            date = undefined;\r\n        }\r\n\r\n        date = date || new Date();\r\n\r\n        if (!(date instanceof Date)) {\r\n            date = new Date(date);\r\n        }\r\n\r\n        if (isNaN(date)) {\r\n            throw TypeError('Invalid date');\r\n        }\r\n\r\n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\r\n\r\n        // Allow setting the utc/gmt argument via the mask\r\n        var maskSlice = mask.slice(0, 4);\r\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\r\n            mask = mask.slice(4);\r\n            utc = true;\r\n            if (maskSlice === 'GMT:') {\r\n                gmt = true;\r\n            }\r\n        }\r\n\r\n        var _ = utc ? 'getUTC' : 'get';\r\n        var d = date[_ + 'Date']();\r\n        var D = date[_ + 'Day']();\r\n        var m = date[_ + 'Month']();\r\n        var y = date[_ + 'FullYear']();\r\n        var H = date[_ + 'Hours']();\r\n        var M = date[_ + 'Minutes']();\r\n        var s = date[_ + 'Seconds']();\r\n        var L = date[_ + 'Milliseconds']();\r\n        var o = utc ? 0 : date.getTimezoneOffset();\r\n        var W = getWeek(date);\r\n        var N = getDayOfWeek(date);\r\n        var flags = {\r\n            d: d,\r\n            dd: pad(d),\r\n            ddd: dateFormat.i18n.dayNames[D],\r\n            dddd: dateFormat.i18n.dayNames[D + 7],\r\n            m: m + 1,\r\n            mm: pad(m + 1),\r\n            mmm: dateFormat.i18n.monthNames[m],\r\n            mmmm: dateFormat.i18n.monthNames[m + 12],\r\n            yy: String(y).slice(2),\r\n            yyyy: y,\r\n            h: H % 12 || 12,\r\n            hh: pad(H % 12 || 12),\r\n            H: H,\r\n            HH: pad(H),\r\n            M: M,\r\n            MM: pad(M),\r\n            s: s,\r\n            ss: pad(s),\r\n            l: pad(L, 3),\r\n            L: pad(Math.round(L / 10)),\r\n            t: H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\r\n            tt: H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\r\n            T: H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\r\n            TT: H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\r\n            Z: gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\r\n            o: (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + (Math.abs(o) % 60), 4),\r\n            S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (((d % 100) - (d % 10) != 10) * d) % 10],\r\n            W: W,\r\n            N: N\r\n        };\r\n\r\n        return mask.replace(token, function(match) {\r\n            if (match in flags) {\r\n                return flags[match];\r\n            }\r\n            return match.slice(1, match.length - 1);\r\n        });\r\n    };\r\n})();\r\n\r\ndateFormat.masks = {\r\n    default: 'ddd mmm dd yyyy HH:MM:ss',\r\n    shortDate: 'm/d/yy',\r\n    mediumDate: 'mmm d, yyyy',\r\n    longDate: 'mmmm d, yyyy',\r\n    fullDate: 'dddd, mmmm d, yyyy',\r\n    shortTime: 'h:MM TT',\r\n    mediumTime: 'h:MM:ss TT',\r\n    longTime: 'h:MM:ss TT Z',\r\n    isoDate: 'yyyy-mm-dd',\r\n    isoTime: 'HH:MM:ss',\r\n    isoDateTime: \"yyyy-mm-dd'T'HH:MM:sso\",\r\n    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",\r\n    expiresHeaderFormat: 'ddd, dd mmm yyyy HH:MM:ss Z'\r\n};\r\n\r\n// Internationalization strings\r\ndateFormat.i18n = {\r\n    dayNames: [\r\n        'Sun',\r\n        'Mon',\r\n        'Tue',\r\n        'Wed',\r\n        'Thu',\r\n        'Fri',\r\n        'Sat',\r\n        'Sunday',\r\n        'Monday',\r\n        'Tuesday',\r\n        'Wednesday',\r\n        'Thursday',\r\n        'Friday',\r\n        'Saturday'\r\n    ],\r\n    monthNames: [\r\n        'Jan',\r\n        'Feb',\r\n        'Mar',\r\n        'Apr',\r\n        'May',\r\n        'Jun',\r\n        'Jul',\r\n        'Aug',\r\n        'Sep',\r\n        'Oct',\r\n        'Nov',\r\n        'Dec',\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ],\r\n    timeNames: ['a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM']\r\n};\r\n\r\nfunction pad(val, len) {\r\n    val = String(val);\r\n    len = len || 2;\r\n    while (val.length < len) {\r\n        val = '0' + val;\r\n    }\r\n    return val;\r\n}\r\n\r\n/**\r\n * Get the ISO 8601 week number\r\n * Based on comments from\r\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\r\n *\r\n * @param  {Object} `date`\r\n * @return {Number}\r\n */\r\nfunction getWeek(date) {\r\n    // Remove time components of date\r\n    var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n\r\n    // Change date to Thursday same week\r\n    targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\r\n\r\n    // Take January 4th as it is always in week 1 (see ISO 8601)\r\n    var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\r\n\r\n    // Change date to Thursday same week\r\n    firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\r\n\r\n    // Check if daylight-saving-time-switch occurred and correct for it\r\n    var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\r\n    targetThursday.setHours(targetThursday.getHours() - ds);\r\n\r\n    // Number of weeks between target Thursday and first Thursday\r\n    var weekDiff = (targetThursday - firstThursday) / (86400000 * 7);\r\n    return 1 + Math.floor(weekDiff);\r\n}\r\n\r\n/**\r\n * Get ISO-8601 numeric representation of the day of the week\r\n * 1 (for Monday) through 7 (for Sunday)\r\n *\r\n * @param  {Object} `date`\r\n * @return {Number}\r\n */\r\nfunction getDayOfWeek(date) {\r\n    var dow = date.getDay();\r\n    if (dow === 0) {\r\n        dow = 7;\r\n    }\r\n    return dow;\r\n}\r\n\r\n/**\r\n * kind-of shortcut\r\n * @param  {*} val\r\n * @return {String}\r\n */\r\nfunction kindOf(val) {\r\n    if (val === null) {\r\n        return 'null';\r\n    }\r\n\r\n    if (val === undefined) {\r\n        return 'undefined';\r\n    }\r\n\r\n    if (typeof val !== 'object') {\r\n        return typeof val;\r\n    }\r\n\r\n    if (Array.isArray(val)) {\r\n        return 'array';\r\n    }\r\n\r\n    return {}.toString\r\n        .call(val)\r\n        .slice(8, -1)\r\n        .toLowerCase();\r\n}\r\n\r\nexport default dateFormat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport { getDecodedUrl, getHref, isUrlSafe } from '../../Utils/Url';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './SafeLink.css';\r\nimport { openChat } from '../../Actions/Client';\r\n\r\nclass SafeLink extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { displayText, mail, url } = props;\r\n\r\n        if (state.prevUrl !== url || state.prevDisplayText !== displayText) {\r\n            return {\r\n                prevUrl: url,\r\n                prevDisplayText: displayText,\r\n                safe: isUrlSafe(displayText, url),\r\n                decodedUrl: getDecodedUrl(url, mail),\r\n                href: getHref(url, mail),\r\n                confirm: false\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        this.setState({ confirm: true });\r\n    };\r\n\r\n    handleDialogClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ confirm: false });\r\n    };\r\n\r\n    handleDone = event => {\r\n        this.handleClose();\r\n\r\n        const { url, onClick } = this.props;\r\n        if (!url) return;\r\n\r\n        if (onClick) {\r\n            onClick(event);\r\n        } else {\r\n            const newWindow = window.open();\r\n            newWindow.opener = null;\r\n            newWindow.location = url;\r\n        }\r\n    };\r\n\r\n    isTelegramLink(url) {\r\n        if (!url) return false;\r\n\r\n        const lowerCaseUrl = url\r\n            .toLowerCase()\r\n            .replace('https://', '')\r\n            .replace('http://', '');\r\n\r\n        return lowerCaseUrl.startsWith('t.me') || lowerCaseUrl.startsWith('tg://');\r\n    }\r\n\r\n    handleSafeClick = async event => {\r\n        event.stopPropagation();\r\n\r\n        const { onClick, url: href } = this.props;\r\n\r\n        if (this.isTelegramLink(href)) {\r\n            event.preventDefault();\r\n            try {\r\n                const messageLinkInfo = await TdLibController.send({\r\n                    '@type': 'getMessageLinkInfo',\r\n                    url: href\r\n                });\r\n\r\n                MessageStore.setItems([messageLinkInfo.message]);\r\n\r\n                const { chat_id, message } = messageLinkInfo;\r\n                if (chat_id) {\r\n                    openChat(chat_id, message ? message.id : null);\r\n                    return;\r\n                }\r\n            } catch (error) {\r\n                console.log('[safeLink] messageLinkInfo error', error);\r\n            }\r\n\r\n            if (onClick) {\r\n                onClick(event);\r\n            }\r\n        }\r\n\r\n        if (onClick) {\r\n            event.preventDefault();\r\n            onClick(event);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { className, children, t, url } = this.props;\r\n        const { confirm, decodedUrl, href, safe } = this.state;\r\n\r\n        if (!url) return null;\r\n        if (!decodedUrl) return null;\r\n\r\n        return (\r\n            <>\r\n                {safe ? (\r\n                    <a\r\n                        className={className}\r\n                        href={href}\r\n                        title={decodedUrl}\r\n                        target='_blank'\r\n                        rel='noopener noreferrer'\r\n                        onClick={this.handleSafeClick}>\r\n                        {children || url}\r\n                    </a>\r\n                ) : (\r\n                    <>\r\n                        <a className={className} title={decodedUrl} onClick={this.handleClick}>\r\n                            {children || url}\r\n                        </a>\r\n                        {confirm && (\r\n                            <Dialog\r\n                                transitionDuration={0}\r\n                                open={confirm}\r\n                                onClose={this.handleClose}\r\n                                onClick={this.handleDialogClick}\r\n                                aria-labelledby='confirm-dialog-title'>\r\n                                <DialogTitle id='confirm-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                                <DialogContent classes={{ root: 'safe-link-content-root' }}>\r\n                                    <DialogContentText>{`Open this link?\\n\\n${decodedUrl}`}</DialogContentText>\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button onClick={this.handleClose}>{t('Cancel')}</Button>\r\n                                    <Button onClick={this.handleDone} color='primary'>\r\n                                        {t('Open')}\r\n                                    </Button>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSafeLink.propTypes = {\r\n    url: PropTypes.string.isRequired,\r\n    displayText: PropTypes.string,\r\n    mail: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SafeLink);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport EventEmitter from './EventEmitter';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass InstantViewStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.reset();\r\n\r\n        this.addTdLibListener();\r\n    }\r\n\r\n    reset = () => {\r\n        this.items = [];\r\n    };\r\n\r\n    onUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'updateAuthorizationState': {\r\n                const { authorization_state } = update;\r\n                if (!authorization_state) break;\r\n\r\n                switch (authorization_state['@type']) {\r\n                    case 'authorizationStateClosed': {\r\n                        this.reset();\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onClientUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'clientUpdateBlocksInView': {\r\n                this.emit('clientUpdateBlocksInView', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateInstantViewContent': {\r\n                const { content } = update;\r\n\r\n                if (content) {\r\n                    this.items.push(content.instantView);\r\n                } else {\r\n                    this.items = [];\r\n                }\r\n\r\n                this.emit('clientUpdateInstantViewContent', update);\r\n\r\n                break;\r\n            }\r\n            case 'clientUpdateInstantViewUrl': {\r\n                this.emit('clientUpdateInstantViewUrl', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateInstantViewViewerContent': {\r\n                const { content } = update;\r\n\r\n                this.viewerContent = content;\r\n\r\n                this.emit('clientUpdateInstantViewViewerContent', update);\r\n                break;\r\n            }\r\n            case 'clientUpdatePrevInstantView': {\r\n                if (this.items.length <= 1) return;\r\n\r\n                this.items.pop();\r\n                const prevInstantView = this.items.pop();\r\n\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateInstantViewContent',\r\n                    content: {\r\n                        instantView: prevInstantView\r\n                    }\r\n                });\r\n\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.on('update', this.onUpdate);\r\n        TdLibController.on('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.off('update', this.onUpdate);\r\n        TdLibController.off('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    hasPrev() {\r\n        return this.items.length > 1;\r\n    }\r\n\r\n    getCurrent() {\r\n        return this.items.length > 0 ? this.items[this.items.length - 1] : null;\r\n    }\r\n}\r\n\r\nconst store = new InstantViewStore();\r\nwindow.instantView = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M5,19 L19,19 C19.5522847,19 20,19.4477153 20,20 C20,20.5128358 19.6139598,20.9355072 19.1166211,20.9932723 L19,21 L5,21 C4.44771525,21 4,20.5522847 4,20 C4,19.4871642 4.38604019,19.0644928 4.88337887,19.0067277 L5,19 L19,19 L5,19 Z M11.8833789,3.00672773 L12,3 C12.5128358,3 12.9355072,3.38604019 12.9932723,3.88337887 L13,4 L13,13.585 L16.2928932,10.2928932 C16.6533772,9.93240926 17.2206082,9.90467972 17.6128994,10.2097046 L17.7071068,10.2928932 C18.0675907,10.6533772 18.0953203,11.2206082 17.7902954,11.6128994 L17.7071068,11.7071068 L12.7071068,16.7071068 C12.3466228,17.0675907 11.7793918,17.0953203 11.3871006,16.7902954 L11.2928932,16.7071068 L6.29289322,11.7071068 C5.90236893,11.3165825 5.90236893,10.6834175 6.29289322,10.2928932 C6.65337718,9.93240926 7.22060824,9.90467972 7.61289944,10.2097046 L7.70710678,10.2928932 L11,13.585 L11,4 C11,3.48716416 11.3860402,3.06449284 11.8833789,3.00672773 L12,3 L11.8833789,3.00672773 Z' />,\r\n    'Download'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\r\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './MessageAuthor.css';\r\n\r\nclass MessageAuthor extends React.Component {\r\n    handleSelect = event => {\r\n        const { chatId, userId, openUser, openChat } = this.props;\r\n\r\n        if (openUser && userId) {\r\n            event.stopPropagation();\r\n\r\n            openUserCommand(userId, true);\r\n            return;\r\n        }\r\n\r\n        if (openChat && chatId) {\r\n            event.stopPropagation();\r\n\r\n            openChatCommand(chatId, null, true);\r\n            return;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, userId, openUser, openChat } = this.props;\r\n\r\n        const user = UserStore.get(userId);\r\n        if (user) {\r\n            const tileColor = isPrivateChat(chatId)\r\n                ? 'message-author-color'\r\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\r\n            const className = classNames([tileColor], 'message-author');\r\n\r\n            const fullName = getUserFullName(userId, null, t);\r\n\r\n            return openUser ? (\r\n                <a className={className} onClick={this.handleSelect}>\r\n                    {fullName}\r\n                </a>\r\n            ) : (\r\n                <>{fullName}</>\r\n            );\r\n        }\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (chat) {\r\n            const className = classNames('message-author-color', 'message-author');\r\n\r\n            const fullName = getChatTitle(chatId, false, t);\r\n\r\n            return openChat ? (\r\n                <a className={className} onClick={this.handleSelect}>\r\n                    {fullName}\r\n                </a>\r\n            ) : (\r\n                <>{fullName}</>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nMessageAuthor.propTypes = {\r\n    chatId: PropTypes.number,\r\n    userId: PropTypes.number,\r\n    openUser: PropTypes.bool,\r\n    openChat: PropTypes.bool\r\n};\r\n\r\nMessageAuthor.defaultProps = {\r\n    openUser: false,\r\n    openChat: false\r\n};\r\n\r\nexport default withTranslation()(MessageAuthor);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport UserTile from './UserTile';\r\nimport UserStatus from './UserStatus';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport UserStore from './../../Stores/UserStore';\r\nimport './User.css';\r\n\r\nclass User extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: UserStore.get(props.userId)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.userId !== this.props.userId;\r\n    }\r\n\r\n    handleClick = () => {\r\n        const { userId, onSelect } = this.props;\r\n        if (!onSelect) return;\r\n\r\n        onSelect(userId);\r\n    };\r\n\r\n    render() {\r\n        const { userId, t, showStatus } = this.props;\r\n\r\n        const fullName = getUserFullName(userId, null, t);\r\n\r\n        return (\r\n            <div className='user' onClick={this.handleClick}>\r\n                <div className='user-wrapper'>\r\n                    <UserTile userId={userId} />\r\n                    <div className='user-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            <div className='user-title'>{fullName}</div>\r\n                        </div>\r\n                        {showStatus && (\r\n                            <div className='tile-second-row'>\r\n                                <UserStatus userId={userId} />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUser.propTypes = {\r\n    userId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    showStatus: PropTypes.bool\r\n};\r\n\r\nUser.defaultProps = {\r\n    showStatus: true\r\n};\r\n\r\nexport default withTranslation()(User);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FileProgress from '../../Viewer/FileProgress';\r\nimport { getFitSize } from '../../../Utils/Common';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\r\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\r\nimport AppStore from '../../../Stores/ApplicationStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport InstantViewStore from '../../../Stores/InstantViewStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './Animation.css';\r\n\r\nclass Animation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        this.setPlayerParams();\r\n    }\r\n\r\n    setPlayerParams() {\r\n        this.windowFocused = window.hasFocus;\r\n\r\n        this.inView = false;\r\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\r\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\r\n        this.openIV = Boolean(InstantViewStore.getCurrent());\r\n\r\n        this.ivInView = false;\r\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.animation !== this.props.animation) {\r\n            this.setPlayerParams();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\r\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\r\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\r\n        InstantViewStore.on('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\r\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\r\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\r\n        InstantViewStore.off('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\r\n    }\r\n\r\n    startStopPlayer = () => {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        if (\r\n            this.windowFocused &&\r\n            ((this.inView && !this.openMediaViewer && !this.openProfileMediaViewer && !this.openIV) ||\r\n                (this.ivInView && !this.openIVMedia))\r\n        ) {\r\n            player.play();\r\n        } else {\r\n            player.pause();\r\n        }\r\n    };\r\n\r\n    onClientUpdateInstantViewContent = update => {\r\n        this.openIV = Boolean(InstantViewStore.getCurrent());\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateProfileMediaViewerContent = update => {\r\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateInstantViewViewerContent = update => {\r\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        this.windowFocused = update.focused;\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateMessagesInView = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const key = `${chatId}_${messageId}`;\r\n\r\n        this.inView = update.messages.has(key);\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateBlocksInView = update => {\r\n        const { pageBlock } = this.props;\r\n        if (!pageBlock) return;\r\n\r\n        this.ivInView = update.blocks.has(pageBlock);\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateAnimationBlob = update => {\r\n        const { animation } = this.props.animation;\r\n        const { fileId } = update;\r\n\r\n        if (!animation) return;\r\n\r\n        if (animation.id === fileId) {\r\n            this.forceUpdate(() => {\r\n                this.startStopPlayer();\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateAnimationThumbnailBlob = update => {\r\n        const { thumbnail } = this.props.animation;\r\n        if (!thumbnail) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { displaySize, openMedia, t, title, caption, type, style } = this.props;\r\n        const { minithumbnail, thumbnail, animation, mime_type, width, height } = this.props.animation;\r\n\r\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize, false);\r\n        if (!fitPhotoSize) return null;\r\n\r\n        const animationStyle = {\r\n            width: fitPhotoSize.width,\r\n            height: fitPhotoSize.height,\r\n            ...style\r\n        };\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\r\n        const src = getSrc(animation);\r\n\r\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\r\n        const isGif = isGifMimeType(mime_type);\r\n        const source = src ? <source src={src} type={mime_type} /> : null;\r\n\r\n        return (\r\n            <div\r\n                className={classNames('animation', {\r\n                    'animation-big': type === 'message',\r\n                    'animation-title': title,\r\n                    'media-title': title,\r\n                    'animation-caption': caption,\r\n                    pointer: openMedia\r\n                })}\r\n                style={animationStyle}\r\n                onClick={openMedia}>\r\n                {src ? (\r\n                    isGif ? (\r\n                        <img className='animation-preview' src={src} alt='' />\r\n                    ) : (\r\n                        <video\r\n                            ref={this.videoRef}\r\n                            className='media-viewer-content-animation'\r\n                            poster={thumbnailSrc || miniSrc}\r\n                            muted\r\n                            autoPlay\r\n                            loop\r\n                            playsInline\r\n                            width={animationStyle.width}\r\n                            height={animationStyle.height}>\r\n                            {source}\r\n                        </video>\r\n                    )\r\n                ) : (\r\n                    <>\r\n                        <img\r\n                            className={classNames('animation-preview', {\r\n                                'media-blurred': isBlurred,\r\n                                'media-mini-blurred': !src && !thumbnailSrc && isBlurred\r\n                            })}\r\n                            src={thumbnailSrc || miniSrc}\r\n                            alt=''\r\n                        />\r\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\r\n                    </>\r\n                )}\r\n                <FileProgress\r\n                    file={animation}\r\n                    download\r\n                    upload\r\n                    cancelButton\r\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAnimation.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    pageBlock: PropTypes.object,\r\n    animation: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func,\r\n    size: PropTypes.number,\r\n    displaySize: PropTypes.number,\r\n    iv: PropTypes.bool\r\n};\r\n\r\nAnimation.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    iv: false\r\n};\r\n\r\nexport default withTranslation()(Animation);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path\r\n        transform='translate(-12.000000, -12.000000)'\r\n        d='M19.3717789,13.8876217 L33.8466511,23.2537154 C34.2588127,23.5204082 34.3767385,24.0707284 34.1100457,24.48289 C34.0418356,24.5883056 33.9520666,24.6780745 33.8466511,24.7462846 L19.3717789,34.1123783 C18.9596173,34.3790711 18.4092971,34.2611454 18.1426043,33.8489838 C18.0495218,33.705129 18,33.5374371 18,33.3660938 L18,14.6339062 C18,14.1429865 18.3979691,13.7450173 18.8888889,13.7450173 C19.0602323,13.7450173 19.2279241,13.7945391 19.3717789,13.8876217 Z'\r\n    />,\r\n    'PlayArrow'\r\n);\r\n","\r\n/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nclass Currency{\r\n    constructor(){\r\n        this.list = new Map([\r\n            [\"AED\", \"د.إ\"],\r\n            [\"AFN\", \"؋\"],\r\n            [\"ARS\", \"$\"],\r\n            [\"AUD\", \"$\"],\r\n            [\"AZN\", \"₼\"],\r\n            [\"BND\", \"B$\"],\r\n            [\"BRL\", \"R$\"],\r\n            [\"CAD\", \"$\"],\r\n            [\"CHF\", \"Fr\"],\r\n            [\"CLP\", \"$\"],\r\n            [\"CNY\", \"¥\"],\r\n            [\"COP\", \"$\"],\r\n            [\"EGP\", \"E£\"],\r\n            [\"EUR\", \"€\"],\r\n            [\"GBP\", \"£\"],\r\n            [\"HKD\", \"$\"],\r\n            [\"IDR\", \"Rp\"],\r\n            [\"ILS\", \"₪\"],\r\n            [\"INR\", \"₹\"],\r\n            [\"ISK\", \"kr\"],\r\n            [\"JPY\", \"¥\"],\r\n            [\"KRW\", \"₩\"],\r\n            [\"KZT\", \"₸\"],\r\n            [\"MXN\", \"$\"],\r\n            [\"MYR\", \"RM\"],\r\n            [\"NOK\", \"kr\"],\r\n            [\"NZD\", \"$\"],\r\n            [\"PHP\", \"₱\"],\r\n            [\"RUB\", \"₽\"],\r\n            [\"SAR\", \"SR\"],\r\n            [\"SEK\", \"kr\"],\r\n            [\"SGD\", \"$\"],\r\n            [\"TRY\", \"₺\"],\r\n            [\"TTD\", \"$\"],\r\n            [\"TWD\", \"$\"],\r\n            [\"TZS\", \"TSh\"],\r\n            [\"UAH\", \"₴\"],\r\n            [\"UGX\", \"USh\"],\r\n            [\"USD\", \"$\"],\r\n            [\"UYU\", \"$\"],\r\n            [\"VND\", \"₫\"],\r\n            [\"YER\", \"﷼\"],\r\n            [\"ZAR\", \"R\"],\r\n            [\"IRR\", \"﷼\"],\r\n            [\"IQD\", \"ع.د\"],\r\n            [\"VEF\", \"Bs.F.\"]\r\n        ]);\r\n    }\r\n\r\n    get(currency){\r\n        return this.list.get(currency);\r\n    }\r\n\r\n    set(currency, symbol){\r\n        this.list.set(currency, symbol);\r\n    }\r\n\r\n    getPow(currency){\r\n        if (currency === 'CLF'){\r\n            return 4;\r\n        }\r\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\r\n            return 3;\r\n        }\r\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\r\n            return 0;\r\n        }\r\n        if (currency === 'MRO'){\r\n            return 1;\r\n        }\r\n\r\n        return 2;\r\n    }\r\n\r\n    getString(totalAmount, currency){\r\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\r\n        return `${amount} ${this.get(currency)}`;\r\n    }\r\n}\r\n\r\nlet currency = new Currency();\r\nexport default currency;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Currency from './Currency';\r\nimport MessageAuthor from '../Components/Message/MessageAuthor';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport MessageStore from '../Stores/MessageStore';\r\n\r\nlet serviceMap = new Map();\r\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\r\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\r\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\r\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\r\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\r\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\r\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\r\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\r\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\r\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\r\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\r\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\r\nserviceMap.set('messageGameScore', 'messageGameScore');\r\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\r\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\r\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\r\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\r\nserviceMap.set('messagePinMessage', 'messagePinMessage');\r\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\r\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\r\nserviceMap.set('messageUnsupported', 'messageUnsupported');\r\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\r\n\r\nfunction isServiceMessage(message) {\r\n    if (!message) return false;\r\n    if (!message.content) return false;\r\n\r\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\r\n}\r\n\r\nfunction getTTLString(ttl) {\r\n    if (ttl < 60) {\r\n        const seconds = ttl === 1 ? 'second' : 'seconds';\r\n        return `${ttl} ${seconds}`;\r\n    }\r\n    if (ttl < 60 * 60) {\r\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\r\n        return `${ttl} ${minutes}`;\r\n    }\r\n    if (ttl < 24 * 60 * 60) {\r\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\r\n        return `${ttl} ${hours}`;\r\n    }\r\n    if (ttl < 7 * 24 * 60 * 60) {\r\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\r\n        return `${ttl} ${days}`;\r\n    }\r\n    if (ttl === 7 * 24 * 60 * 60) {\r\n        return '1 week';\r\n    }\r\n\r\n    return `${ttl} seconds`;\r\n}\r\n\r\nfunction getPassportElementTypeString(type) {\r\n    switch (type['@type']) {\r\n        case 'passportElementTypeAddress': {\r\n            return 'Address';\r\n        }\r\n        case 'passportElementTypeBankStatement': {\r\n            return 'Bank Statement';\r\n        }\r\n        case 'passportElementTypeDriverLicense': {\r\n            return 'Driver Licence';\r\n        }\r\n        case 'passportElementTypeEmailAddress': {\r\n            return 'Email';\r\n        }\r\n        case 'passportElementTypeIdentityCard': {\r\n            return 'Identity Card';\r\n        }\r\n        case 'passportElementTypeInternalPassport': {\r\n            return 'Internal Passport';\r\n        }\r\n        case 'passportElementTypePassport': {\r\n            return 'Passport';\r\n        }\r\n        case 'passportElementTypePassportRegistration': {\r\n            return 'Passport Registration';\r\n        }\r\n        case 'passportElementTypePersonalDetails': {\r\n            return 'Personal details';\r\n        }\r\n        case 'passportElementTypePhoneNumber': {\r\n            return 'Phone Number';\r\n        }\r\n        case 'passportElementTypeRentalAgreement': {\r\n            return 'Tenancy Agreement';\r\n        }\r\n        case 'passportElementTypeTemporaryRegistration': {\r\n            return 'Temporary Registration';\r\n        }\r\n        case 'passportElementTypeUtilityBill': {\r\n            return 'Utility Bill';\r\n        }\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\nfunction getMessageAuthor(message, openUser) {\r\n    if (!message) return null;\r\n\r\n    const { chat_id, sender_user_id } = message;\r\n\r\n    if (sender_user_id !== 0) {\r\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\r\n    }\r\n\r\n    const chat = ChatStore.get(chat_id);\r\n    if (!chat) return null;\r\n\r\n    return chat.title;\r\n}\r\n\r\nfunction getServiceMessageContent(message, openUser = false) {\r\n    if (!message) return null;\r\n    if (!message.content) return null;\r\n\r\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\r\n    const chat = ChatStore.get(message.chat_id);\r\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\r\n\r\n    const { ttl, sender_user_id, content } = message;\r\n    if (ttl > 0) {\r\n        switch (content['@type']) {\r\n            case 'messagePhoto': {\r\n                if (isOutgoing) {\r\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\r\n                }\r\n\r\n                return (\r\n                    <>\r\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                        {' sent a self-destructing photo. Please view it on your mobile'}\r\n                    </>\r\n                );\r\n            }\r\n            case 'messageVideo': {\r\n                if (isOutgoing) {\r\n                    return 'You sent a self-destructing video. Please view it on your mobile';\r\n                }\r\n\r\n                return (\r\n                    <>\r\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                        {' sent a self-destructing video. Please view it on your mobile'}\r\n                    </>\r\n                );\r\n            }\r\n            default: {\r\n                if (isOutgoing) {\r\n                    return 'You sent a self-destructing message. Please view it on your mobile';\r\n                }\r\n\r\n                return (\r\n                    <>\r\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                        {' sent a self-destructing message. Please view it on your mobile'}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    switch (content['@type']) {\r\n        case 'messageBasicGroupChatCreate': {\r\n            const { title } = ChatStore.get(message.chat_id);\r\n\r\n            if (isOutgoing) {\r\n                return `You created group «${title}»`;\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {` created group «${title}»`}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageChatAddMembers': {\r\n            const members = content.member_user_ids\r\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\r\n                .reduce((accumulator, current, index, array) => {\r\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\r\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\r\n                }, null);\r\n\r\n            if (isOutgoing) {\r\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\r\n                    'You joined the group'\r\n                ) : (\r\n                    <>\r\n                        {'You added '}\r\n                        {members}\r\n                    </>\r\n                );\r\n            }\r\n\r\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {' joined the group'}\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {' added '}\r\n                    {members}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageChatChangePhoto': {\r\n            if (isChannel) {\r\n                return 'Channel photo updated';\r\n            }\r\n\r\n            if (isOutgoing) {\r\n                return 'You updated group photo';\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {` updated group photo`}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageChatChangeTitle': {\r\n            const { title } = content;\r\n\r\n            if (isChannel) {\r\n                return `Channel name was changed to «${title}»`;\r\n            }\r\n\r\n            if (isOutgoing) {\r\n                return `You changed group name to «${title}»`;\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {` changed group name to «${title}»`}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageChatDeleteMember': {\r\n            if (isOutgoing) {\r\n                return content.user_id === UserStore.getMyId() ? (\r\n                    'You left the group'\r\n                ) : (\r\n                    <>\r\n                        {'You removed '}\r\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\r\n                    </>\r\n                );\r\n            }\r\n\r\n            return content.user_id === sender_user_id ? (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {' left the group'}\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {' removed '}\r\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\r\n                </>\r\n            );\r\n        }\r\n        case 'messageChatDeletePhoto': {\r\n            if (isChannel) {\r\n                return 'Channel photo removed';\r\n            }\r\n\r\n            if (isOutgoing) {\r\n                return 'You removed group photo';\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {' removed group photo'}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageChatJoinByLink': {\r\n            if (isOutgoing) {\r\n                return 'You joined the group via invite link';\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {' joined the group via invite link'}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageChatSetTtl': {\r\n            const { ttl } = content;\r\n            const ttlString = getTTLString(ttl);\r\n\r\n            if (ttl <= 0) {\r\n                if (isOutgoing) {\r\n                    return 'You disabled the self-destruct timer';\r\n                }\r\n\r\n                return (\r\n                    <>\r\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                        {' disabled the self-destruct timer'}\r\n                    </>\r\n                );\r\n            }\r\n\r\n            if (isOutgoing) {\r\n                return `You set the self-destruct timer to ${ttlString}`;\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {` set the self-destruct timer to ${ttlString}`}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageChatUpgradeFrom': {\r\n            return 'The group was upgraded to a supergroup';\r\n        }\r\n        case 'messageChatUpgradeTo': {\r\n            return 'Group migrated to a supergroup';\r\n        }\r\n        case 'messageContactRegistered': {\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {' just joined Telegram'}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageCustomServiceAction': {\r\n            return content.text;\r\n        }\r\n        case 'messageGameScore': {\r\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\r\n            if (\r\n                messageGame &&\r\n                messageGame.content &&\r\n                messageGame.content['@type'] === 'messageGame' &&\r\n                messageGame.content.game\r\n            ) {\r\n                const { game } = messageGame.content;\r\n\r\n                if (isOutgoing) {\r\n                    return `You scored ${content.score} in «${game.title}»`;\r\n                }\r\n\r\n                return (\r\n                    <>\r\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\r\n                        {` scored ${content.score} in «${game.title}»`}\r\n                    </>\r\n                );\r\n            }\r\n\r\n            if (isOutgoing) {\r\n                return `You scored ${content.score}`;\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {` scored ${content.score}`}\r\n                </>\r\n            );\r\n        }\r\n        case 'messagePassportDataReceived': {\r\n            return 'Telegram Passport data received';\r\n        }\r\n        case 'messagePassportDataSent': {\r\n            const chat = ChatStore.get(message.chat_id);\r\n\r\n            const passportElementTypes = content.types\r\n                .map(x => getPassportElementTypeString(x))\r\n                .reduce((accumulator, current) => {\r\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\r\n                }, null);\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\r\n                    {' received the following documents: '}\r\n                    {passportElementTypes}\r\n                </>\r\n            );\r\n        }\r\n        case 'messagePaymentSuccessful': {\r\n            const chat = ChatStore.get(message.chat_id);\r\n\r\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\r\n            if (\r\n                messageInvoice &&\r\n                messageInvoice.content &&\r\n                messageInvoice.content['@type'] === 'messageInvoice' &&\r\n                messageInvoice.content.invoice\r\n            ) {\r\n                const { invoice } = messageInvoice.content;\r\n\r\n                return (\r\n                    <>\r\n                        {`You have just successfully transferred ${Currency.getString(\r\n                            content.total_amount,\r\n                            content.currency\r\n                        )} to `}\r\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\r\n                        {` for ${invoice.title}`}\r\n                    </>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    {`You have just successfully transferred ${Currency.getString(\r\n                        content.total_amount,\r\n                        content.currency\r\n                    )} to `}\r\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\r\n                </>\r\n            );\r\n        }\r\n        case 'messagePaymentSuccessfulBot': {\r\n            return 'Payment successful';\r\n        }\r\n        case 'messagePinMessage': {\r\n            const author = getMessageAuthor(message, openUser);\r\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\r\n            if (!pinnedMessage || !pinnedMessage.content) {\r\n                return (\r\n                    <>\r\n                        {author}\r\n                        {' pinned a message'}\r\n                    </>\r\n                );\r\n            }\r\n\r\n            let pinnedContent = ' pinned a message';\r\n            if (isServiceMessage(pinnedMessage)) {\r\n                pinnedContent = ' pinned a service message';\r\n            } else {\r\n                switch (pinnedMessage.content['@type']) {\r\n                    case 'messageAnimation': {\r\n                        pinnedContent = ' pinned a GIF';\r\n                        break;\r\n                    }\r\n                    case 'messageAudio': {\r\n                        pinnedContent = ' pinned a track';\r\n                        break;\r\n                    }\r\n                    case 'messageCall': {\r\n                        pinnedContent = ' pinned a call';\r\n                        break;\r\n                    }\r\n                    case 'messageContact': {\r\n                        pinnedContent = ' pinned a contact';\r\n                        break;\r\n                    }\r\n                    case 'messageDocument': {\r\n                        pinnedContent = ' pinned a file';\r\n                        break;\r\n                    }\r\n                    case 'messageExpiredPhoto': {\r\n                        pinnedContent = ' pinned a photo';\r\n                        break;\r\n                    }\r\n                    case 'messageExpiredVideo': {\r\n                        pinnedContent = ' pinned a video';\r\n                        break;\r\n                    }\r\n                    case 'messageGame': {\r\n                        pinnedContent = ' pinned a game';\r\n                        break;\r\n                    }\r\n                    case 'messageInvoice': {\r\n                        pinnedContent = ' pinned an invoice';\r\n                        break;\r\n                    }\r\n                    case 'messageLocation': {\r\n                        pinnedContent = ' pinned a map';\r\n                        break;\r\n                    }\r\n                    case 'messagePhoto': {\r\n                        pinnedContent = ' pinned a photo';\r\n                        break;\r\n                    }\r\n                    case 'messagePoll': {\r\n                        pinnedContent = ' pinned a poll';\r\n                        break;\r\n                    }\r\n                    case 'messageSticker': {\r\n                        pinnedContent = ' pinned a sticker';\r\n                        break;\r\n                    }\r\n                    case 'messageText': {\r\n                        const maxLength = 16;\r\n                        const text = pinnedMessage.content.text.text;\r\n                        if (text.length <= maxLength) {\r\n                            pinnedContent = ` pinned «${text}»`;\r\n                        } else {\r\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                    case 'messageUnsupported': {\r\n                        pinnedContent = ' pinned unsupported message';\r\n                        break;\r\n                    }\r\n                    case 'messageVenue': {\r\n                        pinnedContent = ' pinned a venue';\r\n                        break;\r\n                    }\r\n                    case 'messageVideo': {\r\n                        pinnedContent = ' pinned a video';\r\n                        break;\r\n                    }\r\n                    case 'messageVideoNote': {\r\n                        pinnedContent = ' pinned a video message';\r\n                        break;\r\n                    }\r\n                    case 'messageVoiceNote': {\r\n                        pinnedContent = ' pinned a voice message';\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    {author}\r\n                    {pinnedContent}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageScreenshotTaken': {\r\n            if (isOutgoing) {\r\n                return 'You took a screenshot!';\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {' took a screenshot!'}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageSupergroupChatCreate': {\r\n            const { title } = content;\r\n\r\n            if (isChannel) {\r\n                return 'Channel created';\r\n            }\r\n\r\n            if (isOutgoing) {\r\n                return `You created group «${title}»`;\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\r\n                    {` created group «${title}»`}\r\n                </>\r\n            );\r\n        }\r\n        case 'messageUnsupported': {\r\n            return 'Unsupported message';\r\n        }\r\n        case 'messageWebsiteConnected': {\r\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\r\n        }\r\n    }\r\n\r\n    return `[${message.content['@type']}]`;\r\n}\r\n\r\nexport { isServiceMessage, getServiceMessageContent };\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport punycode from './Punycode';\r\n\r\nexport function getHref(url, mail) {\r\n    if (!url) return null;\r\n\r\n    if (mail) return url.startsWith('mailto:') ? url : 'mailto:' + url;\r\n\r\n    // if (url.startsWith('tg://')) return url;\r\n\r\n    return url.startsWith('http') ? url : 'http://' + url;\r\n}\r\n\r\nexport function isUrlSafe(displayText, url) {\r\n    if (displayText && displayText !== url) {\r\n        return false;\r\n    }\r\n\r\n    if (hasRTLOSymbol(url)) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function getDecodedUrl(url, mail) {\r\n    if (!url) return null;\r\n\r\n    const href = getHref(url, mail);\r\n\r\n    try {\r\n        let decodedHref = decodeURI(href);\r\n\r\n        const domain = decodedHref.match(/^https?:\\/\\/([^\\/:?#]+)(?:[\\/:?#]|$)/i)[1];\r\n        decodedHref = decodedHref.replace(domain, punycode.ToUnicode(domain));\r\n\r\n        return decodedHref;\r\n    } catch (error) {\r\n        console.log('SafeLink.getDecodedUrl error ', url, error);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nconst regExpRTLO = /\\u202e/;\r\n\r\nexport function hasRTLOSymbol(url) {\r\n    if (!url) return false;\r\n\r\n    return regExpRTLO.test(url);\r\n}\r\n\r\nconst regExpDomainExplicit = new RegExp(\r\n    '(?:([a-zA-Z]+):\\\\/\\\\/)((?:[A-Za-z' +\r\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\r\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\r\n        '0-9\\\\-\\\\_]+\\\\.){0,10}([A-Za-z' +\r\n        '\\xD1\\x80\\xD1\\x84' +\r\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\r\n);\r\nconst regExpDomain = new RegExp(\r\n    '(?:([a-zA-Z]+):\\\\/\\\\/)?((?:[A-Za-z' +\r\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\r\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\r\n        '0-9\\\\-\\\\_]+\\\\.){1,10}([A-Za-z' +\r\n        '\\xD1\\x80\\xD1\\x84' +\r\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\r\n);\r\nconst regExpProtocol = new RegExp('^([a-zA-Z]+):\\\\/\\\\/');\r\n\r\n// https://github.com/telegramdesktop/tdesktop/blob/4e80d54be130eca76129f2c4995fe685d1014442/Telegram/SourceFiles/base/qthelp_url.cpp#L105\r\nexport function validateUrl(value) {\r\n    // value = punycode.ToASCII(value);\r\n\r\n    const trimmed = value.trim();\r\n    if (!trimmed) {\r\n        return null;\r\n    }\r\n\r\n    const match = trimmed.match(regExpDomainExplicit);\r\n    if (!match) {\r\n        const domainMatch = trimmed.match(regExpDomain);\r\n        if (!domainMatch || domainMatch.index !== 0) {\r\n            return null;\r\n        }\r\n\r\n        return 'http://' + trimmed;\r\n    } else if (match.index !== 0) {\r\n        return null;\r\n    }\r\n\r\n    const protocolMatch = trimmed.match(regExpProtocol);\r\n    return protocolMatch && isGoodProtocol(protocolMatch[0]) ? trimmed : null;\r\n}\r\n\r\nfunction isGoodProtocol(value) {\r\n    return ['http', 'https', 'tg'].some(x => value.toLowerCase().indexOf(x) === 0);\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport DownloadIcon from '../../../Assets/Icons/Download';\r\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\r\nimport PauseIcon from '../../../Assets/Icons/Pause';\r\nimport DocumentTile from '../../Tile/DocumentTile';\r\nimport AudioAction from './AudioAction';\r\nimport VoiceNoteSlider from './VoiceNoteSlider';\r\nimport { getAudioShortTitle, getAudioSubtitle, getAudioTitle } from '../../../Utils/Media';\r\nimport PlayerStore from '../../../Stores/PlayerStore';\r\nimport './Audio.css';\r\n\r\nclass Audio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = props;\r\n\r\n        const { time, message, playing } = PlayerStore;\r\n        const active = message && message.chat_id === chatId && message.id === messageId;\r\n\r\n        this.state = {\r\n            active: active,\r\n            playing: active ? playing : false,\r\n            currentTime: active && time ? time.currentTime : 0,\r\n            duration: active && time ? time.duration : 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { active, playing, currentTime, duration } = this.state;\r\n\r\n        if (nextState.active !== active) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playing !== playing) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentTime !== currentTime) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.duration !== duration) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\r\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\r\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\r\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\r\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    onClientUpdateMediaEnd = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({\r\n                active: false,\r\n                playing: false,\r\n                currentTime: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlay = update => {\r\n        const { chatId, messageId, playing } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ playing: true });\r\n        } else {\r\n            this.setState({ playing: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPause = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ playing: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (!this.state.active) {\r\n                this.setState({\r\n                    active: true,\r\n                    currentTime: 0,\r\n                    playing: true\r\n                });\r\n            }\r\n        } else if (this.state.active) {\r\n            this.setState({\r\n                active: false,\r\n                currentTime: 0,\r\n                playing: false\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, audio, openMedia, title, meta, caption } = this.props;\r\n        const { playing, active } = this.state;\r\n        if (!audio) return null;\r\n\r\n        const { album_cover_thumbnail, duration, audio: file } = audio;\r\n\r\n        const audioTitle = getAudioSubtitle(audio);\r\n        const audioSubtitle = getAudioShortTitle(audio);\r\n\r\n        return (\r\n            <div className={classNames('audio', 'document', { 'media-title': title })}>\r\n                <DocumentTile\r\n                    thumbnail={album_cover_thumbnail}\r\n                    file={file}\r\n                    openMedia={openMedia}\r\n                    icon={<DownloadIcon />}\r\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\r\n                />\r\n                <div className='audio-content'>\r\n                    <div className='document-title'>\r\n                        <a className='document-name' onClick={openMedia} title={audioTitle}>\r\n                            {audioTitle}\r\n                        </a>\r\n                    </div>\r\n                    <div className='audio-action' style={{ opacity: active ? 0 : 1 }}>\r\n                        {audioSubtitle}\r\n                    </div>\r\n                    <VoiceNoteSlider\r\n                        className='audio-slider'\r\n                        chatId={chatId}\r\n                        messageId={messageId}\r\n                        duration={duration}\r\n                        style={{ opacity: active ? 1 : 0 }}\r\n                    />\r\n                    <AudioAction\r\n                        chatId={chatId}\r\n                        messageId={messageId}\r\n                        duration={duration}\r\n                        file={file}\r\n                        meta={caption ? null : meta}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAudio.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    audio: PropTypes.object,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default Audio;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path\r\n        transform='translate(-15.000000, -15.000000)'\r\n        d='M23,16 C23.5522847,16 24,16.4477153 24,17 L24,37 C24,37.5522847 23.5522847,38 23,38 L18,38 C17.4477153,38 17,37.5522847 17,37 L17,17 C17,16.4477153 17.4477153,16 18,16 L23,16 Z M36,16 C36.5522847,16 37,16.4477153 37,17 L37,37 C37,37.5522847 36.5522847,38 36,38 L31,38 C30.4477153,38 30,37.5522847 30,37 L30,17 C30,16.4477153 30.4477153,16 31,16 L36,16 Z'\r\n    />,\r\n    'Pause'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport FileProgress from '../../Components/Viewer/FileProgress';\r\nimport { getSrc } from '../../Utils/File';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './DocumentTile.css';\r\n\r\nclass DocumentTile extends React.Component {\r\n    state = {\r\n        loaded: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateDocumentThumbnailBlob = update => {\r\n        const { thumbnail } = this.props;\r\n        if (!thumbnail) return;\r\n\r\n        const file = thumbnail.photo;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleLoad = () => {\r\n        this.setState({ loaded: true });\r\n    };\r\n\r\n    render() {\r\n        const { minithumbnail, thumbnail, file, icon, completeIcon, openMedia } = this.props;\r\n        const { loaded } = this.state;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\r\n        const tileLoaded = thumbnailSrc && loaded;\r\n        const src = thumbnailSrc || miniSrc;\r\n\r\n        return (\r\n            <div\r\n                className={classNames('document-tile', { 'document-tile-image': !src }, { pointer: openMedia })}\r\n                onClick={openMedia}>\r\n                {file && (\r\n                    <FileProgress\r\n                        file={file}\r\n                        thumbnailSrc={src}\r\n                        download\r\n                        upload\r\n                        cancelButton\r\n                        zIndex={1}\r\n                        icon={icon}\r\n                        completeIcon={typeof completeIcon === 'function' ? completeIcon(src) : completeIcon}\r\n                    />\r\n                )}\r\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\r\n                {!tileLoaded && <div className='document-tile-background' />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDocumentTile.propTypes = {\r\n    minithumbnail: PropTypes.object,\r\n    thumbnail: PropTypes.object,\r\n    file: PropTypes.object,\r\n    openMedia: PropTypes.func,\r\n    icon: PropTypes.node,\r\n    completeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\r\n};\r\n\r\nexport default DocumentTile;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\r\nimport { getDurationString } from '../../../Utils/Common';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport PlayerStore from '../../../Stores/PlayerStore';\r\nimport './AudioAction.css';\r\n\r\nclass AudioAction extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { message, time } = PlayerStore;\r\n        const { chatId, messageId, duration, file } = this.props;\r\n\r\n        const active = message && message.chat_id === chatId && message.id === messageId;\r\n        const currentTime = active && time ? time.currentTime : 0;\r\n        const audioDuration = active && time && time.duration ? time.duration : duration;\r\n        const currentFile = FileStore.get(file.id) || file;\r\n\r\n        this.state = {\r\n            active: active,\r\n            currentTime: currentTime,\r\n            seekProgress: 0,\r\n            duration: audioDuration,\r\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\r\n\r\n            prevFile: null,\r\n            file: currentFile\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { theme } = this.props;\r\n        const { active, timeString, file, prevFile } = this.state;\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.timeString !== timeString) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.active !== active) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.file !== file) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.prevFile !== prevFile) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('updateFile', this.onUpdateFile);\r\n\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n        PlayerStore.on('clientUpdateMediaSeeking', this.onClientUpdateMediaSeeking);\r\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('updateFile', this.onUpdateFile);\r\n\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n        PlayerStore.off('clientUpdateMediaSeeking', this.onClientUpdateMediaSeeking);\r\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\r\n    }\r\n\r\n    onClientUpdateMediaSeeking = update => {\r\n        const { chatId, messageId, duration } = this.props;\r\n        const { duration: playerDuration, active, file } = this.state;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const d = playerDuration || duration;\r\n\r\n            this.setState({\r\n                seekProgress: update.value,\r\n                seeking: true,\r\n                timeString: this.getTimeString(d * update.value, d, active, file)\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaSeek = update => {\r\n        const { chatId, messageId, duration } = this.props;\r\n        const { duration: playerDuration, active, file } = this.state;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const d = playerDuration || duration;\r\n\r\n            this.setState({\r\n                seekProgress: 0,\r\n                seeking: false,\r\n                timeString: this.getTimeString(d * update.value, d, active, file)\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaEnd = update => {\r\n        const { chatId, messageId, duration } = this.props;\r\n        const { active, file } = this.state;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\r\n            this.setState({\r\n                active: false,\r\n                currentTime: 0,\r\n                timeString: this.getTimeString(0, playerDuration, false, file)\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaTime = update => {\r\n        const { chatId, messageId, duration } = this.props;\r\n        const { active, file, seekProgress, seeking } = this.state;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\r\n            const time = seeking ? seekProgress * playerDuration : update.currentTime;\r\n\r\n            this.setState({\r\n                currentTime: update.currentTime,\r\n                duration: playerDuration,\r\n                timeString: this.getTimeString(time, playerDuration, active, file)\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { chatId, messageId, duration } = this.props;\r\n        const { active, currentTime, file } = this.state;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({\r\n                active: true,\r\n                currentTime: active ? currentTime : 0,\r\n                timeString: active ? this.state.timeString : this.getTimeString(0, duration, true, file)\r\n            });\r\n        } else if (active) {\r\n            this.setState({\r\n                active: false,\r\n                currentTime: 0,\r\n                timeString: this.getTimeString(0, duration, false, file)\r\n            });\r\n        }\r\n    };\r\n\r\n    onUpdateFile = update => {\r\n        const currentFile = this.state.file;\r\n        const nextFile = update.file;\r\n\r\n        if (currentFile && currentFile.id === nextFile.id) {\r\n            this.setState({ file: nextFile, prevFile: currentFile });\r\n        }\r\n    };\r\n\r\n    getTimeString = (currentTime, duration, active, file) => {\r\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\r\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\r\n\r\n        const durationString = getDurationString(Math.floor(duration || 0));\r\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\r\n\r\n        return active && isDownloadingCompleted ? `${currentTimeString} / ${durationString}` : `${durationString}`;\r\n    };\r\n\r\n    render() {\r\n        const { title, meta } = this.props;\r\n        const { active, file, timeString } = this.state;\r\n        if (!file) return null;\r\n\r\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\r\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\r\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\r\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\r\n\r\n        const size = getFileSize(file);\r\n        let progressSize = null;\r\n        if (isDownloadingActive) {\r\n            progressSize = getDownloadedSize(file);\r\n        } else if (isUploadingActive) {\r\n            progressSize = getUploadedSize(file);\r\n        }\r\n        const sizeString = progressSize ? `${progressSize} / ${size}` : `${size}`;\r\n        const strings = [];\r\n        if (!isDownloadingCompleted) {\r\n            strings.push(sizeString);\r\n        }\r\n        if (!isDownloadingActive) {\r\n            strings.push(timeString);\r\n        }\r\n\r\n        return (\r\n            <div className='audio-action'>\r\n                {!active && <span>{title}</span>}\r\n                {<span>{strings.join(', ')}</span>}\r\n                {meta}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAudioAction.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    duration: PropTypes.number.isRequired,\r\n    file: PropTypes.object.isRequired,\r\n\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default AudioAction;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport { getLocationId } from '../../../Utils/Message';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './Location.css';\r\n\r\nclass Location extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\r\n    }\r\n\r\n    onClientUpdateLocationBlob = update => {\r\n        const { fileId } = update;\r\n        const { location, width, height, zoom, scale } = this.props;\r\n\r\n        const locationId = getLocationId(location, width, height, zoom, scale);\r\n        const file = FileStore.getLocationFile(locationId);\r\n        if (!file) return;\r\n\r\n        if (file.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { location, width, height, zoom, scale, type, style, title, caption } = this.props;\r\n        if (!location) return null;\r\n\r\n        const locationId = getLocationId(location, width, height, zoom, scale);\r\n        const file = FileStore.getLocationFile(locationId);\r\n        const src = getSrc(file);\r\n\r\n        const { longitude, latitude } = location;\r\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\r\n\r\n        const locationStyle = {\r\n            width,\r\n            height,\r\n            ...style\r\n        };\r\n\r\n        return (\r\n            <div\r\n                className={classNames('location', {\r\n                    'location-message': type === 'message',\r\n                    'location-venue': type === 'venue',\r\n                    'location-title': title,\r\n                    'location-caption': caption\r\n                })}\r\n                style={locationStyle}>\r\n                <a href={source} target='_blank' rel='noopener noreferrer' onClick={this.handleClick}>\r\n                    <div className='location-wrapper'>\r\n                        <img className='location-image' draggable={false} alt={source} src={src} />\r\n                        <div className='location-icon'>\r\n                            <RoomIcon fontSize='large' color='primary' />\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLocation.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    location: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func,\r\n\r\n    width: PropTypes.number,\r\n    height: PropTypes.number,\r\n    zoom: PropTypes.number,\r\n    scale: PropTypes.number\r\n};\r\n\r\nLocation.defaultProps = {\r\n    width: LOCATION_WIDTH,\r\n    height: LOCATION_HEIGHT,\r\n    zoom: LOCATION_ZOOM,\r\n    scale: LOCATION_SCALE\r\n};\r\n\r\nexport default Location;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\r\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\r\nimport { getFileSize, getSrc } from '../../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './Video.css';\r\n\r\nclass Video extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateVideoThumbnailBlob = update => {\r\n        const { thumbnail } = this.props.video;\r\n        const { fileId } = update;\r\n\r\n        if (!thumbnail) return;\r\n\r\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { displaySize, openMedia, title, caption, type, style } = this.props;\r\n        const { minithumbnail, thumbnail, video, width, height, duration } = this.props.video;\r\n\r\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize);\r\n        if (!fitPhotoSize) return null;\r\n\r\n        const videoStyle = {\r\n            width: fitPhotoSize.width,\r\n            height: fitPhotoSize.height,\r\n            ...style\r\n        };\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\r\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\r\n\r\n        return (\r\n            <div\r\n                className={classNames('video', {\r\n                    'video-big': type === 'message',\r\n                    'video-title': title,\r\n                    'video-caption': caption,\r\n                    pointer: openMedia\r\n                })}\r\n                style={videoStyle}\r\n                onClick={openMedia}>\r\n                <img\r\n                    className={classNames('video-preview', {\r\n                        'media-blurred': isBlurred,\r\n                        'media-mini-blurred': !thumbnailSrc && isBlurred\r\n                    })}\r\n                    src={thumbnailSrc || miniSrc}\r\n                    alt=''\r\n                />\r\n                <div className='video-play'>\r\n                    <PlayArrowIcon />\r\n                </div>\r\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nVideo.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    video: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func,\r\n    size: PropTypes.number,\r\n    displaySize: PropTypes.number\r\n};\r\n\r\nVideo.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    displaySize: PHOTO_DISPLAY_SIZE\r\n};\r\n\r\nexport default Video;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { isContentOpened } from '../../../Utils/Message';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\n\r\nclass MediaStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        this.state = {\r\n            isOpened: isContentOpened(chatId, messageId)\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateMessageContentOpened', this.onUpdateMessageContentOpened);\r\n    }\r\n\r\n    onUpdateMessageContentOpened = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chat_id && messageId === update.message_id) {\r\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { icon, openedIcon } = this.props;\r\n        const { isOpened } = this.state;\r\n\r\n        return isOpened ? openedIcon : icon;\r\n    }\r\n}\r\n\r\nMediaStatus.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    icon: PropTypes.node,\r\n    openedIcon: PropTypes.node\r\n};\r\n\r\nMediaStatus.defaultProps = {\r\n    icon: null,\r\n    openedIcon: null\r\n};\r\n\r\nexport default MediaStatus;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickerPreview.css';\r\n\r\nclass StickerPreview extends React.Component {\r\n    state = {\r\n        emoji: null,\r\n        prevPropsSticker: null\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { sticker } = props;\r\n        const { prevPropsSticker } = state;\r\n\r\n        if (sticker && prevPropsSticker) {\r\n            return {\r\n                prevPropsSticker: sticker,\r\n                emoji: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { sticker } = this.props;\r\n\r\n        if (sticker && sticker !== prevProps.sticker) {\r\n            this.loadStickerEmojis(sticker);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { sticker } = this.props;\r\n\r\n        if (sticker) {\r\n            this.loadStickerEmojis(sticker);\r\n        }\r\n    }\r\n\r\n    loadStickerEmojis = sticker => {\r\n        const { sticker: file } = sticker;\r\n        const { id } = file;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getStickerEmojis',\r\n            sticker: { '@type': 'inputFileId', id }\r\n        }).then(result => {\r\n            if (this.props.sticker === sticker) {\r\n                this.setState({\r\n                    emoji: result.emojis.join(' ')\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { sticker } = this.props;\r\n        const { emoji } = this.state;\r\n\r\n        if (!sticker) return null;\r\n\r\n        return (\r\n            <div className='sticker-preview'>\r\n                <div className='sticker-preview-emoji'>{emoji}</div>\r\n                <Sticker\r\n                    sticker={sticker}\r\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\r\n                    source={StickerSourceEnum.PREVIEW}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStickerPreview.propTypes = {\r\n    sticker: PropTypes.object\r\n};\r\n\r\nexport default StickerPreview;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(3.000000, 0.600000)'>\r\n        <path\r\n            d='M9,0 C13.9705627,-9.13077564e-16 18,4.02943725 18,9 L18,23 L18,23 L15,20 L12,23 L9,20 L6,23 L3,20 L0,23 L0,9 C-6.08718376e-16,4.02943725 4.02943725,9.13077564e-16 9,0 Z'\r\n            stroke='currentColor'\r\n            strokeWidth='1.5'\r\n            strokeLinejoin='round'\r\n            fill='none'\r\n        />\r\n        <circle cx='5' cy='9' r='2' />\r\n        <circle cx='13' cy='9' r='2' />\r\n    </g>,\r\n    'DeletedAccount'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nexport function setPollAnswer(chatId, messageId, optionIds) {\r\n    TdLibController.send({\r\n        '@type': 'setPollAnswer',\r\n        chat_id: chatId,\r\n        message_id: messageId,\r\n        option_ids: optionIds\r\n    });\r\n}\r\n\r\nexport function cancelPollAnswer(chatId, messageId) {\r\n    TdLibController.send({\r\n        '@type': 'setPollAnswer',\r\n        chat_id: chatId,\r\n        message_id: messageId,\r\n        option_ids: []\r\n    });\r\n}\r\n\r\nexport function stopPoll(chatId, messageId) {\r\n    TdLibController.send({\r\n        '@type': 'stopPoll',\r\n        chat_id: chatId,\r\n        message_id: messageId,\r\n        reply_markup: null\r\n    });\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './UserStatus.css';\r\n\r\nclass UserStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { userId } = this.props;\r\n        const user = UserStore.get(userId);\r\n\r\n        this.state = {\r\n            prevUserId: userId,\r\n            status: getUserStatus(user),\r\n            isAccent: isUserOnline(user)\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.userId !== state.prevUserId) {\r\n            const { userId } = props;\r\n            const user = UserStore.get(userId);\r\n\r\n            return {\r\n                prevUserId: userId,\r\n                status: getUserStatus(user),\r\n                isAccent: isUserOnline(user)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { userId } = this.props;\r\n        const { status, isAccent } = this.state;\r\n\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.status !== status) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isAccent !== isAccent) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n    }\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { userId } = this.props;\r\n        const user = UserStore.get(userId);\r\n\r\n        if (userId === update.user_id) {\r\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { status, isAccent } = this.state;\r\n\r\n        return (\r\n            <div className={classNames('user-content', 'dialog-content', { 'user-status-accent': isAccent })}>\r\n                {status}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserStatus;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport EventEmitter from './EventEmitter';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport { isValidPoll } from '../Utils/Poll';\r\n\r\nclass PollStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.reset();\r\n\r\n        this.addTdLibListener();\r\n    }\r\n\r\n    reset = () => {\r\n        this.poll = null;\r\n    };\r\n\r\n    onUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'updateAuthorizationState': {\r\n                const { authorization_state } = update;\r\n                if (!authorization_state) break;\r\n\r\n                switch (authorization_state['@type']) {\r\n                    case 'authorizationStateClosed': {\r\n                        this.reset();\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onClientUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'clientUpdateClosePollResults': {\r\n                this.emit('clientUpdateClosePollResults', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateNewPoll': {\r\n                this.set({\r\n                    type: {\r\n                        '@type': 'pollTypeRegular',\r\n                        allow_multiple_answers: false\r\n                    },\r\n                    id: Date.now(),\r\n                    question: '',\r\n                    options: [],\r\n                    is_anonymous: true\r\n                });\r\n\r\n                this.emit('clientUpdateNewPoll', update);\r\n                break;\r\n            }\r\n            case 'clientUpdatePollChangeAnonymous': {\r\n                const { poll } = this;\r\n                const isAnonymous = poll && poll.is_anonymous;\r\n\r\n                this.assign(this.poll, { is_anonymous: !isAnonymous });\r\n\r\n                this.emit('clientUpdatePollChangeAnonymous', update);\r\n                break;\r\n            }\r\n            case 'clientUpdatePollChangeAllowMultipleAnswers': {\r\n                const { poll } = this;\r\n                const { type } = poll;\r\n                if (type['@type'] === 'pollTypeRegular') {\r\n                    const allowMultipleAnswers = poll && poll.type.allow_multiple_answers;\r\n\r\n                    const newType = { ...type, allow_multiple_answers: !allowMultipleAnswers };\r\n\r\n                    this.assign(this.poll, { type: newType });\r\n                }\r\n\r\n                this.emit('clientUpdatePollChangeAllowMultipleAnswers', update);\r\n                break;\r\n            }\r\n            case 'clientUpdatePollChangeType': {\r\n                const { poll } = this;\r\n                const { type } = poll;\r\n                if (type['@type'] === 'pollTypeRegular') {\r\n                    const newType = { '@type': 'pollTypeQuiz', correct_option_id: -1 };\r\n\r\n                    this.assign(this.poll, { type: newType });\r\n                } else {\r\n                    const newType = { '@type': 'pollTypeRegular', allow_multiple_answers: false };\r\n\r\n                    this.assign(this.poll, { type: newType });\r\n                }\r\n\r\n                this.emit('clientUpdatePollChangeType', update);\r\n                break;\r\n            }\r\n            case 'clientUpdatePollChooseOption': {\r\n                const { id } = update;\r\n                const { options } = this.poll;\r\n\r\n                this.assign(this.poll, {\r\n                    options: options.map(x => (x.id === id ? { ...x, is_chosen: true } : { ...x, is_chosen: false }))\r\n                });\r\n\r\n                this.emit('clientUpdatePollChooseOption', update);\r\n                break;\r\n            }\r\n            case 'clientUpdatePollQuestion': {\r\n                const { question } = update;\r\n\r\n                this.assign(this.poll, { question });\r\n\r\n                this.emit('clientUpdatePollQuestion', update);\r\n                break;\r\n            }\r\n            case 'clientUpdatePollOption': {\r\n                const { id, text } = update;\r\n                const { options } = this.poll;\r\n\r\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\r\n\r\n                this.emit('clientUpdatePollOption', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateNewPollOption': {\r\n                const { option } = update;\r\n                const { options } = this.poll;\r\n\r\n                this.assign(this.poll, { options: [...options, option] });\r\n                this.emit('clientUpdateNewPollOption', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateDeletePollOption': {\r\n                const { id } = update;\r\n                const { options } = this.poll;\r\n\r\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\r\n                this.emit('clientUpdateDeletePollOption', update);\r\n                break;\r\n            }\r\n            case 'clientUpdateDeletePoll': {\r\n                this.set(null);\r\n\r\n                this.emit('clientUpdateDeletePoll', update);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.on('update', this.onUpdate);\r\n        TdLibController.on('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.off('update', this.onUpdate);\r\n        TdLibController.off('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    assign(source1, source2) {\r\n        this.set(Object.assign({}, source1, source2));\r\n    }\r\n\r\n    set(poll) {\r\n        this.poll = poll;\r\n    }\r\n\r\n    getInputMessagePoll() {\r\n        if (!this.poll) return null;\r\n        if (!isValidPoll(this.poll)) return null;\r\n        const { question, options, type, is_anonymous } = this.poll;\r\n\r\n        if (type['@type'] === 'pollTypeQuiz') {\r\n            type.correct_option_id = options.findIndex(x => x.is_chosen);\r\n\r\n            if (type.correct_option_id === -1) {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return {\r\n            '@type': 'inputMessagePoll',\r\n            question,\r\n            options: options.filter(x => Boolean(x.text)).map(x => x.text),\r\n            is_anonymous,\r\n            type,\r\n            is_closed: false\r\n        };\r\n    }\r\n}\r\n\r\nconst store = new PollStore();\r\nwindow.poll = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\r\n\r\nexport function isValidPoll(poll) {\r\n    if (!poll) return false;\r\n\r\n    const { question, options } = poll;\r\n    if (!isValidQuestion(question)) return false;\r\n\r\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\r\n    if (noneEmptyOptions.length <= 1) return false;\r\n\r\n    return noneEmptyOptions.every(isValidOption);\r\n}\r\n\r\nfunction isValidQuestion(question) {\r\n    if (!question) return false;\r\n\r\n    return question.length <= POLL_QUESTION_LENGTH;\r\n}\r\n\r\nfunction isValidOption(option) {\r\n    if (!option) return false;\r\n    if (!option.text) return false;\r\n\r\n    return option.text.length <= POLL_OPTION_LENGTH;\r\n}\r\n\r\nexport function hasPollData(poll) {\r\n    if (!poll) return false;\r\n\r\n    const { question, options } = poll;\r\n    if (question) return true;\r\n\r\n    return options.some(x => Boolean(x.text));\r\n}\r\n","//https://stackoverflow.com/questions/183485/converting-punycode-with-dash-character-to-unicode\r\n//Javascript Punycode converter derived from example in RFC3492.\r\n//This implementation is created by some@domain.name and released into public domain\r\nfunction Punycode() {\r\n    // This object converts to and from puny-code used in IDN\r\n    //\r\n    // punycode.ToASCII ( domain )\r\n    //\r\n    // Returns a puny coded representation of \"domain\".\r\n    // It only converts the part of the domain name that\r\n    // has non ASCII characters. I.e. it dosent matter if\r\n    // you call it with a domain that already is in ASCII.\r\n    //\r\n    // punycode.ToUnicode (domain)\r\n    //\r\n    // Converts a puny-coded domain name to unicode.\r\n    // It only converts the puny-coded parts of the domain name.\r\n    // I.e. it dosent matter if you call it on a string\r\n    // that already has been converted to unicode.\r\n    //\r\n    //\r\n    this.utf16 = {\r\n        // The utf16-class is necessary to convert from javascripts internal character representation to unicode and back.\r\n        decode: function(input) {\r\n            var output = [],\r\n                i = 0,\r\n                len = input.length,\r\n                value,\r\n                extra;\r\n            while (i < len) {\r\n                value = input.charCodeAt(i++);\r\n                if ((value & 0xf800) === 0xd800) {\r\n                    extra = input.charCodeAt(i++);\r\n                    if ((value & 0xfc00) !== 0xd800 || (extra & 0xfc00) !== 0xdc00) {\r\n                        throw new RangeError('UTF-16(decode): Illegal UTF-16 sequence');\r\n                    }\r\n                    value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\r\n                }\r\n                output.push(value);\r\n            }\r\n            return output;\r\n        },\r\n        encode: function(input) {\r\n            var output = [],\r\n                i = 0,\r\n                len = input.length,\r\n                value;\r\n            while (i < len) {\r\n                value = input[i++];\r\n                if ((value & 0xf800) === 0xd800) {\r\n                    throw new RangeError('UTF-16(encode): Illegal UTF-16 value');\r\n                }\r\n                if (value > 0xffff) {\r\n                    value -= 0x10000;\r\n                    output.push(String.fromCharCode(((value >>> 10) & 0x3ff) | 0xd800));\r\n                    value = 0xdc00 | (value & 0x3ff);\r\n                }\r\n                output.push(String.fromCharCode(value));\r\n            }\r\n            return output.join('');\r\n        }\r\n    };\r\n\r\n    //Default parameters\r\n    var initial_n = 0x80;\r\n    var initial_bias = 72;\r\n    var delimiter = '\\x2D';\r\n    var base = 36;\r\n    var damp = 700;\r\n    var tmin = 1;\r\n    var tmax = 26;\r\n    var skew = 38;\r\n    var maxint = 0x7fffffff;\r\n\r\n    // decode_digit(cp) returns the numeric value of a basic code\r\n    // point (for use in representing integers) in the range 0 to\r\n    // base-1, or base if cp is does not represent a value.\r\n\r\n    function decode_digit(cp) {\r\n        return cp - 48 < 10 ? cp - 22 : cp - 65 < 26 ? cp - 65 : cp - 97 < 26 ? cp - 97 : base;\r\n    }\r\n\r\n    // encode_digit(d,flag) returns the basic code point whose value\r\n    // (when used for representing integers) is d, which needs to be in\r\n    // the range 0 to base-1. The lowercase form is used unless flag is\r\n    // nonzero, in which case the uppercase form is used. The behavior\r\n    // is undefined if flag is nonzero and digit d has no uppercase form.\r\n\r\n    function encode_digit(d, flag) {\r\n        return d + 22 + 75 * (d < 26) - ((flag != 0) << 5);\r\n        //  0..25 map to ASCII a..z or A..Z\r\n        // 26..35 map to ASCII 0..9\r\n    }\r\n    //** Bias adaptation function **\r\n    function adapt(delta, numpoints, firsttime) {\r\n        var k;\r\n        delta = firsttime ? Math.floor(delta / damp) : delta >> 1;\r\n        delta += Math.floor(delta / numpoints);\r\n\r\n        for (k = 0; delta > ((base - tmin) * tmax) >> 1; k += base) {\r\n            delta = Math.floor(delta / (base - tmin));\r\n        }\r\n        return Math.floor(k + ((base - tmin + 1) * delta) / (delta + skew));\r\n    }\r\n\r\n    // encode_basic(bcp,flag) forces a basic code point to lowercase if flag is zero,\r\n    // uppercase if flag is nonzero, and returns the resulting code point.\r\n    // The code point is unchanged if it is caseless.\r\n    // The behavior is undefined if bcp is not a basic code point.\r\n\r\n    function encode_basic(bcp, flag) {\r\n        bcp -= (bcp - 97 < 26) << 5;\r\n        return bcp + ((!flag && bcp - 65 < 26) << 5);\r\n    }\r\n\r\n    // Main decode\r\n    this.decode = function(input, preserveCase) {\r\n        // Dont use utf16\r\n        var output = [];\r\n        var case_flags = [];\r\n        var input_length = input.length;\r\n\r\n        var n, out, i, bias, basic, j, ic, oldi, w, k, digit, t, len;\r\n\r\n        // Initialize the state:\r\n\r\n        n = initial_n;\r\n        i = 0;\r\n        bias = initial_bias;\r\n\r\n        // Handle the basic code points: Let basic be the number of input code\r\n        // points before the last delimiter, or 0 if there is none, then\r\n        // copy the first basic code points to the output.\r\n\r\n        basic = input.lastIndexOf(delimiter);\r\n        if (basic < 0) basic = 0;\r\n\r\n        for (j = 0; j < basic; ++j) {\r\n            if (preserveCase) case_flags[output.length] = input.charCodeAt(j) - 65 < 26;\r\n            if (input.charCodeAt(j) >= 0x80) {\r\n                throw new RangeError('Illegal input >= 0x80');\r\n            }\r\n            output.push(input.charCodeAt(j));\r\n        }\r\n\r\n        // Main decoding loop: Start just after the last delimiter if any\r\n        // basic code points were copied; start at the beginning otherwise.\r\n\r\n        for (ic = basic > 0 ? basic + 1 : 0; ic < input_length; ) {\r\n            // ic is the index of the next character to be consumed,\r\n\r\n            // Decode a generalized variable-length integer into delta,\r\n            // which gets added to i. The overflow checking is easier\r\n            // if we increase i as we go, then subtract off its starting\r\n            // value at the end to obtain delta.\r\n            for (oldi = i, w = 1, k = base; ; k += base) {\r\n                if (ic >= input_length) {\r\n                    throw RangeError('punycode_bad_input(1)');\r\n                }\r\n                digit = decode_digit(input.charCodeAt(ic++));\r\n\r\n                if (digit >= base) {\r\n                    throw RangeError('punycode_bad_input(2)');\r\n                }\r\n                if (digit > Math.floor((maxint - i) / w)) {\r\n                    throw RangeError('punycode_overflow(1)');\r\n                }\r\n                i += digit * w;\r\n                t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\r\n                if (digit < t) {\r\n                    break;\r\n                }\r\n                if (w > Math.floor(maxint / (base - t))) {\r\n                    throw RangeError('punycode_overflow(2)');\r\n                }\r\n                w *= base - t;\r\n            }\r\n\r\n            out = output.length + 1;\r\n            bias = adapt(i - oldi, out, oldi === 0);\r\n\r\n            // i was supposed to wrap around from out to 0,\r\n            // incrementing n each time, so we'll fix that now:\r\n            if (Math.floor(i / out) > maxint - n) {\r\n                throw RangeError('punycode_overflow(3)');\r\n            }\r\n            n += Math.floor(i / out);\r\n            i %= out;\r\n\r\n            // Insert n at position i of the output:\r\n            // Case of last character determines uppercase flag:\r\n            if (preserveCase) {\r\n                case_flags.splice(i, 0, input.charCodeAt(ic - 1) - 65 < 26);\r\n            }\r\n\r\n            output.splice(i, 0, n);\r\n            i++;\r\n        }\r\n        if (preserveCase) {\r\n            for (i = 0, len = output.length; i < len; i++) {\r\n                if (case_flags[i]) {\r\n                    output[i] = String.fromCharCode(output[i])\r\n                        .toUpperCase()\r\n                        .charCodeAt(0);\r\n                }\r\n            }\r\n        }\r\n        return this.utf16.encode(output);\r\n    };\r\n\r\n    //** Main encode function **\r\n\r\n    this.encode = function(input, preserveCase) {\r\n        //** Bias adaptation function **\r\n\r\n        var n, delta, h, b, bias, j, m, q, k, t, ijv, case_flags;\r\n\r\n        if (preserveCase) {\r\n            // Preserve case, step1 of 2: Get a list of the unaltered string\r\n            case_flags = this.utf16.decode(input);\r\n        }\r\n        // Converts the input in UTF-16 to Unicode\r\n        input = this.utf16.decode(input.toLowerCase());\r\n\r\n        var input_length = input.length; // Cache the length\r\n\r\n        if (preserveCase) {\r\n            // Preserve case, step2 of 2: Modify the list to true/false\r\n            for (j = 0; j < input_length; j++) {\r\n                case_flags[j] = input[j] != case_flags[j];\r\n            }\r\n        }\r\n\r\n        var output = [];\r\n\r\n        // Initialize the state:\r\n        n = initial_n;\r\n        delta = 0;\r\n        bias = initial_bias;\r\n\r\n        // Handle the basic code points:\r\n        for (j = 0; j < input_length; ++j) {\r\n            if (input[j] < 0x80) {\r\n                output.push(String.fromCharCode(case_flags ? encode_basic(input[j], case_flags[j]) : input[j]));\r\n            }\r\n        }\r\n\r\n        h = b = output.length;\r\n\r\n        // h is the number of code points that have been handled, b is the\r\n        // number of basic code points\r\n\r\n        if (b > 0) output.push(delimiter);\r\n\r\n        // Main encoding loop:\r\n        //\r\n        while (h < input_length) {\r\n            // All non-basic code points < n have been\r\n            // handled already. Find the next larger one:\r\n\r\n            for (m = maxint, j = 0; j < input_length; ++j) {\r\n                ijv = input[j];\r\n                if (ijv >= n && ijv < m) m = ijv;\r\n            }\r\n\r\n            // Increase delta enough to advance the decoder's\r\n            // <n,i> state to <m,0>, but guard against overflow:\r\n\r\n            if (m - n > Math.floor((maxint - delta) / (h + 1))) {\r\n                throw RangeError('punycode_overflow (1)');\r\n            }\r\n            delta += (m - n) * (h + 1);\r\n            n = m;\r\n\r\n            for (j = 0; j < input_length; ++j) {\r\n                ijv = input[j];\r\n\r\n                if (ijv < n) {\r\n                    if (++delta > maxint) return Error('punycode_overflow(2)');\r\n                }\r\n\r\n                if (ijv == n) {\r\n                    // Represent delta as a generalized variable-length integer:\r\n                    for (q = delta, k = base; ; k += base) {\r\n                        t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\r\n                        if (q < t) break;\r\n                        output.push(String.fromCharCode(encode_digit(t + ((q - t) % (base - t)), 0)));\r\n                        q = Math.floor((q - t) / (base - t));\r\n                    }\r\n                    output.push(String.fromCharCode(encode_digit(q, preserveCase && case_flags[j] ? 1 : 0)));\r\n                    bias = adapt(delta, h + 1, h == b);\r\n                    delta = 0;\r\n                    ++h;\r\n                }\r\n            }\r\n\r\n            ++delta;\r\n            ++n;\r\n        }\r\n        return output.join('');\r\n    };\r\n\r\n    this.ToASCII = function(domain) {\r\n        var domain_array = domain.split('.');\r\n        var out = [];\r\n        for (var i = 0; i < domain_array.length; ++i) {\r\n            var s = domain_array[i];\r\n            out.push(s.match(/[^A-Za-z0-9-]/) ? 'xn--' + punycode.encode(s) : s);\r\n        }\r\n        return out.join('.');\r\n    };\r\n    this.ToUnicode = function(domain) {\r\n        var domain_array = domain.split('.');\r\n        var out = [];\r\n        for (var i = 0; i < domain_array.length; ++i) {\r\n            var s = domain_array[i];\r\n            out.push(s.match(/^xn--/) ? punycode.decode(s.slice(4)) : s);\r\n        }\r\n        return out.join('.');\r\n    };\r\n}\r\n\r\nconst punycode = new Punycode();\r\nexport default punycode;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\r\nimport PlayerStore from '../../../Stores/PlayerStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './VoiceNoteSlider.css';\r\n\r\nclass VoiceNoteSlider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { message, time } = PlayerStore;\r\n        const { chatId, messageId, duration } = this.props;\r\n\r\n        const active = message && message.chat_id === chatId && message.id === messageId;\r\n        const currentTime = active && time ? time.currentTime : 0;\r\n        const audioDuration = active && time && time.duration ? time.duration : duration;\r\n\r\n        this.state = {\r\n            active: active,\r\n            currentTime: currentTime,\r\n            duration: audioDuration,\r\n            value: this.getValue(currentTime, audioDuration, active)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { active, value } = this.state;\r\n\r\n        if (nextState.value !== value) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.active !== active) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    reset = () => {\r\n        const { duration } = this.props;\r\n        const { value } = this.state;\r\n\r\n        if (value === 1) {\r\n            this.setState({\r\n                active: false,\r\n                currentTime: 0\r\n            });\r\n\r\n            setTimeout(() => {\r\n                const { currentTime } = this.state;\r\n                if (!currentTime) {\r\n                    this.setState({\r\n                        value: this.getValue(0, duration, false)\r\n                    });\r\n                }\r\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\r\n        } else {\r\n            this.setState({\r\n                active: false,\r\n                currentTime: 0,\r\n                value: this.getValue(0, duration, false)\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaEnd = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.reset();\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaTime = update => {\r\n        const { chatId, messageId, duration } = this.props;\r\n        const { active, dragging } = this.state;\r\n\r\n        if (chatId !== update.chatId) return;\r\n        if (messageId !== update.messageId) return;\r\n\r\n        const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\r\n        const value = this.getValue(update.currentTime, playerDuration, active);\r\n\r\n        if (dragging) {\r\n            this.setState({\r\n                currentTime: update.currentTime,\r\n                duration: playerDuration\r\n            });\r\n        } else {\r\n            this.setState({\r\n                currentTime: update.currentTime,\r\n                duration: playerDuration,\r\n                value\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { chatId, messageId, duration } = this.props;\r\n        const { active, currentTime, dragging } = this.state;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\r\n            let value = this.state.value;\r\n            if (!dragging) {\r\n                value = this.getValue(active ? currentTime : 0, playerDuration, true);\r\n            }\r\n\r\n            this.setState({\r\n                active: true,\r\n                currentTime: active ? currentTime : 0,\r\n                value\r\n            });\r\n        } else if (active) {\r\n            this.reset();\r\n        }\r\n    };\r\n\r\n    getValue = (currentTime, duration, active) => {\r\n        return active ? currentTime / duration : 0;\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n\r\n        this.setState({\r\n            dragging: true\r\n        });\r\n    };\r\n\r\n    handleChangeCommitted = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { value, active } = this.state;\r\n        if (!active) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaSeek',\r\n            chatId,\r\n            messageId,\r\n            value\r\n        });\r\n\r\n        this.setState({\r\n            dragging: false\r\n        });\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        const { chatId, messageId } = this.props;\r\n        const { active, dragging } = this.state;\r\n        if (!active) return;\r\n\r\n        if (dragging) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaSeeking',\r\n                chatId,\r\n                messageId,\r\n                value\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { className, style } = this.props;\r\n        const { value } = this.state;\r\n\r\n        return (\r\n            <div className={classNames('voice-note-slider', className)} style={style}>\r\n                <Slider\r\n                    className='voice-note-slider-component'\r\n                    classes={{\r\n                        track: 'voice-note-slider-track',\r\n                        thumb: 'voice-note-slider-thumb',\r\n                        active: 'voice-note-slider-active'\r\n                    }}\r\n                    min={0}\r\n                    max={1}\r\n                    step={0.01}\r\n                    value={value}\r\n                    onChange={this.handleChange}\r\n                    onChangeCommitted={this.handleChangeCommitted}\r\n                    onMouseDown={this.handleMouseDown}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nVoiceNoteSlider.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    duration: PropTypes.number.isRequired\r\n};\r\n\r\nexport default VoiceNoteSlider;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport DownloadIcon from '../../../Assets/Icons/Download';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FileProgress from '../../Viewer/FileProgress';\r\nimport MediaStatus from './MediaStatus';\r\nimport { getFileSize, getSrc } from '../../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { clamp, getDurationString } from '../../../Utils/Common';\r\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\r\nimport PlayerStore from '../../../Stores/PlayerStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport ApplicationStore from '../../../Stores/ApplicationStore';\r\nimport './VideoNote.css';\r\nimport InstantViewStore from '../../../Stores/InstantViewStore';\r\n\r\nconst circleStyle = {\r\n    circle: 'video-note-progress-circle'\r\n};\r\n\r\nclass VideoNote extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n        this.sourceRef = React.createRef();\r\n\r\n        const { chatId, messageId } = props;\r\n        const { video } = props.videoNote;\r\n\r\n        const { time, message, videoStream } = PlayerStore;\r\n        const active = message && message.chat_id === chatId && message.id === messageId;\r\n\r\n        this.state = {\r\n            active: active,\r\n            srcObject: active ? videoStream : null,\r\n            src: getSrc(video),\r\n            currentTime: active && time ? time.currentTime : 0.0,\r\n            videoDuration: active && time ? time.duration : 0.0\r\n        };\r\n\r\n        this.windowFocused = window.hasFocus;\r\n        this.inView = false;\r\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\r\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\r\n        this.openIV = Boolean(InstantViewStore.getCurrent());\r\n    }\r\n\r\n    updateVideoSrc() {\r\n        const { srcObject, src } = this.state;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        if (srcObject) {\r\n            //player.scr = null;\r\n            player.srcObject = srcObject;\r\n            return;\r\n        }\r\n\r\n        const stream = player.srcObject;\r\n        if (stream) {\r\n            //console.log('clientUpdate release srcObject');\r\n            const tracks = stream.getTracks();\r\n\r\n            tracks.forEach(track => {\r\n                //console.log('clientUpdate release track');\r\n                track.stop();\r\n            });\r\n        }\r\n\r\n        if (player.srcObject) {\r\n            //console.log('clientUpdate release video.srcObject');\r\n            player.srcObject = null;\r\n        }\r\n\r\n        const source = this.sourceRef.current;\r\n        if (!source) return;\r\n\r\n        if (source.src !== src) {\r\n            source.src = src;\r\n            player.load();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateVideoSrc();\r\n\r\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\r\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\r\n\r\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\r\n\r\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\r\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\r\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\r\n\r\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\r\n\r\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\r\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    startStopPlayer = () => {\r\n        const player = this.videoRef.current;\r\n        if (player) {\r\n            if (\r\n                this.inView &&\r\n                this.windowFocused &&\r\n                !this.openMediaViewer &&\r\n                !this.openProfileMediaViewer &&\r\n                !this.openIV\r\n            ) {\r\n                player.play();\r\n            } else {\r\n                if (this.state.active) {\r\n                    return;\r\n                }\r\n\r\n                player.pause();\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateInstantViewContent = update => {\r\n        this.openIV = Boolean(InstantViewStore.getCurrent());\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateProfileMediaViewerContent = update => {\r\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        this.windowFocused = update.focused;\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateMessagesInView = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const key = `${chatId}_${messageId}`;\r\n\r\n        this.inView = update.messages.has(key);\r\n\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    onClientUpdateMediaCaptureStream = update => {\r\n        const { chatId, messageId } = this.props;\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const player = this.videoRef.current;\r\n            if (player) {\r\n                this.setState({ srcObject: update.stream }, () => {\r\n                    this.updateVideoSrc();\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaTime = update => {\r\n        const { chatId, messageId } = this.props;\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const player = this.videoRef.current;\r\n            if (player) {\r\n                this.setState({\r\n                    currentTime: update.currentTime,\r\n                    videoDuration: update.duration\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaEnd = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState(\r\n                {\r\n                    active: false,\r\n                    srcObject: null,\r\n                    currentTime: 0\r\n                },\r\n                () => {\r\n                    const player = this.videoRef.current;\r\n                    if (!player) return;\r\n\r\n                    this.updateVideoSrc();\r\n\r\n                    if (!window.hasFocus) {\r\n                        player.pause();\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { video } = this.props.videoNote;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (this.state.active) {\r\n            } else {\r\n                this.setState({\r\n                    active: true,\r\n                    currentTime: null\r\n                });\r\n            }\r\n        } else if (this.state.active) {\r\n            this.setState(\r\n                {\r\n                    active: false,\r\n                    srcObject: null,\r\n                    currentTime: 0\r\n                },\r\n                () => {\r\n                    const player = this.videoRef.current;\r\n                    if (!player) return;\r\n\r\n                    this.updateVideoSrc();\r\n\r\n                    if (!window.hasFocus) {\r\n                        player.pause();\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    onClientUpdateVideoNoteBlob = update => {\r\n        const { video } = this.props.videoNote;\r\n        const { fileId } = update;\r\n\r\n        if (!video) return;\r\n\r\n        if (video.id === fileId) {\r\n            this.setState(\r\n                {\r\n                    src: getSrc(video)\r\n                },\r\n                () => {\r\n                    this.updateVideoSrc();\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    onClientUpdateVideoNoteThumbnailBlob = update => {\r\n        const { thumbnail } = this.props.videoNote;\r\n        if (!thumbnail) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleCanPlay = () => {\r\n        // const player = this.videoRef.current;\r\n        // if (player){\r\n        //     if (this.state.active){\r\n        //         player.muted = false;\r\n        //     }\r\n        //     else{\r\n        //         player.muted = true;\r\n        //     }\r\n        // }\r\n    };\r\n\r\n    render() {\r\n        const { displaySize, chatId, messageId, openMedia } = this.props;\r\n        const { active, currentTime, videoDuration } = this.state;\r\n        const { minithumbnail, thumbnail, video, duration } = this.props.videoNote;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const style = { width: 200, height: 200 };\r\n        if (!style) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\r\n        const src = getSrc(video);\r\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\r\n\r\n        let progress = 0;\r\n        if (videoDuration && currentTime) {\r\n            const progressTime = currentTime + 0.25;\r\n            progress = clamp((progressTime / videoDuration) * 100, 0, 100);\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={classNames('video-note', { 'video-note-playing': active })}\r\n                style={style}\r\n                onClick={openMedia}>\r\n                {src ? (\r\n                    <>\r\n                        <video\r\n                            ref={this.videoRef}\r\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\r\n                            poster={thumbnailSrc || miniSrc}\r\n                            muted\r\n                            autoPlay\r\n                            loop\r\n                            playsInline\r\n                            width={style.width}\r\n                            height={style.height}\r\n                            onCanPlay={this.handleCanPlay}>\r\n                            <source ref={this.sourceRef} src={null} type='video/mp4' />\r\n                        </video>\r\n                        <div className='video-note-player'>\r\n                            <div className='video-note-progress'>\r\n                                <CircularProgress\r\n                                    classes={circleStyle}\r\n                                    variant='static'\r\n                                    value={progress}\r\n                                    size={200}\r\n                                    thickness={1}\r\n                                />\r\n                            </div>\r\n                            <div className='animation-meta'>\r\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\r\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\r\n                            </div>\r\n                            <div className='video-note-muted'>\r\n                                <VolumeOffIcon />\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div className='video-note-round'>\r\n                            <img\r\n                                className={classNames('animation-preview', {\r\n                                    'media-blurred': isBlurred,\r\n                                    'media-mini-blurred': !src && !thumbnailSrc && isBlurred\r\n                                })}\r\n                                style={style}\r\n                                src={thumbnailSrc || miniSrc}\r\n                                alt=''\r\n                            />\r\n                        </div>\r\n                        <div className='animation-meta'>\r\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\r\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\r\n                        </div>\r\n                        <div className='video-note-muted'>\r\n                            <VolumeOffIcon />\r\n                        </div>\r\n                    </>\r\n                )}\r\n                <FileProgress file={video} download upload cancelButton icon={<DownloadIcon />} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nVideoNote.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    videoNote: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func,\r\n    size: PropTypes.number,\r\n    displaySize: PropTypes.number\r\n};\r\n\r\nVideoNote.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    displaySize: PHOTO_DISPLAY_SIZE\r\n};\r\n\r\nexport default VideoNote;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport AudioAction from './AudioAction';\r\nimport VoiceNoteTile from '../../Tile/VoiceNoteTile';\r\nimport MediaStatus from './MediaStatus';\r\nimport VoiceNoteSlider from './VoiceNoteSlider';\r\nimport './VoiceNote.css';\r\n\r\nclass VoiceNote extends React.Component {\r\n    render() {\r\n        const { chatId, messageId, voiceNote, openMedia, title, meta, caption } = this.props;\r\n        if (!voiceNote) return null;\r\n\r\n        const { duration, voice: file } = voiceNote;\r\n\r\n        return (\r\n            <div className={classNames('voice-note', 'document', { 'media-title': title })}>\r\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\r\n                <div className='voice-note-content'>\r\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} />\r\n                    <div className='voice-note-meta'>\r\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\r\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\r\n                        {!caption && meta}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nVoiceNote.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    voiceNote: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default VoiceNote;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DownloadIcon from '../../Assets/Icons/Download';\r\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\r\nimport PauseIcon from '../../Assets/Icons/Pause';\r\nimport DocumentTile from './DocumentTile';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport './VoiceNoteTile.css';\r\n\r\nclass VoiceNoteTile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = props;\r\n\r\n        const { time, message, playing } = PlayerStore;\r\n        const active = message && message.chat_id === chatId && message.id === messageId;\r\n\r\n        this.state = {\r\n            active: active,\r\n            playing: active ? playing : false,\r\n            currentTime: active && time ? time.currentTime : 0,\r\n            duration: active && time ? time.duration : 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\r\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\r\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\r\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\r\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    onClientUpdateMediaEnd = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({\r\n                active: false,\r\n                playing: false,\r\n                currentTime: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlay = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ playing: true });\r\n        } else {\r\n            this.setState({ playing: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPause = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ playing: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (!this.state.active) {\r\n                this.setState({\r\n                    active: true,\r\n                    currentTime: 0,\r\n                    playing: true\r\n                });\r\n            }\r\n        } else if (this.state.active) {\r\n            this.setState({\r\n                active: false,\r\n                currentTime: 0,\r\n                playing: false\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { file, openMedia } = this.props;\r\n        const { playing } = this.state;\r\n\r\n        return (\r\n            <DocumentTile\r\n                thumbnail={null}\r\n                file={file}\r\n                openMedia={openMedia}\r\n                icon={<DownloadIcon />}\r\n                completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nVoiceNoteTile.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    file: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default VoiceNoteTile;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\r\n    'Smile'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Draws a rounded rectangle using the current state of the canvas.\r\n * If you omit the last three params, it will draw a rectangle\r\n * outline with a 5 pixel border radius\r\n * @param {CanvasRenderingContext2D} ctx\r\n * @param {Number} x The top left x coordinate\r\n * @param {Number} y The top left y coordinate\r\n * @param {Number} width The width of the rectangle\r\n * @param {Number} height The height of the rectangle\r\n * @param {Number} [radius = 5] The corner radius; It can also be an object\r\n *                 to specify different radii for corners\r\n * @param {Number} [radius.tl = 0] Top left\r\n * @param {Number} [radius.tr = 0] Top right\r\n * @param {Number} [radius.br = 0] Bottom right\r\n * @param {Number} [radius.bl = 0] Bottom left\r\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\r\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\r\n */\r\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke) {\r\n    if (typeof stroke === 'undefined') {\r\n        stroke = true;\r\n    }\r\n    if (typeof radius === 'undefined') {\r\n        radius = 5;\r\n    }\r\n    if (typeof radius === 'number') {\r\n        radius = { tl: radius, tr: radius, br: radius, bl: radius };\r\n    } else {\r\n        var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\r\n        for (var side in defaultRadius) {\r\n            radius[side] = radius[side] || defaultRadius[side];\r\n        }\r\n    }\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + radius.tl, y);\r\n    ctx.lineTo(x + width - radius.tr, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\r\n    ctx.lineTo(x + width, y + height - radius.br);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\r\n    ctx.lineTo(x + radius.bl, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\r\n    ctx.lineTo(x, y + radius.tl);\r\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\r\n    ctx.closePath();\r\n    if (fill) {\r\n        ctx.fill();\r\n    }\r\n    if (stroke) {\r\n        ctx.stroke();\r\n    }\r\n}\r\n\r\nclass Particle {\r\n    constructor(fireworks) {\r\n        this.fireworks = fireworks;\r\n        this.type = 0;\r\n        this.colorType = 0;\r\n        this.side = 0;\r\n        this.typeSize = 4;\r\n        this.xFinished = false;\r\n        this.finishedStart = false;\r\n\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.rotation = 0;\r\n        this.moveX = 0;\r\n        this.moveY = 0;\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.fillStyle = this.colorType;\r\n\r\n        if (this.type === 0) {\r\n            ctx.beginPath();\r\n            ctx.arc(this.x, this.y, this.typeSize, 0, Math.PI * 2, false);\r\n            ctx.fill();\r\n        } else {\r\n            ctx.save();\r\n            ctx.translate(this.x, this.y);\r\n            ctx.rotate((this.rotation * Math.PI) / 180);\r\n            roundRect(ctx, -this.typeSize, -2, this.typeSize * 2, 4, 2, true, false);\r\n            ctx.restore();\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        const moveCoef = dt / 16.0;\r\n        this.x += this.moveX * moveCoef;\r\n        this.y += this.moveY * moveCoef;\r\n        if (this.xFinished !== 0) {\r\n            const dp = 0.5;\r\n            if (this.xFinished === 1) {\r\n                this.moveX += dp * moveCoef * 0.05;\r\n                if (this.moveX >= dp) {\r\n                    this.xFinished = 2;\r\n                }\r\n            } else {\r\n                this.moveX -= dp * moveCoef * 0.05;\r\n                if (this.moveX <= -dp) {\r\n                    this.xFinished = 1;\r\n                }\r\n            }\r\n        } else {\r\n            if (this.side === 0) {\r\n                if (this.moveX > 0) {\r\n                    this.moveX -= moveCoef * 0.05;\r\n                    if (this.moveX <= 0) {\r\n                        this.moveX = 0;\r\n                        this.xFinished = this.finishedStart;\r\n                    }\r\n                }\r\n            } else {\r\n                if (this.moveX < 0) {\r\n                    this.moveX += moveCoef * 0.05;\r\n                    if (this.moveX >= 0) {\r\n                        this.moveX = 0;\r\n                        this.xFinished = this.finishedStart;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let yEdge = -0.5;\r\n        const wasNegative = this.moveY < yEdge;\r\n        if (this.moveY > yEdge) {\r\n            this.moveY += (1.0 / 3.0) * moveCoef * this.fireworks.speedCoef;\r\n        } else {\r\n            this.moveY += (1.0 / 3.0) * moveCoef;\r\n        }\r\n        if (wasNegative && this.moveY > yEdge) {\r\n            this.fireworks.fallingDownCount++;\r\n        }\r\n        if (this.type === 1) {\r\n            this.rotation += moveCoef * 10;\r\n            if (this.rotation > 360) {\r\n                this.rotation -= 360;\r\n            }\r\n        }\r\n\r\n        return this.y >= this.fireworks.getMeasuredHeight();\r\n    }\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nclass Fireworks {\r\n    static colors = ['#E8BC2C', '#D0049E', '#02CBFE', '#5723FD', '#FE8C27', '#6CB859'];\r\n\r\n    constructor(context) {\r\n        this.context = context;\r\n        this.particlesCount = 60;\r\n        this.fallParticlesCount = 30;\r\n        this.particles = [];\r\n        this.speedCoef = 1.0;\r\n        this.fallingDownCount = 0;\r\n    }\r\n\r\n    getMeasuredHeight() {\r\n        return this.context.canvas.clientHeight;\r\n    }\r\n\r\n    getMeasuredWidth() {\r\n        return this.context.canvas.clientWidth;\r\n    }\r\n\r\n    createParticle(fall) {\r\n        const particle = new Particle(this);\r\n        particle.colorType = Fireworks.colors[getRandomInt(0, Fireworks.colors.length)];\r\n        particle.type = getRandomInt(0, 2);\r\n        particle.side = getRandomInt(0, 2);\r\n        particle.finishedStart = 1 + getRandomInt(0, 2);\r\n        if (particle.type === 0) {\r\n            particle.typeSize = 4 + Math.random() * 2;\r\n        } else {\r\n            particle.typeSize = 4 + Math.random() * 4;\r\n        }\r\n        if (fall) {\r\n            particle.y = -Math.random() * this.getMeasuredHeight() * 1.2;\r\n            particle.x = 5 + getRandomInt(0, this.getMeasuredWidth() - 10);\r\n            particle.xFinished = particle.finishedStart;\r\n        } else {\r\n            const xOffset = 4 + getRandomInt(0, 10);\r\n            const yOffset = this.getMeasuredHeight() / 4;\r\n            if (particle.side === 0) {\r\n                particle.x = -xOffset;\r\n            } else {\r\n                particle.x = this.getMeasuredWidth() + xOffset;\r\n            }\r\n            particle.rotation = Math.random() * 360;\r\n            particle.moveX = (particle.side === 0 ? 1 : -1) * (1.2 + Math.random() * 4);\r\n            particle.moveY = -(4 + Math.random() * 4);\r\n            particle.y = yOffset / 2 + getRandomInt(0, yOffset * 2);\r\n        }\r\n        // console.log(`particle side=${particle.side} x=${particle.x} y=${particle.y} moveX=${particle.moveX} moveY=${particle.moveY}`);\r\n        return particle;\r\n    }\r\n\r\n    start() {\r\n        if (this.started) {\r\n            return;\r\n        }\r\n\r\n        this.particles = [];\r\n        this.started = true;\r\n        this.startedFall = false;\r\n        this.fallingDownCount = 0;\r\n        this.speedCoef = 1.0;\r\n        this.lastUpdateTime = 0;\r\n        for (let a = 0; a < this.particlesCount; a++) {\r\n            this.particles.push(this.createParticle(false));\r\n        }\r\n\r\n        this.draw();\r\n    }\r\n\r\n    startFall() {\r\n        if (this.startedFall) {\r\n            return;\r\n        }\r\n        this.startedFall = true;\r\n        for (let a = 0; a < this.fallParticlesCount; a++) {\r\n            this.particles.push(this.createParticle(true));\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        const newTime = Date.now();\r\n        let dt = newTime - this.lastUpdateTime;\r\n        this.lastUpdateTime = newTime;\r\n        if (dt > 18) {\r\n            dt = 16;\r\n        }\r\n        // console.log('draw dt', dt);\r\n        this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\r\n        for (let a = 0, N = this.particles.length; a < N; a++) {\r\n            const p = this.particles[a];\r\n            p.draw(this.context);\r\n            if (p.update(dt)) {\r\n                this.particles.splice(a, 1);\r\n                a--;\r\n                N--;\r\n            }\r\n        }\r\n        if (this.fallingDownCount >= this.particlesCount / 2 && this.speedCoef > 0.2) {\r\n            this.startFall();\r\n            this.speedCoef -= (dt / 16.0) * 0.15;\r\n            if (this.speedCoef < 0.2) {\r\n                this.speedCoef = 0.2;\r\n            }\r\n        }\r\n        if (this.particles.length) {\r\n            window.requestAnimationFrame(() => this.draw());\r\n        } else {\r\n            this.started = false;\r\n            this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\r\n        }\r\n    }\r\n}\r\n\r\nclass FireworksComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.attachToParent();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.detachFromParent();\r\n    }\r\n\r\n    attachToParent() {\r\n        const canvas = this.canvasRef.current;\r\n        if (!canvas) return;\r\n\r\n        const parentNode = canvas.parentNode;\r\n        if (!parentNode) return;\r\n\r\n        this.parentNode = parentNode;\r\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\r\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\r\n        window.addEventListener('resize', this.onResize);\r\n    }\r\n\r\n    detachFromParent() {\r\n        const canvas = this.canvasRef.current;\r\n        if (!canvas) return;\r\n\r\n        const parentNode = canvas.parentNode;\r\n        if (!parentNode) return;\r\n\r\n        this.parentNode = null;\r\n        window.removeEventListener('resize', this.onResize);\r\n    }\r\n\r\n    onResize = () => {\r\n        const canvas = this.canvasRef.current;\r\n        if (!canvas) return;\r\n\r\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\r\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\r\n    };\r\n\r\n    start() {\r\n        const ctx = this.canvasRef.current.getContext('2d');\r\n\r\n        const fireworks = new Fireworks(ctx);\r\n        fireworks.start();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <canvas\r\n                ref={this.canvasRef}\r\n                style={{\r\n                    zIndex: 2,\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    top: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    pointerEvents: 'none'\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nFireworksComponent.propTypes = {};\r\n\r\nexport default FireworksComponent;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\r\n    'Check'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\r\nimport './PollRadio.css';\r\n\r\nclass PollRadio extends React.Component {\r\n    render() {\r\n        const { chosen, beingChosen, hidden, onChange } = this.props;\r\n\r\n        return (\r\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\r\n                <Radio\r\n                    color='primary'\r\n                    classes={{\r\n                        root: 'poll-radio-root',\r\n                        colorPrimary: 'message-control',\r\n                        disabled: 'message-control-disabled'\r\n                    }}\r\n                    TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\r\n                    checked={chosen || beingChosen}\r\n                    onChange={onChange}\r\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? 'poll-radio-icon' : null }} />}\r\n                />\r\n                {beingChosen && (\r\n                    <CircularProgress\r\n                        size={20}\r\n                        thickness={4.4}\r\n                        classes={{ root: 'poll-radio-progress-root', colorPrimary: 'message-control' }}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPollRadio.propTypes = {\r\n    chosen: PropTypes.bool,\r\n    beingChosen: PropTypes.bool,\r\n    hidden: PropTypes.bool\r\n};\r\n\r\nexport default PollRadio;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\r\nimport './PollPercentage.css';\r\n\r\nclass PollPercentage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handle = null;\r\n\r\n        const { value } = props;\r\n\r\n        this.state = {\r\n            from: value,\r\n            to: value,\r\n            animated: value,\r\n\r\n            prevPropsValue: value\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { closed, theme, value } = this.props;\r\n        const { animated } = this.state;\r\n\r\n        if (closed !== nextProps.closed) {\r\n            return true;\r\n        }\r\n\r\n        if (theme !== nextProps.theme) {\r\n            return true;\r\n        }\r\n\r\n        if (value !== nextProps.value) {\r\n            return true;\r\n        }\r\n\r\n        if (animated !== nextState.animated) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.value !== state.prevPropsValue) {\r\n            return {\r\n                startTime: Date.now(),\r\n                from: state.animated,\r\n                to: props.value,\r\n\r\n                prevPropsValue: props.value\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.value !== this.props.value) {\r\n            this.updateAnimation();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.stopAnimation();\r\n    }\r\n\r\n    updateAnimation = () => {\r\n        this.stopAnimation();\r\n\r\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\r\n    };\r\n\r\n    stopAnimation = () => {\r\n        if (!this.handle) return;\r\n\r\n        cancelAnimationFrame(this.handle);\r\n        this.handle = null;\r\n    };\r\n\r\n    onAnimationFrame = () => {\r\n        const { startTime, from, to } = this.state;\r\n\r\n        const timePassed = Date.now() - startTime;\r\n\r\n        if (timePassed >= ANIMATION_DURATION_200MS) {\r\n            this.setState({ animated: to });\r\n            this.stopAnimation();\r\n        } else {\r\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\r\n            this.setState({ animated });\r\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chosen, closed, onClick } = this.props;\r\n        const { animated } = this.state;\r\n\r\n        return (\r\n            <div className='poll-percentage'>\r\n                {/*{!closed && chosen ? (*/}\r\n                {/*    <a className='poll-percentage-action' onClick={onClick}>*/}\r\n                {/*        {animated + '%'}*/}\r\n                {/*    </a>*/}\r\n                {/*) : (*/}\r\n                {/*    <>{animated + '%'}</>*/}\r\n                {/*)}*/}\r\n                <>{animated + '%'}</>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPollPercentage.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    chosen: PropTypes.bool,\r\n    closed: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default PollPercentage;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport CheckIcon from '../../../Assets/Icons/Check';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport PollRadio from './PollRadio';\r\nimport PollPercentage from './PollPercentage';\r\nimport './PollOption.css';\r\n\r\nclass PollOption extends React.Component {\r\n    getTitleString = (count, t = key => key) => {\r\n        const { canBeSelected } = this.props;\r\n        if (canBeSelected) return null;\r\n\r\n        if (!count) return t('NoVotes').toLowerCase();\r\n        if (count === 1) return '1 vote';\r\n\r\n        return count + ' votes';\r\n    };\r\n\r\n    handleClick = event => {\r\n        const { canBeSelected, onVote } = this.props;\r\n        if (!canBeSelected) return;\r\n\r\n        event.stopPropagation();\r\n\r\n        onVote();\r\n    };\r\n\r\n    render() {\r\n        const { option, onChange, canBeSelected, closed, maxVoterCount, t, type, isCorrect } = this.props;\r\n        if (!option) return null;\r\n\r\n        const { text, voter_count, vote_percentage, is_chosen, isMultiChoosen, is_being_chosen } = option;\r\n\r\n        let value = 1.5;\r\n        if (voter_count) {\r\n            value = (voter_count / maxVoterCount) * 100;\r\n        }\r\n\r\n        return (\r\n            <div className='poll-option' onClick={this.handleClick}>\r\n                <div\r\n                    className={classNames(\r\n                        'poll-option-wrapper',\r\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\r\n                    )}>\r\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\r\n                        <PollPercentage value={vote_percentage} chosen={is_chosen} closed={closed} />\r\n                        <PollRadio\r\n                            hidden={!canBeSelected}\r\n                            chosen={is_chosen || isMultiChoosen}\r\n                            beingChosen={is_being_chosen}\r\n                            onChange={onChange}\r\n                        />\r\n                        {(is_chosen || isCorrect) && (\r\n                            <div\r\n                                className={classNames(\r\n                                    'poll-option-mark',\r\n                                    { 'poll-option-mark-correct': type === 'correct' },\r\n                                    { 'poll-option-mark-incorrect': type === 'incorrect' }\r\n                                )}>\r\n                                {type === 'incorrect' ? (\r\n                                    <CloseIcon className='poll-option-mark-icon' />\r\n                                ) : (\r\n                                    <CheckIcon className='poll-option-mark-icon' />\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                        <div className='poll-option-text'>{text}</div>\r\n                    </div>\r\n                </div>\r\n                <LinearProgress\r\n                    classes={{\r\n                        root: 'poll-option-progress-root',\r\n                        bar: classNames(\r\n                            'poll-option-progress-bar',\r\n                            { 'poll-option-progress-bar-correct': type === 'correct' },\r\n                            { 'poll-option-progress-bar-incorrect': type === 'incorrect' }\r\n                        )\r\n                    }}\r\n                    color='primary'\r\n                    variant='determinate'\r\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPollOption.propTypes = {\r\n    type: PropTypes.oneOf(['regular', 'correct', 'incorrect']).isRequired,\r\n    option: PropTypes.object.isRequired,\r\n    onVote: PropTypes.func.isRequired,\r\n    canBeSelected: PropTypes.bool,\r\n    closed: PropTypes.bool,\r\n    maxVoterCount: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(PollOption);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './UserPlaceholder.css';\r\nimport UserStatus from './UserStatus';\r\n\r\nclass UserPlaceholder extends React.Component {\r\n    render() {\r\n        const { index, showStatus } = this.props;\r\n\r\n        const titleWidth = `${20 + Math.sin(index) * 10}%`;\r\n        const contentWidth = `${30 + Math.cos(index) * 10}%`;\r\n\r\n        return (\r\n            <div className='user-placeholder'>\r\n                <div className='user-wrapper'>\r\n                    <div className='user-placeholder-tile' />\r\n                    <div className='user-placeholder-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\r\n                            <div className='dialog-placeholder-title' style={{ width: contentWidth, marginLeft: 8 }} />\r\n                        </div>\r\n                        {showStatus && (\r\n                            <div className='tile-second-row'>\r\n                                <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUserPlaceholder.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    showStatus: PropTypes.bool\r\n};\r\n\r\nUserPlaceholder.defaultProps = {\r\n    showStatus: true\r\n};\r\n\r\nexport default UserPlaceholder;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport User from '../Tile/User';\r\nimport UserPlaceholder from '../Tile/UserPlaceholder';\r\nimport { openUser } from '../../Actions/Client';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './PollOptionResult.css';\r\n\r\nclass PollOptionResult extends React.Component {\r\n    onClick = () => {\r\n        const { userId } = this.props;\r\n        if (!userId) return;\r\n\r\n        openUser(userId, true);\r\n\r\n        setTimeout(() => {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateClosePollResults'\r\n            });\r\n        }, 0);\r\n    };\r\n\r\n    render() {\r\n        const { index, userId } = this.props;\r\n\r\n        const content = userId ? (\r\n            <User userId={userId} showStatus={false} />\r\n        ) : (\r\n            <UserPlaceholder index={index} showStatus={false} />\r\n        );\r\n\r\n        return (\r\n            <ListItem button className='user-list-item' onClick={this.onClick}>\r\n                {content}\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nPollOptionResult.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    userId: PropTypes.number\r\n};\r\n\r\nexport default PollOptionResult;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport PollOptionResult from './PollOptionResult';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { POLL_RESULTS_FIRST_SLICE_LENGTH, POLL_RESULTS_LEAVE_LENGTH, POLL_RESULTS_SLICE_LENGTH } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './PollOptionResults.css';\r\n\r\nclass PollOptionResults extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { option } = this.props;\r\n\r\n        const count =\r\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\r\n                ? option.voter_count\r\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\r\n\r\n        this.state = {\r\n            voters: [],\r\n            offset: 0,\r\n            count\r\n        };\r\n    }\r\n\r\n    async updateVoters(offset, count, loadMore) {\r\n        const { chatId, messageId, optionId, option } = this.props;\r\n        const { voters } = this.state;\r\n        if (count <= 0) return;\r\n\r\n        const limit = count - offset;\r\n        // console.log(`[poll] getPollVoters start option_id=${optionId} offset=${offset} limit=${limit}`);\r\n        const result = await TdLibController.send({\r\n            '@type': 'getPollVoters',\r\n            chat_id: chatId,\r\n            message_id: messageId,\r\n            option_id: optionId,\r\n            offset,\r\n            limit\r\n        });\r\n        // console.log(`[poll] getPollVoters end option_id=${optionId} offset=${offset} limit=${limit}`, result, result.user_ids.map(x => UserStore.get(x)));\r\n\r\n        if (this.props.option !== option) {\r\n            return;\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, result.user_ids);\r\n\r\n        this.setState(\r\n            {\r\n                voters: [...voters, ...result.user_ids]\r\n            },\r\n            async () => {\r\n                if (result.user_ids.length < limit && loadMore) {\r\n                    const offset2 = offset + result.user_ids.length;\r\n\r\n                    this.updateVoters(offset2, count, false);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { offset, count } = this.state;\r\n\r\n        this.updateVoters(offset, count, true);\r\n    }\r\n\r\n    handleShowMore = () => {\r\n        const { option } = this.props;\r\n        const { count } = this.state;\r\n\r\n        const newOffset = count;\r\n        const newCount = Math.min(option.voter_count, count + POLL_RESULTS_SLICE_LENGTH);\r\n\r\n        this.setState(\r\n            {\r\n                offset: newOffset,\r\n                count: newCount\r\n            },\r\n            () => {\r\n                this.updateVoters(newOffset, newCount, true);\r\n            }\r\n        );\r\n    };\r\n\r\n    handleCollapse = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { option } = this.props;\r\n\r\n        const count =\r\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\r\n                ? option.voter_count\r\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\r\n\r\n        this.setState({\r\n            voters: this.state.voters.slice(0, count),\r\n            offset: 0,\r\n            count\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { option, isQuiz, t } = this.props;\r\n        const { voters, count } = this.state;\r\n\r\n        const { text, voter_count, vote_percentage } = option;\r\n        if (voter_count === 0) {\r\n            return null;\r\n        }\r\n\r\n        const results = [];\r\n        for (let i = 0; i < count; i++) {\r\n            const userId = i < voters.length ? voters[i] : null;\r\n            results.push(<PollOptionResult key={`${i}_userId=${userId}`} index={i} userId={userId} />);\r\n        }\r\n\r\n        const voterCount = isQuiz\r\n            ? voter_count !== 1\r\n                ? `${voter_count} answers`\r\n                : `${voter_count} answer`\r\n            : voter_count !== 1\r\n            ? `${voter_count} votes`\r\n            : `${voter_count} vote`;\r\n\r\n        let showMoreButton = null;\r\n        const showMoreCount = voter_count - count;\r\n        if (showMoreCount > 0) {\r\n            const showMore = isQuiz\r\n                ? showMoreCount !== 1\r\n                    ? `${showMoreCount} answers`\r\n                    : `${showMoreCount} answer`\r\n                : showMoreCount !== 1\r\n                ? `${showMoreCount} votes`\r\n                : `${showMoreCount} vote`;\r\n\r\n            showMoreButton = (\r\n                <Button\r\n                    classes={{ root: 'poll-option-results-button' }}\r\n                    color='primary'\r\n                    fullWidth\r\n                    onClick={this.handleShowMore}>\r\n                    {t('ShowVotesOT').replace('%1$d', showMore)}\r\n                </Button>\r\n            );\r\n        }\r\n        const showCollapse =\r\n            count > POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH &&\r\n            voter_count > POLL_RESULTS_FIRST_SLICE_LENGTH;\r\n\r\n        return (\r\n            <>\r\n                <div className='poll-option-results-caption'>\r\n                    <div className='poll-option-results-answer'>{`${text} — ${vote_percentage}%`}</div>\r\n                    {showCollapse ? (\r\n                        <a onClick={this.handleCollapse}>{t('PollCollapse')}</a>\r\n                    ) : (\r\n                        <div className='poll-option-results-count'>{voterCount}</div>\r\n                    )}\r\n                </div>\r\n                {results}\r\n                {showMoreButton}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPollOptionResults.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    optionId: PropTypes.number.isRequired,\r\n    option: PropTypes.object.isRequired,\r\n    isQuiz: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default withTranslation()(PollOptionResults);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport PollOptionResults from './PollOptionResults';\r\nimport PollStore from '../../Stores/PollStore';\r\nimport './PollResultsDialog.css';\r\n\r\nclass PollResultsDialog extends React.Component {\r\n    componentDidMount() {\r\n        PollStore.on('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PollStore.off('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\r\n    }\r\n\r\n    onClientUpdateClosePollResults = update => {\r\n        const { onClose } = this.props;\r\n        onClose();\r\n    };\r\n\r\n    handleClose = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { onClose } = this.props;\r\n        onClose();\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleContextMenu = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, poll, t } = this.props;\r\n        if (!poll) return;\r\n\r\n        const { options, type, question } = poll;\r\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\r\n\r\n        return (\r\n            <Dialog\r\n                classes={{\r\n                    root: 'chat-info-dialog-root',\r\n                    container: 'chat-info-dialog-container',\r\n                    paper: 'chat-info-dialog-paper'\r\n                }}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClick={this.handleClick}\r\n                onContextMenu={this.handleContextMenu}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='poll-results-title'>\r\n                <DialogTitle id='poll-results-title'>{isQuiz ? t('QuizAnswers') : t('PollResults')}</DialogTitle>\r\n                <DialogContent classes={{ root: 'poll-results-content' }}>\r\n                    <div className='poll-results-question'>{question}</div>\r\n                    {options.map((x, i) => (\r\n                        <PollOptionResults\r\n                            key={i}\r\n                            isQuiz={isQuiz}\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            optionId={i}\r\n                            option={x}\r\n                        />\r\n                    ))}\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nPollResultsDialog.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    poll: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(PollResultsDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FireworksComponent from './FireworksControl';\r\nimport PollOption from './PollOption';\r\nimport UserTile from '../../Tile/UserTile';\r\nimport { setPollAnswer } from '../../../Actions/Poll';\r\nimport MessageStore from './../../../Stores/MessageStore';\r\nimport TdLibController from './../../../Controllers/TdLibController';\r\nimport './Poll.css';\r\nimport PollResultsDialog from '../../Popup/PollResultsDialog';\r\n\r\nclass Poll extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.fireworksRef = React.createRef();\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, messageId, poll } = this.props;\r\n\r\n        if (poll && poll.type['@type'] === 'pollTypeQuiz') {\r\n            const { poll: prevPoll } = prevProps;\r\n            if (prevPoll.type.correct_option_id === -1 && poll.type.correct_option_id !== -1) {\r\n                const fireworks = this.fireworksRef.current;\r\n                if (!fireworks) return;\r\n\r\n                if (poll.options[poll.type.correct_option_id].is_chosen) {\r\n                    fireworks.start();\r\n                } else {\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateMessageShake',\r\n                        chatId,\r\n                        messageId\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getTotalVoterCountString = (count, t = key => key) => {\r\n        if (!count) return t('NoVotes');\r\n        if (count === 1) return '1 answer';\r\n\r\n        return count + ' answers';\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId, poll } = this.props;\r\n        if (!poll) return;\r\n\r\n        const { type } = poll;\r\n        if (!type) return;\r\n\r\n        if (this.viewResults(poll)) {\r\n            return;\r\n        }\r\n\r\n        if (!type.allow_multiple_answers) {\r\n            return;\r\n        }\r\n\r\n        const optionIds = [];\r\n        poll.options.forEach((x, index) => {\r\n            if (x.isMultiChoosen) {\r\n                optionIds.push(index);\r\n            }\r\n        });\r\n\r\n        if (!optionIds.length) {\r\n            return;\r\n        }\r\n\r\n        setPollAnswer(chatId, messageId, optionIds);\r\n    };\r\n\r\n    handleVote = index => {\r\n        const { chatId, messageId, poll } = this.props;\r\n        if (!poll) return;\r\n\r\n        const { type } = poll;\r\n        if (!type) return;\r\n\r\n        if (type['@type'] === 'pollTypeRegular' && type.allow_multiple_answers) {\r\n            poll.options[index].isMultiChoosen = !poll.options[index].isMultiChoosen;\r\n            this.forceUpdate();\r\n        } else {\r\n            setPollAnswer(chatId, messageId, [index]);\r\n        }\r\n    };\r\n\r\n    viewResults(poll) {\r\n        if (!poll) return false;\r\n\r\n        const { options, is_closed, is_anonymous } = poll;\r\n        if (is_anonymous) {\r\n            return false;\r\n        }\r\n\r\n        return is_closed || options.some(x => x.is_chosen);\r\n    }\r\n\r\n    getOptionType(index, poll) {\r\n        const types = ['regular', 'correct', 'incorrect'];\r\n        const defaultTypeId = 0;\r\n        const correctTypeId = 1;\r\n        const incorrectTypeId = 2;\r\n        if (!poll) return types[defaultTypeId];\r\n\r\n        const option = poll.options[index];\r\n        if (!option) return types[defaultTypeId];\r\n        if (!option.is_chosen) return types[defaultTypeId];\r\n\r\n        const { type } = poll;\r\n        if (!type) return types[defaultTypeId];\r\n        if (type['@type'] !== 'pollTypeQuiz') return types[defaultTypeId];\r\n\r\n        const { correct_option_id } = type;\r\n        if (correct_option_id === -1) return types[defaultTypeId];\r\n\r\n        return correct_option_id === index ? types[correctTypeId] : types[incorrectTypeId];\r\n    }\r\n\r\n    getOptionIsCorrect(index, poll) {\r\n        if (!poll) return false;\r\n\r\n        const option = poll.options[index];\r\n        if (!option) return false;\r\n\r\n        const { type } = poll;\r\n        if (!type) return false;\r\n        if (type['@type'] !== 'pollTypeQuiz') return false;\r\n\r\n        const { correct_option_id } = type;\r\n        if (correct_option_id === -1) return false;\r\n\r\n        return correct_option_id === index;\r\n    }\r\n\r\n    handleOpenResults = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { poll } = this.props;\r\n\r\n        this.setState({\r\n            viewResultsPoll: poll\r\n        });\r\n    };\r\n\r\n    handleCloseResults = () => {\r\n        this.setState({\r\n            viewResultsPoll: null\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, poll, t, meta } = this.props;\r\n        const { viewResultsPoll } = this.state;\r\n        const { question, options, total_voter_count, type, is_closed, is_anonymous, recent_voter_user_ids } = poll;\r\n\r\n        let subtitle = t('FinalResults');\r\n        if (!is_closed) {\r\n            switch (type['@type']) {\r\n                case 'pollTypeRegular': {\r\n                    subtitle = is_anonymous ? t('AnonymousPoll') : t('PublicPoll');\r\n                    break;\r\n                }\r\n                case 'pollTypeQuiz': {\r\n                    subtitle = is_anonymous ? t('AnonymousQuizPoll') : t('QuizPoll');\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\r\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\r\n        const isSelected = !is_closed && options.some(x => x.is_chosen);\r\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\r\n        const showViewResults = this.viewResults(poll);\r\n        const showButton = (type.allow_multiple_answers && !isSelected) || showViewResults;\r\n        const buttonEnabled = showViewResults || options.some(x => x.isMultiChoosen);\r\n        let recentVoters = [];\r\n        if (recent_voter_user_ids) {\r\n            recentVoters = recent_voter_user_ids.map(id => <UserTile key={id} poll userId={id} />);\r\n        }\r\n\r\n        return (\r\n            <div className='poll'>\r\n                {isQuiz && <FireworksComponent ref={this.fireworksRef} />}\r\n                <div className='poll-question'>\r\n                    <div className='poll-question-title'>{question}</div>\r\n                    <div className='poll-question-subtitle'>\r\n                        <span style={{ marginRight: 6 }}>{subtitle}</span>\r\n                        {recentVoters}\r\n                    </div>\r\n                </div>\r\n                <div className='poll-options'>\r\n                    {options.map((x, index) => (\r\n                        <PollOption\r\n                            key={index}\r\n                            type={this.getOptionType(index, poll)}\r\n                            isCorrect={this.getOptionIsCorrect(index, poll)}\r\n                            option={x}\r\n                            canBeSelected={canBeSelected}\r\n                            closed={is_closed}\r\n                            maxVoterCount={maxVoterCount}\r\n                            onVote={() => this.handleVote(index)}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                {showButton ? (\r\n                    <Button\r\n                        fullWidth\r\n                        color='primary'\r\n                        classes={{\r\n                            root: 'poll-button',\r\n                            textPrimary: 'message-control',\r\n                            disabled: 'message-control-disabled'\r\n                        }}\r\n                        TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\r\n                        disabled={!buttonEnabled}\r\n                        onClick={showViewResults ? this.handleOpenResults : this.handleSubmit}>\r\n                        {showViewResults ? t('PollViewResults') : t('PollSubmitVotes')}\r\n                    </Button>\r\n                ) : (\r\n                    <div className='poll-total-count'>\r\n                        {this.getTotalVoterCountString(total_voter_count, t)}\r\n                        {meta}\r\n                    </div>\r\n                )}\r\n                {Boolean(viewResultsPoll) && (\r\n                    <PollResultsDialog\r\n                        chatId={chatId}\r\n                        messageId={messageId}\r\n                        poll={viewResultsPoll}\r\n                        onClose={this.handleCloseResults}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPoll.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    poll: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Poll);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g fillRule='evenodd'>\r\n        <path d='M6,0 L33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,48 C54,51.3137085 51.3137085,54 48,54 L6,54 C2.6862915,54 4.05812251e-16,51.3137085 0,48 L0,6 C-4.05812251e-16,2.6862915 2.6862915,6.08718376e-16 6,0 Z' />\r\n        <path\r\n            d='M33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,22 C54,19.790861 52.209139,18 50,18 L40,18 C37.790861,18 36,16.209139 36,14 L36,4 C36,1.790861 34.209139,-3.88578059e-16 32,0 L33.5147186,0 Z'\r\n            fill='#000000'\r\n            style={{ mixBlendMode: 'normal' }}\r\n            opacity='0.15'\r\n        />\r\n    </g>,\r\n    'Document'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './DocumentAction.css';\r\n\r\nclass DocumentAction extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { file } = this.props;\r\n        this.state = {\r\n            prevPropsFile: file,\r\n            prevFile: null,\r\n            file: FileStore.get(file.id) || file\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('updateFile', this.onUpdateFile);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('updateFile', this.onUpdateFile);\r\n    }\r\n\r\n    onUpdateFile = update => {\r\n        const currentFile = this.state.file;\r\n        const nextFile = update.file;\r\n\r\n        if (currentFile && currentFile.id === nextFile.id) {\r\n            this.setState({ file: nextFile, prevFile: currentFile });\r\n        }\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { file } = props;\r\n        const { prevPropsFile } = state;\r\n\r\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\r\n            return {\r\n                prevPropsFile: file,\r\n                prevFile: null,\r\n                file: FileStore.get(file.id) || file\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { theme } = this.props;\r\n        const { file, prevFile } = this.state;\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.file !== file) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.prevFile !== prevFile) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { meta } = this.props;\r\n        const { file } = this.state;\r\n        if (!file) return null;\r\n\r\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\r\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\r\n\r\n        const size = getFileSize(file);\r\n        let progressSize = null;\r\n        if (isDownloadingActive) {\r\n            progressSize = getDownloadedSize(file);\r\n        } else if (isUploadingActive) {\r\n            progressSize = getUploadedSize(file);\r\n        }\r\n\r\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\r\n\r\n        return (\r\n            <div className='document-action'>\r\n                <span>{sizeString}</span>\r\n                {meta}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDocumentAction.propTypes = {\r\n    file: PropTypes.object.isRequired\r\n};\r\n\r\nexport default DocumentAction;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport DownloadIcon from '../../../Assets/Icons/Download';\r\nimport DocumentIcon from '../../../Assets/Icons/Document';\r\nimport DocumentTile from '../../Tile/DocumentTile';\r\nimport DocumentAction from './DocumentAction';\r\nimport { getExtension } from '../../../Utils/File';\r\nimport './Document.css';\r\n\r\nclass Document extends React.Component {\r\n    render() {\r\n        const { document, openMedia, width, height, meta, title, caption } = this.props;\r\n        if (!document) return null;\r\n\r\n        const { minithumbnail, thumbnail, file_name } = document;\r\n        const file = document.document;\r\n\r\n        const style = width && height ? { width, height } : null;\r\n        const completeIconFunc = thumb =>\r\n            thumb ? null : (\r\n                <div className='document-tile-complete-icon'>\r\n                    <DocumentIcon className='document-tile-icon-fill' viewBox='0 0 54 54' />\r\n                    <div className='document-tile-file-ext'>{getExtension(file_name)}</div>\r\n                </div>\r\n            );\r\n\r\n        return (\r\n            <div className={classNames('document', { 'media-title': title })} style={style}>\r\n                <DocumentTile\r\n                    minithumbnail={minithumbnail}\r\n                    thumbnail={thumbnail}\r\n                    file={file}\r\n                    openMedia={openMedia}\r\n                    icon={<DownloadIcon />}\r\n                    completeIcon={completeIconFunc}\r\n                />\r\n                <div className='document-content'>\r\n                    <div className='document-title'>\r\n                        <a\r\n                            className='document-name'\r\n                            onClick={openMedia}\r\n                            title={file_name}\r\n                            data-name={file_name}\r\n                            data-ext={'.' + getExtension(file_name)}>\r\n                            {file_name}\r\n                        </a>\r\n                    </div>\r\n                    <DocumentAction file={file} meta={caption ? null : meta} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDocument.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    document: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func,\r\n    width: PropTypes.number,\r\n    height: PropTypes.number\r\n};\r\n\r\nexport default Document;\r\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"b9bf7ab584175e852e49.worker.js\");\n};","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { getDisplayName } from './Utils/HOC';\r\nimport { MAX_SNACK } from './Constants';\r\n\r\nfunction withSnackbarNotifications(WrappedComponent) {\r\n    class NotificationsWrapper extends React.Component {\r\n        render() {\r\n            return (\r\n                <SnackbarProvider maxSnack={MAX_SNACK}>\r\n                    <WrappedComponent {...this.props} />\r\n                </SnackbarProvider>\r\n            );\r\n        }\r\n    }\r\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\r\n\r\n    return NotificationsWrapper;\r\n}\r\n\r\nexport default withSnackbarNotifications;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\r\n    'Saved'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { isUserOnline } from '../../Utils/User';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport UserStore from './../../Stores/UserStore';\r\nimport './OnlineStatus.css';\r\n\r\nclass OnlineStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const userId = getChatUserId(props.chatId);\r\n        const user = UserStore.get(userId);\r\n\r\n        this.state = {\r\n            userId,\r\n            online: isUserOnline(user)\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n    }\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { userId } = this.state;\r\n        const { user_id } = update;\r\n        if (user_id !== userId) return;\r\n\r\n        const user = UserStore.get(userId);\r\n        if (!user) return;\r\n\r\n        this.setState({ online: isUserOnline(user) });\r\n    };\r\n\r\n    render() {\r\n        const { size, borderSize } = this.props;\r\n        const { online } = this.state;\r\n        if (!online) return null;\r\n\r\n        return (\r\n            <div className='online-status' style={{ width: size, height: size }}>\r\n                <div className='online-status-icon' style={{ padding: borderSize }}>\r\n                    <div className='online-status-indicator' />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nOnlineStatus.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    size: PropTypes.number,\r\n    borderSize: PropTypes.number\r\n};\r\n\r\nOnlineStatus.defaultProps = {\r\n    size: 14,\r\n    borderSize: 2\r\n};\r\n\r\nexport default OnlineStatus;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\r\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\r\nimport OnlineStatus from './OnlineStatus';\r\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat } from '../../Utils/Chat';\r\nimport { getSrc, loadChatContent } from '../../Utils/File';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ChatTile.css';\r\n\r\nclass ChatTile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loaded: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n        const { loaded } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.loaded !== loaded) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\r\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\r\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n    }\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatBlob = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chatId) return;\r\n\r\n        if (this.state.loaded) {\r\n            this.setState({ loaded: false });\r\n        } else {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateChatPhoto = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id, photo } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        if (this.state.loaded) {\r\n            this.setState({ loaded: false });\r\n        } else {\r\n            this.forceUpdate();\r\n        }\r\n\r\n        if (photo) {\r\n            const store = FileStore.getStore();\r\n            loadChatContent(store, chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleSelect = event => {\r\n        const { chatId, onSelect } = this.props;\r\n        if (!onSelect) return;\r\n\r\n        event.stopPropagation();\r\n        onSelect(chatId);\r\n    };\r\n\r\n    handleLoad = () => {\r\n        this.setState({ loaded: true });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size, t } = this.props;\r\n        const { loaded } = this.state;\r\n\r\n        let style = null;\r\n        if (size) {\r\n            style = {\r\n                width: size,\r\n                height: size\r\n            };\r\n        }\r\n\r\n        if (isDeletedPrivateChat(chatId)) {\r\n            return (\r\n                <div\r\n                    className={classNames(\r\n                        'chat-tile',\r\n                        { 'tile-small': small },\r\n                        { 'tile-dialog': dialog },\r\n                        { 'tile-big': big }\r\n                    )}\r\n                    style={style}\r\n                    onClick={this.handleSelect}>\r\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\r\n                        <div className='tile-saved-messages'>\r\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (isMeChat(chatId) && showSavedMessages) {\r\n            return (\r\n                <div\r\n                    className={classNames(\r\n                        'chat-tile',\r\n                        { 'tile-small': small },\r\n                        { 'tile-dialog': dialog },\r\n                        { 'tile-big': big }\r\n                    )}\r\n                    style={style}\r\n                    onClick={this.handleSelect}>\r\n                    <div className={classNames('tile-photo', 'tile_color_4', { pointer: onSelect })}>\r\n                        <div className='tile-saved-messages'>\r\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { photo } = chat;\r\n\r\n        const letters = getChatLetters(chat, t);\r\n        const src = getSrc(photo ? photo.small : null);\r\n        const tileLoaded = src && loaded;\r\n\r\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\r\n\r\n        return (\r\n            <div\r\n                className={classNames(\r\n                    'chat-tile',\r\n                    { [tileColor]: !tileLoaded },\r\n                    { pointer: onSelect },\r\n                    { 'tile-dialog': dialog },\r\n                    { 'tile-small': small },\r\n                    { 'tile-big': big }\r\n                )}\r\n                style={style}\r\n                onClick={this.handleSelect}>\r\n                {!tileLoaded && (\r\n                    <div className='tile-photo'>\r\n                        <span className='tile-text'>{letters}</span>\r\n                    </div>\r\n                )}\r\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\r\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChatTile.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    showSavedMessages: PropTypes.bool,\r\n    showOnline: PropTypes.bool,\r\n    size: PropTypes.number\r\n};\r\n\r\nChatTile.defaultProps = {\r\n    showSavedMessages: true,\r\n    showOnline: false\r\n};\r\n\r\nexport default withTranslation()(ChatTile);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ChatTile from './ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './ForwardTargetChat.css';\r\n\r\nclass ForwardTargetChat extends React.Component {\r\n    render() {\r\n        const { chatId, selected, onSelect, t } = this.props;\r\n\r\n        const shortTitle = getChatShortTitle(chatId, true, t);\r\n\r\n        return (\r\n            <div\r\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\r\n                onClick={onSelect}>\r\n                <div className='forward-target-chat-tile'>\r\n                    <div className='forward-target-chat-tile-wrapper'>\r\n                        <ChatTile chatId={chatId} />\r\n                    </div>\r\n                    {selected && <div className='forward-target-chat-selection' />}\r\n                    <div\r\n                        className={classNames(\r\n                            'forward-target-chat-mark',\r\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\r\n                        )}\r\n                    />\r\n                    <div className='forward-target-chat-mark-icon' />\r\n                </div>\r\n                <div className='forward-target-chat-title'>{shortTitle}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForwardTargetChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    selected: PropTypes.bool,\r\n    onSelect: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(ForwardTargetChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport async function copy(text) {\r\n    try {\r\n        if (navigator.clipboard) {\r\n            await navigator.clipboard.writeText(text);\r\n            return true;\r\n        }\r\n    } catch (e) {\r\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\r\n    }\r\n\r\n    return copyOld(text);\r\n}\r\n\r\nfunction copyOld(text) {\r\n    let element;\r\n    let successful;\r\n    try {\r\n        element = document.createElement('textarea');\r\n        element.contentEditable = true;\r\n        element.readOnly = true;\r\n        element.value = text;\r\n        element.style.all = 'unset';\r\n        element.style.position = 'fixed';\r\n        element.style.top = 0;\r\n        element.style.clip = 'rect(0, 0, 0, 0)';\r\n        element.style.whiteSpace = 'pre';\r\n        element.style.webkitUserSelect = 'text';\r\n        element.style.MozUserSelect = 'text';\r\n        element.style.msUserSelect = 'text';\r\n        element.style.userSelect = 'text';\r\n\r\n        document.body.appendChild(element);\r\n\r\n        element.focus();\r\n        element.select();\r\n\r\n        successful = document.execCommand('copy');\r\n        if (!successful) {\r\n            throw new Error();\r\n        }\r\n        return true;\r\n    } catch {\r\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\r\n    } finally {\r\n        if (element) {\r\n            document.body.removeChild(element);\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport OptionStore from '../Stores/OptionStore';\r\n\r\nlet cyrillicInput = null;\r\n\r\nfunction getCyrillicInputMap() {\r\n    return new Map([\r\n        ['q', 'й'],\r\n        ['w', 'ц'],\r\n        ['e', 'у'],\r\n        ['r', 'к'],\r\n        ['t', 'е'],\r\n        ['y', 'н'],\r\n        ['u', 'г'],\r\n        ['i', 'ш'],\r\n        ['o', 'щ'],\r\n        ['p', 'з'],\r\n        ['[', 'х'],\r\n        [']', 'ъ'],\r\n        ['a', 'ф'],\r\n        ['s', 'ы'],\r\n        ['d', 'в'],\r\n        ['f', 'а'],\r\n        ['g', 'п'],\r\n        ['h', 'р'],\r\n        ['j', 'о'],\r\n        ['k', 'л'],\r\n        ['l', 'д'],\r\n        [';', 'ж'],\r\n        [\"'\", 'э'],\r\n        ['\\\\', 'ё'],\r\n        ['z', 'я'],\r\n        ['x', 'ч'],\r\n        ['c', 'с'],\r\n        ['v', 'м'],\r\n        ['b', 'и'],\r\n        ['n', 'т'],\r\n        ['m', 'ь'],\r\n        [',', 'б'],\r\n        ['.', 'ю']\r\n    ]);\r\n}\r\n\r\nfunction isCyrillicPackId(packId) {\r\n    if (!packId) return false;\r\n\r\n    const { value } = packId;\r\n    if (!value) return false;\r\n\r\n    return value.value === 'ru';\r\n}\r\n\r\nfunction getCyrillicInput(input) {\r\n    if (!input) return null;\r\n    if (!input.length) return null;\r\n\r\n    const currentPackId = OptionStore.get('language_pack_id');\r\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\r\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\r\n    if (!hasCyrillicPackId) return null;\r\n\r\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\r\n\r\n    let output = '';\r\n    for (let i = 0; i < input.length; i++) {\r\n        if (cyrillicInput.has(input[i])) {\r\n            output += cyrillicInput.get(input[i]);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return output === '' ? null : output;\r\n}\r\n\r\nlet latinInput = null;\r\n\r\nfunction getLatinInputMap() {\r\n    return new Map([\r\n        ['й', 'q'],\r\n        ['ц', 'w'],\r\n        ['у', 'e'],\r\n        ['к', 'r'],\r\n        ['е', 't'],\r\n        ['н', 'y'],\r\n        ['г', 'u'],\r\n        ['ш', 'i'],\r\n        ['щ', 'o'],\r\n        ['з', 'p'],\r\n        ['х', '['],\r\n        ['ъ', ']'],\r\n        ['ф', 'a'],\r\n        ['ы', 's'],\r\n        ['в', 'd'],\r\n        ['а', 'f'],\r\n        ['п', 'g'],\r\n        ['р', 'h'],\r\n        ['о', 'j'],\r\n        ['л', 'k'],\r\n        ['д', 'l'],\r\n        ['ж', ';'],\r\n        ['э', \"'\"],\r\n        ['ё', '\\\\'],\r\n        ['я', 'z'],\r\n        ['ч', 'x'],\r\n        ['с', 'c'],\r\n        ['м', 'v'],\r\n        ['и', 'b'],\r\n        ['т', 'n'],\r\n        ['ь', 'm'],\r\n        ['б', ','],\r\n        ['ю', '.']\r\n    ]);\r\n}\r\n\r\nfunction getLatinInput(input) {\r\n    if (!input) return null;\r\n    if (!input.length) return null;\r\n\r\n    latinInput = latinInput || getLatinInputMap();\r\n\r\n    let output = '';\r\n    for (let i = 0; i < input.length; i++) {\r\n        if (latinInput.has(input[i])) {\r\n            output += latinInput.get(input[i]);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return output === '' ? null : output;\r\n}\r\n\r\nexport { getCyrillicInput, getLatinInput };\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\r\nimport { copy } from '../../Utils/Text';\r\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\r\nimport { clearSelection, forward } from '../../Actions/Client';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ForwardDialog.css';\r\n\r\nclass ForwardDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatIds: [],\r\n            savedMessages: null\r\n        };\r\n\r\n        this.searchRef = React.createRef();\r\n        this.messageRef = React.createRef();\r\n\r\n        this.targetChats = new Map();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        this.setSearchFocus();\r\n    }\r\n\r\n    loadContent = async () => {\r\n        this.getPublicMessageLink();\r\n\r\n        const promises = [];\r\n        const getChatsPromise = TdLibController.send({\r\n            '@type': 'getChats',\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: 100\r\n        });\r\n        promises.push(getChatsPromise);\r\n\r\n        const savedMessagesPromise = TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        });\r\n        promises.push(savedMessagesPromise);\r\n\r\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\r\n\r\n        this.setState({\r\n            chatIds: chats.chat_ids,\r\n            savedMessages: savedMessages\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chats.chat_ids);\r\n    };\r\n\r\n    getPublicMessageLink = async () => {\r\n        const { chatId, messageIds } = this.props;\r\n        if (!chatId) return;\r\n        if (!messageIds) return;\r\n        if (messageIds.length > 1) return;\r\n        if (!isSupergroup(chatId)) return;\r\n        if (!getChatUsername(chatId)) return;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getPublicMessageLink',\r\n            chat_id: chatId,\r\n            message_id: messageIds[0],\r\n            for_album: false\r\n        });\r\n\r\n        this.setState({\r\n            publicMessageLink: result\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        forward(null);\r\n    };\r\n\r\n    handleCopyLink = () => {\r\n        const { t } = this.props;\r\n        const { publicMessageLink } = this.state;\r\n\r\n        if (!publicMessageLink) return;\r\n        if (!publicMessageLink.link) return;\r\n\r\n        const key = `copy_link_${publicMessageLink.link}`;\r\n        const message = t('LinkCopied');\r\n        const action = null;\r\n\r\n        copy(publicMessageLink.link);\r\n\r\n        this.handleScheduledAction(key, message, action);\r\n    };\r\n\r\n    handleScheduledAction = (key, message, action) => {\r\n        if (!key) return;\r\n\r\n        const { enqueueSnackbar } = this.props;\r\n        if (!enqueueSnackbar) return;\r\n\r\n        const TRANSITION_DELAY = 150;\r\n        if (\r\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\r\n        ) {\r\n            enqueueSnackbar(message, {\r\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n                action: [\r\n                    <IconButton\r\n                        key='close'\r\n                        aria-label='Close'\r\n                        color='inherit'\r\n                        className='notification-close-button'\r\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                ]\r\n            });\r\n        }\r\n    };\r\n\r\n    getForwardPhotoSize = (chatId, messageIds) => {\r\n        if (messageIds.length !== 1) return null;\r\n\r\n        const message = MessageStore.get(chatId, messageIds[0]);\r\n        if (!message) return null;\r\n\r\n        const { can_be_forwarded, content } = message;\r\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\r\n            const { photo } = content;\r\n            if (!photo) return null;\r\n\r\n            const { sizes } = photo;\r\n            if (sizes && sizes.length) {\r\n                return sizes[sizes.length - 1];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    handleSend = () => {\r\n        this.handleClose();\r\n        clearSelection();\r\n\r\n        const { chatId, messageIds, inputMessageContent } = this.props;\r\n        if (!chatId && !messageIds && !inputMessageContent) return;\r\n\r\n        const text = this.getInnerText(this.messageRef.current);\r\n\r\n        this.targetChats.forEach(targetChatId => {\r\n            if (inputMessageContent) {\r\n                if (text) {\r\n                    if ('caption' in inputMessageContent) {\r\n                        inputMessageContent.caption = {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        };\r\n                    } else {\r\n                        TdLibController.send({\r\n                            '@type': 'sendMessage',\r\n                            chat_id: targetChatId,\r\n                            reply_to_message_id: 0,\r\n                            disable_notifications: false,\r\n                            from_background: false,\r\n                            reply_markup: null,\r\n                            input_message_content: {\r\n                                '@type': 'inputMessageText',\r\n                                text: {\r\n                                    '@type': 'formattedText',\r\n                                    text,\r\n                                    entities: null\r\n                                },\r\n                                disable_web_page_preview: false,\r\n                                clear_draft: false\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: inputMessageContent\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            const size = this.getForwardPhotoSize(chatId, messageIds);\r\n            if (size) {\r\n                const { width, height, photo } = size;\r\n\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: {\r\n                        '@type': 'inputMessagePhoto',\r\n                        photo: {\r\n                            '@type': 'inputFileId',\r\n                            id: photo.id\r\n                        },\r\n                        thumbnail: null,\r\n                        added_sticker_file_ids: [],\r\n                        width: width,\r\n                        height: height,\r\n                        caption: {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        },\r\n                        ttl: 0\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            if (text) {\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: {\r\n                        '@type': 'inputMessageText',\r\n                        text: {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        },\r\n                        disable_web_page_preview: false,\r\n                        clear_draft: false\r\n                    }\r\n                });\r\n            }\r\n\r\n            TdLibController.send({\r\n                '@type': 'forwardMessages',\r\n                chat_id: targetChatId,\r\n                from_chat_id: chatId,\r\n                message_ids: messageIds,\r\n                disable_notifications: false,\r\n                from_background: false,\r\n                as_album: false\r\n            });\r\n        });\r\n    };\r\n\r\n    handleChangeSelection = chatId => {\r\n        if (this.targetChats.has(chatId)) {\r\n            this.targetChats.delete(chatId);\r\n        } else {\r\n            this.targetChats.set(chatId, chatId);\r\n        }\r\n\r\n        // console.log(this.targetChats);\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    getInnerText = element => {\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        return innerText;\r\n    };\r\n\r\n    handleSearchKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    handleSearchKeyUp = async () => {\r\n        const { chatIds, savedMessages } = this.state;\r\n\r\n        const element = this.searchRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n\r\n        const innerText = this.getInnerText(element).trim();\r\n        if (!innerText) {\r\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\r\n            return;\r\n        }\r\n\r\n        const latinText = getLatinInput(innerText);\r\n        const cyrillicText = getCyrillicInput(innerText);\r\n\r\n        const chatsSource = savedMessages\r\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\r\n            : chatIds;\r\n\r\n        const searchResults = chatsSource.filter(\r\n            x =>\r\n                this.hasSearchText(x, innerText) ||\r\n                (latinText && this.hasSearchText(x, latinText)) ||\r\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\r\n        );\r\n\r\n        this.setState({ searchText: innerText, searchResults });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatsOnServer',\r\n            query: innerText,\r\n            limit: 100\r\n        });\r\n\r\n        if (this.state.searchText !== innerText) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            globalSearchResults: result.chat_ids\r\n        });\r\n    };\r\n\r\n    handleSearchPaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleMessageKeyUp = () => {\r\n        const element = this.messageRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    };\r\n\r\n    handleMessagePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    hasSearchText = (chatId, searchText) => {\r\n        const { t } = this.props;\r\n        const { savedMessages } = this.state;\r\n\r\n        if (savedMessages && chatId === savedMessages.id) {\r\n            const title = getChatTitle(chatId, true, t) || '';\r\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        const title1 = getChatTitle(chatId, false, t) || '';\r\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        const username = getChatUsername(chatId) || '';\r\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setSearchFocus = () => {\r\n        setTimeout(() => {\r\n            if (this.searchRef.current) {\r\n                const element = this.searchRef.current;\r\n\r\n                element.focus();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            chatIds,\r\n            searchText,\r\n            searchResults,\r\n            globalSearchResults,\r\n            savedMessages,\r\n            publicMessageLink\r\n        } = this.state;\r\n\r\n        const chatsSource = savedMessages\r\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\r\n            : chatIds;\r\n\r\n        const chats = chatsSource.map(x => (\r\n            <ForwardTargetChat\r\n                key={x}\r\n                chatId={x}\r\n                selected={this.targetChats.has(x)}\r\n                onSelect={() => this.handleChangeSelection(x)}\r\n            />\r\n        ));\r\n\r\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\r\n        const filteredResults = (globalSearchResults || []).filter(\r\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\r\n        );\r\n\r\n        const foundChats = (searchResults || [])\r\n            .concat(filteredResults)\r\n            .map(x => (\r\n                <ForwardTargetChat\r\n                    key={x}\r\n                    chatId={x}\r\n                    selected={this.targetChats.has(x)}\r\n                    onSelect={() => this.handleChangeSelection(x)}\r\n                />\r\n            ));\r\n\r\n        return (\r\n            <Dialog\r\n                open\r\n                onClose={this.handleClose}\r\n                aria-labelledby='forward-dialog-title'\r\n                aria-describedby='forward-dialog-description'\r\n                className='forward-dialog'>\r\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\r\n                <div\r\n                    ref={this.searchRef}\r\n                    id='forward-dialog-search'\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    placeholder={t('Search')}\r\n                    onKeyDown={this.handleSearchKeyDown}\r\n                    onKeyUp={this.handleSearchKeyUp}\r\n                    onPaste={this.handleSearchPaste}\r\n                />\r\n                <div className='forward-dialog-content'>\r\n                    <div className='forward-dialog-list'>{chats}</div>\r\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\r\n                </div>\r\n                {this.targetChats.size > 0 && (\r\n                    <div\r\n                        ref={this.messageRef}\r\n                        id='forward-dialog-message'\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        placeholder={t('ShareComment')}\r\n                        onKeyUp={this.handleMessageKeyUp}\r\n                        onPaste={this.handleMessagePaste}\r\n                    />\r\n                )}\r\n                <DialogActions>\r\n                    <Button onClick={this.handleClose} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    {this.targetChats.size > 0 && (\r\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\r\n                            {t('Send')}\r\n                        </Button>\r\n                    )}\r\n                    {!this.targetChats.size && publicMessageLink && (\r\n                        <Button onClick={this.handleCopyLink} color='primary'>\r\n                            {t('CopyLink')}\r\n                        </Button>\r\n                    )}\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nForwardDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageIds: PropTypes.array,\r\n    inputMessageContent: PropTypes.object\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(ForwardDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\r\n    'Document2'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\r\n    'SharedMedia'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\r\n    'Verified'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\r\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogTitle.css';\r\n\r\nclass DialogTitle extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, showSavedMessages } = this.props;\r\n\r\n        const isVerified = isChatVerified(chatId);\r\n        const title = getChatTitle(chatId, showSavedMessages, t);\r\n\r\n        return (\r\n            <div className='dialog-title'>\r\n                <span className='dialog-title-span'>{title}</span>\r\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogTitle.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    showSavedMessages: PropTypes.bool\r\n};\r\n\r\nDialogTitle.defaultProps = {\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(DialogTitle);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport './DialogStatus.css';\r\n\r\nclass DialogStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            subtitle: getChatSubtitleWithoutTyping(chatId),\r\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            const { chatId } = props;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                subtitle: getChatSubtitleWithoutTyping(chatId),\r\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n        const { subtitle, isAccent } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.subtitle !== subtitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isAccent !== isAccent) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        let updateSubtitle = false;\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n                if (fullInfo && fullInfo.members) {\r\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\r\n                    if (member) {\r\n                        updateSubtitle = true;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    updateSubtitle = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    updateSubtitle = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (updateSubtitle) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    updateSubtitle = chatId => {\r\n        this.setState({\r\n            subtitle: getChatSubtitleWithoutTyping(chatId),\r\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n        });\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (\r\n            type &&\r\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\r\n            type.user_id === update.user_id\r\n        ) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { subtitle: externalSubtitle } = this.props;\r\n        const { subtitle, isAccent } = this.state;\r\n\r\n        return (\r\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\r\n                {externalSubtitle ? externalSubtitle + ', ' : null}\r\n                {subtitle}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogStatus;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport DialogStatus from './DialogStatus';\r\nimport { isMeChat } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './Chat.css';\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = this.props;\r\n        this.state = {\r\n            chat: ChatStore.get(chatId)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.chatId !== this.props.chatId;\r\n    }\r\n\r\n    handleClick = () => {\r\n        const { chatId, onSelect } = this.props;\r\n        if (!onSelect) return;\r\n\r\n        onSelect(chatId);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\r\n\r\n        const isSavedMessages = isMeChat(chatId);\r\n\r\n        return (\r\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\r\n                <div className='chat-wrapper'>\r\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\r\n                    {showTitle && (\r\n                        <div className='chat-inner-wrapper'>\r\n                            <div className='tile-first-row'>\r\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\r\n                            </div>\r\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\r\n                                <div className='tile-second-row'>\r\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    subtitle: PropTypes.string,\r\n    showSavedMessages: PropTypes.bool,\r\n    showStatus: PropTypes.bool,\r\n    showTitle: PropTypes.bool,\r\n    onSelect: PropTypes.func,\r\n    onTileSelect: PropTypes.func\r\n};\r\n\r\nChat.defaultProps = {\r\n    showSavedMessages: true,\r\n    showStatus: true,\r\n    showTitle: true\r\n};\r\n\r\nexport default Chat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\r\n    'Back'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\r\nimport './ChatDetailsHeader.css';\r\n\r\nclass ChatDetailsHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, t, backButton, onClick, onClose } = this.props;\r\n\r\n        let info = t('ChatInfo');\r\n        if (isPrivateChat(chatId)) {\r\n            info = t('Info');\r\n        } else if (isChannelChat(chatId)) {\r\n            info = t('ChannelInfo');\r\n        }\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                {backButton && (\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                )}\r\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\r\n                    <span className='header-status-content'>{info}</span>\r\n                </div>\r\n                {!backButton && (\r\n                    <IconButton className='header-right-button' onClick={onClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(ChatDetailsHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport { isChatMuted } from '../Utils/Chat';\r\nimport { MUTED_VALUE_MAX, MUTED_VALUE_MIN } from '../Constants';\r\n\r\nexport async function getChat(chatId) {\r\n    const chat = TdLibController.send({\r\n        '@type': 'getChat',\r\n        chat_id: chatId\r\n    });\r\n    ChatStore.set(chat);\r\n\r\n    return chat;\r\n}\r\n\r\nexport function setChatChatList(chatId, chatList) {\r\n    TdLibController.send({\r\n        '@type': 'setChatChatList',\r\n        chat_id: chatId,\r\n        chat_list: chatList\r\n    });\r\n}\r\n\r\nexport function toggleChatIsPinned(chatId, isPinned) {\r\n    TdLibController.send({\r\n        '@type': 'toggleChatIsPinned',\r\n        chat_id: chatId,\r\n        is_pinned: isPinned\r\n    });\r\n}\r\n\r\nexport function toggleChatIsMarkedAsUnread(chatId, isMarkedAsUnread) {\r\n    TdLibController.send({\r\n        '@type': 'toggleChatIsMarkedAsUnread',\r\n        chat_id: chatId,\r\n        is_marked_as_unread: isMarkedAsUnread\r\n    });\r\n}\r\n\r\nexport function toggleChatNotificationSettings(chatId, isMuted) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return;\r\n\r\n    const { notification_settings } = chat;\r\n    if (!notification_settings) return;\r\n\r\n    const isMutedPrev = isChatMuted(chatId);\r\n    if (isMutedPrev === isMuted) {\r\n        return;\r\n    }\r\n\r\n    const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\r\n    const newNotificationSettings = {\r\n        ...chat.notification_settings,\r\n        use_default_mute_for: false,\r\n        mute_for: muteFor\r\n    };\r\n\r\n    TdLibController.send({\r\n        '@type': 'setChatNotificationSettings',\r\n        chat_id: chatId,\r\n        notification_settings: newNotificationSettings\r\n    });\r\n}\r\n\r\nexport async function getChatCounters(chatId) {\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return;\r\n\r\n    const promises = [];\r\n\r\n    const photoCounter = TdLibController.send({\r\n        '@type': 'getChatMessageCount',\r\n        chat_id: chatId,\r\n        filter: { '@type': 'searchMessagesFilterPhoto' },\r\n        return_local: false\r\n    })\r\n        .then(result => {\r\n            return result ? result.count : 0;\r\n        })\r\n        .catch(() => {\r\n            return 0;\r\n        });\r\n    promises.push(photoCounter);\r\n\r\n    const videoCounter = TdLibController.send({\r\n        '@type': 'getChatMessageCount',\r\n        chat_id: chatId,\r\n        filter: { '@type': 'searchMessagesFilterVideo' },\r\n        return_local: false\r\n    })\r\n        .then(result => {\r\n            return result ? result.count : 0;\r\n        })\r\n        .catch(() => {\r\n            return 0;\r\n        });\r\n    promises.push(videoCounter);\r\n\r\n    const documentCounter = TdLibController.send({\r\n        '@type': 'getChatMessageCount',\r\n        chat_id: chatId,\r\n        filter: { '@type': 'searchMessagesFilterDocument' },\r\n        return_local: false\r\n    })\r\n        .then(result => {\r\n            return result ? result.count : 0;\r\n        })\r\n        .catch(() => {\r\n            return 0;\r\n        });\r\n    promises.push(documentCounter);\r\n\r\n    const audioCounter = TdLibController.send({\r\n        '@type': 'getChatMessageCount',\r\n        chat_id: chatId,\r\n        filter: { '@type': 'searchMessagesFilterAudio' },\r\n        return_local: false\r\n    })\r\n        .then(result => {\r\n            return result ? result.count : 0;\r\n        })\r\n        .catch(() => {\r\n            return 0;\r\n        });\r\n    promises.push(audioCounter);\r\n\r\n    const urlCounter = TdLibController.send({\r\n        '@type': 'getChatMessageCount',\r\n        chat_id: chatId,\r\n        filter: { '@type': 'searchMessagesFilterUrl' },\r\n        return_local: false\r\n    })\r\n        .then(result => {\r\n            return result ? result.count : 0;\r\n        })\r\n        .catch(() => {\r\n            return 0;\r\n        });\r\n    promises.push(urlCounter);\r\n\r\n    const voiceAndVideoNoteCounter = TdLibController.send({\r\n        '@type': 'getChatMessageCount',\r\n        chat_id: chatId,\r\n        filter: { '@type': 'searchMessagesFilterVoiceNote' },\r\n        return_local: false\r\n    })\r\n        .then(result => {\r\n            return result ? result.count : 0;\r\n        })\r\n        .catch(() => {\r\n            return 0;\r\n        });\r\n    promises.push(voiceAndVideoNoteCounter);\r\n\r\n    return await Promise.all(promises);\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { isChatMuted } from '../../Utils/Chat';\r\nimport { debounce } from '../../Utils/Common';\r\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\r\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport NotificationStore from '../../Stores/NotificationStore';\r\n\r\nclass Notifications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            isMuted: isChatMuted(chatId)\r\n        };\r\n\r\n        this.debouncedSetChatNotificationSettings = debounce(\r\n            this.setChatNotificationSettings,\r\n            NOTIFICATION_DEBOUNCE_DELAY_MS\r\n        );\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            const { chatId } = props;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                isMuted: isChatMuted(chatId)\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\r\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\r\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    onUpdateChatNotificationSettings = update => {\r\n        const { chat_id } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (!chat_id) return;\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({ isMuted: isChatMuted(chatId) });\r\n    };\r\n\r\n    onUpdateScopeNotificationSettings = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        switch (update.scope['@type']) {\r\n            case 'notificationSettingsScopeGroupChats': {\r\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\r\n                    this.setState({ isMuted: isChatMuted(chatId) });\r\n                }\r\n                break;\r\n            }\r\n            case 'notificationSettingsScopePrivateChats': {\r\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\r\n                    this.setState({ isMuted: isChatMuted(chatId) });\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSetChatNotifications = () => {\r\n        this.setState({ isMuted: !this.state.isMuted });\r\n        this.debouncedSetChatNotificationSettings();\r\n    };\r\n\r\n    setChatNotificationSettings = () => {\r\n        const { chatId } = this.props;\r\n        const { isMuted } = this.state;\r\n\r\n        toggleChatNotificationSettings(chatId, isMuted);\r\n    };\r\n}\r\n\r\nexport default Notifications;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Notifications from '../ColumnMiddle/Notifications';\r\n\r\nclass NotificationsListItem extends Notifications {\r\n    render() {\r\n        const { t } = this.props;\r\n        const { isMuted } = this.state;\r\n\r\n        return (\r\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\r\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\r\n                <ListItemText\r\n                    primary={\r\n                        <Typography variant='inherit' noWrap>\r\n                            {t('Notifications')}\r\n                        </Typography>\r\n                    }\r\n                />\r\n                <ListItemSecondaryAction>\r\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(NotificationsListItem);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { isUserBlocked } from '../../Utils/User';\r\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport './MoreListItem.css';\r\n\r\nclass MoreListItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = this.props;\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            openMore: false\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            return {\r\n                prevChatId: props.chatId,\r\n                openMore: false\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleMoreClick = () => {\r\n        this.setState({ openMore: !this.state.openMore });\r\n    };\r\n\r\n    handleSendMessage = () => {\r\n        const currentChatId = ApplicationStore.getChatId();\r\n        const { chatId } = this.props;\r\n        if (currentChatId === chatId) {\r\n            //this.dialogDetails.current.scrollToBottom();\r\n        } else {\r\n            TdLibController.setChatId(chatId);\r\n        }\r\n    };\r\n\r\n    handleBlock = () => {\r\n        const { chatId } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        const { user_id } = chat.type;\r\n        if (!user_id) return;\r\n\r\n        TdLibController.send({\r\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\r\n            user_id: user_id\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId } = this.props;\r\n        const { openMore } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const isGroup = isGroupChat(chatId);\r\n        let isBlocked = false;\r\n        if (!isGroup && chat.type) {\r\n            isBlocked = isUserBlocked(chat.type.user_id);\r\n        }\r\n        const isMember = isChatMember(chatId);\r\n        const isChannel = isChannelChat(chatId);\r\n\r\n        return (\r\n            <>\r\n                <ListItem button className='list-item' onClick={this.handleMoreClick}>\r\n                    <ListItemIcon>\r\n                        <MoreHorizIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                        primary={\r\n                            <Typography variant='inherit' noWrap>\r\n                                {t('More')}\r\n                            </Typography>\r\n                        }\r\n                    />\r\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\r\n                    <List component='div' disablePadding>\r\n                        {!isGroup && (\r\n                            <>\r\n                                <ListItem button className='list-item' onClick={this.handleSendMessage}>\r\n                                    <ListItemText\r\n                                        inset\r\n                                        primary={\r\n                                            <Typography variant='inherit' noWrap>\r\n                                                {t('SendMessage')}\r\n                                            </Typography>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <ListItem button className='list-item' onClick={this.handleBlock}>\r\n                                    <ListItemText\r\n                                        inset\r\n                                        primary={\r\n                                            <Typography color='secondary' variant='inherit' noWrap>\r\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\r\n                                            </Typography>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                            </>\r\n                        )}\r\n                        {isGroup && isMember && (\r\n                            <ListItem button className='list-item'>\r\n                                <ListItemText\r\n                                    inset\r\n                                    primary={\r\n                                        <Typography color='secondary' variant='inherit' noWrap>\r\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </ListItem>\r\n                        )}\r\n                        {isGroup && !isMember && (\r\n                            <ListItem button className='list-item'>\r\n                                <ListItemText\r\n                                    inset\r\n                                    primary={\r\n                                        <Typography color='secondary' variant='inherit' noWrap>\r\n                                            {t('ReportChat')}\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </ListItem>\r\n                        )}\r\n                    </List>\r\n                </Collapse>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(MoreListItem);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport HeadsetIcon from '@material-ui/icons/Headset';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\r\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport User from '../Tile/User';\r\nimport Chat from '../Tile/Chat';\r\nimport ChatDetailsHeader from './ChatDetailsHeader';\r\nimport NotificationsListItem from './NotificationsListItem';\r\nimport MoreListItem from './MoreListItem';\r\nimport { copy } from '../../Utils/Text';\r\nimport {\r\n    getChatUsername,\r\n    getChatPhoneNumber,\r\n    getChatBio,\r\n    isGroupChat,\r\n    getGroupChatMembers,\r\n    getChatFullInfo,\r\n    isPrivateChat,\r\n    getChatUserId,\r\n    isMeChat\r\n} from '../../Utils/Chat';\r\nimport { getUserStatusOrder } from '../../Utils/User';\r\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\r\nimport { formatPhoneNumber } from '../../Utils/Phone';\r\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatDetails.css';\r\n\r\nclass ChatDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.chatDetailsListRef = React.createRef();\r\n\r\n        const { chatId } = this.props;\r\n\r\n        this.members = new Map();\r\n        this.state = {\r\n            prevChatId: chatId\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            return {\r\n                prevChatId: props.chatId\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { chatId } = this.props;\r\n\r\n        const list = this.chatDetailsListRef.current;\r\n        const { scrollTop, scrollHeight, offsetHeight } = list;\r\n        const snapshot = {\r\n            scrollTop,\r\n            scrollHeight,\r\n            offsetHeight\r\n        };\r\n\r\n        // console.log(\r\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\r\n        // );\r\n\r\n        return snapshot;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, theme, counters, migratedCounters } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.counters !== counters) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.migratedCounters !== migratedCounters) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.props;\r\n        if (prevProps.chatId !== chatId) {\r\n            this.loadContent();\r\n        }\r\n\r\n        const list = this.chatDetailsListRef.current;\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\r\n        if (prevProps.chatId === chatId) {\r\n            list.scrollTop = scrollTop;\r\n        } else {\r\n            list.scrollTop = 0;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\r\n            chat.type.basic_group_id === update.basic_group_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeSupergroup' &&\r\n            chat.type.supergroup_id === update.supergroup_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\r\n            chat.type.user_id === update.user_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateUserStatus = update => {\r\n        if (this.members.has(update.user_id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    loadContent = () => {\r\n        this.loadChatContents();\r\n    };\r\n\r\n    loadChatContents = () => {\r\n        const { chatId, popup } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadChatsContent(store, [chatId]);\r\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\r\n        loadUsersContent(store, members);\r\n\r\n        if (popup) {\r\n            getChatFullInfo(chatId);\r\n        }\r\n    };\r\n\r\n    handleUsernameHint = () => {\r\n        const { t, chatId } = this.props;\r\n        const username = getChatUsername(chatId);\r\n        if (!username) return;\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\r\n\r\n        copy(usernameLink + username);\r\n\r\n        const key = `${chatId}_copy_username`;\r\n        const message = t('TextCopied');\r\n        const action = null;\r\n\r\n        this.handleScheduledAction(key, message, action);\r\n    };\r\n\r\n    handleScheduledAction = (key, message, action) => {\r\n        if (!key) return;\r\n\r\n        const { enqueueSnackbar } = this.props;\r\n        if (!enqueueSnackbar) return;\r\n\r\n        const TRANSITION_DELAY = 150;\r\n        if (\r\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\r\n        ) {\r\n            enqueueSnackbar(message, {\r\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n                action: [\r\n                    <IconButton\r\n                        key='close'\r\n                        aria-label='Close'\r\n                        color='inherit'\r\n                        className='notification-close-button'\r\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                ]\r\n            });\r\n        }\r\n    };\r\n\r\n    handlePhoneHint = () => {\r\n        const { t, chatId } = this.props;\r\n        const phoneNumber = getChatPhoneNumber(chatId);\r\n        if (!phoneNumber) return;\r\n\r\n        copy(formatPhoneNumber(phoneNumber));\r\n\r\n        const key = `${chatId}_copy_phone`;\r\n        const message = t('PhoneCopied');\r\n        const action = null;\r\n\r\n        this.handleScheduledAction(key, message, action);\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        this.chatDetailsListRef.current.scrollTop = 0;\r\n    };\r\n\r\n    handleOpenViewer = () => {\r\n        const { chatId, popup } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.photo) return;\r\n\r\n        setProfileMediaViewerContent({ chatId });\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    handleOpenChat = () => {\r\n        const { chatId, popup } = this.props;\r\n\r\n        openChat(chatId, null, false);\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    handleOpenUser = userId => {\r\n        openUser(userId, true);\r\n    };\r\n\r\n    getContentHeight = () => {\r\n        if (!this.chatDetailsListRef) return 0;\r\n\r\n        return this.chatDetailsListRef.current.clientHeight;\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            backButton,\r\n            className,\r\n            chatId,\r\n            onClose,\r\n            onOpenGroupInCommon,\r\n            onOpenSharedAudios,\r\n            onOpenSharedDocuments,\r\n            onOpenSharedLinks,\r\n            onOpenSharedMedia,\r\n            onOpenSharedPhotos,\r\n            onOpenSharedVideos,\r\n            onOpenSharedVoiceNotes,\r\n            popup,\r\n            t\r\n        } = this.props;\r\n\r\n        let { counters, migratedCounters } = this.props;\r\n        counters = counters || [0, 0, 0, 0, 0, 0];\r\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\r\n\r\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\r\n            (el, i) => el + migratedCounters[i]\r\n        );\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) {\r\n            return (\r\n                <div className='chat-details'>\r\n                    <ChatDetailsHeader onClose={onClose} />\r\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let groupInCommonCount = 0;\r\n        if (isPrivateChat(chatId)) {\r\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\r\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\r\n        }\r\n\r\n        const username = getChatUsername(chatId);\r\n        const phoneNumber = getChatPhoneNumber(chatId);\r\n        const bio = getChatBio(chatId);\r\n        const isGroup = isGroupChat(chatId);\r\n        const isMe = isMeChat(chatId);\r\n\r\n        const members = getGroupChatMembers(chatId);\r\n        const users = [];\r\n        this.members = new Map();\r\n        members.forEach(member => {\r\n            const user = UserStore.get(member.user_id);\r\n            if (user) {\r\n                this.members.set(user.id, user.id);\r\n                users.push(user);\r\n            }\r\n        });\r\n\r\n        const sortedUsers = users.sort((x, y) => {\r\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\r\n        });\r\n        const items = sortedUsers.map(user => (\r\n            <ListItem button className='list-item' key={user.id}>\r\n                <User userId={user.id} onSelect={this.handleOpenUser} />\r\n            </ListItem>\r\n        ));\r\n\r\n        const { photo } = chat;\r\n\r\n        const content = (\r\n            <>\r\n                <ChatDetailsHeader\r\n                    chatId={chatId}\r\n                    backButton={backButton}\r\n                    onClose={onClose}\r\n                    onClick={this.handleHeaderClick}\r\n                />\r\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\r\n                    <div className='chat-details-info'>\r\n                        <Chat\r\n                            chatId={chatId}\r\n                            big={true}\r\n                            showStatus={true}\r\n                            showSavedMessages={!popup}\r\n                            onTileSelect={photo ? this.handleOpenViewer : null}\r\n                        />\r\n                    </div>\r\n                    {(username || phoneNumber || bio) && (\r\n                        <>\r\n                            <List>\r\n                                {username && (\r\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\r\n                                        <ListItemIcon>\r\n                                            <AlternateEmailIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {username}\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {phoneNumber && (\r\n                                    <>\r\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\r\n                                            <ListItemIcon>\r\n                                                <CallIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText\r\n                                                primary={\r\n                                                    <Typography variant='inherit' noWrap>\r\n                                                        {formatPhoneNumber(phoneNumber)}\r\n                                                    </Typography>\r\n                                                }\r\n                                            />\r\n                                        </ListItem>\r\n                                    </>\r\n                                )}\r\n                                {bio && (\r\n                                    <ListItem className='list-item'>\r\n                                        <ListItemIcon>\r\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={bio}\r\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                            </List>\r\n                        </>\r\n                    )}\r\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\r\n                        <>\r\n                            <Divider />\r\n                            <List>\r\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\r\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\r\n                                {popup && !isGroup && (\r\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\r\n                                        <ListItemText\r\n                                            inset\r\n                                            primary={\r\n                                                <Typography color='primary' variant='inherit' noWrap>\r\n                                                    {t('SendMessage').toUpperCase()}\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                            </List>\r\n                        </>\r\n                    )}\r\n                    {(photoCount > 0 ||\r\n                        videoCount > 0 ||\r\n                        documentCount > 0 ||\r\n                        audioCount > 0 ||\r\n                        urlCount > 0 ||\r\n                        voiceAndVideoNoteCount > 0 ||\r\n                        groupInCommonCount > 0) && (\r\n                        <>\r\n                            <Divider />\r\n                            <List>\r\n                                {photoCount > 0 && (\r\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\r\n                                        <ListItemIcon>\r\n                                            <PhotoIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {videoCount > 0 && (\r\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\r\n                                        <ListItemIcon>\r\n                                            <VideocamIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {documentCount > 0 && (\r\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\r\n                                        <ListItemIcon>\r\n                                            <InsertDriveFileIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {audioCount > 0 && (\r\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\r\n                                        <ListItemIcon>\r\n                                            <HeadsetIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {urlCount > 0 && (\r\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\r\n                                        <ListItemIcon>\r\n                                            <InsertLinkIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {voiceAndVideoNoteCount > 0 && (\r\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\r\n                                        <ListItemIcon>\r\n                                            <MicIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {voiceAndVideoNoteCount === 1\r\n                                                        ? '1 voice message'\r\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {groupInCommonCount > 0 && (\r\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\r\n                                        <ListItemIcon>\r\n                                            <GroupIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {groupInCommonCount === 1\r\n                                                        ? '1 group in common'\r\n                                                        : `${groupInCommonCount} groups in common`}\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                            </List>\r\n                        </>\r\n                    )}\r\n                    {items.length > 0 && (\r\n                        <>\r\n                            <Divider />\r\n                            <List>{items}</List>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\r\n    }\r\n}\r\n\r\nChatDetails.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    onOpenGroupInCommon: PropTypes.func,\r\n    onOpenSharedDocuments: PropTypes.func,\r\n    onOpenSharedMedia: PropTypes.func,\r\n    onOpenSharedLinks: PropTypes.func,\r\n    onOpenSharedPhotos: PropTypes.func,\r\n    onOpenSharedVideos: PropTypes.func,\r\n    onOpenSharedVoiceNotes: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withSnackbar,\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ChatDetails);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport './GroupsInCommonHeader.css';\r\n\r\nclass GroupsInCommonHeader extends React.Component {\r\n    render() {\r\n        const { onClose } = this.props;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <IconButton className='header-left-button' onClick={onClose}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-status grow cursor-pointer'>\r\n                    <span className='header-status-content'>Groups in common</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupsInCommonHeader.propTypes = {\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default GroupsInCommonHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Chat from '../Tile/Chat';\r\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './GroupsInCommon.css';\r\n\r\nclass GroupsInCommon extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatIds: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId } = this.props;\r\n\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getGroupsInCommon',\r\n            user_id: userId,\r\n            offset_chat_id: 0,\r\n            limit: 100\r\n        }).then(result => {\r\n            const store = FileStore.getStore();\r\n            loadChatsContent(store, result.chat_ids);\r\n\r\n            this.setState({ chatIds: result.chat_ids });\r\n        });\r\n    }\r\n\r\n    handleSelect = chatId => {\r\n        const { popup } = this.props;\r\n\r\n        openChat(chatId);\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { minHeight, onClose, popup } = this.props;\r\n        const { chatIds } = this.state;\r\n\r\n        const chats = chatIds.map(x => (\r\n            <ListItem button key={x}>\r\n                <Chat chatId={x} onSelect={this.handleSelect} />\r\n            </ListItem>\r\n        ));\r\n\r\n        const content = (\r\n            <>\r\n                <GroupsInCommonHeader onClose={onClose} />\r\n                <div className='groups-in-common-list' style={{ minHeight }}>\r\n                    {chats}\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\r\n    }\r\n}\r\n\r\nGroupsInCommon.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nGroupsInCommon.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default GroupsInCommon;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './ContextMenu.css';\r\n\r\nclass ContextMenu extends React.Component {\r\n    handleOpenMessage = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        openChat(chatId, messageId);\r\n    };\r\n\r\n    handleForward = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        forwardMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleDelete = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        deleteMessages(chatId, [messageId]);\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\r\n\r\n        return (\r\n            <Popover\r\n                open={open}\r\n                onClose={onClose}\r\n                anchorReference='anchorPosition'\r\n                anchorPosition={anchorPosition}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left'\r\n                }}\r\n                onMouseDown={e => e.stopPropagation()}\r\n                onClick={e => e.stopPropagation()}>\r\n                <MenuList>\r\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\r\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\r\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\r\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\r\n                    )}\r\n                </MenuList>\r\n            </Popover>\r\n        );\r\n    }\r\n}\r\n\r\nContextMenu.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    anchorPosition: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    showOpenMessage: PropTypes.bool\r\n};\r\n\r\nexport default withTranslation()(ContextMenu);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContextMenu from './ContextMenu';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport { getMedia } from '../../../Utils/Media';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedDocument.css';\r\n\r\nclass SharedDocument extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\r\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedDocument.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    showOpenMessage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default SharedDocument;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\r\n    'Search'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport SearchIcon from '../../../Assets/Icons/Search';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\r\nimport './SharedMediaHeader.css';\r\n\r\nclass SharedMediaHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n\r\n        this.state = {\r\n            openSearch: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { openSearch } = this.state;\r\n\r\n        if (openSearch && openSearch !== prevProps.openSearch) {\r\n            setTimeout(() => {\r\n                if (this.searchInputRef.current) {\r\n                    this.searchInputRef.current.focus();\r\n                }\r\n            }, ANIMATION_DURATION_200MS);\r\n        }\r\n    }\r\n\r\n    handleSearch = () => {\r\n        if (this.searchInputRef.current) {\r\n            const innerText = this.searchInputRef.current.innerText;\r\n            if (innerText) {\r\n                this.searchInputRef.current.innerText = '';\r\n\r\n                const { onSearch } = this.props;\r\n                if (!onSearch) return;\r\n\r\n                onSearch('');\r\n                return;\r\n            }\r\n        }\r\n\r\n        const { onCloseSearch } = this.props;\r\n        const { openSearch } = this.state;\r\n\r\n        this.setState({ openSearch: !openSearch });\r\n\r\n        if (onCloseSearch) {\r\n            onCloseSearch();\r\n        }\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    handleKeyUp = () => {\r\n        const element = this.searchInputRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        const { onSearch } = this.props;\r\n        if (!onSearch) return;\r\n\r\n        onSearch(innerText);\r\n    };\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, title, onClick, onClose, onSearch } = this.props;\r\n        const { openSearch } = this.state;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                {!openSearch ? (\r\n                    <>\r\n                        <IconButton className='header-left-button' onClick={onClose}>\r\n                            <ArrowBackIcon />\r\n                        </IconButton>\r\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\r\n                            <span className='header-status-content'>{title}</span>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div className='header-search-input grow'>\r\n                            <div\r\n                                id='header-search-inputbox'\r\n                                ref={this.searchInputRef}\r\n                                placeholder={t('Search')}\r\n                                contentEditable\r\n                                suppressContentEditableWarning\r\n                                onKeyDown={this.handleKeyDown}\r\n                                onKeyUp={this.handleKeyUp}\r\n                                onPaste={this.handlePaste}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n                {Boolean(onSearch) && (\r\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\r\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\r\n                    </IconButton>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaHeader.propTypes = {\r\n    title: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    onClose: PropTypes.func,\r\n    onCloseSearch: PropTypes.func,\r\n    onSearch: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedMediaHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\r\nimport SharedMediaHeader from './SharedMediaHeader';\r\nimport { between, insertByOrder } from '../../../Utils/Common';\r\nimport { loadMessageContents } from '../../../Utils/File';\r\nimport { messageComparatorDesc } from '../../../Utils/Message';\r\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaBase.css';\r\n\r\nclass SharedMediaBase extends React.Component {\r\n    getListClassName() {\r\n        return null;\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return null;\r\n    }\r\n\r\n    constructor(props) {\r\n        if (new.target === SharedMediaBase) {\r\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\r\n        }\r\n\r\n        // console.log('SharedMediaBase.ctor');\r\n\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n\r\n        this.state = {\r\n            items: [],\r\n            migratedItems: [],\r\n            searchItems: [],\r\n            searchMigratedItems: []\r\n        };\r\n    }\r\n\r\n    hasSearch() {\r\n        return true;\r\n    }\r\n\r\n    isValidContent(content) {\r\n        throw new Error('Virtual method isValidContent is not implemented');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, id } = message;\r\n\r\n        return (\r\n            <SharedDocument\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n\r\n    getSearchFilter() {\r\n        throw new Error('Virtual method getSearchFilter is not implemented');\r\n    }\r\n\r\n    getHeader() {\r\n        throw new Error('Virtual method getHeader is not implemented');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { chat_id, message_id, old_content, new_content } = update;\r\n\r\n        const message = MessageStore.get(chat_id, message_id);\r\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\r\n\r\n        if (chat_id === chatId) {\r\n            if (!items.length) return;\r\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\r\n\r\n            const index = items.findIndex(x => x.id === message_id);\r\n            if (this.isValidContent(new_content)) {\r\n                if (index === -1) {\r\n                    // add new document\r\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\r\n                } else {\r\n                    // replace document\r\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\r\n                }\r\n            } else {\r\n                if (index === -1) {\r\n                } else {\r\n                    // remove none document\r\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\r\n                }\r\n            }\r\n        } else if (chat_id === migratedChatId) {\r\n            if (!migratedItems.length) return;\r\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\r\n\r\n            const index = migratedItems.findIndex(x => x.id === message_id);\r\n            if (this.isValidContent(new_content)) {\r\n                if (index === -1) {\r\n                    // add new document\r\n                    this.setState({\r\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\r\n                    });\r\n                } else {\r\n                    // replace document\r\n                    this.setState({\r\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\r\n                    });\r\n                }\r\n            } else {\r\n                if (index === -1) {\r\n                } else {\r\n                    // remove none document\r\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { message } = update;\r\n        const { chat_id } = message;\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!this.isValidMessage(message)) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, [message]);\r\n\r\n        if (chat_id === chatId) {\r\n            this.setState({ items: [message].concat(items) });\r\n        } else if (chat_id === migratedChatId) {\r\n            this.setState({ migratedItems: [message].concat(migratedItems) });\r\n        }\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { chat_id, message_ids } = update;\r\n\r\n        const map = new Map(message_ids.map(x => [x, x]));\r\n        const callback = () => {\r\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\r\n                this.onLoadNext(this.params);\r\n            }\r\n        };\r\n\r\n        if (chat_id === chatId) {\r\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\r\n        } else if (chat_id === migratedChatId) {\r\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\r\n        }\r\n    };\r\n\r\n    loadContent = () => {\r\n        this.params = {\r\n            loading: false,\r\n            completed: false,\r\n            migrateCompleted: false,\r\n            items: [],\r\n            migratedItems: [],\r\n            filter: this.getSearchFilter()\r\n        };\r\n        this.onLoadNext(this.params);\r\n    };\r\n\r\n    onLoadNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { completed, filter, items, loading } = params;\r\n\r\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\r\n\r\n        if (loading) return;\r\n        if (completed) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\r\n            filter\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        params.items = items.concat(messages.filter(this.isValidMessage));\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        MessageStore.setItems(result.messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n\r\n        this.setState({ items: params.items });\r\n\r\n        if (params.completed) {\r\n            this.onLoadMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onLoadNext(params, false);\r\n        }\r\n    };\r\n\r\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\r\n        const { migratedChatId } = this.props;\r\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\r\n\r\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\r\n\r\n        if (!migratedChatId) return;\r\n        if (loading) return;\r\n        if (migrateCompleted) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: migratedChatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\r\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (params.migrateCompleted) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ migratedItems: params.migratedItems });\r\n\r\n        if (incompleteResults) {\r\n            this.onLoadMigratedNext(params, false);\r\n        }\r\n    };\r\n\r\n    handleScroll = () => {\r\n        if (!this.listRef) return;\r\n\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        const { params } = this;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (params && !params.completed) {\r\n                this.onLoadNext(params);\r\n            } else {\r\n                this.onLoadMigratedNext(params);\r\n            }\r\n        }\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        list.scrollTop = 0;\r\n    };\r\n\r\n    handleSearchScroll = () => {\r\n        if (!this.searchListRef) return;\r\n\r\n        const list = this.searchListRef.current;\r\n        if (!list) return;\r\n\r\n        const { searchParams } = this;\r\n        if (!searchParams) return;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (!searchParams.completed) {\r\n                this.onSearchNext(searchParams);\r\n            } else {\r\n                this.onSearchMigratedNext(searchParams);\r\n            }\r\n        }\r\n    };\r\n\r\n    onSearchNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { completed, filter, items, loading, query } = params;\r\n\r\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\r\n\r\n        if (completed) return;\r\n        if (loading) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query,\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.items = items.concat(messages.filter(this.isValidMessage));\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (this.searchParams !== params) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\r\n\r\n        if (params.completed) {\r\n            this.onSearchMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onSearchNext(params, false);\r\n        }\r\n    };\r\n\r\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\r\n        const { migratedChatId } = this.props;\r\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\r\n\r\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\r\n\r\n        if (!migratedChatId) return;\r\n        if (loading) return;\r\n        if (migrateCompleted) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: migratedChatId,\r\n            query,\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\r\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (this.searchParams !== params) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\r\n\r\n        if (incompleteResults) {\r\n            this.onSearchMigratedNext(params, false);\r\n        }\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text ? text.trim() : '';\r\n        if (!query) {\r\n            this.handleCloseSearch();\r\n            return;\r\n        }\r\n\r\n        this.searchParams = {\r\n            query,\r\n            completed: false,\r\n            migrateCompleted: false,\r\n            items: [],\r\n            migratedItems: [],\r\n            filter: this.getSearchFilter()\r\n        };\r\n        this.onSearchNext(this.searchParams, true);\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.searchParams = null;\r\n        this.setState({ searchItems: [], searchMigratedItems: [] });\r\n    };\r\n\r\n    isValidMessage = message => {\r\n        if (!message) return false;\r\n\r\n        return this.isValidContent(message.content);\r\n    };\r\n\r\n    render() {\r\n        const { minHeight, onClose, popup } = this.props;\r\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\r\n        const { searchParams } = this;\r\n\r\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\r\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\r\n\r\n        return (\r\n            <>\r\n                <SharedMediaHeader\r\n                    title={this.getHeader()}\r\n                    onClick={this.handleHeaderClick}\r\n                    onClose={onClose}\r\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\r\n                    onCloseSearch={this.handleCloseSearch}\r\n                />\r\n                <div\r\n                    ref={this.listRef}\r\n                    className={classNames('shared-media-list', this.getListClassName())}\r\n                    onScroll={this.handleScroll}\r\n                    style={{ minHeight: popup ? minHeight : null }}>\r\n                    {messages}\r\n                </div>\r\n                {Boolean(searchParams) && (\r\n                    <div\r\n                        ref={this.searchListRef}\r\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\r\n                        onScroll={this.handleSearchScroll}>\r\n                        {searchMessages}\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaBase.propTypes = {};\r\n\r\nexport default SharedMediaBase;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport './SharedAudios.css';\r\n\r\nclass SharedAudios extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageAudio';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterAudio' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('AudioTitle');\r\n    }\r\n}\r\n\r\nSharedAudios.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedAudios.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedAudios);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport './SharedDocuments.css';\r\n\r\nclass SharedDocuments extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageDocument';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterDocument' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('DocumentsTitle');\r\n    }\r\n}\r\n\r\nSharedDocuments.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedDocuments.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedDocuments);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ContextMenu from './ContextMenu';\r\nimport Photo from '../../Message/Media/Photo';\r\nimport SafeLink from '../../Additional/SafeLink';\r\nimport { getFirstLetter } from '../../../Utils/Common';\r\nimport { openMedia, substring } from '../../../Utils/Message';\r\nimport punycode from '../../../Utils/Punycode';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedLink.css';\r\n\r\nclass SharedLink extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    isValidEntityType(type) {\r\n        if (!type) return false;\r\n\r\n        return (\r\n            type.type['@type'] === 'textEntityTypeUrl' ||\r\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\r\n            type.type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    getTitleFromUrl(url) {\r\n        try {\r\n            url = url.startsWith('http') ? url : 'http://' + url;\r\n            const decodedUrl = decodeURI(url);\r\n\r\n            const hostname = new URL(decodedUrl).hostname.split('.');\r\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\r\n\r\n            return punycode.ToUnicode(domain);\r\n        } catch (error) {\r\n            console.error('url: ' + url + '\\n' + error);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        let content = null;\r\n        let { display_url, description, photo, title, url } = webPage || {\r\n            title: '',\r\n            description: '',\r\n            photo: null,\r\n            url: ''\r\n        };\r\n        if (webPage) {\r\n            title = title || this.getTitleFromUrl(url);\r\n\r\n            content = (\r\n                <SafeLink className='shared-link-url' url={url}>\r\n                    {display_url}\r\n                </SafeLink>\r\n            );\r\n        } else {\r\n            const { text } = message.content;\r\n            if (text) {\r\n                const { entities } = text;\r\n                if (entities && entities.length > 0) {\r\n                    content = entities.filter(this.isValidEntityType).map(x => {\r\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\r\n                        let url = entityText;\r\n                        let mail = false;\r\n\r\n                        switch (x.type['@type']) {\r\n                            case 'textEntityTypeTextUrl': {\r\n                                const { url: typeUrl } = x.type;\r\n                                if (typeUrl) {\r\n                                    url = typeUrl;\r\n                                }\r\n                                break;\r\n                            }\r\n                            case 'textEntityTypeUrl': {\r\n                                break;\r\n                            }\r\n                            case 'textEntityTypeEmailAddress':\r\n                                mail = true;\r\n                                break;\r\n                        }\r\n\r\n                        title = title || this.getTitleFromUrl(url) || ' ';\r\n\r\n                        return (\r\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\r\n                                {entityText}\r\n                            </SafeLink>\r\n                        );\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className={classNames('shared-link-photo', tileColor)}>\r\n                        {getFirstLetter(title)}\r\n                        {photo && (\r\n                            <Photo\r\n                                displaySize={90}\r\n                                chatId={chatId}\r\n                                messageId={messageId}\r\n                                photo={photo}\r\n                                openMedia={openMedia}\r\n                                showProgress={false}\r\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    <div className='shared-link-content'>\r\n                        {title && <div className='web-page-title'>{title}</div>}\r\n                        {description && <div className='web-page-description'>{description}</div>}\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedLink.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    webPage: PropTypes.object,\r\n\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default SharedLink;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedLinks.css';\r\n\r\nclass SharedLinks extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        if (!content) return false;\r\n\r\n        const { web_page, text } = content;\r\n        if (web_page) return true;\r\n        if (!text) return false;\r\n\r\n        const { entities } = text;\r\n        if (!entities) return false;\r\n\r\n        return entities.find(\r\n            x =>\r\n                x.type['@type'] === 'textEntityTypeUrl' ||\r\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\r\n                x.type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterUrl' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('LinksTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedLink\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                webPage={content.web_page}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedLinks.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedLinks.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedLinks);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport './SharedMediaHeader.css';\r\n\r\nclass SharedMediaHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { close } = this.props;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <IconButton className='header-left-button' onClick={close}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-status grow cursor-pointer'>\r\n                    <span className='header-status-content'>Shared Media</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SharedMediaHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport SharedMediaHeader from './SharedMediaHeader';\r\nimport './SharedMedia.css';\r\n\r\nclass SharedMedia extends React.Component {\r\n    state = {\r\n        value: 0\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, popup } = this.props;\r\n        const { value } = this.state;\r\n\r\n        const content = (\r\n            <>\r\n                <SharedMediaHeader close={onClose} />\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={this.handleChange}\r\n                    indicatorColor='primary'\r\n                    textColor='primary'\r\n                    scrollable\r\n                    scrollButtons='off'\r\n                    fullWidth>\r\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\r\n                </Tabs>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\r\n    }\r\n}\r\n\r\nSharedMedia.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedMedia.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default SharedMedia;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContextMenu from './ContextMenu';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { getSize } from '../../../Utils/Common';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedPhoto.css';\r\n\r\nclass SharedPhoto extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { photo, size, thumbnailSize } = props;\r\n\r\n        this.state = {\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0,\r\n\r\n            photoSize: getSize(photo.sizes, size),\r\n            thumbSize: getSize(photo.sizes, thumbnailSize),\r\n            minithumbnail: photo.minithumbnail\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    onClientUpdatePhotoBlob = update => {\r\n        const { photoSize, thumbSize } = this.state;\r\n        const { fileId } = update;\r\n\r\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\r\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\r\n\r\n        if (!photoSize) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\r\n        const src = getSrc(photoSize.photo);\r\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className='shared-photo'\r\n                    style={style}\r\n                    onClick={openMedia}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    <div\r\n                        className='shared-photo-content'\r\n                        style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\r\n                        {src !== thumbSrc && (\r\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedPhoto.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    photo: PropTypes.object.isRequired,\r\n    showOpenMessage: PropTypes.bool.isRequired,\r\n    openMedia: PropTypes.func,\r\n\r\n    size: PropTypes.number,\r\n    thumbnailSize: PropTypes.number,\r\n    style: PropTypes.object\r\n};\r\n\r\nSharedPhoto.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\r\n};\r\n\r\nexport default SharedPhoto;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedPhotos.css';\r\n\r\nclass SharedPhotos extends SharedMediaBase {\r\n    getListClassName() {\r\n        return 'shared-photos-list';\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return 'shared-photos-search-list';\r\n    }\r\n\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messagePhoto';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterPhoto' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('PhotosTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedPhoto\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                photo={content.photo}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedPhotos.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedPhotos.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedPhotos);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ContextMenu from './ContextMenu';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { getDurationString } from '../../../Utils/Common';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedVideo.css';\r\n\r\nclass SharedVideo extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateVideoThumbnailBlob = update => {\r\n        const { thumbnail } = this.props.video;\r\n        const { fileId } = update;\r\n\r\n        if (!thumbnail) return;\r\n\r\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\r\n        const { minithumbnail, thumbnail, duration } = this.props.video;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\r\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className='shared-photo'\r\n                    style={style}\r\n                    onClick={openMedia}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='shared-video-wrapper'>\r\n                        <div\r\n                            className={classNames('shared-video-content', {\r\n                                'media-blurred': isBlurred,\r\n                                'media-mini-blurred': !thumbSrc && isBlurred\r\n                            })}\r\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\r\n                        />\r\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedVideo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    video: PropTypes.object.isRequired,\r\n    showOpenMessage: PropTypes.bool.isRequired,\r\n    openMedia: PropTypes.func,\r\n\r\n    size: PropTypes.number,\r\n    thumbnailSize: PropTypes.number,\r\n    style: PropTypes.object\r\n};\r\n\r\nSharedVideo.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\r\n};\r\n\r\nexport default SharedVideo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedVideos.css';\r\n\r\nclass SharedVideos extends SharedMediaBase {\r\n    getListClassName() {\r\n        return 'shared-photos-list';\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return 'shared-photos-search-list';\r\n    }\r\n\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageVideo';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterVideo' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('VideosTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedVideo\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                video={content.video}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedVideos.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedVideos.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedVideos);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AudioAction from '../../Message/Media/AudioAction';\r\nimport ContextMenu from './ContextMenu';\r\nimport MediaStatus from '../../Message/Media/MediaStatus';\r\nimport MessageAuthor from '../../Message/MessageAuthor';\r\nimport VoiceNoteTile from '../VoiceNoteTile';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedVoiceNote.css';\r\n\r\nclass SharedVoiceNote extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        };\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        if (!voiceNote) return null;\r\n\r\n        const { date, sender_user_id } = message;\r\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\r\n            day: 'numeric',\r\n            month: 'short',\r\n            year: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            hour12: false\r\n        });\r\n\r\n        const { duration, voice: file } = voiceNote;\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\r\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\r\n                    <div className='voice-note-content'>\r\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\r\n                        <div className='voice-note-meta'>\r\n                            <AudioAction\r\n                                chatId={chatId}\r\n                                messageId={messageId}\r\n                                duration={duration}\r\n                                file={file}\r\n                                title={`${dateString}, `}\r\n                            />\r\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedVoiceNote.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    voiceNote: PropTypes.object.isRequired,\r\n\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedVoiceNote);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedVoiceNotes.css';\r\n\r\nclass SharedVoiceNotes extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageVoiceNote';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterVoiceNote' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('VoiceTitle');\r\n    }\r\n\r\n    hasSearch() {\r\n        return false;\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedVoiceNote\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                voiceNote={content.voice_note}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedVoiceNotes.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedVoiceNotes.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedVoiceNotes);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatDetails from './ChatDetails';\r\nimport GroupsInCommon from './GroupsInCommon';\r\nimport SharedAudios from './SharedMedia/SharedAudios';\r\nimport SharedDocuments from './SharedMedia/SharedDocuments';\r\nimport SharedLinks from './SharedMedia/SharedLinks';\r\nimport SharedMedia from './SharedMedia';\r\nimport SharedPhotos from './SharedMedia/SharedPhotos';\r\nimport SharedVideos from './SharedMedia/SharedVideos';\r\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\r\nimport { getChatCounters } from '../../Actions/Chat';\r\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\r\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatInfo.css';\r\n\r\nclass ChatInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.detailsRef = React.createRef();\r\n\r\n        const { popup } = props;\r\n        const { chatId, dialogChatId } = ApplicationStore;\r\n\r\n        this.state = {\r\n            chatId: popup ? dialogChatId : chatId,\r\n            migratedChatId: 0,\r\n            userChatId: null,\r\n            openGroupInCommon: false,\r\n            openSharedAudios: false,\r\n            openSharedDocuments: false,\r\n            openSharedLinks: false,\r\n            openSharedMedia: false,\r\n            openSharedPhotos: false,\r\n            openSharedVideos: false,\r\n            openSharedVoiceNotes: false,\r\n            counters: null,\r\n            migratedCounters: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log('ChatDetails.ChatInfo.componentDidMount');\r\n        this.loadContent(this.state.chatId);\r\n\r\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.state;\r\n        if (chatId !== prevState.chatId) {\r\n            this.loadContent(chatId);\r\n        }\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { popup } = this.props;\r\n        const { chatId } = this.state;\r\n\r\n        if (popup) return;\r\n        if (chatId === update.nextChatId) return;\r\n\r\n        this.sharedAudios = null;\r\n        this.sharedDocuments = null;\r\n        this.sharedLinks = null;\r\n        this.sharedPhotos = null;\r\n        this.sharedVideos = null;\r\n        this.sharedVoiceNotes = null;\r\n\r\n        this.setState({\r\n            chatId: update.nextChatId,\r\n            migratedChatId: 0,\r\n            userChatId: null,\r\n            openGroupInCommon: false,\r\n            openSharedAudios: false,\r\n            openSharedDocuments: false,\r\n            openSharedLinks: false,\r\n            openSharedMedia: false,\r\n            openSharedPhotos: false,\r\n            openSharedVideos: false,\r\n            openSharedVoiceNotes: false,\r\n            counters: ChatStore.getCounters(update.nextChatId),\r\n            migratedCounters: null\r\n        });\r\n    };\r\n\r\n    loadContent = chatId => {\r\n        this.loadChatCounters(chatId);\r\n        this.loadMigratedCounters(chatId);\r\n\r\n        const photo = getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n        loadProfileMediaViewerContent(chatId, [photo]);\r\n    };\r\n\r\n    loadChatCounters = async chatId => {\r\n        const counters = await getChatCounters(chatId);\r\n        ChatStore.setCounters(chatId, counters);\r\n\r\n        if (chatId !== this.state.chatId) return;\r\n\r\n        this.setState({ counters });\r\n    };\r\n\r\n    loadMigratedCounters = async chatId => {\r\n        if (!isSupergroup(chatId)) return;\r\n\r\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\r\n        if (!fullInfo) return;\r\n\r\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\r\n        if (!basic_group_id) return;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createBasicGroupChat',\r\n            basic_group_id,\r\n            force: true\r\n        });\r\n\r\n        if (!chat) return;\r\n\r\n        const counters = await getChatCounters(chat.id);\r\n        ChatStore.setCounters(chat.id, counters);\r\n\r\n        if (this.state.chatId !== chatId) return;\r\n\r\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\r\n    };\r\n\r\n    handleOpenSharedMedia = () => {\r\n        this.setState({ openSharedMedia: true });\r\n    };\r\n\r\n    handleCloseSharedMedia = () => {\r\n        this.setState({ openSharedMedia: false });\r\n    };\r\n\r\n    handleOpenGroupInCommon = () => {\r\n        this.setState({ openGroupInCommon: true });\r\n    };\r\n\r\n    handleCloseGroupsInCommon = () => {\r\n        this.setState({ openGroupInCommon: false });\r\n    };\r\n\r\n    handleCloseChatDetails = () => {\r\n        const { popup } = this.props;\r\n        const { userChatId } = this.state;\r\n\r\n        if (userChatId) {\r\n            this.setState({ userChatId: null });\r\n        } else if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        } else {\r\n            ApplicationStore.changeChatDetailsVisibility(false);\r\n        }\r\n    };\r\n\r\n    handleOpenSharedDocuments = () => {\r\n        this.setState({ openSharedDocuments: true });\r\n    };\r\n\r\n    handleCloseSharedDocuments = () => {\r\n        this.setState({ openSharedDocuments: false });\r\n    };\r\n\r\n    handleOpenSharedAudios = () => {\r\n        this.setState({ openSharedAudios: true });\r\n    };\r\n\r\n    handleCloseSharedAudios = () => {\r\n        this.setState({ openSharedAudios: false });\r\n    };\r\n\r\n    handleOpenSharedVoiceNotes = () => {\r\n        this.setState({ openSharedVoiceNotes: true });\r\n    };\r\n\r\n    handleCloseSharedVoiceNotes = () => {\r\n        this.setState({ openSharedVoiceNotes: false });\r\n    };\r\n\r\n    handleOpenSharedLinks = () => {\r\n        this.setState({ openSharedLinks: true });\r\n    };\r\n\r\n    handleCloseSharedLinks = () => {\r\n        this.setState({ openSharedLinks: false });\r\n    };\r\n\r\n    handleOpenSharedPhotos = () => {\r\n        this.setState({ openSharedPhotos: true });\r\n    };\r\n\r\n    handleCloseSharedPhotos = () => {\r\n        this.setState({ openSharedPhotos: false });\r\n    };\r\n\r\n    handleOpenSharedVideos = () => {\r\n        this.setState({ openSharedVideos: true });\r\n    };\r\n\r\n    handleCloseSharedVideos = () => {\r\n        this.setState({ openSharedVideos: false });\r\n    };\r\n\r\n    render() {\r\n        // console.log('ChatDetails.ChatInfo.render', this.state);\r\n        const { classes, className, popup } = this.props;\r\n        const {\r\n            chatId,\r\n            counters,\r\n            migratedChatId,\r\n            migratedCounters,\r\n            userChatId,\r\n            openSharedAudios,\r\n            openSharedDocuments,\r\n            openSharedLinks,\r\n            openSharedMedia,\r\n            openSharedPhotos,\r\n            openSharedVideos,\r\n            openSharedVoiceNotes,\r\n            openGroupInCommon\r\n        } = this.state;\r\n\r\n        const currentChatId = chatId || userChatId;\r\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\r\n\r\n        let content = null;\r\n        if (openSharedMedia) {\r\n            content = (\r\n                <SharedMedia\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedMedia}\r\n                />\r\n            );\r\n        } else if (openSharedAudios) {\r\n            this.sharedAudios = this.sharedAudios || (\r\n                <SharedAudios\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedAudios}\r\n                />\r\n            );\r\n\r\n            content = this.sharedAudios;\r\n        } else if (openSharedDocuments) {\r\n            this.sharedDocuments = this.sharedDocuments || (\r\n                <SharedDocuments\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedDocuments}\r\n                />\r\n            );\r\n\r\n            content = this.sharedDocuments;\r\n        } else if (openSharedLinks) {\r\n            this.sharedLinks = this.sharedLinks || (\r\n                <SharedLinks\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedLinks}\r\n                />\r\n            );\r\n\r\n            content = this.sharedLinks;\r\n        } else if (openSharedPhotos) {\r\n            this.sharedPhotos = this.sharedPhotos || (\r\n                <SharedPhotos\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedPhotos}\r\n                />\r\n            );\r\n\r\n            content = this.sharedPhotos;\r\n        } else if (openSharedVideos) {\r\n            this.sharedVideos = this.sharedVideos || (\r\n                <SharedVideos\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedVideos}\r\n                />\r\n            );\r\n\r\n            content = this.sharedVideos;\r\n        } else if (openSharedVoiceNotes) {\r\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\r\n                <SharedVoiceNotes\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedVoiceNotes}\r\n                />\r\n            );\r\n\r\n            content = this.sharedVoiceNotes;\r\n        } else if (openGroupInCommon) {\r\n            content = (\r\n                <GroupsInCommon\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseGroupsInCommon}\r\n                />\r\n            );\r\n        } else {\r\n            content = (\r\n                <ChatDetails\r\n                    ref={this.detailsRef}\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    backButton={userChatId === chatId}\r\n                    counters={counters}\r\n                    migratedCounters={migratedCounters}\r\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\r\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\r\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\r\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\r\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\r\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\r\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\r\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\r\n                    onClose={this.handleCloseChatDetails}\r\n                />\r\n            );\r\n        }\r\n\r\n        return popup ? (\r\n            <>{content}</>\r\n        ) : (\r\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\r\n        );\r\n    }\r\n}\r\n\r\nChatInfo.propTypes = {\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nChatInfo.defaultProps = {\r\n    className: null,\r\n    classes: null,\r\n    popup: false\r\n};\r\n\r\nexport default ChatInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ArchiveIcon from '@material-ui/icons/Archive';\r\nimport { openArchive } from '../../Actions/Client';\r\nimport './Archive.css';\r\n\r\nclass Archive extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { title, theme } = this.props;\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.title !== title) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleSelect = event => {\r\n        if (event.button === 0) {\r\n            openArchive();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, title } = this.props;\r\n\r\n        return (\r\n            <div\r\n                ref={this.dialog}\r\n                className='dialog'\r\n                onMouseDown={this.handleSelect}\r\n                onContextMenu={this.handleContextMenu}>\r\n                <div className='dialog-wrapper'>\r\n                    <div className='chat-tile'>\r\n                        <div className='archive-tile-background tile-photo'>\r\n                            <div className='tile-saved-messages'>\r\n                                <ArchiveIcon fontSize='default' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='dialog-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            <div className='dialog-title'>\r\n                                <span className='dialog-title-span'>{t('ArchivedChats')}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <div className='dialog-content'>{title}</div>\r\n                            {/*{unread_count > 0 && (*/}\r\n                            {/*    <div className={classNames('dialog-badge-muted', 'dialog-badge')}>*/}\r\n                            {/*        <span className='dialog-badge-text'>{unread_count}</span>*/}\r\n                            {/*    </div>*/}\r\n                            {/*)}*/}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nArchive.propTypes = {\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default withTranslation()(Archive);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport {\r\n    getChatTypingString,\r\n    getChatDraft,\r\n    getLastMessageSenderName,\r\n    getLastMessageContent,\r\n    showChatDraft\r\n} from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogContent.css';\r\n\r\nclass DialogContent extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateUserChatAction', this.onUpdate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateUserChatAction', this.onUpdate);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\r\n\r\n        let contentControl = null;\r\n        const typingString = getChatTypingString(chatId);\r\n        if (typingString) {\r\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\r\n        }\r\n\r\n        if (!contentControl) {\r\n            const draft = getChatDraft(chatId);\r\n            if (showChatDraft(chatId)) {\r\n                const text = draft.text || '\\u00A0';\r\n\r\n                contentControl = (\r\n                    <>\r\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\r\n                        {text}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        if (!contentControl) {\r\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\r\n            const senderName = getLastMessageSenderName(chat, t);\r\n            contentControl = (\r\n                <>\r\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\r\n                    {content}\r\n                </>\r\n            );\r\n        }\r\n\r\n        return <div className='dialog-content'>{contentControl}</div>;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(DialogContent);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\r\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\r\n        <path\r\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\r\n            strokeWidth='1.66'\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n        />\r\n    </g>,\r\n    'Pin'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport PinIcon from '../../Assets/Icons/Pin';\r\nimport {\r\n    isChatMuted,\r\n    showChatUnreadCount,\r\n    showChatUnreadMentionCount,\r\n    showChatUnreadMessageIcon\r\n} from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport NotificationStore from '../../Stores/NotificationStore';\r\nimport './DialogBadge.css';\r\n\r\nclass DialogBadge extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\r\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\r\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\r\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\r\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\r\n        ChatStore.off('updateChatIsPinned', this.onUpdate);\r\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\r\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\r\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateScopeNotificationSettings = update => {\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        switch (update.scope['@type']) {\r\n            case 'notificationSettingsScopeGroupChats': {\r\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'notificationSettingsScopePrivateChats': {\r\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.clearHistory) return null;\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { is_pinned, unread_count } = chat;\r\n\r\n        const showUnreadMessageIcon = false; //showChatUnreadMessageIcon(chatId);\r\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\r\n        const showUnreadCount = showChatUnreadCount(chatId);\r\n        const isMuted = isChatMuted(chatId);\r\n\r\n        return (\r\n            <>\r\n                {showUnreadMessageIcon && <i className='dialog-badge-unread' />}\r\n                {showUnreadMentionCount && (\r\n                    <div className='dialog-badge'>\r\n                        <div className='dialog-badge-mention'>@</div>\r\n                    </div>\r\n                )}\r\n                {showUnreadCount && (\r\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\r\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\r\n                    </div>\r\n                )}\r\n                {is_pinned && !showUnreadMessageIcon && !showUnreadCount && !showUnreadMentionCount && (\r\n                    <div className='dialog-badge-pinned'>\r\n                        <PinIcon className='dialog-badge-pinned-icon' />\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogBadge;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\r\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\r\n        </g>\r\n    </g>,\r\n    'Error'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\r\n        <g transform='translate(-3.000000, 0.000000)'>\r\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\r\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\r\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\r\n        </g>\r\n    </g>,\r\n    'Pending'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path\r\n        transform='translate(-4.000000, -2.000000)'\r\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\r\n    />,\r\n    'Sent'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path\r\n        transform='translate(-1.000000, -2.000000)'\r\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\r\n    />,\r\n    'Succeeded'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '../../Assets/Icons/Error';\r\nimport PendingIcon from '../../Assets/Icons/Pending';\r\nimport SentIcon from '../../Assets/Icons/Sent';\r\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\r\nimport { isMessageUnread } from '../../Utils/Message';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Status.css';\r\n\r\nclass Status extends React.Component {\r\n    state = {};\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId } = props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const sendingState = message ? message.sending_state : null;\r\n\r\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                sendingState,\r\n                unread: isMessageUnread(chatId, messageId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\r\n\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\r\n\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n    }\r\n\r\n    onUpdateMessageSend = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { old_message_id, message } = update;\r\n\r\n        if (messageId !== old_message_id) return;\r\n        if (!message) return;\r\n\r\n        const { chat_id, id, sending_state } = message;\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.newMessageId = id;\r\n        this.setState({ sendingState: sending_state });\r\n    };\r\n\r\n    onUpdateChatReadOutbox = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { chat_id, last_read_outbox_message_id } = update;\r\n        const { newMessageId } = this;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\r\n            this.setState({ sendingState: null, unread: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { sendingState, unread } = this.state;\r\n        if (!unread) {\r\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\r\n        }\r\n\r\n        if (sendingState) {\r\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\r\n                <ErrorIcon\r\n                    className='status'\r\n                    viewBox='0 0 14 14'\r\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\r\n                />\r\n            ) : (\r\n                <PendingIcon\r\n                    className='status'\r\n                    viewBox='0 0 14 14'\r\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\r\n                />\r\n            );\r\n        }\r\n\r\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\r\n    }\r\n}\r\n\r\nStatus.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Status;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Status from '../Message/Status';\r\nimport { getLastMessageDate } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogMeta.css';\r\n\r\nclass DialogMeta extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        if (this.clearHistory) return null;\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return null;\r\n\r\n        const date = getLastMessageDate(chat);\r\n        if (!date) return null;\r\n\r\n        const { id, is_outgoing } = last_message;\r\n\r\n        return (\r\n            <div className='dialog-meta'>\r\n                {is_outgoing && (\r\n                    <>\r\n                        <Status chatId={chatId} messageId={id} />\r\n                        <span> </span>\r\n                    </>\r\n                )}\r\n                {date}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogMeta;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\r\n    'Archive'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\r\n    'Unarchive'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\r\n    'Pin2'\r\n);\r\n\r\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\r\n// <title>Combined Shape</title>\r\n// <desc>Created with Sketch.</desc>\r\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\r\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\r\n// </g>\r\n// </g>\r\n// </svg>\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\r\n    'Mute'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\r\n    'Unmute'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\r\n    'User'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\r\n    'Group'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\r\n    'Message'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\r\n    'Unread'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ChatTile from './ChatTile';\r\nimport DialogContent from './DialogContent';\r\nimport DialogBadge from './DialogBadge';\r\nimport DialogTitle from './DialogTitle';\r\nimport DialogMeta from './DialogMeta';\r\nimport ArchiveIcon from '../../Assets/Icons/Archive';\r\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\r\nimport PinIcon from '../../Assets/Icons/Pin2';\r\nimport UnpinIcon from '../../Assets/Icons/Pin2';\r\nimport MuteIcon from '../../Assets/Icons/Mute';\r\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport MessageIcon from '../../Assets/Icons/Message';\r\nimport UnreadIcon from '../../Assets/Icons/Unread';\r\nimport {\r\n    canSetChatChatList,\r\n    isChatArchived,\r\n    isChatMuted,\r\n    isChatSecret,\r\n    isChatUnread,\r\n    isPrivateChat\r\n} from '../../Utils/Chat';\r\nimport {\r\n    setChatChatList,\r\n    toggleChatIsMarkedAsUnread,\r\n    toggleChatIsPinned,\r\n    toggleChatNotificationSettings\r\n} from '../../Actions/Chat';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { viewMessages } from '../../Actions/Message';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Dialog.css';\r\n\r\nclass Dialog extends Component {\r\n    static contextMenuId;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialog = React.createRef();\r\n\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        this.state = {\r\n            chat,\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t, hidden, isLastPinned, style } = this.props;\r\n        const { contextMenu } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            // console.log('[vl] Dialog.shouldUpdate true t');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.hidden !== hidden) {\r\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.isLastPinned !== isLastPinned) {\r\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\r\n            // console.log('[vl] Dialog.shouldUpdate true style');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[vl] Dialog.shouldUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleSelect = event => {\r\n        if (event.button === 0) {\r\n            openChat(this.props.chatId);\r\n        }\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { chatId } = this.props;\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const contextMenuId = new Date();\r\n            Dialog.contextMenuId = contextMenuId;\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const chat = ChatStore.get(chatId);\r\n            const { is_pinned } = chat;\r\n            const canTogglePin = (await this.canPinChats(chatId)) || is_pinned;\r\n            const canToggleArchive = canSetChatChatList(chatId);\r\n\r\n            if (Dialog.contextMenuId !== contextMenuId) {\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                canTogglePin,\r\n                canToggleArchive,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleMute = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\r\n    };\r\n\r\n    canPinChats = async chatId => {\r\n        const pinnedSumMaxOption = isChatArchived(chatId)\r\n            ? OptionStore.get('pinned_archived_chat_count_max')\r\n            : OptionStore.get('pinned_chat_count_max');\r\n        if (!pinnedSumMaxOption) return false;\r\n\r\n        const isSecret = isChatSecret(chatId);\r\n        const chats = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: isChatArchived(chatId) ? { '@type': 'chatListArchive' } : { '@type': 'chatListMain' },\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: pinnedSumMaxOption.value + 10\r\n        });\r\n\r\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\r\n            if (isChatSecret(id) !== isSecret) return x;\r\n\r\n            const chat = ChatStore.get(id);\r\n\r\n            return x + (chat && chat.is_pinned ? 1 : 0);\r\n        }, 0);\r\n\r\n        return pinnedSum < pinnedSumMaxOption.value;\r\n    };\r\n\r\n    handlePin = async event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        const { is_pinned } = chat;\r\n\r\n        if (!is_pinned && !this.canPinChats(chatId)) return;\r\n\r\n        toggleChatIsPinned(chatId, !is_pinned);\r\n    };\r\n\r\n    handleArchive = async event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n        if (!canSetChatChatList(chatId)) return;\r\n\r\n        setChatChatList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\r\n    };\r\n\r\n    getViewInfoTitle = () => {\r\n        const { chatId, t } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        switch (type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return t('ViewGroupInfo');\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return t('ViewProfile');\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                if (type.is_channel) {\r\n                    return t('ViewChannelInfo');\r\n                }\r\n\r\n                return t('ViewGroupInfo');\r\n            }\r\n        }\r\n    };\r\n\r\n    handleViewInfo = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        openChat(chatId, null, true);\r\n    };\r\n\r\n    handleRead = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const isUnread = isChatUnread(chatId);\r\n        if (isUnread) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (!chat) return;\r\n\r\n            const { is_marked_as_unread, last_message, unread_count } = chat;\r\n            if (unread_count > 0 && last_message) {\r\n                viewMessages(chatId, [last_message.id], true);\r\n            } else if (is_marked_as_unread) {\r\n                toggleChatIsMarkedAsUnread(chatId, false);\r\n            }\r\n        } else {\r\n            toggleChatIsMarkedAsUnread(chatId, true);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\r\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\r\n\r\n        if (hidden) return null;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        const { is_pinned } = chat;\r\n        const currentChatId = ApplicationStore.getChatId();\r\n        const isSelected = currentChatId === chatId;\r\n        const isMuted = isChatMuted(chatId);\r\n        const isUnread = isChatUnread(chatId);\r\n        const isArchived = isChatArchived(chatId);\r\n        return (\r\n            <div\r\n                ref={this.dialog}\r\n                className={classNames(isSelected ? 'dialog-active' : 'dialog', { 'item-selected': isSelected })}\r\n                onMouseDown={this.handleSelect}\r\n                onContextMenu={this.handleContextMenu}\r\n                style={style}>\r\n                <div className='dialog-wrapper'>\r\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\r\n                    <div className='dialog-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            <DialogTitle chatId={chatId} />\r\n                            <DialogMeta chatId={chatId} />\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <DialogContent chatId={chatId} />\r\n                            <DialogBadge chatId={chatId} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        {canToggleArchive && (\r\n                            <MenuItem onClick={this.handleArchive}>\r\n                                {isArchived ? (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <UnarchiveIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('Unarchive')} />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <ArchiveIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('Archive')} />\r\n                                    </>\r\n                                )}\r\n                            </MenuItem>\r\n                        )}\r\n                        {canTogglePin && (\r\n                            <MenuItem onClick={this.handlePin}>\r\n                                {is_pinned ? (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <UnpinIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('UnpinFromTop')} />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <PinIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('PinToTop')} />\r\n                                    </>\r\n                                )}\r\n                            </MenuItem>\r\n                        )}\r\n                        <MenuItem onClick={this.handleViewInfo}>\r\n                            {isPrivateChat(chatId) ? (\r\n                                <>\r\n                                    <ListItemIcon>\r\n                                        <UserIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={this.getViewInfoTitle()} />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <ListItemIcon>\r\n                                        <GroupIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={this.getViewInfoTitle()} />\r\n                                </>\r\n                            )}\r\n                        </MenuItem>\r\n                        <MenuItem onClick={this.handleMute}>\r\n                            {isMuted ? (\r\n                                <>\r\n                                    <ListItemIcon>\r\n                                        <UnmuteIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={t('ChatsUnmute')} />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <ListItemIcon>\r\n                                        <MuteIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={t('ChatsMute')} />\r\n                                </>\r\n                            )}\r\n                        </MenuItem>\r\n                        <MenuItem onClick={this.handleRead}>\r\n                            {isUnread ? (\r\n                                <>\r\n                                    <ListItemIcon>\r\n                                        <MessageIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={t('MarkAsRead')} />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <ListItemIcon>\r\n                                        <UnreadIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={t('MarkAsUnread')} />\r\n                                </>\r\n                            )}\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialog.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    hidden: PropTypes.bool,\r\n    showSavedMessages: PropTypes.bool,\r\n    isLastPinned: PropTypes.bool,\r\n    style: PropTypes.object\r\n};\r\n\r\nDialog.defaultProps = {\r\n    hidden: false,\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(Dialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nexport function viewMessages(chatId, messageIds, forceRead) {\r\n    TdLibController.send({\r\n        '@type': 'viewMessages',\r\n        chat_id: chatId,\r\n        message_ids: messageIds,\r\n        force_read: forceRead\r\n    });\r\n}\r\n\r\nexport function pinMessage(chatId, messageId, disableNotification = false) {\r\n    TdLibController.send({\r\n        '@type': 'pinChatMessage',\r\n        chat_id: chatId,\r\n        message_id: messageId,\r\n        disable_notification: disableNotification\r\n    });\r\n}\r\n\r\nexport function unpinMessage(chatId) {\r\n    TdLibController.send({\r\n        '@type': 'unpinChatMessage',\r\n        chat_id: chatId\r\n    });\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getChatTitle } from '../../Utils/Chat';\r\nimport './DialogPlaceholder.css';\r\n\r\nclass DialogPlaceholder extends React.Component {\r\n    render() {\r\n        const { chatId, index, showTitle } = this.props;\r\n\r\n        let title = null;\r\n        if (showTitle) {\r\n            title = getChatTitle(chatId, true);\r\n        }\r\n\r\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\r\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\r\n\r\n        return (\r\n            <div className='dialog-placeholder'>\r\n                <div className='dialog-placeholder-wrapper'>\r\n                    <div className='dialog-placeholder-tile' />\r\n                    <div className='dialog-placeholder-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            {showTitle ? (\r\n                                title\r\n                            ) : (\r\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\r\n                            )}\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogPlaceholder.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    showTitle: PropTypes.bool\r\n};\r\n\r\nexport default DialogPlaceholder;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst style = {\r\n    listWrapper: height => ({\r\n        height,\r\n        position: 'relative'\r\n    }),\r\n    item: (index, height) => ({\r\n        height,\r\n        left: 0,\r\n        right: 0,\r\n        top: height * index,\r\n        position: 'absolute'\r\n    })\r\n};\r\n\r\nexport class VirtualizedList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        this.state = {\r\n            scrollTop: 0,\r\n            renderIds: new Map(),\r\n            renderIdsList: [],\r\n            viewportHeight: 0\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.source !== this.props.source) {\r\n            this.setViewportHeight();\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return true;\r\n\r\n        // const { renderIds } = this.state;\r\n        // const { renderIds: nextRenderIds } = nextState;\r\n        //\r\n        // if (renderIds.size === nextRenderIds.size) {\r\n        //     renderIds.forEach((value, key) => {\r\n        //         if (!nextRenderIds.has(key)) {\r\n        //             return true;\r\n        //         }\r\n        //     });\r\n        //\r\n        //     return false;\r\n        // }\r\n        //\r\n        // return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.setViewportHeight, true);\r\n\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n        current.addEventListener('scroll', this.setScrollPosition, true);\r\n\r\n        this.setViewportHeight();\r\n    }\r\n\r\n    setViewportHeight = () => {\r\n        const { source } = this.props;\r\n        const { scrollTop } = this.state;\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n\r\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\r\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\r\n\r\n        // console.log('[vl] setViewportHeight');\r\n        this.setState({ viewportHeight, ...renderIds });\r\n    };\r\n\r\n    getRenderIds(source, viewportHeight, scrollTop) {\r\n        const renderIds = new Map();\r\n        const renderIdsList = [];\r\n        source.forEach((item, index) => {\r\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\r\n                renderIds.set(index, index);\r\n                renderIdsList.push(index);\r\n            }\r\n        });\r\n\r\n        return { renderIds, renderIdsList };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.setViewportHeight);\r\n\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n        current.removeEventListener('scroll', this.setScrollPosition);\r\n    }\r\n\r\n    getListRenderIds() {\r\n        const { renderIds } = this.state;\r\n\r\n        return renderIds;\r\n    }\r\n\r\n    setScrollPosition = event => {\r\n        const { source, rowHeight, onScroll } = this.props;\r\n        const { viewportHeight, scrollTop } = this.state;\r\n\r\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\r\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\r\n\r\n            this.setState({\r\n                scrollTop: event.target.scrollTop,\r\n                ...renderIds\r\n            });\r\n        }\r\n\r\n        if (onScroll) {\r\n            onScroll(event);\r\n        }\r\n    };\r\n\r\n    getListRef() {\r\n        return this.listRef;\r\n    }\r\n\r\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\r\n        const { overScanCount, rowHeight } = this.props;\r\n\r\n        const itemTop = index * rowHeight;\r\n        const itemBottom = (index + 1) * rowHeight;\r\n\r\n        return (\r\n            itemTop > scrollTop - overScanCount * rowHeight &&\r\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { className, source, renderItem, rowHeight } = this.props;\r\n        const { renderIds } = this.state;\r\n\r\n        const items = (source || []).map((item, index) => {\r\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\r\n        });\r\n\r\n        // console.log('[vl] render', source, renderIds);\r\n\r\n        return (\r\n            <div ref={this.listRef} className={className}>\r\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nVirtualizedList.defaultProps = {\r\n    source: [],\r\n    rowHeight: 72,\r\n    overScanCount: 5\r\n};\r\n\r\nVirtualizedList.propTypes = {\r\n    renderItem: PropTypes.func,\r\n    onScroll: PropTypes.func,\r\n    rowHeight: PropTypes.number,\r\n    className: PropTypes.string,\r\n    source: PropTypes.array.isRequired,\r\n    overScanCount: PropTypes.number.isRequired\r\n};\r\n\r\nexport default VirtualizedList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport function findLastTextNode(element) {\r\n    if (element.nodeType === Node.TEXT_NODE) {\r\n        return element;\r\n    }\r\n\r\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\r\n        const textNode = findLastTextNode(element.childNodes[i]);\r\n        if (textNode) {\r\n            return textNode;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function focusInput(element) {\r\n    if (!element) return;\r\n\r\n    const textNode = findLastTextNode(element);\r\n    if (textNode) {\r\n        const range = document.createRange();\r\n        range.setStart(textNode, textNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n    }\r\n\r\n    element.focus();\r\n}\r\n\r\nexport function scrollTop(element, behavior = 'smooth') {\r\n    if (!element) return;\r\n\r\n    element.scrollTop = Math.min(element.scrollTop, 100);\r\n    setTimeout(() => {\r\n        element.scrollTo({\r\n            top: 0,\r\n            behavior\r\n        });\r\n    }, 50);\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Archive from '../Tile/Archive';\r\nimport Dialog from '../Tile/Dialog';\r\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\r\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './DialogsList.css';\r\nimport { scrollTop } from '../../Utils/DOM';\r\n\r\nclass DialogListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, style, hidden } = this.props;\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.hidden !== hidden) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true style');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[vl] UserListItem.shouldUpdate false');\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, hidden, style } = this.props;\r\n\r\n        return (\r\n            <div className='dialog-list-item' style={style}>\r\n                <Dialog chatId={chatId} hidden={hidden} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass DialogsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.hiddenChats = new Map();\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        const { authorizationState } = AppStore;\r\n\r\n        this.state = {\r\n            authorizationState,\r\n            offset: 0,\r\n            chats: null,\r\n            fistSliceLoaded: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\r\n        const { chats, offset } = this.state;\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.open !== open) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.items !== items) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.cacheItems !== cacheItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showArchive !== showArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.archiveTitle !== archiveTitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.offset !== offset) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chats !== chats) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return { scrollTop: 0 };\r\n\r\n        return { scrollTop: list.scrollTop };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const { scrollTop } = snapshot;\r\n\r\n        // if (prevState.offset > this.state.offset) {\r\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\r\n        // }\r\n        // list.scrollTop = scrollTop;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFirstSlice();\r\n\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\r\n\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\r\n\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\r\n    }\r\n\r\n    onClientUpdateLeaveChat = update => {\r\n        const { inProgress, chatId } = update;\r\n\r\n        if (inProgress) {\r\n            this.hiddenChats.set(chatId, chatId);\r\n        } else {\r\n            this.hiddenChats.delete(chatId);\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        const { authorization_state: authorizationState } = update;\r\n\r\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.onLoadNext(true);\r\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\r\n    };\r\n\r\n    loadFirstSlice = async () => {\r\n        const { authorizationState } = this.state;\r\n        if (isAuthorizationReady(authorizationState)) {\r\n            await FileStore.initDB(() => this.onLoadNext(true));\r\n        }\r\n    };\r\n\r\n    saveCache = () => {\r\n        const { onSaveCache } = this.props;\r\n\r\n        if (onSaveCache) onSaveCache();\r\n    };\r\n\r\n    onUpdateChatOrder = update => {\r\n        const { type } = this.props;\r\n        const { chats } = this.state;\r\n\r\n        const { loading } = this;\r\n        if (loading) return;\r\n\r\n        const { chat_id, order } = update;\r\n\r\n        const chat = ChatStore.get(chat_id);\r\n        if (!chat || !chat.chat_list || chat.chat_list['@type'] !== type) {\r\n            return;\r\n        }\r\n\r\n        const newChatIds = [];\r\n        const chatIds = [];\r\n        for (let i = 0; i < chats.length; i++) {\r\n            let chat = ChatStore.get(chats[i]);\r\n            if (chat && chat.order !== '0') {\r\n                switch (chat.type['@type']) {\r\n                    case 'chatTypeBasicGroup': {\r\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\r\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\r\n                            chatIds.push(chat.id);\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'chatTypePrivate': {\r\n                        chatIds.push(chat.id);\r\n                        break;\r\n                    }\r\n                    case 'chatTypeSecret': {\r\n                        chatIds.push(chat.id);\r\n                        break;\r\n                    }\r\n                    case 'chatTypeSupergroup': {\r\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\r\n                            chatIds.push(chat.id);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (order === '0') {\r\n            // unselect deleted chat\r\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\r\n                TdLibController.setChatId(0);\r\n                AppStore.changeChatDetailsVisibility(false);\r\n            }\r\n        } else {\r\n            if (chats.length > 0) {\r\n                const existingChat = chats.find(x => x === chat_id);\r\n                if (!existingChat) {\r\n                    // const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\r\n                    // if (orderCompare(minChatOrder, chat.order) === 1) {\r\n                    //     console.log('[dl] onUpdate return 3', type);\r\n                    //     return;\r\n                    // }\r\n                    newChatIds.push(chat_id);\r\n                }\r\n            } else {\r\n                newChatIds.push(chat_id);\r\n            }\r\n        }\r\n\r\n        // console.log('[dl] onUpdate reorderChats', type, chatIds, newChatIds);\r\n        this.reorderChats(chatIds, newChatIds, () => {\r\n            this.loadChatContents(newChatIds);\r\n            this.saveCache();\r\n        });\r\n    };\r\n\r\n    reorderChats(chatIds, newChatIds = [], callback) {\r\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\r\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\r\n        });\r\n\r\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({ chats: orderedChatIds }, callback);\r\n    }\r\n\r\n    static isDifferentOrder(oldChatIds, newChatIds) {\r\n        if (oldChatIds.length === newChatIds.length) {\r\n            for (let i = 0; i < oldChatIds.length; i++) {\r\n                if (oldChatIds[i] !== newChatIds[i]) return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    handleScroll = () => {\r\n        // console.log('[vl] onScroll');\r\n        const list = this.listRef.current.getListRef().current;\r\n        if (!list) return;\r\n\r\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\r\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\r\n            this.onLoadPrev();\r\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\r\n            // console.log(`[vl] onScroll onLoadNext`);\r\n            this.onLoadNext();\r\n        }\r\n    };\r\n\r\n    onLoadPrev() {\r\n        this.setState({\r\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\r\n        });\r\n    }\r\n\r\n    async onLoadNext(replace = false) {\r\n        const { type } = this.props;\r\n        const { offset, chats } = this.state;\r\n\r\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\r\n            this.setState({\r\n                offset: offset + CHAT_SLICE_LIMIT\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\r\n        let offsetChatId = 0;\r\n        if (!replace && chats && chats.length > 0) {\r\n            const chat = ChatStore.get(chats[chats.length - 1]);\r\n            if (chat) {\r\n                offsetOrder = chat.order;\r\n                offsetChatId = chat.id;\r\n            }\r\n        }\r\n\r\n        if (type === 'chatListMain') console.log('[update] GETCHATS start');\r\n        this.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': type },\r\n            offset_chat_id: offsetChatId,\r\n            offset_order: offsetOrder,\r\n            limit: CHAT_SLICE_LIMIT\r\n        }).finally(() => {\r\n            this.loading = false;\r\n            if (type === 'chatListMain') console.log('[update] GETCHATS stop');\r\n            if (replace) {\r\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady' });\r\n            }\r\n        });\r\n        // TdLibController.send({\r\n        //     '@type': 'getChats',\r\n        //     offset_chat_id: offsetChatId,\r\n        //     offset_order: offsetOrder,\r\n        //     limit: CHAT_SLICE_LIMIT + 100\r\n        // });\r\n\r\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\r\n            result.chat_ids.shift();\r\n        }\r\n\r\n        if (replace) {\r\n            this.replaceChats(result.chat_ids, () => {\r\n                this.loadChatContents(result.chat_ids);\r\n                this.saveCache();\r\n            });\r\n        } else {\r\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\r\n            this.appendChats(result.chat_ids, () => {\r\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\r\n                this.loadChatContents(result.chat_ids);\r\n            });\r\n        }\r\n    }\r\n\r\n    loadChatContents(chatIds) {\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chatIds);\r\n    }\r\n\r\n    appendChats(chatIds, callback) {\r\n        if (chatIds.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        const { chats } = this.state;\r\n\r\n        const newChats = (chats || []).concat(chatIds);\r\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\r\n    }\r\n\r\n    replaceChats(chats, callback) {\r\n        this.setState({ chats, offset: 0 }, callback);\r\n    }\r\n\r\n    scrollToTop() {\r\n        const list = this.listRef.current.getListRef().current;\r\n\r\n        scrollTop(list);\r\n    }\r\n\r\n    renderItem = ({ index, style }, source) => {\r\n        const x = source[index];\r\n\r\n        return <DialogListItem key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />;\r\n\r\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\r\n    };\r\n\r\n    render() {\r\n        const { type, open, cacheItems, showArchive, archiveTitle } = this.props;\r\n        const { chats, offset } = this.state;\r\n\r\n        // console.log('[dl] render', type, open, chats, cacheChats);\r\n        if (!open) return null;\r\n\r\n        this.source = [];\r\n        let dialogs = null;\r\n        if (chats) {\r\n            let lastPinnedId = 0;\r\n            chats.forEach(x => {\r\n                const chat = ChatStore.get(x);\r\n                if (chat && chat.is_pinned) {\r\n                    lastPinnedId = x;\r\n                }\r\n            });\r\n            this.source = chats;\r\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\r\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\r\n            // ));\r\n        } else if (cacheItems) {\r\n            let lastPinnedId = 0;\r\n            cacheItems.forEach(x => {\r\n                const chat = ChatStore.get(x);\r\n                if (chat && chat.is_pinned) {\r\n                    lastPinnedId = x;\r\n                }\r\n            });\r\n            this.source = cacheItems.map(x => x.id);\r\n            // dialogs = cacheItems.map(x => (\r\n            //     <Dialog\r\n            //         key={x.id}\r\n            //         chatId={x.id}\r\n            //         isLastPinned={x === lastPinnedId}\r\n            //         hidden={this.hiddenChats.has(x.id)}\r\n            //     />\r\n            // ));\r\n        } else {\r\n            if (type === 'chatListMain') {\r\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <VirtualizedList\r\n                ref={this.listRef}\r\n                className='dialogs-list'\r\n                source={this.source}\r\n                rowHeight={76}\r\n                overScanCount={20}\r\n                renderItem={x => this.renderItem(x, this.source)}\r\n                onScroll={this.handleScroll}\r\n            />\r\n            // <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\r\n            //     {showArchive && offset === 0 && <Archive title={archiveTitle} />}\r\n            //     {dialogs}\r\n            // </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogsList.propTypes = {\r\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\r\n    showArchive: PropTypes.bool,\r\n    archiveTitle: PropTypes.string,\r\n    cacheItems: PropTypes.array,\r\n    items: PropTypes.array\r\n};\r\n\r\nexport default DialogsList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport DialogsList from './DialogsList';\r\n\r\nclass Archive extends React.Component {\r\n    render() {\r\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='dialogs-content'>\r\n                    <DialogsList\r\n                        type='chatListArchive'\r\n                        ref={innerListRef}\r\n                        cacheItems={cacheItems}\r\n                        open={true}\r\n                        items={items}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nArchive.propTypes = {};\r\n\r\nexport default withTranslation()(Archive);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport class KeyboardHandler {\r\n    constructor(onKeyDown) {\r\n        this.onKeyDown = onKeyDown;\r\n    }\r\n}\r\n\r\nclass KeyboardManager {\r\n    constructor() {\r\n        this.handlers = [];\r\n\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        const { handlers } = this;\r\n        if (!handlers.length) return;\r\n\r\n        const handler = handlers[handlers.length - 1];\r\n        if (handler) {\r\n            // event.preventDefault();\r\n            // event.stopPropagation();\r\n\r\n            const { onKeyDown } = handler;\r\n            if (onKeyDown) {\r\n                onKeyDown(event);\r\n            }\r\n        }\r\n    };\r\n\r\n    add(handler) {\r\n        // console.log('[sm] add', page);\r\n        this.handlers.push(handler);\r\n    }\r\n\r\n    remove(handler) {\r\n        // console.log('[sm] remove', page);\r\n        const index = this.handlers.indexOf(handler);\r\n        if (index === -1) return;\r\n\r\n        this.handlers.splice(index, 1);\r\n    }\r\n}\r\n\r\nconst manager = new KeyboardManager();\r\nexport default manager;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\r\n    'Delete'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ChatTile from './ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './TopChat.css';\r\n\r\nclass TopChat extends React.PureComponent {\r\n    state = {\r\n        contextMenu: false,\r\n        top: 0,\r\n        left: 0\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleDelete = event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\r\n        const { contextMenu, top, left } = this.state;\r\n\r\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\r\n\r\n        return (\r\n            <>\r\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\r\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\r\n                    <div className='top-chat-title'>{shortTitle}</div>\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nTopChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n    showSavedMessages: PropTypes.bool\r\n};\r\n\r\nTopChat.defaultProps = {\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(TopChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Chat from './Chat';\r\nimport './RecentlyFoundChat.css';\r\n\r\nclass RecentlyFoundChat extends React.PureComponent {\r\n    state = {\r\n        contextMenu: false,\r\n        top: 0,\r\n        left: 0\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleDelete = event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, onClick } = this.props;\r\n        const { contextMenu, top, left } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <ListItem\r\n                    button\r\n                    className='recently-found-chat'\r\n                    onClick={onClick}\r\n                    onContextMenu={this.handleContextMenu}>\r\n                    <Chat chatId={chatId} />\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nRecentlyFoundChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    onDelete: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(RecentlyFoundChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Chat from './Chat';\r\nimport { getChatUsername } from '../../Utils/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './FoundPublicChat.css';\r\n\r\nclass FoundPublicChat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextChatId: AppStore.getChatId(),\r\n            previousChatId: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n\r\n        if (nextState.nextChatId === chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.previousChatId === chatId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { nextChatId, previousChatId } = update;\r\n\r\n        this.setState({\r\n            nextChatId: nextChatId,\r\n            previousChatId: previousChatId\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClick } = this.props;\r\n        const { nextChatId: selectedChatId } = this.state;\r\n\r\n        const username = getChatUsername(chatId);\r\n\r\n        return (\r\n            <ListItem\r\n                button\r\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\r\n                onClick={onClick}>\r\n                <div className='found-public-chat-wrapper'>\r\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nFoundPublicChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default FoundPublicChat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ChatTile from './ChatTile';\r\nimport UserTile from './UserTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\r\nimport { getContent } from '../../Utils/Message';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './FoundMessage.css';\r\n\r\nclass FoundMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextChatId: AppStore.getChatId(),\r\n            nextMessageId: AppStore.getMessageId()\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        this.setState({\r\n            ...update\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\r\n        const selectedChatId = this.state.nextChatId;\r\n        const selectedMessageId = this.state.nextMessageId;\r\n        const message = MessageStore.get(chatId, messageId);\r\n\r\n        const { sender_user_id } = message;\r\n\r\n        const date = getMessageDate(message);\r\n        const senderName = getMessageSenderName(message, t);\r\n        const senderFullName = getMessageSenderFullName(message, t);\r\n        const content = getContent(message, t) || '\\u00A0';\r\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\r\n\r\n        const tile =\r\n            sender_user_id && chatSearch ? (\r\n                <UserTile userId={sender_user_id} dialog />\r\n            ) : (\r\n                <ChatTile chatId={chatId} dialog />\r\n            );\r\n\r\n        return (\r\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\r\n                <div className='dialog-wrapper'>\r\n                    {tile}\r\n                    <div className='dialog-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            {chatSearch && senderFullName ? (\r\n                                <div className='dialog-title'>{senderFullName}</div>\r\n                            ) : (\r\n                                <DialogTitle chatId={chatId} />\r\n                            )}\r\n                            <div className='dialog-meta'>{date}</div>\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <div className='dialog-content'>\r\n                                {\r\n                                    <>\r\n                                        {!chatSearch && senderName && (\r\n                                            <span className='dialog-content-accent'>{senderName}: </span>\r\n                                        )}\r\n                                        {content}\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nFoundMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    chatSearch: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FoundMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './SectionHeader.css';\r\n\r\nfunction SectionHeader({ command, multiline, onClick, children }) {\r\n    return (\r\n        <div className='section-header'>\r\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\r\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\r\n        </div>\r\n    );\r\n}\r\n\r\nSectionHeader.propTypes = {\r\n    command: PropTypes.string,\r\n    multiline: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default SectionHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Chat from '../../Tile/Chat';\r\nimport TopChat from '../../Tile/TopChat';\r\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\r\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\r\nimport FoundMessage from '../../Tile/FoundMessage';\r\nimport SectionHeader from '../SectionHeader';\r\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\r\nimport { filterDuplicateMessages } from '../../../Utils/Message';\r\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\r\nimport { orderCompare } from '../../../Utils/Common';\r\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Search.css';\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n        this.listRef = React.createRef();\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { text } = this.props;\r\n\r\n        this.searchOrLoadContent(text);\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        switch (event.key) {\r\n            case 'Escape':\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                event.target.blur();\r\n\r\n                this.handleClose();\r\n                break;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, text } = this.props;\r\n\r\n        if (prevProps.text !== text) {\r\n            this.searchOrLoadContent(text);\r\n        } else if (prevProps.chatId !== chatId) {\r\n            this.searchOrLoadContent(text);\r\n        }\r\n    }\r\n\r\n    searchOrLoadContent(text) {\r\n        const trimmedText = text ? text.trim() : '';\r\n\r\n        if (!trimmedText) {\r\n            this.loadContent();\r\n        } else {\r\n            this.searchText(trimmedText);\r\n        }\r\n    }\r\n\r\n    concatSearchResults = results => {\r\n        const arr = [];\r\n        const map = new Map();\r\n\r\n        for (let i = 0; i < results.length; i++) {\r\n            let result = results[i] && results[i].chat_ids;\r\n            if (result) {\r\n                for (let j = 0; j < result.length; j++) {\r\n                    if (!map.has(result[j])) {\r\n                        map.set(result[j], result[j]);\r\n                        arr.push(result[j]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        arr.sort((a, b) => {\r\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\r\n        });\r\n\r\n        return arr;\r\n    };\r\n\r\n    searchText = async text => {\r\n        this.sessionId = new Date();\r\n        this.text = text;\r\n        const sessionId = this.sessionId;\r\n        let store = null;\r\n\r\n        // console.log('[se] searchText=' + text);\r\n\r\n        const { chatId } = this.props;\r\n        const { savedMessages } = this.state;\r\n\r\n        if (!chatId) {\r\n            const promises = [];\r\n            const localPromise = TdLibController.send({\r\n                '@type': 'searchChats',\r\n                query: text,\r\n                limit: 100\r\n            });\r\n            promises.push(localPromise);\r\n\r\n            const latinText = getLatinInput(text);\r\n            if (latinText && latinText !== text) {\r\n                const latinLocalPromise = TdLibController.send({\r\n                    '@type': 'searchChats',\r\n                    query: latinText,\r\n                    limit: 100\r\n                });\r\n                promises.push(latinLocalPromise);\r\n            }\r\n\r\n            const cyrillicText = getCyrillicInput(text);\r\n            if (cyrillicText && cyrillicText !== text) {\r\n                const cyrillicLocalPromise = TdLibController.send({\r\n                    '@type': 'searchChats',\r\n                    query: cyrillicText,\r\n                    limit: 100\r\n                });\r\n                promises.push(cyrillicLocalPromise);\r\n            }\r\n\r\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\r\n            const local = this.concatSearchResults(results);\r\n\r\n            if (sessionId !== this.sessionId) {\r\n                return;\r\n            }\r\n\r\n            if (savedMessages) {\r\n                const { t } = this.props;\r\n\r\n                const searchText = text.toUpperCase();\r\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\r\n\r\n                if (\r\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\r\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\r\n                ) {\r\n                    local.splice(0, 0, savedMessages.id);\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                top: null,\r\n                recentlyFound: null,\r\n                local: local\r\n            });\r\n\r\n            store = FileStore.getStore();\r\n            loadChatsContent(store, local);\r\n\r\n            let trimmedText = text.trim();\r\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\r\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\r\n                const globalPromises = [];\r\n\r\n                const globalPromise = TdLibController.send({\r\n                    '@type': 'searchPublicChats',\r\n                    query: trimmedText\r\n                });\r\n                globalPromises.push(globalPromise);\r\n\r\n                if (latinText) {\r\n                    let latinTrimmedText = latinText.trim();\r\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\r\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\r\n                        const globalLatinPromise = TdLibController.send({\r\n                            '@type': 'searchPublicChats',\r\n                            query: latinTrimmedText\r\n                        });\r\n                        globalPromises.push(globalLatinPromise);\r\n                    }\r\n                }\r\n\r\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\r\n                const global = this.concatSearchResults(globalResults);\r\n\r\n                if (sessionId !== this.sessionId) {\r\n                    return;\r\n                }\r\n\r\n                this.setState({\r\n                    global\r\n                });\r\n\r\n                store = FileStore.getStore();\r\n                loadChatsContent(store, global);\r\n            } else {\r\n                this.setState({\r\n                    global: null\r\n                });\r\n            }\r\n        }\r\n\r\n        let messages = [];\r\n        if (chatId) {\r\n            messages = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: text,\r\n                sender_user_id: 0,\r\n                from_message_id: 0,\r\n                offset: 0,\r\n                limit: 50,\r\n                filter: null\r\n            });\r\n        } else {\r\n            messages = await TdLibController.send({\r\n                '@type': 'searchMessages',\r\n                query: text,\r\n                offset_date: 0,\r\n                offset_chat_id: 0,\r\n                offset_message_id: 0,\r\n                limit: 50\r\n            });\r\n        }\r\n\r\n        MessageStore.setItems(messages.messages);\r\n\r\n        let linkMessage = null;\r\n        if (!chatId) {\r\n            try {\r\n                const messageLinkInfo = await TdLibController.send({\r\n                    '@type': 'getMessageLinkInfo',\r\n                    url: text\r\n                });\r\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\r\n\r\n                MessageStore.setItems([messageLinkInfo.message]);\r\n\r\n                linkMessage = messageLinkInfo;\r\n            } catch (error) {\r\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\r\n            }\r\n        }\r\n\r\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\r\n\r\n        this.setState({\r\n            messages,\r\n            linkMessage\r\n        });\r\n\r\n        const chats = new Map();\r\n        const users = new Map();\r\n        for (let i = 0; i < messages.messages.length; i++) {\r\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\r\n            if (messages.messages[i].sender_user_id) {\r\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\r\n            }\r\n        }\r\n\r\n        if (linkMessage) {\r\n            const { chat_id, sender_user_id } = linkMessage;\r\n\r\n            chats.set(chat_id, chat_id);\r\n            if (sender_user_id) {\r\n                users.set(sender_user_id, sender_user_id);\r\n            }\r\n        }\r\n\r\n        store = FileStore.getStore();\r\n        loadChatsContent(store, [...chats.keys()]);\r\n        loadUsersContent(store, [...users.keys()]);\r\n    };\r\n\r\n    loadContent = async () => {\r\n        const { chatId } = this.props;\r\n        if (chatId) {\r\n            this.setState({\r\n                top: null,\r\n                recentlyFound: null,\r\n                local: null,\r\n                global: null,\r\n                messages: null,\r\n                linkMessage: null\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const topPromise = TdLibController.send({\r\n            '@type': 'getTopChats',\r\n            category: { '@type': 'topChatCategoryUsers' },\r\n            limit: 30\r\n        }).catch(() => {\r\n            return { '@type': 'chats', chat_ids: [] };\r\n        });\r\n\r\n        const recentlyFoundPromise = TdLibController.send({\r\n            '@type': 'searchChats',\r\n            query: '',\r\n            limit: 100\r\n        }).catch(() => {\r\n            return { '@type': 'chats', chat_ids: [] };\r\n        });\r\n\r\n        const savedMessagesPromise = TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        }).catch(error => {});\r\n\r\n        const [top, recentlyFound, savedMessages] = await Promise.all([\r\n            topPromise,\r\n            recentlyFoundPromise,\r\n            savedMessagesPromise\r\n        ]);\r\n\r\n        this.setState({\r\n            top,\r\n            recentlyFound,\r\n            savedMessages,\r\n            local: null,\r\n            global: null,\r\n            messages: null,\r\n            linkMessage: null\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, top.chat_ids);\r\n        loadChatsContent(store, recentlyFound.chat_ids);\r\n    };\r\n\r\n    handleClearRecentlyFound = event => {\r\n        event.stopPropagation();\r\n\r\n        TdLibController.send({\r\n            '@type': 'clearRecentlyFoundChats'\r\n        });\r\n\r\n        this.setState({ recentlyFound: null });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\r\n        const { onSelectMessage } = this.props;\r\n\r\n        if (addToRecent) {\r\n            TdLibController.send({\r\n                '@type': 'addRecentlyFoundChat',\r\n                chat_id: chatId\r\n            });\r\n        }\r\n\r\n        onSelectMessage(chatId, messageId, keepOpen);\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            this.onLoadPrevious();\r\n        }\r\n    };\r\n\r\n    getOffset = messages => {\r\n        const length = messages ? messages.messages.length : 0;\r\n\r\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\r\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\r\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\r\n\r\n        return {\r\n            offset_date: offsetDate,\r\n            offset_chat_id: offsetChatId,\r\n            offset_message_id: offsetMessageId\r\n        };\r\n    };\r\n\r\n    concatMessages = (messages, result) => {\r\n        if (!result) return messages;\r\n        if (!result.messages.length) return messages;\r\n\r\n        if (!messages) return result;\r\n        if (!messages.messages.length) return result;\r\n\r\n        return {\r\n            total_count: result.total_count,\r\n            messages: messages.messages.concat(result.messages)\r\n        };\r\n    };\r\n\r\n    onLoadPrevious = async () => {\r\n        if (this.loading) return;\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const sessionId = this.sessionId;\r\n\r\n        const { messages } = this.state;\r\n\r\n        const offset = this.getOffset(messages);\r\n\r\n        this.loading = true;\r\n        let result = [];\r\n        if (chatId) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: this.text,\r\n                sender_user_id: 0,\r\n                from_message_id: offset.offset_message_id,\r\n                limit: 50,\r\n                filter: null\r\n            });\r\n        } else {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchMessages',\r\n                query: this.text,\r\n                ...offset,\r\n                limit: 50\r\n            });\r\n        }\r\n        this.loading = false;\r\n\r\n        filterDuplicateMessages(result, messages ? messages.messages : []);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            messages: this.concatMessages(messages, result)\r\n        });\r\n\r\n        const chats = new Map();\r\n        const users = new Map();\r\n        for (let i = 0; i < result.messages.length; i++) {\r\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\r\n            if (result.messages[i].sender_user_id) {\r\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\r\n            }\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, [...chats.keys()]);\r\n        loadUsersContent(store, [...users.keys()]);\r\n    };\r\n\r\n    handleTopChatsScroll = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose();\r\n    };\r\n\r\n    handleDeleteRecentlyFoundChat = async chatId => {\r\n        if (!chatId) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'removeRecentlyFoundChat',\r\n            chat_id: chatId\r\n        });\r\n\r\n        const { recentlyFound } = this.state;\r\n        if (!recentlyFound) return;\r\n\r\n        this.setState({\r\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\r\n        });\r\n    };\r\n\r\n    handleDeleteTopChat = async chatId => {\r\n        if (!chatId) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'removeTopChat',\r\n            chat_id: chatId,\r\n            category: {\r\n                '@type': 'topChatCategoryUsers'\r\n            }\r\n        });\r\n\r\n        const { top } = this.state;\r\n        if (!top) return;\r\n\r\n        this.setState({\r\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const topChats =\r\n            top && top.chat_ids\r\n                ? top.chat_ids.map(x => (\r\n                      <TopChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\r\n                          onDelete={() => this.handleDeleteTopChat(x)}\r\n                      />\r\n                  ))\r\n                : [];\r\n\r\n        const recentlyFoundChats =\r\n            recentlyFound && recentlyFound.chat_ids\r\n                ? recentlyFound.chat_ids.map(x => (\r\n                      <RecentlyFoundChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\r\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\r\n                      />\r\n                  ))\r\n                : [];\r\n\r\n        const localChats = local\r\n            ? local.map(x => (\r\n                  <RecentlyFoundChat\r\n                      key={x}\r\n                      chatId={x}\r\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\r\n                  />\r\n              ))\r\n            : [];\r\n\r\n        const globalChatsMap = new Map();\r\n        const globalChats = global\r\n            ? global.map(x => {\r\n                  globalChatsMap.set(x, x);\r\n\r\n                  return (\r\n                      <FoundPublicChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\r\n                      />\r\n                  );\r\n              })\r\n            : [];\r\n\r\n        const globalLinkChat =\r\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\r\n                <FoundPublicChat\r\n                    key={linkMessage.chat_id}\r\n                    chatId={linkMessage.chat_id}\r\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\r\n                />\r\n            ) : null;\r\n\r\n        const globalMessagesMap = new Map();\r\n        const globalMessages =\r\n            messages && messages.messages\r\n                ? messages.messages.map(x => {\r\n                      const key = `${x.chat_id}_${x.id}`;\r\n                      globalMessagesMap.set(key, key);\r\n\r\n                      return (\r\n                          <FoundMessage\r\n                              key={key}\r\n                              chatId={x.chat_id}\r\n                              messageId={x.id}\r\n                              chatSearch={Boolean(chatId)}\r\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\r\n                          />\r\n                      );\r\n                  })\r\n                : [];\r\n\r\n        const globalLinkMessage =\r\n            linkMessage &&\r\n            linkMessage.message &&\r\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\r\n                <FoundMessage\r\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\r\n                    chatId={linkMessage.message.chat_id}\r\n                    messageId={linkMessage.message.id}\r\n                    chatSearch={false}\r\n                    onClick={() =>\r\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\r\n                    }\r\n                />\r\n            ) : null;\r\n\r\n        let count = messages ? messages.total_count : 0;\r\n        if (\r\n            linkMessage &&\r\n            linkMessage.message &&\r\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\r\n        ) {\r\n            count++;\r\n        }\r\n\r\n        let messagesCaption = t('NoMessages');\r\n        if (count) {\r\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\r\n        }\r\n\r\n        return (\r\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\r\n                {chat && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\r\n                            <div className='search-chat-wrapper'>\r\n                                <div className='search-chat-control'>\r\n                                    <Chat chatId={chatId} showStatus={false} />\r\n                                </div>\r\n                                <IconButton\r\n                                    className='header-right-button'\r\n                                    aria-label='Search'\r\n                                    onMouseDown={this.handleClose}>\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {topChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\r\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\r\n                                <div className='search-top-chats-placeholder' />\r\n                                {topChats}\r\n                                <div className='search-top-chats-placeholder' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {recentlyFoundChats.length > 0 && (\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\r\n                            {t('Recent')}\r\n                        </SectionHeader>\r\n                        {recentlyFoundChats}\r\n                    </div>\r\n                )}\r\n                {localChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\r\n                            {localChats}\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {globalChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\r\n                            {globalLinkChat}\r\n                            {globalChats}\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {(messages || (linkMessage && linkMessage.message)) && (\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{messagesCaption}</SectionHeader>\r\n                        {globalLinkMessage}\r\n                        {globalMessages}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearch.propTypes = {\r\n    chatId: PropTypes.number,\r\n    text: PropTypes.string,\r\n    onSelectMessage: PropTypes.func.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Search);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\r\n    'Menu'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\r\n    'Help'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\r\n    'Settings'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport ArchiveIcon from '../../Assets/Icons/Archive';\r\nimport MenuIcon from '../../Assets/Icons/Menu';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport HelpIcon from '../../Assets/Icons/Help';\r\nimport SavedIcon from '../../Assets/Icons/Saved';\r\nimport SettingsIcon from '../../Assets/Icons/Settings';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport { isAuthorizationReady } from '../../Utils/Common';\r\nimport { openArchive, openChat } from '../../Actions/Client';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass MainMenuButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            anchorEl: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    handleMenuOpen = event => {\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleCheckUpdates = async () => {\r\n        this.handleMenuClose();\r\n\r\n        //await update();\r\n    };\r\n\r\n    handleNewGroup = event => {\r\n        this.handleMenuClose();\r\n    };\r\n\r\n    handleContacts = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateContacts',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleArchived = event => {\r\n        this.handleMenuClose();\r\n\r\n        openArchive();\r\n    };\r\n\r\n    handleSaved = async event => {\r\n        this.handleMenuClose();\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        });\r\n        if (!chat) return;\r\n\r\n        openChat(chat.id);\r\n    };\r\n\r\n    handleSettings = async event => {\r\n        this.handleMenuClose();\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        });\r\n        if (!chat) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSettings',\r\n            open: true,\r\n            chatId: chat.id\r\n        });\r\n    };\r\n\r\n    handleHelp = event => {\r\n        this.handleMenuClose();\r\n    };\r\n\r\n    render() {\r\n        const { t, showClose, onClose } = this.props;\r\n        const { anchorEl, authorizationState } = this.state;\r\n\r\n        const mainMenuControl =\r\n            !showClose && isAuthorizationReady(authorizationState) ? (\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleNewGroup}>\r\n                        <ListItemIcon>\r\n                            <GroupIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('NewGroup')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleContacts}>\r\n                        <ListItemIcon>\r\n                            <UserIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Contacts')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleArchived}>\r\n                        <ListItemIcon>\r\n                            <ArchiveIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Archived')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleSaved}>\r\n                        <ListItemIcon>\r\n                            <SavedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Saved')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleSettings}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Settings')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleHelp}>\r\n                        <ListItemIcon>\r\n                            <HelpIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('SettingsHelp')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n            ) : null;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='header-left-button'\r\n                    aria-label='Menu'\r\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\r\n                    <SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />\r\n                </IconButton>\r\n                {mainMenuControl}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(MainMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SearchIcon from '../../../Assets/Icons/Search';\r\nimport './SearchInput.css';\r\n\r\nclass SearchInput extends React.Component {\r\n    handleKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        } else if (event.keyCode === 27) {\r\n            const { onChange, onClose } = this.props;\r\n\r\n            const element = event.target;\r\n            if (!element) return;\r\n\r\n            if (element.innerText) {\r\n                event.stopPropagation();\r\n                event.nativeEvent.stopImmediatePropagation();\r\n\r\n                element.innerText = null;\r\n                if (onChange) onChange(element.innerText);\r\n                return;\r\n            }\r\n\r\n            if (onClose) {\r\n                event.stopPropagation();\r\n                event.target.blur();\r\n                onClose();\r\n            }\r\n        }\r\n    };\r\n\r\n    handleKeyUp = event => {\r\n        const element = event.target;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    };\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleInput = event => {\r\n        const { onChange } = this.props;\r\n\r\n        const element = event.target;\r\n        if (!element) return;\r\n\r\n        if (onChange) {\r\n            onChange(element.innerText);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { inputRef, t, onFocus } = this.props;\r\n\r\n        return (\r\n            <div className='search-input'>\r\n                <div\r\n                    id='search-inputbox'\r\n                    ref={inputRef}\r\n                    placeholder={t('Search')}\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    onKeyDown={this.handleKeyDown}\r\n                    onKeyUp={this.handleKeyUp}\r\n                    onPaste={this.handlePaste}\r\n                    onInput={this.handleInput}\r\n                    onFocus={onFocus}\r\n                />\r\n                <SearchIcon className='search-input-icon' />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearchInput.propTypes = {\r\n    inputRef: PropTypes.object,\r\n    onChange: PropTypes.func,\r\n    onFocus: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SearchInput);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainMenuButton from './MainMenuButton';\r\nimport SearchInput from './Search/SearchInput';\r\nimport { isAuthorizationReady } from '../../Utils/Common';\r\nimport { ANIMATION_DURATION_100MS } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport '../ColumnMiddle/Header.css';\r\n\r\nclass DialogsHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n\r\n        this.state = {\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            open: false\r\n        };\r\n    }\r\n\r\n    setInitQuery(query) {\r\n        const { onSearchTextChange } = this.props;\r\n\r\n        const searchInput = this.searchInputRef.current;\r\n        if (searchInput) {\r\n            searchInput.innerText = query;\r\n            if (searchInput.childNodes.length > 0) {\r\n                const range = document.createRange();\r\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\r\n                range.collapse(true);\r\n\r\n                const selection = window.getSelection();\r\n                selection.removeAllRanges();\r\n                selection.addRange(range);\r\n            }\r\n            searchInput.focus();\r\n            onSearchTextChange(query);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { openSearch, text } = this.props;\r\n\r\n        if (openSearch !== prevProps.openSearch) {\r\n            const searchInput = this.searchInputRef.current;\r\n            if (openSearch) {\r\n                setTimeout(() => {\r\n                    if (searchInput) {\r\n                        searchInput.focus();\r\n                    }\r\n                }, ANIMATION_DURATION_100MS);\r\n            } else {\r\n                searchInput.innerText = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    handleSearch = () => {\r\n        const { onSearch, openSearch } = this.props;\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        onSearch(!openSearch);\r\n    };\r\n\r\n    handleSearchTextChange = () => {\r\n        const { onSearchTextChange } = this.props;\r\n\r\n        const element = this.searchInputRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        onSearchTextChange(innerText);\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.handleSearch();\r\n    };\r\n\r\n    handleFocus = () => {\r\n        this.handleSearch();\r\n    };\r\n\r\n    render() {\r\n        const { openSearch } = this.props;\r\n\r\n        let content = null;\r\n        let showClose = false;\r\n        if (openSearch) {\r\n            showClose = true;\r\n            content = (\r\n                <SearchInput\r\n                    inputRef={this.searchInputRef}\r\n                    onChange={this.handleSearchTextChange}\r\n                    onClose={this.handleCloseSearch}\r\n                />\r\n            );\r\n        } else {\r\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\r\n        }\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <MainMenuButton showClose={showClose} onClose={this.handleCloseSearch} />\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogsHeader.propTypes = {\r\n    openSearch: PropTypes.bool.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    onSearch: PropTypes.func.isRequired,\r\n    onSearchTextChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default DialogsHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Slide } from '@material-ui/core';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport './SidebarPage.css';\r\n\r\nclass SidebarPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        event.target.blur();\r\n\r\n        switch (event.key) {\r\n            case 'Escape':\r\n                const { onClose } = this.props;\r\n                if (onClose) onClose();\r\n                break;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { open } = this.props;\r\n\r\n        if (prevProps.open !== open) {\r\n            if (open) {\r\n                KeyboardManager.add(this.keyboardHandler);\r\n            } else {\r\n                KeyboardManager.remove(this.keyboardHandler);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { children, open, onClose } = this.props;\r\n\r\n        return (\r\n            <Slide direction='right' in={open} mountOnEnter unmountOnExit>\r\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\r\n            </Slide>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarPage.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default SidebarPage;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\r\n    'Edit'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\r\n    'LogOut'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\r\n    'More'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\r\nimport MoreIcon from '../../../Assets/Icons/More';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\n\r\nclass SettingsMenuButton extends React.Component {\r\n    state = {\r\n        anchorEl: null,\r\n        open: false\r\n    };\r\n\r\n    handleMenuOpen = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.handleMenuClose();\r\n\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleDone = () => {\r\n        this.handleClose();\r\n        TdLibController.logOut();\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { anchorEl, open } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='header-right-button'\r\n                    aria-label='Menu'\r\n                    onClick={this.handleMenuOpen}>\r\n                    <MoreIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleLogOut}>\r\n                        <ListItemIcon>\r\n                            <LogOutIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('LogOut')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={open}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('AreYouSureLogout')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDone} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSettingsMenuButton.propTypes = {};\r\n\r\nexport default withTranslation()(SettingsMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\r\n    'Data'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\r\n    'Language'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport withTheme from '@material-ui/core/styles/withTheme';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport red from '@material-ui/core/colors/red';\r\nimport orange from '@material-ui/core/colors/orange';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport green from '@material-ui/core/colors/green';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport './ThemePicker.css';\r\n\r\nclass ThemePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n            type: this.props.theme.palette.type,\r\n            color: this.getColorString(this.props.theme.palette.primary.main)\r\n        };\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ type: event.target.value });\r\n\r\n        ApplicationStore.emit('clientUpdateThemeChanging', {\r\n            type: event.target.value,\r\n            primary: this.getColor(this.state.color)\r\n        });\r\n    };\r\n\r\n    handleAccentChange = event => {\r\n        this.setState({ color: event.target.value });\r\n\r\n        ApplicationStore.emit('clientUpdateThemeChanging', {\r\n            type: this.state.type,\r\n            primary: this.getColor(event.target.value)\r\n        });\r\n    };\r\n\r\n    getColorString = value => {\r\n        switch (value) {\r\n            case red['500']:\r\n                return 'red';\r\n            case orange['500']:\r\n                return 'orange';\r\n            case amber['500']:\r\n                return 'amber';\r\n            case green['500']:\r\n                return 'green';\r\n            case '#50A2E9':\r\n                return 'blue';\r\n            case indigo['500']:\r\n                return 'indigo';\r\n            case deepPurple['500']:\r\n                return 'deepPurple';\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    getColor = value => {\r\n        switch (value) {\r\n            case 'red':\r\n                return red;\r\n            case 'orange':\r\n                return orange;\r\n            case 'amber':\r\n                return amber;\r\n            case 'green':\r\n                return green;\r\n            case 'blue':\r\n                return { main: '#50A2E9' };\r\n            case 'indigo':\r\n                return indigo;\r\n            case 'deepPurple':\r\n                return deepPurple;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    open = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { type, color, open } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                transitionDuration={0}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='alert-dialog-title'\r\n                aria-describedby='alert-dialog-description'>\r\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\r\n                <DialogContent>\r\n                    <FormControl component='fieldset' className='theme-picker-form'>\r\n                        <FormLabel focused component='legend'>\r\n                            {t('Theme')}\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label='theme'\r\n                            name='theme1'\r\n                            className='theme-picker-group'\r\n                            value={type}\r\n                            onChange={this.handleChange}>\r\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\r\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <FormControl component='fieldset' className='theme-picker-form'>\r\n                        <FormLabel focused component='legend'>\r\n                            {t('Accent')}\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label='accent'\r\n                            name='accent1'\r\n                            className='theme-picker-group'\r\n                            value={color}\r\n                            onChange={this.handleAccentChange}>\r\n                            <FormControlLabel\r\n                                value='red'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-red'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Red'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='orange'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-orange'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Orange'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='amber'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-amber'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Amber'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='green'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-green'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Green'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='blue'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-blue'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Blue'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='indigo'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-indigo'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Indigo'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='deepPurple'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-deep-purple'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Deep Purple'\r\n                            />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nThemePicker.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTheme,\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ThemePicker);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport Chat from '../../Tile/Chat';\r\nimport EditIcon from '../../../Assets/Icons/Edit';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport SettingsIcon from '../../../Assets/Icons/Settings';\r\nimport SettingsMenuButton from './SettingsMenuButton';\r\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\r\nimport DataIcon from '../../../Assets/Icons/Data';\r\nimport LanguageIcon from '../../../Assets/Icons/Language';\r\nimport PhotoIcon from '../../../Assets/Icons/SharedMedia';\r\nimport ThemePicker from '../ThemePicker';\r\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport './Main.css';\r\n\r\nclass Main extends React.Component {\r\n    handleOpenViewer = () => {\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.photo) return;\r\n\r\n        setProfileMediaViewerContent({ chatId });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            chatId,\r\n            t,\r\n            onClose,\r\n            onEditProfile,\r\n            onGeneral,\r\n            onNotifications,\r\n            onPrivacySecurity,\r\n            onLanguage\r\n        } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { photo } = chat;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Settings')}</span>\r\n                    </div>\r\n                    <SettingsMenuButton />\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='chat-details-info'>\r\n                        <Chat\r\n                            chatId={chatId}\r\n                            big={true}\r\n                            showStatus={true}\r\n                            showSavedMessages={false}\r\n                            onTileSelect={photo ? this.handleOpenViewer : null}\r\n                        />\r\n                    </div>\r\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\r\n                        <ListItemIcon>\r\n                            <EditIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('EditProfile')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('GeneralSettings')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\r\n                        <ListItemIcon>\r\n                            <UnmuteIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Notifications')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\r\n                        <ListItemIcon>\r\n                            <DataIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('PrivacySettings')} />\r\n                    </ListItem>\r\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\r\n                        <ListItemIcon>\r\n                            <LanguageIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Language')} />\r\n                    </ListItem>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMain.propTypes = {\r\n    chatId: PropTypes.number,\r\n    onClose: PropTypes.func,\r\n    onEditProfile: PropTypes.func,\r\n    onGeneral: PropTypes.func,\r\n    onNotifications: PropTypes.func,\r\n    onPrivacySecurity: PropTypes.func,\r\n    onLanguage: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Main);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport Chat from '../../Tile/Chat';\r\nimport SidebarPage from '../SidebarPage';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './EditProfile.css';\r\n\r\nclass EditProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.firstNameRef = React.createRef();\r\n        this.lastNameRef = React.createRef();\r\n        this.bioRef = React.createRef();\r\n        this.usernameRef = React.createRef();\r\n\r\n        const user = UserStore.get(UserStore.getMyId());\r\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\r\n\r\n        this.state = {\r\n            firstName: user ? user.first_name : '',\r\n            lastName: user ? user.last_name : '',\r\n            bio: userFullInfo ? userFullInfo.bio : '',\r\n            username: user ? user.username : '',\r\n            usernameCheck: null\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setName();\r\n        this.setBio();\r\n        this.setUsername();\r\n    }\r\n\r\n    setUsername() {\r\n        const { username, usernameCheck } = this.state;\r\n        let newUsername = this.usernameRef.current.value;\r\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\r\n            newUsername = newUsername.substr(1);\r\n        }\r\n\r\n        if (username === newUsername) return;\r\n        if (!usernameCheck) return;\r\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setUsername',\r\n            username: newUsername\r\n        });\r\n    }\r\n\r\n    setName() {\r\n        const { firstName, lastName } = this.state;\r\n        const newFirstName = this.firstNameRef.current.value;\r\n        const newLastName = this.lastNameRef.current.value;\r\n\r\n        if (newFirstName === firstName && newLastName === lastName) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.send({\r\n            '@type': 'setName',\r\n            first_name: newFirstName,\r\n            last_name: newLastName\r\n        });\r\n    }\r\n\r\n    setBio() {\r\n        const { bio } = this.state;\r\n        const newBio = this.bioRef.current.value;\r\n        if (newBio === bio) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.send({\r\n            '@type': 'setBio',\r\n            bio: newBio\r\n        });\r\n    }\r\n\r\n    handleUsernameChange = async () => {\r\n        const { chatId } = this.props;\r\n        const { username } = this.state;\r\n        let newUsername = this.usernameRef.current.value;\r\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\r\n            newUsername = newUsername.substr(1);\r\n        }\r\n        if (username === newUsername || newUsername === '') {\r\n            this.setState({\r\n                usernameCheck: null\r\n            });\r\n\r\n            // console.log('[un] checkChatUsername', 'null');\r\n        } else {\r\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\r\n            const result = await TdLibController.send({\r\n                '@type': 'checkChatUsername',\r\n                chat_id: chatId,\r\n                username: newUsername\r\n            });\r\n\r\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\r\n\r\n            let newUsername2 = this.usernameRef.current.value;\r\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\r\n                newUsername2 = newUsername2.substr(1);\r\n            }\r\n            if (newUsername2 === newUsername) {\r\n                this.setState({\r\n                    usernameCheck: result\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { chatId, t, onClose } = this.props;\r\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\r\n\r\n        let hasError = false;\r\n        let usernameLabel = t('Username');\r\n        if (usernameCheck) {\r\n            switch (usernameCheck['@type']) {\r\n                case 'checkChatUsernameResultOk': {\r\n                    hasError = false;\r\n                    usernameLabel = 'Username is available';\r\n                    break;\r\n                }\r\n                case 'checkChatUsernameResultPublicChatsTooMuch':\r\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\r\n                case 'checkChatUsernameResultUsernameInvalid': {\r\n                    hasError = true;\r\n                    usernameLabel = 'Invalid username';\r\n                    break;\r\n                }\r\n                case 'checkChatUsernameResultUsernameOccupied': {\r\n                    hasError = true;\r\n                    usernameLabel = 'Username is already taken';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log('[un] render', hasError, usernameLabel);\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('EditProfile')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='chat-details-info'>\r\n                        <Chat\r\n                            chatId={chatId}\r\n                            showTitle={false}\r\n                            big={true}\r\n                            showStatus={true}\r\n                            showSavedMessages={false}\r\n                            onTileSelect={null}\r\n                        />\r\n                    </div>\r\n                    <div className='edit-profile-name'>\r\n                        <TextField\r\n                            inputRef={this.firstNameRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('FirstName')}\r\n                            defaultValue={firstName}\r\n                        />\r\n                        <TextField\r\n                            inputRef={this.lastNameRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('LastName')}\r\n                            defaultValue={lastName}\r\n                        />\r\n                        <TextField\r\n                            inputRef={this.bioRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('Bio')}\r\n                            defaultValue={bio}\r\n                        />\r\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='edit-profile-username'>\r\n                        <TextField\r\n                            inputRef={this.usernameRef}\r\n                            error={hasError}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={usernameLabel}\r\n                            defaultValue={username}\r\n                            onChange={this.handleUsernameChange}\r\n                        />\r\n                        <div className='edit-profile-hint'>\r\n                            You can choose a username on Telegram. If you do, other people will be able to find you by\r\n                            this username and contact you without knowing your phone number. You can use a-z, 0-9 and\r\n                            underscores. Minimum length is 5 characters.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(EditProfile);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\r\n    'Colorize'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getSrc } from '../../Utils/File';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './Wallpaper.css';\r\nimport FileProgress from '../Viewer/FileProgress';\r\n\r\nclass Wallpaper extends React.Component {\r\n    state = {\r\n        loaded: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateDocumentThumbnailBlob = update => {\r\n        const { wallpaper } = this.props;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail } = document;\r\n        if (!thumbnail) return;\r\n\r\n        const file = thumbnail.photo;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleLoad = () => {\r\n        this.setState({ loaded: true });\r\n    };\r\n\r\n    handleClick = () => {\r\n        const { wallpaper, onClick } = this.props;\r\n\r\n        if (onClick) {\r\n            onClick(wallpaper);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { wallpaper, isSelected } = this.props;\r\n        const { loaded } = this.state;\r\n\r\n        const { document } = wallpaper;\r\n        const { minithumbnail, thumbnail } = document;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\r\n        const tileLoaded = thumbSrc && loaded;\r\n        const src = thumbSrc || miniSrc;\r\n\r\n        return (\r\n            <div className='shared-photo' onClick={this.handleClick}>\r\n                <div\r\n                    className='shared-photo-content'\r\n                    style={{\r\n                        backgroundImage: `url(${thumbSrc || miniSrc})`,\r\n                        backgroundSize: 'cover',\r\n                        backgroundPosition: '50%'\r\n                    }}>\r\n                    {src !== thumbSrc && (\r\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\r\n                    )}\r\n                </div>\r\n                {isSelected && (\r\n                    <>\r\n                        <div className='wallpaper-selected' />\r\n                        <div className='wallpaper-selected-inner' />\r\n                    </>\r\n                )}\r\n                {document && document.document && <FileProgress file={document.document} cancelButton={false} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nWallpaper.propTypes = {\r\n    wallpaper: PropTypes.object.isRequired,\r\n    isSelected: PropTypes.bool\r\n};\r\n\r\nexport default Wallpaper;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport Wallpaper from '../../Tile/Wallpaper';\r\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './ChatBackground.css';\r\n\r\nclass ChatBackground extends React.Component {\r\n    state = {\r\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent() {\r\n        const { backgrounds } = this.props;\r\n        if (!backgrounds) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadBackgroundsContent(store, backgrounds.backgrounds);\r\n    }\r\n\r\n    handleClick = wallpaper => {\r\n        this.setState({\r\n            selectedId: wallpaper.id\r\n        });\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail, document: file } = document;\r\n        if (!file) return;\r\n\r\n        const src = getSrc(file);\r\n        if (!src) {\r\n            const store = FileStore.getStore();\r\n            loadBackgroundContent(store, wallpaper, true);\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateChatBackground',\r\n            wallpaper\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, backgrounds, onClose } = this.props;\r\n        const { selectedId } = this.state;\r\n\r\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\r\n                    {wallpapers.map(x => (\r\n                        <Wallpaper\r\n                            key={x.id}\r\n                            wallpaper={x}\r\n                            isSelected={x.id === selectedId}\r\n                            onClick={this.handleClick}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nChatBackground.propTypes = {\r\n    backgrounds: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(ChatBackground);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\r\nimport ChatBackground from './ChatBackground';\r\nimport SidebarPage from '../SidebarPage';\r\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\r\nimport ThemePicker from '../ThemePicker';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './General.css';\r\n\r\nclass General extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            backgrounds: null\r\n        };\r\n\r\n        this.themePickerRef = React.createRef();\r\n    }\r\n\r\n    handleAppearance = () => {\r\n        this.themePickerRef.current.open();\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent = () => {\r\n        TdLibController.send({\r\n            '@type': 'getBackgrounds',\r\n            for_dark_theme: false\r\n        }).then(backgrounds => this.setState({ backgrounds }));\r\n    };\r\n\r\n    openChatBackground = () => {\r\n        if (!this.state.backgrounds) return;\r\n\r\n        this.setState({\r\n            openChatBackground: true\r\n        });\r\n    };\r\n\r\n    closeChatBackground = () => {\r\n        this.setState({\r\n            openChatBackground: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { backgrounds, openChatBackground } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <ListItem\r\n                            autoFocus={false}\r\n                            className='settings-list-item'\r\n                            button\r\n                            onClick={this.openChatBackground}>\r\n                            <ListItemIcon>\r\n                                <SharedMediaIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('ChatBackground')} />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            autoFocus={false}\r\n                            className='settings-list-item'\r\n                            button\r\n                            onClick={this.handleAppearance}>\r\n                            <ListItemIcon>\r\n                                <ColorizeIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Appearance')} />\r\n                        </ListItem>\r\n                    </div>\r\n                </div>\r\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\r\n                    <ChatBackground backgrounds={backgrounds} />\r\n                </SidebarPage>\r\n                <ThemePicker ref={this.themePickerRef} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nGeneral.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(General);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Language.css';\r\n\r\nclass Language extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { i18n } = props;\r\n        const language = i18n ? i18n.language : null;\r\n\r\n        this.state = {\r\n            language: language || 'en'\r\n        };\r\n    }\r\n\r\n    handleChange = language => {\r\n        this.setState({ language });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { language } = this.state;\r\n        const info = LocalizationStore.info || { language_packs: [] };\r\n\r\n        const languages = info.language_packs.map(x => (\r\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\r\n                <Radio\r\n                    color='primary'\r\n                    className='settings-item-control'\r\n                    checked={language === x.id}\r\n                    tabIndex={-1}\r\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                />\r\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Language')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>{languages}</div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nLanguage.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Language);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport SectionHeader from '../SectionHeader';\r\nimport NotificationStore from '../../../Stores/NotificationStore';\r\nimport OptionStore from '../../../Stores/OptionStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Notifications.css';\r\n\r\nclass Notifications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\r\n\r\n        this.state = {\r\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\r\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\r\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\r\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\r\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\r\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\r\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\r\n        this.setContactJoinedOption(contactJoined);\r\n    }\r\n\r\n    setContactJoinedOption() {\r\n        const { contactJoined } = this.state;\r\n\r\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\r\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\r\n        if (oldContactJoined === contactJoined) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setOption',\r\n            name: 'disable_contact_registered_notifications',\r\n            value: {\r\n                '@type': 'optionValueBoolean',\r\n                value: !contactJoined\r\n            }\r\n        });\r\n    }\r\n\r\n    setScopeNotificationSettings(scope, settings) {\r\n        if (!scope) return;\r\n        if (!settings) return;\r\n        const oldSettings = NotificationStore.settings.get(scope);\r\n        if (!oldSettings) return;\r\n\r\n        const { mute_for, show_preview } = settings;\r\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\r\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setScopeNotificationSettings',\r\n            scope: { '@type': scope },\r\n            notification_settings: settings\r\n        });\r\n    }\r\n\r\n    handleMuteFor = property => {\r\n        const settings = this.state[property];\r\n        if (!settings) return;\r\n\r\n        const { mute_for } = settings;\r\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\r\n\r\n        this.setState({ [property]: newSettings });\r\n    };\r\n\r\n    handleShowPreview = property => {\r\n        const settings = this.state[property];\r\n        if (!settings) return;\r\n\r\n        const { show_preview } = settings;\r\n        const newSettings = { ...settings, show_preview: !show_preview };\r\n\r\n        this.setState({ [property]: newSettings });\r\n    };\r\n\r\n    handleContactJoined = () => {\r\n        this.setState({ contactJoined: !this.state.contactJoined });\r\n    };\r\n\r\n    isEnabled(settings) {\r\n        if (!settings) return false;\r\n\r\n        const { mute_for } = settings;\r\n\r\n        return mute_for === 0;\r\n    }\r\n\r\n    showPreview(settings) {\r\n        if (!settings) return false;\r\n\r\n        const { show_preview } = settings;\r\n\r\n        return show_preview;\r\n    }\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Notifications')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(privateChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForPrivateChats')}\r\n                                secondary={\r\n                                    this.isEnabled(privateChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(privateChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(groupChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForGroups')}\r\n                                secondary={\r\n                                    this.isEnabled(groupChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(groupChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(channelChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForChannels')}\r\n                                secondary={\r\n                                    this.isEnabled(channelChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(channelChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\r\n                        <div className='settings-item' onClick={this.handleContactJoined}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={contactJoined}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('ContactJoined')}\r\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNotifications.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Notifications);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\r\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\r\n    </g>,\r\n    'Stop'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport StopIcon from '../../Assets/Icons/Stop';\r\nimport { getMessageDate } from '../../Utils/Chat';\r\nimport './Session.css';\r\n\r\nclass Session extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { session } = this.props;\r\n        if (!session) return;\r\n        if (session.is_current) return;\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleTerminate = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { onTerminate, session } = this.props;\r\n\r\n        onTerminate(session);\r\n    };\r\n\r\n    render() {\r\n        const { session, t } = this.props;\r\n        if (!session) return null;\r\n\r\n        const { left, top, contextMenu } = this.state;\r\n        const {\r\n            is_current,\r\n            application_name,\r\n            application_version,\r\n            device_model,\r\n            platform,\r\n            system_version,\r\n            ip,\r\n            region,\r\n            country,\r\n            last_active_date\r\n        } = session;\r\n        const showDate = !is_current;\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\r\n                    <div className='session'>\r\n                        <div className='session-title'>\r\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\r\n                            {showDate && (\r\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\r\n                            )}\r\n                        </div>\r\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\r\n                        <div className='session-subtitle2'>\r\n                            {`${ip} - `}\r\n                            {region && `${region}, `}\r\n                            {country && `${country}`}\r\n                        </div>\r\n                    </div>\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleTerminate}>\r\n                            <ListItemIcon>\r\n                                <StopIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Terminate')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSession.propTypes = {\r\n    session: PropTypes.object.isRequired,\r\n    onTerminate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Session);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport Session from '../../Tile/Session';\r\nimport StopIcon from '../../../Assets/Icons/Stop';\r\nimport SectionHeader from '../SectionHeader';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './ActiveSessions.css';\r\n\r\nclass ActiveSessions extends React.Component {\r\n    state = {\r\n        open: false,\r\n        openAll: false,\r\n        session: null\r\n    };\r\n\r\n    handleTerminate = session => {\r\n        this.setState({\r\n            open: true,\r\n            session\r\n        });\r\n    };\r\n\r\n    handleTerminateAllOther = () => {\r\n        this.setState({\r\n            openAll: true\r\n        });\r\n    };\r\n\r\n    handleCloseConfirmation = () => {\r\n        this.setState({\r\n            open: false,\r\n            session: null\r\n        });\r\n    };\r\n\r\n    handleDoneConfirmation = async () => {\r\n        const { sessions } = this.props;\r\n        const { session } = this.state;\r\n        if (!session) return;\r\n\r\n        this.setState({\r\n            open: false,\r\n            session: null\r\n        });\r\n\r\n        await TdLibController.send({\r\n            '@type': 'terminateSession',\r\n            session_id: session.id\r\n        });\r\n\r\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleCloseAllConfirmation = () => {\r\n        this.setState({\r\n            openAll: false\r\n        });\r\n    };\r\n\r\n    handleDoneAllConfirmation = async () => {\r\n        const { sessions } = this.props;\r\n\r\n        this.setState({\r\n            openAll: false\r\n        });\r\n\r\n        await TdLibController.send({\r\n            '@type': 'terminateAllOtherSessions'\r\n        });\r\n\r\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { t, sessions, onClose } = this.props;\r\n        const { open, openAll } = this.state;\r\n\r\n        const current = sessions.sessions.find(x => x.is_current);\r\n        const other = sessions.sessions.filter(x => !x.is_current);\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    {Boolean(current) && (\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\r\n                            <Session session={current} onTerminate={this.handleTerminate} />\r\n                            {other.length > 0 && (\r\n                                <ListItem\r\n                                    className='settings-list-item'\r\n                                    button\r\n                                    disableRipple\r\n                                    onClick={this.handleTerminateAllOther}>\r\n                                    <ListItemIcon>\r\n                                        <StopIcon color='secondary' />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primaryTypographyProps={{ color: 'secondary' }}\r\n                                        primary={t('TerminateAllSessions')}\r\n                                    />\r\n                                </ListItem>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                    {other.length > 0 && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\r\n                                {other.map(x => (\r\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\r\n                                ))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={open}\r\n                    onClose={this.handleCloseConfirmation}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('TerminateSessionText')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={openAll}\r\n                    onClose={this.handleCloseAllConfirmation}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('AreYouSureSessions')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nActiveSessions.propTypes = {\r\n    sessions: PropTypes.object.isRequired,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ActiveSessions);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\r\n    'Unblock'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation, withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport SectionHeader from '../SectionHeader';\r\nimport User from '../../Tile/User';\r\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\r\nimport { loadUsersContent } from '../../../Utils/File';\r\nimport { openUser } from '../../../Actions/Client';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './BlockedUsers.css';\r\n\r\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\r\n    const [contextMenu, setContextMenu] = React.useState(false);\r\n    const [top, setTop] = React.useState(0);\r\n    const [left, setLeft] = React.useState(0);\r\n    const { t } = useTranslation();\r\n\r\n    const handleContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        if (contextMenu) {\r\n            setContextMenu(false);\r\n        } else {\r\n            const { clientX, clientY } = event;\r\n\r\n            setContextMenu(true);\r\n            setLeft(clientX);\r\n            setTop(clientY);\r\n        }\r\n    };\r\n\r\n    const handleCloseContextMenu = () => {\r\n        setContextMenu(false);\r\n        setLeft(0);\r\n        setTop(0);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        onClick(userId);\r\n    };\r\n\r\n    const handleUnblock = () => {\r\n        handleCloseContextMenu();\r\n        onUnblock(userId);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n            <Popover\r\n                open={contextMenu}\r\n                onClose={handleCloseContextMenu}\r\n                anchorReference='anchorPosition'\r\n                anchorPosition={{ top, left }}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left'\r\n                }}\r\n                onMouseDown={e => e.stopPropagation()}>\r\n                <MenuList onClick={e => e.stopPropagation()}>\r\n                    <MenuItem onClick={handleUnblock}>\r\n                        <ListItemIcon>\r\n                            <UnblockIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Unblock')} />\r\n                    </MenuItem>\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    );\r\n});\r\n\r\nBlockedUser.propTypes = {\r\n    userId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    onUnblock: PropTypes.func.isRequired\r\n};\r\n\r\nclass BlockedUsers extends React.Component {\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent() {\r\n        const { users } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadUsersContent(store, users.user_ids);\r\n    }\r\n\r\n    handleUnblock = async userId => {\r\n        await TdLibController.send({\r\n            '@type': 'unblockUser',\r\n            user_id: userId\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, users, t } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        {users.user_ids.length > 0 ? (\r\n                            <>\r\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\r\n                                {users.user_ids.map(x => (\r\n                                    <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock} />\r\n                                ))}\r\n                            </>\r\n                        ) : (\r\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nBlockedUsers.propTypes = {\r\n    users: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(BlockedUsers);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\r\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\r\n    </g>,\r\n    'Device'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\r\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\r\n    </g>,\r\n    'RemoveMember'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ActiveSessions from './ActiveSessions';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport BlockedUsers from './BlockedUsers';\r\nimport DeviceIcon from '../../../Assets/Icons/Device';\r\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\r\nimport SidebarPage from '../SidebarPage';\r\nimport SectionHeader from '../SectionHeader';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './PrivacySecurity.css';\r\n\r\nclass PrivacySecurity extends React.Component {\r\n    state = {\r\n        sessions: null,\r\n        users: null,\r\n        openBlockedUsers: false,\r\n        openActiveSessions: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n    }\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { user_id, user_full_info } = update;\r\n        const { users } = this.state;\r\n        if (!users) return;\r\n\r\n        const { total_count, user_ids } = users;\r\n        const { is_blocked } = user_full_info;\r\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\r\n        if (is_blocked === prevIsBlocked) return;\r\n\r\n        if (is_blocked) {\r\n            this.setState({\r\n                users: {\r\n                    ...users,\r\n                    total_count: total_count + 1,\r\n                    user_ids: [user_id, ...user_ids]\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({\r\n                users: {\r\n                    ...users,\r\n                    total_count: total_count - 1,\r\n                    user_ids: user_ids.filter(x => x !== user_id)\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        TdLibController.send({\r\n            '@type': 'getActiveSessions'\r\n        }).then(sessions => this.setState({ sessions }));\r\n\r\n        TdLibController.send({\r\n            '@type': 'getBlockedUsers',\r\n            offset: 0,\r\n            limit: 100\r\n        }).then(users => this.setState({ users }));\r\n    }\r\n\r\n    openActiveSessions = () => {\r\n        if (!this.state.sessions) return;\r\n\r\n        this.setState({\r\n            openActiveSessions: true\r\n        });\r\n    };\r\n\r\n    closeActiveSessions = () => {\r\n        this.setState({\r\n            openActiveSessions: false\r\n        });\r\n    };\r\n\r\n    openBlockedUsers = () => {\r\n        if (!this.state.users) return;\r\n\r\n        this.setState({\r\n            openBlockedUsers: true\r\n        });\r\n    };\r\n\r\n    closeBlockedUsers = () => {\r\n        this.setState({\r\n            openBlockedUsers: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\r\n\r\n        const sessionsCount =\r\n            sessions && sessions.sessions.length > 0\r\n                ? sessions.sessions.length === 1\r\n                    ? '1 session'\r\n                    : `${sessions.sessions.length} sessions`\r\n                : '1 session';\r\n\r\n        const usersCount =\r\n            users && users.total_count > 0\r\n                ? users.total_count === 1\r\n                    ? '1 user'\r\n                    : `${users.total_count} users`\r\n                : 'no users';\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openBlockedUsers}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <RemoveMemberIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                className='settings-list-item-text'\r\n                                primary={t('BlockedUsers')}\r\n                                secondary={usersCount}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openActiveSessions}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <DeviceIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                className='settings-list-item-text'\r\n                                primary={t('SessionsTitle')}\r\n                                secondary={sessionsCount}\r\n                            />\r\n                        </ListItem>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\r\n                        <ListItem className='settings-list-item2' role={undefined} button>\r\n                            <ListItemText\r\n                                className='settings-list-item-text2'\r\n                                primary={t('PrivacyPhoneTitle')}\r\n                                secondary={t('LastSeenContacts')}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem className='settings-list-item2' role={undefined} button>\r\n                            <ListItemText\r\n                                className='settings-list-item-text2'\r\n                                primary={t('LastSeenTitle')}\r\n                                secondary={t('LastSeenEverybody')}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem className='settings-list-item2' role={undefined} button>\r\n                            <ListItemText\r\n                                className='settings-list-item-text2'\r\n                                primary={t('PrivacyProfilePhotoTitle')}\r\n                                secondary={t('LastSeenEverybody')}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem className='settings-list-item2' role={undefined} button>\r\n                            <ListItemText\r\n                                className='settings-list-item-text2'\r\n                                primary={t('PrivacyForwardsTitle')}\r\n                                secondary={t('LastSeenEverybody')}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem className='settings-list-item2' role={undefined} button>\r\n                            <ListItemText\r\n                                className='settings-list-item-text2'\r\n                                primary={t('WhoCanAddMe')}\r\n                                secondary={t('LastSeenEverybody')}\r\n                            />\r\n                        </ListItem>\r\n                    </div>\r\n                </div>\r\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\r\n                    <BlockedUsers users={users} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\r\n                    <ActiveSessions sessions={sessions} />\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPrivacySecurity.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(PrivacySecurity);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Main from './Main';\r\nimport EditProfile from './EditProfile';\r\nimport General from './General';\r\nimport Language from '../Language';\r\nimport Notifications from './Notifications';\r\nimport PrivacySecurity from './PrivacySecurity';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { loadChatsContent } from '../../../Utils/File';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Settings.css';\r\n\r\nclass Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            openEditProfile: false,\r\n            openGeneral: false,\r\n            openNotifications: false,\r\n            openPrivacySecurity: false,\r\n            openLanguage: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    async loadContent() {\r\n        const { chatId } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadChatsContent(store, [chatId]);\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getUserFullInfo',\r\n            user_id: UserStore.getMyId()\r\n        });\r\n\r\n        UserStore.setFullInfo(UserStore.getMyId(), result);\r\n    }\r\n\r\n    openEditProfile = () => {\r\n        this.setState({\r\n            openEditProfile: true\r\n        });\r\n    };\r\n\r\n    closeEditProfile = () => {\r\n        this.setState({\r\n            openEditProfile: false\r\n        });\r\n    };\r\n\r\n    openGeneral = () => {\r\n        this.setState({\r\n            openGeneral: true\r\n        });\r\n    };\r\n\r\n    closeGeneral = () => {\r\n        this.setState({\r\n            openGeneral: false\r\n        });\r\n    };\r\n\r\n    openNotifications = () => {\r\n        this.setState({\r\n            openNotifications: true\r\n        });\r\n    };\r\n\r\n    closeNotifications = () => {\r\n        this.setState({\r\n            openNotifications: false\r\n        });\r\n    };\r\n\r\n    openPrivacySecurity = () => {\r\n        this.setState({\r\n            openPrivacySecurity: true\r\n        });\r\n    };\r\n\r\n    closePrivacySecurity = () => {\r\n        this.setState({\r\n            openPrivacySecurity: false\r\n        });\r\n    };\r\n\r\n    openLanguage = () => {\r\n        this.setState({\r\n            openLanguage: true\r\n        });\r\n    };\r\n\r\n    closeLanguage = () => {\r\n        this.setState({\r\n            openLanguage: false\r\n        });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSettings',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId } = this.props;\r\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Main\r\n                    chatId={chatId}\r\n                    onClose={this.handleCloseSettings}\r\n                    onEditProfile={this.openEditProfile}\r\n                    onGeneral={this.openGeneral}\r\n                    onNotifications={this.openNotifications}\r\n                    onPrivacySecurity={this.openPrivacySecurity}\r\n                    onLanguage={this.openLanguage}\r\n                />\r\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\r\n                    <EditProfile chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\r\n                    <General chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\r\n                    <Notifications chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\r\n                    <PrivacySecurity />\r\n                </SidebarPage>\r\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\r\n                    <Language />\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSettings.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Settings);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nclass CacheManager {\r\n    async load(key) {\r\n        const value = localStorage.getItem(key);\r\n        if (!value) return null;\r\n\r\n        try {\r\n            return JSON.parse(value);\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async save(key, value) {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n\r\n    async remove(key) {\r\n        localStorage.removeItem(key);\r\n    }\r\n\r\n    async clear() {\r\n        localStorage.clear();\r\n    }\r\n}\r\n\r\nconst manager = new CacheManager();\r\nexport default manager;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport EventEmitter from './EventEmitter';\r\nimport { debounce } from '../Utils/Common';\r\nimport CacheManager from '../Workers/CacheManager';\r\nimport BasicGroupStore from './BasicGroupStore';\r\nimport ChatStore from './ChatStore';\r\nimport FileStore from './FileStore';\r\nimport MessageStore from './MessageStore';\r\nimport OptionStore from './OptionStore';\r\nimport SupergroupStore from './SupergroupStore';\r\nimport UserStore from './UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass CacheStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.reset();\r\n\r\n        this.addTdLibListener();\r\n\r\n        this.saveChatsInternal = debounce(this.saveChatsInternal, 2000);\r\n    }\r\n\r\n    reset = () => {\r\n        this.chatIds = [];\r\n        this.cache = null;\r\n        this.contacts = null;\r\n    };\r\n\r\n    onUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'updateAuthorizationState': {\r\n                const { authorization_state } = update;\r\n                if (!authorization_state) break;\r\n\r\n                switch (authorization_state['@type']) {\r\n                    case 'authorizationStateClosed': {\r\n                        this.reset();\r\n                        break;\r\n                    }\r\n                    case 'authorizationStateLoggingOut':\r\n                    case 'authorizationStateWaitCode':\r\n                    case 'authorizationStateWaitPhoneNumber':\r\n                    case 'authorizationStateWaitPassword':\r\n                    case 'authorizationStateWaitRegistration': {\r\n                        CacheManager.remove('cache');\r\n                        CacheManager.remove('files');\r\n                        CacheManager.remove('contacts');\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onClientUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'clientUpdateDialogsReady': {\r\n                this.clear();\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.on('update', this.onUpdate);\r\n        TdLibController.on('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.off('update', this.onUpdate);\r\n        TdLibController.off('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    async loadCache() {\r\n        // console.log('[cm] getChats start');\r\n        const promises = [];\r\n        promises.push(CacheManager.load('cache').catch(error => null));\r\n        promises.push(CacheManager.load('files').catch(error => null));\r\n        const [cache, files] = await Promise.all(promises);\r\n        this.cache = cache;\r\n        if (this.cache) {\r\n            this.cache.files = files || [];\r\n        }\r\n        // console.log('[cm] getChats result', this.cache);\r\n        if (!this.cache) return null;\r\n\r\n        this.parseCache(this.cache);\r\n\r\n        return this.cache;\r\n    }\r\n\r\n    parseCache(cache) {\r\n        if (!cache) return;\r\n\r\n        const { chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\r\n        console.log('[cache] parseCache', cache);\r\n\r\n        (files || [])\r\n            .filter(x => Boolean(x))\r\n            .forEach(({ id, url }) => {\r\n                FileStore.setDataUrl(id, url);\r\n            });\r\n\r\n        (users || []).forEach(x => {\r\n            UserStore.set(x);\r\n        });\r\n\r\n        (basicGroups || []).forEach(x => {\r\n            BasicGroupStore.set(x);\r\n        });\r\n\r\n        (supergroups || []).forEach(x => {\r\n            SupergroupStore.set(x);\r\n        });\r\n\r\n        (chats || []).concat(archiveChats || []).forEach(x => {\r\n            delete x.OutputTypingManager;\r\n\r\n            ChatStore.set(x);\r\n            if (x.photo) {\r\n                if (x.photo.small) FileStore.set(x.photo.small);\r\n                if (x.photo.big) FileStore.set(x.photo.big);\r\n            }\r\n            if (x.chat_list) {\r\n                ChatStore.updateChatChatList(x.id, x.chat_list);\r\n            }\r\n            if (x.last_message) {\r\n                MessageStore.set(x.last_message);\r\n            }\r\n        });\r\n\r\n        (options || []).forEach(([id, option]) => {\r\n            OptionStore.set(id, option);\r\n        });\r\n    }\r\n\r\n    getCache(chatIds, archiveChatIds) {\r\n        const fileMap = new Map();\r\n        const userMap = new Map();\r\n        const basicGroupMap = new Map();\r\n        const supergroupMap = new Map();\r\n        const chats = chatIds.map(x => ChatStore.get(x));\r\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\r\n        chats.concat(archiveChats).forEach(x => {\r\n            const { photo, type, last_message } = x;\r\n            if (photo && photo.small) {\r\n                const { id } = photo.small;\r\n                if (id) {\r\n                    const blob = FileStore.getBlob(id);\r\n                    if (blob) {\r\n                        fileMap.set(id, blob);\r\n                    }\r\n                }\r\n            }\r\n\r\n            switch (type['@type']) {\r\n                case 'chatTypeBasicGroup': {\r\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n                    if (basicGroup) {\r\n                        basicGroupMap.set(basicGroup.id, basicGroup);\r\n                    }\r\n                }\r\n                case 'chatTypePrivate':\r\n                case 'chatTypeSecret': {\r\n                    const user = UserStore.get(type.user_id);\r\n                    if (user) {\r\n                        userMap.set(user.id, user);\r\n                    }\r\n                }\r\n                case 'chatTypeSupergroup': {\r\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\r\n                    if (supergroup) {\r\n                        supergroupMap.set(supergroup.id, supergroup);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (last_message) {\r\n                const { sender_user_id } = last_message;\r\n                if (sender_user_id) {\r\n                    const user = UserStore.get(sender_user_id);\r\n                    if (user) {\r\n                        userMap.set(user.id, user);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return {\r\n            chats,\r\n            archiveChats,\r\n            users: [...userMap.values()],\r\n            basicGroups: [...basicGroupMap.values()],\r\n            supergroups: [...supergroupMap.values()],\r\n            files: [...fileMap.entries()],\r\n            options: [...OptionStore.items.entries()]\r\n        };\r\n    }\r\n\r\n    saveChats(chatIds, archiveChatIds) {\r\n        this.chatIds = chatIds;\r\n        this.archiveChatIds = archiveChatIds;\r\n        this.saveChatsInternal();\r\n    }\r\n\r\n    async saveChatsInternal() {\r\n        // console.log('[cm] saveChatsInternal', this.chatIds, this.archiveChatIds);\r\n        const cache = this.getCache(this.chatIds, this.archiveChatIds);\r\n        const files = cache.files;\r\n        cache.files = [];\r\n        // console.log('[cm] save cache', cache);\r\n        await CacheManager.save('cache', cache);\r\n\r\n        const promises = [];\r\n        files.forEach(x => {\r\n            const [id, blob] = x;\r\n            promises.push(\r\n                new Promise((resolve, reject) => {\r\n                    const fileReader = new FileReader();\r\n                    fileReader.readAsDataURL(blob);\r\n                    fileReader.onload = e => {\r\n                        resolve({ id, url: e.target.result });\r\n                    };\r\n                    fileReader.onerror = e => {\r\n                        resolve(null);\r\n                    };\r\n                })\r\n            );\r\n        });\r\n        // console.log('[cm] save files start', files);\r\n        const results = await Promise.all(promises);\r\n        // console.log('[cm] save files', results);\r\n        await CacheManager.save('files', results);\r\n    }\r\n\r\n    clear() {\r\n        if (this.cache) {\r\n            const { files } = this.cache;\r\n\r\n            files\r\n                .filter(x => Boolean(x))\r\n                .forEach(({ id, url }) => {\r\n                    FileStore.deleteDataUrl(id);\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\nconst store = new CacheStore();\r\nwindow.cache = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport User from '../Tile/User';\r\nimport SearchInput from './Search/SearchInput';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { debounce, throttle } from '../../Utils/Common';\r\nimport { openUser } from '../../Actions/Client';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Contacts.css';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId, style } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, onClick, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass Contacts extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n\r\n        this.state = {\r\n            items: null,\r\n            searchItems: null\r\n        };\r\n\r\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\r\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { current } = this.searchInputRef;\r\n        if (current) {\r\n            setTimeout(() => current.focus(), 50);\r\n        }\r\n\r\n        this.loadContent();\r\n    }\r\n\r\n    handleScroll = event => {\r\n        this.handleDebounceScroll();\r\n        this.handleThrottleScroll();\r\n    };\r\n\r\n    handleDebounceScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    handleThrottleScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    loadRenderIdsContent = () => {\r\n        const { items, searchItems } = this.state;\r\n\r\n        const currentItems = searchItems || items;\r\n\r\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\r\n        if (!current) return;\r\n\r\n        const renderIds = current.getListRenderIds();\r\n        if (renderIds.size > 0) {\r\n            const userIds = [];\r\n            [...renderIds.keys()].forEach(key => {\r\n                userIds.push(currentItems.user_ids[key]);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadUsersContent(store, userIds);\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        let contacts = CacheStore.contacts;\r\n        if (!contacts) {\r\n            contacts = await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\r\n            CacheStore.contacts = contacts;\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\r\n\r\n        this.setState({\r\n            items: contacts\r\n        });\r\n    }\r\n\r\n    handleOpenUser = userId => {\r\n        openUser(userId, false);\r\n        this.handleClose();\r\n    };\r\n\r\n    renderItem = ({ index, style }, items) => {\r\n        const userId = items.user_ids[index];\r\n\r\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const searchItems = await TdLibController.send({\r\n            '@type': 'searchContacts',\r\n            query,\r\n            limit: 1000\r\n        });\r\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\r\n            getUserFullName(x).localeCompare(getUserFullName(y))\r\n        );\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\r\n\r\n        this.setState({ searchItems });\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { onClose } = this.props;\r\n\r\n        if (onClose) onClose();\r\n    };\r\n\r\n    render() {\r\n        const { items, searchItems } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\r\n                </div>\r\n                <div className='contacts-content'>\r\n                    {items && (\r\n                        <VirtualizedList\r\n                            ref={this.listRef}\r\n                            className='contacts-list'\r\n                            source={items.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, items)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                    {searchItems && (\r\n                        <VirtualizedList\r\n                            ref={this.searchListRef}\r\n                            className='contacts-list contacts-search-list'\r\n                            source={searchItems.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, searchItems)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nContacts.propTypes = {};\r\n\r\nexport default Contacts;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './UpdatePanel.css';\r\n\r\nclass UpdatePanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            newContentAvailable: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\r\n    }\r\n\r\n    onClientUpdateNewContentAvailable = () => {\r\n        this.setState({ newContentAvailable: true });\r\n    };\r\n\r\n    handleUpdate = () => {\r\n        if (this.handled) return;\r\n\r\n        this.handled = true;\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 250);\r\n    };\r\n\r\n    render() {\r\n        const { newContentAvailable } = this.state;\r\n        const { t } = this.props;\r\n\r\n        if (!newContentAvailable) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\r\n                {t('Update')}\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(UpdatePanel);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport { orderCompare } from './Common';\r\n\r\nexport function getArchiveTitle() {\r\n    const archive = ChatStore.chatList.get('chatListArchive');\r\n    const chats = [];\r\n    const chatsOrder = [];\r\n    if (archive) {\r\n        for (const chatId of archive.keys()) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat) {\r\n                if (chat.order !== '0') chats.push(chat);\r\n                chatsOrder.push({ order: chat.order, id: chat.id, title: chat.title });\r\n            }\r\n        }\r\n    }\r\n\r\n    const orderedChats = chats.sort((a, b) => orderCompare(b.order, a.order));\r\n\r\n    return orderedChats.map(x => x.title).join(', ');\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport Archive from './Archive';\r\nimport Search from './Search/Search';\r\nimport DialogsHeader from './DialogsHeader';\r\nimport DialogsList from './DialogsList';\r\nimport SidebarPage from './SidebarPage';\r\nimport Settings from './Settings/Settings';\r\nimport Contacts from './Contacts';\r\nimport UpdatePanel from './UpdatePanel';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { getArchiveTitle } from '../../Utils/Archive';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Dialogs.css';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\n\r\nclass Dialogs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogListRef = React.createRef();\r\n        this.archiveListRef = React.createRef();\r\n        this.dialogsHeaderRef = React.createRef();\r\n\r\n        const { isChatDetailsVisible } = AppStore;\r\n\r\n        this.state = {\r\n            cache: null,\r\n\r\n            showArchive: false,\r\n            archiveTitle: null,\r\n\r\n            mainItems: [],\r\n            archiveItems: [],\r\n\r\n            isChatDetailsVisible,\r\n            openSearch: false,\r\n            openArchive: false,\r\n            openContacts: false,\r\n            openSettings: false,\r\n\r\n            searchChatId: 0,\r\n            searchText: null,\r\n            query: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const {\r\n            cache,\r\n            showArchive,\r\n            archiveTitle,\r\n            mainItems,\r\n            archiveItems,\r\n            isChatDetailsVisible,\r\n            openSearch,\r\n            openArchive,\r\n            openSettings,\r\n            openContacts,\r\n            searchChatId,\r\n            searchText\r\n        } = this.state;\r\n\r\n        if (nextState.cache !== cache) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.showArchive !== showArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.archiveTitle !== archiveTitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.archiveItems !== archiveItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.mainItems !== mainItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isChatDetailsVisible !== isChatDetailsVisible) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSearch !== openSearch) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openArchive !== openArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSettings !== openSettings) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openContacts !== openContacts) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchChatId !== searchChatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchText !== searchText) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCache();\r\n\r\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\r\n\r\n        ChatStore.on('updateChatChatList', this.onUpdateChatChatList);\r\n\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\r\n\r\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\r\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\r\n\r\n        ChatStore.off('updateChatChatList', this.onUpdateChatChatList);\r\n\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\r\n\r\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\r\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\r\n    }\r\n\r\n    async loadCache() {\r\n        const cache = (await CacheStore.loadCache()) || {};\r\n\r\n        const { chats, archiveChats } = cache;\r\n\r\n        this.setState({\r\n            cache,\r\n\r\n            showArchive: archiveChats && archiveChats.length > 0,\r\n            archiveTitle: getArchiveTitle()\r\n        });\r\n\r\n        this.loadChatContents((chats || []).map(x => x.id));\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateCacheLoaded'\r\n        });\r\n    }\r\n\r\n    saveCache() {\r\n        const { current: archiveCurrent } = this.archiveListRef;\r\n        const archiveChatIds =\r\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\r\n\r\n        const { current: mainCurrent } = this.dialogListRef;\r\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\r\n\r\n        CacheStore.saveChats(mainChatIds, archiveChatIds);\r\n    }\r\n\r\n    onUpdateChatOrder = update => {\r\n        const { chat_id } = update;\r\n\r\n        const { current: mainCurrent } = this.dialogListRef;\r\n        if (mainCurrent && mainCurrent.loading) {\r\n            return;\r\n        }\r\n\r\n        const { current: archiveCurrent } = this.archiveListRef;\r\n        if (archiveCurrent && archiveCurrent.loading) {\r\n            return;\r\n        }\r\n\r\n        const archive = ChatStore.chatList.get('chatListArchive');\r\n        if (archive && archive.has(chat_id)) {\r\n            this.setState({ archiveTitle: getArchiveTitle() });\r\n        }\r\n    };\r\n\r\n    onUpdateChatChatList = update => {\r\n        const { showArchive: prevShowArchive } = this.state;\r\n\r\n        const { current: mainCurrent } = this.dialogListRef;\r\n        if (mainCurrent && mainCurrent.loading) {\r\n            return;\r\n        }\r\n\r\n        const { current: archiveCurrent } = this.archiveListRef;\r\n        if (archiveCurrent && archiveCurrent.loading) {\r\n            return;\r\n        }\r\n\r\n        const archiveList = ChatStore.chatList.get('chatListArchive');\r\n        const showArchive = archiveList && archiveList.size > 0;\r\n\r\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\r\n            if (!prevShowArchive && showArchive) {\r\n                const { current } = this.dialogListRef;\r\n                if (current.listRef) {\r\n                    const { current: listCurrent } = current.listRef;\r\n                    if (listCurrent && listCurrent.scrollTop > 0) {\r\n                        current.scrollTop += 68;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (prevShowArchive && !showArchive) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateCloseArchive'\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateContacts = async update => {\r\n        const { open } = update;\r\n\r\n        this.setState({ openContacts: open });\r\n    };\r\n\r\n    onClientUpdateSettings = update => {\r\n        const { open, chatId } = update;\r\n\r\n        this.setState({ openSettings: open, meChatId: chatId });\r\n    };\r\n\r\n    onClientUpdateArchive = update => {\r\n        const { open } = update;\r\n\r\n        this.setState({ openArchive: open });\r\n    };\r\n\r\n    onClientUpdateThemeChange = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatDetailsVisibility = update => {\r\n        const { isChatDetailsVisible } = AppStore;\r\n\r\n        this.setState({ isChatDetailsVisible });\r\n    };\r\n\r\n    onClientUpdateSearchChat = update => {\r\n        const { chatId, query } = update;\r\n        const { openSearch, searchChatId, searchText } = this.state;\r\n\r\n        if (openSearch && chatId === searchChatId && query === searchText) {\r\n            return;\r\n        }\r\n\r\n        const header = this.dialogsHeaderRef.current;\r\n        this.setState(\r\n            {\r\n                openSearch: true,\r\n                searchChatId: chatId,\r\n                searchText: null,\r\n                openSettings: false,\r\n                openActiveSessions: false,\r\n                openContacts: false\r\n            },\r\n            () => {\r\n                if (header) {\r\n                    header.setInitQuery(query);\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        const { openArchive } = this.state;\r\n        if (openArchive) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateCloseArchive'\r\n            });\r\n        } else {\r\n            this.dialogListRef.current.scrollToTop();\r\n        }\r\n    };\r\n\r\n    handleSearch = visible => {\r\n        this.setState({\r\n            openSearch: visible,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, openSearch) => {\r\n        openChat(chatId, messageId);\r\n\r\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\r\n        const searchText = openSearch ? this.state.searchText : null;\r\n\r\n        this.setState({\r\n            openSearch: openSearch,\r\n            searchChatId: searchChatId,\r\n            searchText: searchText\r\n        });\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.setState({\r\n            openSearch: false,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSearchTextChange = text => {\r\n        this.setState({\r\n            searchText: text,\r\n            query: null\r\n        });\r\n    };\r\n\r\n    handleSaveCache = () => {\r\n        this.saveCache();\r\n    };\r\n\r\n    loadChatContents(chatIds) {\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chatIds);\r\n    }\r\n\r\n    handleCloseArchive = () => {\r\n        this.setState({ openArchive: false });\r\n    };\r\n\r\n    handleCloseContacts = () => {\r\n        this.setState({ openContacts: false });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        this.setState({ openSettings: false });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            cache,\r\n            showArchive,\r\n            archiveTitle,\r\n            mainItems,\r\n            archiveItems,\r\n            isChatDetailsVisible,\r\n            meChatId,\r\n            openSettings,\r\n            openContacts,\r\n            openArchive,\r\n            openSearch,\r\n            searchChatId,\r\n            searchText\r\n        } = this.state;\r\n\r\n        const mainCacheItems = cache ? cache.chats || [] : null;\r\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className={classNames('dialogs', {\r\n                        'dialogs-third-column': isChatDetailsVisible\r\n                    })}>\r\n                    <div className='sidebar-page'>\r\n                        <DialogsHeader\r\n                            ref={this.dialogsHeaderRef}\r\n                            openSearch={openSearch}\r\n                            onClick={this.handleHeaderClick}\r\n                            onSearch={this.handleSearch}\r\n                            onSearchTextChange={this.handleSearchTextChange}\r\n                        />\r\n                        <div className='dialogs-content'>\r\n                            <DialogsList\r\n                                type='chatListMain'\r\n                                ref={this.dialogListRef}\r\n                                cacheItems={mainCacheItems}\r\n                                items={mainItems}\r\n                                showArchive={showArchive}\r\n                                archiveTitle={archiveTitle}\r\n                                open={true}\r\n                                onSaveCache={this.handleSaveCache}\r\n                            />\r\n                            <CSSTransition\r\n                                classNames='search'\r\n                                timeout={200}\r\n                                in={openSearch}\r\n                                mountOnEnter={true}\r\n                                unmountOnExit={true}>\r\n                                <Search\r\n                                    chatId={searchChatId}\r\n                                    text={searchText}\r\n                                    onSelectMessage={this.handleSelectMessage}\r\n                                    onClose={this.handleCloseSearch}\r\n                                />\r\n                            </CSSTransition>\r\n                        </div>\r\n                        <UpdatePanel />\r\n                    </div>\r\n\r\n                    <SidebarPage open={openArchive} onClose={this.handleCloseArchive}>\r\n                        <Archive\r\n                            innerListRef={this.archiveListRef}\r\n                            items={archiveItems}\r\n                            cacheItems={archiveCacheItems}\r\n                        />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openContacts} onClose={this.handleCloseContacts}>\r\n                        <Contacts />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openSettings} onClose={this.handleCloseSettings}>\r\n                        <Settings chatId={meChatId} />\r\n                    </SidebarPage>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dialogs;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ChatInfo from '../ColumnRight/ChatInfo';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatInfoDialog.css';\r\n\r\nclass ChatInfoDialog extends React.Component {\r\n    state = {\r\n        chatId: ApplicationStore.dialogChatId\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId } = this.state;\r\n\r\n        return nextState.chatId !== chatId;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\r\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\r\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        if (ApplicationStore.mediaViewerContent) {\r\n            this.handleClose();\r\n        }\r\n    };\r\n\r\n    onClientUpdateDialogChatId = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ chatId });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDialogChatId',\r\n            chatId: 0\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId } = this.state;\r\n        if (!chatId) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                open\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{\r\n                    root: 'chat-info-dialog-root',\r\n                    container: 'chat-info-dialog-container',\r\n                    paper: 'chat-info-dialog-paper'\r\n                }}>\r\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nChatInfoDialog.propTypes = {};\r\n\r\nexport default ChatInfoDialog;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\r\n    'Done'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\r\n    'Send'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\r\n    'Attach'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AttachFileIcon from '../../Assets/Icons/Attach';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\r\nimport PollIcon from '@material-ui/icons/PollOutlined';\r\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\r\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\r\n\r\nclass AttachButton extends React.Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleMenuClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleAttachPhoto = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachPhoto } = this.props;\r\n        if (!onAttachPhoto) return;\r\n\r\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\r\n    };\r\n\r\n    handleAttachDocument = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachDocument } = this.props;\r\n        if (!onAttachDocument) return;\r\n\r\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\r\n    };\r\n\r\n    handleAttachPoll = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachPoll } = this.props;\r\n        if (!onAttachPoll) return;\r\n\r\n        onAttachPoll();\r\n    };\r\n\r\n    render() {\r\n        const { classes, t, chatId } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    className='inputbox-icon-button'\r\n                    aria-label='Attach'\r\n                    open={Boolean(anchorEl)}\r\n                    onClick={this.handleMenuClick}>\r\n                    <AttachFileIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='attach-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    onClose={this.handleMenuClose}>\r\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\r\n                        <ListItemIcon>\r\n                            <PhotoIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('AttachPhoto')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\r\n                        <ListItemIcon>\r\n                            <InsertDriveFileIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('AttachDocument')} />\r\n                    </MenuItem>\r\n                    {!isPrivateChat(chatId) && (\r\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\r\n                            <ListItemIcon>\r\n                                <PollIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Poll')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAttachButton.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onAttachDocument: PropTypes.func.isRequired,\r\n    onAttachPhoto: PropTypes.func.isRequired,\r\n    onAttachPoll: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(AttachButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nexport function focusNode(node, toEnd = false) {\r\n    if (!node) return;\r\n\r\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\r\n        const lastNode = node.childNodes[node.childNodes.length - 1];\r\n        const range = document.createRange();\r\n        range.setStart(lastNode, lastNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        node.scrollTop = node.scrollHeight;\r\n    }\r\n\r\n    node.focus();\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nconst keys = {\r\n    backspace: 8,\r\n    shift: 16,\r\n    ctrl: 17,\r\n    alt: 18,\r\n    delete: 46,\r\n    cmd: 91,\r\n    leftArrow: 37,\r\n    upArrow: 38,\r\n    rightArrow: 39,\r\n    downArrow: 40\r\n};\r\n\r\nexport const utils = {\r\n    special: {},\r\n    navigational: {},\r\n    isSpecial(e) {\r\n        return typeof this.special[e.keyCode] !== 'undefined';\r\n    },\r\n    isNavigational(e) {\r\n        return typeof this.navigational[e.keyCode] !== 'undefined';\r\n    }\r\n};\r\n\r\nutils.special[keys['backspace']] = true;\r\nutils.special[keys['shift']] = true;\r\nutils.special[keys['ctrl']] = true;\r\nutils.special[keys['alt']] = true;\r\nutils.special[keys['delete']] = true;\r\n\r\nutils.navigational[keys['upArrow']] = true;\r\nutils.navigational[keys['downArrow']] = true;\r\nutils.navigational[keys['leftArrow']] = true;\r\nutils.navigational[keys['rightArrow']] = true;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport { focusNode } from '../../Utils/Component';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport { utils } from '../../Utils/Key';\r\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './CreatePollOption.css';\r\n\r\nclass CreatePollOption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.optionTextRef = React.createRef();\r\n\r\n        this.state = {\r\n            remainLength: POLL_OPTION_MAX_LENGTH\r\n        };\r\n    }\r\n\r\n    getText = () => {\r\n        return this.optionTextRef.current.innerText;\r\n    };\r\n\r\n    focus = (toEnd = false) => {\r\n        const node = this.optionTextRef.current;\r\n\r\n        focusNode(node, toEnd);\r\n    };\r\n\r\n    handleDelete = () => {\r\n        const { option, onDelete } = this.props;\r\n        if (!option) return;\r\n        if (!onDelete) return;\r\n\r\n        onDelete(option.id);\r\n    };\r\n\r\n    handleInput = event => {\r\n        const { option } = this.props;\r\n\r\n        event.preventDefault();\r\n\r\n        const node = this.optionTextRef.current;\r\n        const length = node.dataset.length;\r\n        const maxLength = node.dataset.maxLength;\r\n        const text = this.getText();\r\n\r\n        this.setState({\r\n            remainLength: length - text.length\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollOption',\r\n            id: option.id,\r\n            text\r\n        });\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const node = this.optionTextRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n        const innerText = this.getText();\r\n        const length = innerText.length;\r\n\r\n        let hasSelection = false;\r\n        const selection = window.getSelection();\r\n        const isSpecial = utils.isSpecial(event);\r\n        const isNavigational = utils.isNavigational(event);\r\n\r\n        if (selection) {\r\n            hasSelection = !!selection.toString();\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Backspace': {\r\n                const text = this.getText();\r\n                if (!text) {\r\n                    const { option, onDelete } = this.props;\r\n                    if (onDelete) {\r\n                        onDelete(option.id, true);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'Enter': {\r\n                const { option, onFocusNext } = this.props;\r\n                if (option && onFocusNext) {\r\n                    onFocusNext(option.id);\r\n                }\r\n\r\n                event.preventDefault();\r\n                return false;\r\n            }\r\n            case 'ArrowUp': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\r\n\r\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\r\n                    const { option, onFocusPrev } = this.props;\r\n                    if (onFocusPrev) {\r\n                        onFocusPrev(option.id);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const lastChild =\r\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\r\n\r\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\r\n                    const { option, onFocusNext } = this.props;\r\n                    if (onFocusNext) {\r\n                        onFocusNext(option.id);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isSpecial || isNavigational) {\r\n            return true;\r\n        }\r\n\r\n        if (length >= maxLength && !hasSelection) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handlePaste = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.optionTextRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n\r\n        const selection = window.getSelection();\r\n        const selectionString = selection ? selection.toString() : '';\r\n\r\n        const innerText = this.getText();\r\n        if (innerText.length - selection.length >= maxLength) return;\r\n\r\n        let pasteText = event.clipboardData.getData('text/plain');\r\n        if (!pasteText) return;\r\n\r\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\r\n\r\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\r\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\r\n        }\r\n        document.execCommand('insertText', false, pasteText);\r\n    };\r\n\r\n    handleChange = () => {\r\n        const { option } = this.props;\r\n        if (!option) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChooseOption',\r\n            id: option.id\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, option } = this.props;\r\n        const { remainLength } = this.state;\r\n\r\n        const { is_chosen } = option;\r\n\r\n        return (\r\n            <div className='create-poll-option'>\r\n                <div className='create-poll-option-wrapper'>\r\n                    <Radio\r\n                        key={Date.now()}\r\n                        classes={{ root: 'create-poll-radio-root' }}\r\n                        color='primary'\r\n                        checked={is_chosen}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <div\r\n                        ref={this.optionTextRef}\r\n                        className='create-poll-option-text'\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        placeholder={t('Option')}\r\n                        data-length={POLL_OPTION_LENGTH}\r\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\r\n                        onInput={this.handleInput}\r\n                        onKeyDown={this.handleKeyDown}\r\n                        onPaste={this.handlePaste}\r\n                    />\r\n                </div>\r\n                <div className='create-poll-option-delete-button'>\r\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\r\n                        <CloseIcon fontSize='small' />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='create-poll-option-bottom-border' />\r\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\r\n                    <Typography\r\n                        align='center'\r\n                        className='create-poll-option-subtitle'\r\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\r\n                        variant='subtitle1'>\r\n                        {remainLength}\r\n                    </Typography>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCreatePollOption.propTypes = {\r\n    option: PropTypes.object.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onFocusPrev: PropTypes.func.isRequired,\r\n    onFocusNext: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(CreatePollOption);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreatePollOption from './CreatePollOption';\r\nimport { focusNode } from '../../Utils/Component';\r\nimport { utils } from '../../Utils/Key';\r\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\r\nimport {\r\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n    POLL_OPTIONS_MAX_COUNT,\r\n    POLL_QUESTION_HINT_LENGTH,\r\n    POLL_QUESTION_LENGTH,\r\n    POLL_QUESTION_MAX_LENGTH\r\n} from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport PollStore from '../../Stores/PollStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './CreatePollDialog.css';\r\n\r\nclass CreatePollDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.questionRef = React.createRef();\r\n        this.optionsRefMap = new Map();\r\n\r\n        this.state = {\r\n            poll: null,\r\n            confirm: false,\r\n            remainLength: POLL_QUESTION_MAX_LENGTH\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\r\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\r\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\r\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\r\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\r\n    }\r\n\r\n    handleClientUpdateNewPoll = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({\r\n            confirm: false,\r\n            remainLength: POLL_QUESTION_MAX_LENGTH,\r\n            poll\r\n        });\r\n    };\r\n\r\n    handleClientUpdatePollQuestion = update => {\r\n        const { poll } = PollStore;\r\n\r\n        const node = this.questionRef.current;\r\n        const length = node.dataset.length;\r\n        const innerText = node.innerText;\r\n\r\n        this.setState({\r\n            remainLength: length - innerText.length,\r\n            poll\r\n        });\r\n    };\r\n\r\n    handleClientUpdatePoll = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({ poll });\r\n    };\r\n\r\n    handleClientUpdateNewPollOption = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({ poll }, () => {\r\n            setTimeout(() => {\r\n                const node = this.optionsRefMap.get(poll.options.length - 1);\r\n\r\n                node.focus(true);\r\n            });\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { poll } = this.state;\r\n\r\n        if (poll && !prevState.poll) {\r\n            setTimeout(() => {\r\n                focusNode(this.questionRef.current, true);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        const node = this.questionRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n        const innerText = node.innerText;\r\n        const length = innerText.length;\r\n\r\n        let hasSelection = false;\r\n        const selection = window.getSelection();\r\n        const isSpecial = utils.isSpecial(event);\r\n        const isNavigational = utils.isNavigational(event);\r\n\r\n        if (selection) {\r\n            hasSelection = !!selection.toString();\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Enter': {\r\n                if (!event.shiftKey) {\r\n                    this.handleFocusNextOption(0);\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const lastChild =\r\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\r\n\r\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\r\n                    this.handleFocusNextOption(0);\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isSpecial || isNavigational) {\r\n            return true;\r\n        }\r\n\r\n        if (length >= maxLength && !hasSelection) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handlePaste = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.questionRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n\r\n        const selection = window.getSelection();\r\n        const selectionString = selection ? selection.toString() : '';\r\n\r\n        const innerText = node.innerText;\r\n        if (innerText.length - selection.length >= maxLength) return;\r\n\r\n        let pasteText = event.clipboardData.getData('text/plain');\r\n        if (!pasteText) return;\r\n\r\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\r\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\r\n        }\r\n        document.execCommand('insertText', false, pasteText);\r\n    };\r\n\r\n    handleInput = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.questionRef.current;\r\n        //const length = node.dataset.length;\r\n\r\n        const innerText = node.innerText;\r\n        const innerHtml = node.innerHTML;\r\n\r\n        if (innerHtml === '<br>') {\r\n            node.innerText = '';\r\n        }\r\n\r\n        // this.setState({\r\n        //     remainLength: length - innerText.length\r\n        // });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollQuestion',\r\n            question: innerText\r\n        });\r\n    };\r\n\r\n    handleAddOption = () => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\r\n\r\n        const option = {\r\n            id: Date.now(),\r\n            text: ''\r\n        };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewPollOption',\r\n            option\r\n        });\r\n    };\r\n\r\n    handleDeleteOption = (id, backspace = false) => {\r\n        if (backspace) {\r\n            this.handleDeleteByBackspace(id);\r\n        } else {\r\n            this.handleDelete(id);\r\n        }\r\n    };\r\n\r\n    handleDelete = id => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDeletePollOption',\r\n            id\r\n        });\r\n    };\r\n\r\n    handleDeleteByBackspace = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const prevIndex = index - 1;\r\n        let deleteOption = true;\r\n        for (let i = index; i < options.length; i++) {\r\n            const { text } = options[i];\r\n            if (text) {\r\n                deleteOption = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (deleteOption) {\r\n            this.handleDeleteOption(id);\r\n        }\r\n\r\n        const prevNode = this.optionsRefMap.get(prevIndex);\r\n        if (!prevNode) {\r\n            const element = this.questionRef.current;\r\n\r\n            focusNode(element, true);\r\n            return;\r\n        }\r\n\r\n        prevNode.focus(true);\r\n    };\r\n\r\n    handleFocusPrevOption = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const prevIndex = index - 1;\r\n\r\n        const prevNode = this.optionsRefMap.get(prevIndex);\r\n        if (!prevNode) {\r\n            const element = this.questionRef.current;\r\n\r\n            focusNode(element, false);\r\n            return;\r\n        }\r\n\r\n        prevNode.focus(false);\r\n    };\r\n\r\n    handleFocusNextOption = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const nextIndex = index + 1;\r\n\r\n        const nextNode = this.optionsRefMap.get(nextIndex);\r\n        if (!nextNode) {\r\n            const text = index >= 0 && index < options.length ? options[index].text : '';\r\n            if (options.length && !text) {\r\n                return;\r\n            }\r\n\r\n            this.handleAddOption();\r\n            return;\r\n        }\r\n\r\n        nextNode.focus(nextNode, true);\r\n    };\r\n\r\n    getHint = () => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\r\n\r\n        if (addCount <= 0) {\r\n            return 'You have added the maximum number of options.';\r\n        }\r\n        if (addCount === 1) {\r\n            return 'You can add 1 more option.';\r\n        }\r\n\r\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { poll } = this.state;\r\n\r\n        if (hasPollData(poll)) {\r\n            this.setState({ confirm: true });\r\n        } else {\r\n            this.handleConfirmationDone();\r\n        }\r\n    };\r\n\r\n    handleSend = () => {\r\n        const { onSend } = this.props;\r\n\r\n        const inputMessagePoll = PollStore.getInputMessagePoll();\r\n        if (!inputMessagePoll) return;\r\n\r\n        onSend(inputMessagePoll);\r\n\r\n        this.handleConfirmationDone();\r\n    };\r\n\r\n    handleConfirmationClose = () => {\r\n        this.setState({ confirm: false });\r\n    };\r\n\r\n    handleConfirmationDone = () => {\r\n        this.handleConfirmationClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDeletePoll'\r\n        });\r\n    };\r\n\r\n    handleChangeAnonymous = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeAnonymous'\r\n        });\r\n    };\r\n\r\n    handleChangeAllowMultipleAnswers = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\r\n        });\r\n    };\r\n\r\n    handleChangeType = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeType'\r\n        });\r\n    };\r\n\r\n    handleScheduledAction = (key, message, action) => {\r\n        if (!key) return;\r\n\r\n        const { enqueueSnackbar } = this.props;\r\n        if (!enqueueSnackbar) return;\r\n\r\n        const TRANSITION_DELAY = 150;\r\n        if (AppStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)) {\r\n            enqueueSnackbar(message, {\r\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n                action: [\r\n                    <IconButton\r\n                        key='close'\r\n                        aria-label='Close'\r\n                        color='inherit'\r\n                        className='notification-close-button'\r\n                        onClick={() => AppStore.removeScheduledAction(key)}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                ]\r\n            });\r\n        }\r\n    };\r\n\r\n    handleAllowMultipleAnswersClick = event => {\r\n        const { t } = this.props;\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\r\n        if (quizPoll) {\r\n            event.stopPropagation();\r\n\r\n            const key = 'disallow_multiple_answers';\r\n            const message = t('PollQuizOneRightAnswer');\r\n            const action = null;\r\n\r\n            this.handleScheduledAction(key, message, action);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { remainLength, confirm, poll } = this.state;\r\n        if (!poll) return null;\r\n\r\n        const { is_anonymous } = poll;\r\n\r\n        const options = poll ? poll.options : [];\r\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\r\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\r\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\r\n\r\n        this.optionsRefMap.clear();\r\n        const items = options.map((x, i) => (\r\n            <CreatePollOption\r\n                ref={el => this.optionsRefMap.set(i, el)}\r\n                key={x.id}\r\n                option={x}\r\n                onDelete={this.handleDeleteOption}\r\n                onFocusPrev={this.handleFocusPrevOption}\r\n                onFocusNext={this.handleFocusNextOption}\r\n            />\r\n        ));\r\n\r\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\r\n        const hint = this.getHint();\r\n\r\n        return (\r\n            <>\r\n                <Dialog\r\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\r\n                    open\r\n                    transitionDuration={0}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby='dialog-title'>\r\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\r\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\r\n                        <div className='create-poll-dialog-question-title'>\r\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\r\n                                {t('Question')}\r\n                            </Typography>\r\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\r\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\r\n                                    {remainLength}\r\n                                </Typography>\r\n                            )}\r\n                        </div>\r\n                        <div\r\n                            ref={this.questionRef}\r\n                            id='create-poll-dialog-question'\r\n                            contentEditable\r\n                            suppressContentEditableWarning\r\n                            placeholder={t('QuestionHint')}\r\n                            data-length={POLL_QUESTION_LENGTH}\r\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\r\n                            onPaste={this.handlePaste}\r\n                            onKeyDown={this.handleKeyDown}\r\n                            onInput={this.handleInput}\r\n                        />\r\n                        <Divider className='divider' />\r\n                        <Typography color='primary' variant='subtitle1'>\r\n                            {t('PollOptions')}\r\n                        </Typography>\r\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\r\n                            {items}\r\n                            {canAddOption && (\r\n                                <ListItem\r\n                                    selected={false}\r\n                                    className='create-poll-add-option'\r\n                                    button\r\n                                    onClick={this.handleAddOption}>\r\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\r\n                                </ListItem>\r\n                            )}\r\n                        </List>\r\n                        <Typography>{hint}</Typography>\r\n                        <Divider className='divider' />\r\n                        <Typography color='primary' variant='subtitle1'>\r\n                            {t('Settings')}\r\n                        </Typography>\r\n                        <FormGroup>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        color='primary'\r\n                                        checked={is_anonymous}\r\n                                        onChange={this.handleChangeAnonymous}\r\n                                    />\r\n                                }\r\n                                label={t('PollAnonymous')}\r\n                            />\r\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            color='primary'\r\n                                            disabled={allowMultipleAnswersDisabled}\r\n                                            checked={allowMultipleAnswers}\r\n                                            onChange={this.handleChangeAllowMultipleAnswers}\r\n                                        />\r\n                                    }\r\n                                    label={t('PollMultiple')}\r\n                                />\r\n                            </div>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\r\n                                }\r\n                                label={t('PollQuiz')}\r\n                            />\r\n                        </FormGroup>\r\n                        <Typography>{t('QuizInfo')}</Typography>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color='primary' onClick={this.handleClose}>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        {isValidPoll(poll) && (\r\n                            <Button color='primary' onClick={this.handleSend}>\r\n                                {t('Create')}\r\n                            </Button>\r\n                        )}\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    className='create-poll-dialog-root'\r\n                    open={confirm}\r\n                    transitionDuration={0}\r\n                    onClose={this.handleConfirmationClose}\r\n                    aria-labelledby='dialog-title'>\r\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\r\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\r\n                        {t('CancelPollAlertText')}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nCreatePollDialog.propTypes = {\r\n    onSend: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withSnackbar,\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(CreatePollDialog);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { validateUrl } from './../../Utils/Url';\r\nimport './EditUrlDialog.css';\r\n\r\nclass EditUrlDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.textRef = React.createRef();\r\n        this.textInputRef = React.createRef();\r\n        this.urlRef = React.createRef();\r\n        this.urlInputRef = React.createRef();\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { defaultText, defaultUrl, open } = this.props;\r\n\r\n        if (open && prevProps.open !== open) {\r\n            setTimeout(() => {\r\n                const text = this.textInputRef.current;\r\n                const url = this.urlInputRef.current;\r\n\r\n                if (!text) return;\r\n                if (!url) return;\r\n\r\n                if (!defaultText) {\r\n                    text.focus();\r\n                } else if (!defaultUrl) {\r\n                    url.focus();\r\n                } else {\r\n                    text.focus();\r\n                    text.select();\r\n                }\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // const { defaultText, defaultUrl } = this.props;\r\n        //\r\n        // const text = this.textInputRef.current;\r\n        // const url = this.urlInputRef.current;\r\n        //\r\n        // if (!text) return;\r\n        // if (!url) return;\r\n        //\r\n        // setTimeout(() => {\r\n        //     if (!defaultText) {\r\n        //         text.focus();\r\n        //     } else if (!defaultUrl) {\r\n        //         url.focus();\r\n        //     } else {\r\n        //         text.focus();\r\n        //         // text.select();\r\n        //     }\r\n        // }, 0);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\r\n        const { textError, urlError } = this.state;\r\n\r\n        if (nextProps.defaultText !== defaultText) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.defaultUrl !== defaultUrl) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.textError !== textError) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.urlError !== urlError) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.onDone !== onDone) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.onCancel !== onCancel) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.open !== open) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (state.prevOpen !== props.open) {\r\n            return {\r\n                prevOpen: true,\r\n                textError: false,\r\n                urlError: false,\r\n                text: null,\r\n                url: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleTextKeyDown = event => {\r\n        if (event.key === 'Enter') {\r\n            this.urlInputRef.current.focus();\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n\r\n    handleUrlKeyDown = event => {\r\n        if (event.key === 'Enter') {\r\n            this.handleDone();\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n\r\n    handleTextChange = event => {\r\n        this.setState({\r\n            text: event.target.value\r\n        });\r\n    };\r\n\r\n    handleUrlChange = event => {\r\n        this.setState({\r\n            url: event.target.value\r\n        });\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { defaultText, defaultUrl } = this.props;\r\n        let { text, url } = this.state;\r\n\r\n        text = text !== null ? text : defaultText;\r\n        url = url !== null ? url : defaultUrl;\r\n\r\n        if (!text && !url) {\r\n            this.textInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        if (!text) {\r\n            this.setState({ textError: true });\r\n            this.textInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        url = validateUrl(url);\r\n        if (!url) {\r\n            this.setState({ urlError: true });\r\n            this.urlInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        const { onDone } = this.props;\r\n\r\n        onDone(text, url);\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onCancel } = this.props;\r\n\r\n        onCancel();\r\n    };\r\n\r\n    render() {\r\n        const { open, defaultUrl, defaultText, t } = this.props;\r\n        const { textError, urlError } = this.state;\r\n        if (!open) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='edit-url-dialog-title'>\r\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\r\n                <DialogContent>\r\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\r\n                        <TextField\r\n                            ref={this.textRef}\r\n                            inputRef={this.textInputRef}\r\n                            label={t('Text')}\r\n                            margin='normal'\r\n                            autoComplete='off'\r\n                            defaultValue={defaultText}\r\n                            error={textError}\r\n                            onChange={this.handleTextChange}\r\n                            onKeyDown={this.handleTextKeyDown}\r\n                        />\r\n                        <TextField\r\n                            ref={this.urlRef}\r\n                            inputRef={this.urlInputRef}\r\n                            label={t('URL')}\r\n                            margin='normal'\r\n                            autoComplete='off'\r\n                            defaultValue={defaultUrl}\r\n                            error={urlError}\r\n                            onChange={this.handleUrlChange}\r\n                            onKeyDown={this.handleUrlKeyDown}\r\n                        />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Create')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nEditUrlDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n    defaultText: PropTypes.string,\r\n    defaultUrl: PropTypes.string,\r\n    onDone: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(EditUrlDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getSrc } from '../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../Utils/Media';\r\nimport { hasVideoNote } from '../../Utils/Message';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ReplyTile.css';\r\n\r\nclass ReplyTile extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    onClientUpdatePhotoBlob = update => {\r\n        const { chatId, messageId, photoSize } = this.props;\r\n        if (!photoSize) return;\r\n\r\n        const { photo } = photoSize;\r\n        if (!photo) return;\r\n\r\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\r\n        if (!photoSize) return null;\r\n\r\n        const { photo } = photoSize;\r\n        if (!photo) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const src = getSrc(photo);\r\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\r\n        const isVideoNote = hasVideoNote(chatId, messageId);\r\n        const hasSrc = Boolean(src || miniSrc);\r\n\r\n        return (\r\n            <div className='reply-tile'>\r\n                {hasSrc && (\r\n                    <img\r\n                        className={classNames(\r\n                            'reply-tile-photo',\r\n                            { 'reply-tile-photo-round': isVideoNote },\r\n                            { 'reply-tile-photo-loading': !src },\r\n                            { 'media-blurred': src && isBlurred },\r\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\r\n                        )}\r\n                        draggable={false}\r\n                        src={src || miniSrc}\r\n                        alt=''\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReplyTile.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    photoSize: PropTypes.object,\r\n    minithumbnail: PropTypes.object\r\n};\r\n\r\nexport default ReplyTile;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ReplyTile from '../Tile/ReplyTile';\r\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\r\nimport { openChat } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Reply.css';\r\n\r\nclass Reply extends React.Component {\r\n    componentDidMount() {\r\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\r\n    }\r\n\r\n    onGetMessageResult = result => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === result.chat_id && messageId === result.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleOpen = event => {\r\n        if (event.button !== 0) return;\r\n\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId, onClick } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n        if (isDeletedMessage(message)) return null;\r\n\r\n        openChat(chatId, messageId, false);\r\n        if (onClick) onClick();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId } = this.props;\r\n        let { title } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n\r\n        title = title || getTitle(message, t);\r\n        let content = !message ? t('Loading') : getContent(message, t);\r\n        const photoSize = getReplyPhotoSize(chatId, messageId);\r\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n        if (isDeletedMessage(message)) {\r\n            title = null;\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        return (\r\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\r\n                <div className='reply-wrapper'>\r\n                    <div className='border reply-border' />\r\n                    {photoSize && (\r\n                        <ReplyTile\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            photoSize={photoSize}\r\n                            minithumbnail={minithumbnail}\r\n                        />\r\n                    )}\r\n                    <div className='reply-content'>\r\n                        {title && <div className='reply-content-title'>{title}</div>}\r\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReply.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    title: PropTypes.string,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Reply);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Reply from '../Message/Reply';\r\nimport { editMessage, replyMessage } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InputBoxHeader.css';\r\n\r\nclass InputBoxHeader extends React.Component {\r\n    componentDidMount() {\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, messageId, editMessageId } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id && editMessageId !== message_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { chatId, editMessageId } = this.props;\r\n\r\n        if (editMessageId) {\r\n            editMessage(chatId, 0);\r\n        } else {\r\n            replyMessage(chatId, 0);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\r\n        if (!chatId) return null;\r\n        if (!messageId && !editMessageId) return null;\r\n\r\n        return (\r\n            <div className='inputbox-header'>\r\n                <div className='inputbox-header-left-column'>\r\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='inputbox-header-middle-column'>\r\n                    <Reply\r\n                        chatId={chatId}\r\n                        messageId={editMessageId || messageId}\r\n                        title={editMessageId ? t('EditMessage') : null}\r\n                        onClick={onClick}\r\n                    />\r\n                </div>\r\n                <div className='inputbox-header-right-column' />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInputBoxHeader.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    editMessageId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(InputBoxHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport './PasteFilesDialog.css';\r\n\r\nclass PasteFilesDialog extends React.Component {\r\n    handleDone = () => {\r\n        const { onConfirm } = this.props;\r\n        onConfirm();\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onCancel } = this.props;\r\n        onCancel();\r\n    };\r\n\r\n    render() {\r\n        const { files, t } = this.props;\r\n        if (!files) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nPasteFilesDialog.propTypes = {\r\n    files: PropTypes.array,\r\n    onConfirm: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(withTranslation());\r\n\r\nexport default enhance(PasteFilesDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport EditUrlDialog from './EditUrlDialog';\r\nimport { focusInput } from '../../Utils/DOM';\r\nimport { editMessage as editMessageAction } from '../../Actions/Client';\r\nimport { getEntities, getNodes } from '../../Utils/Message';\r\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './EditMediaDialog.css';\r\n\r\nclass EditMediaDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.captionRef = React.createRef();\r\n        this.editMediaRef = React.createRef();\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevOpen } = state;\r\n        const { open, chatId, messageId, newItem } = props;\r\n\r\n        if (prevOpen !== open) {\r\n            if (open) {\r\n                const editMessage = MessageStore.get(chatId, messageId);\r\n                let sendAsPhoto = false;\r\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\r\n                    sendAsPhoto = true;\r\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\r\n                    sendAsPhoto = true;\r\n                }\r\n\r\n                return {\r\n                    prevOpen: true,\r\n                    sendAsPhoto,\r\n                    editMessage,\r\n                    editMedia: null,\r\n                    editFile: null\r\n                };\r\n            } else {\r\n                return {\r\n                    prevOpen: false,\r\n                    sendAsPhoto: false,\r\n                    editMessage: null,\r\n                    editMedia: null,\r\n                    editFile: null\r\n                };\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\r\n    }\r\n\r\n    handleSelectionChange = () => {\r\n        if (document.activeElement === this.captionRef.current) {\r\n            this.saveSelection();\r\n        }\r\n    };\r\n\r\n    handleEnter = () => {\r\n        const { chatId, messageId, open, newItem } = this.props;\r\n        if (!open) return;\r\n\r\n        let text = null;\r\n        let caption = null;\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (message) {\r\n            const { content } = message;\r\n            if (content) {\r\n                text = content.text;\r\n                caption = content.caption;\r\n            }\r\n        }\r\n\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        if (text) {\r\n            this.setFormattedText(text);\r\n        } else if (caption) {\r\n            this.setFormattedText(caption);\r\n        } else if (newItem && newItem.caption) {\r\n            element.innerHTML = newItem.caption;\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n\r\n        focusInput(element);\r\n    };\r\n\r\n    setFormattedText(formattedText) {\r\n        const { t } = this.props;\r\n        const element = this.captionRef.current;\r\n\r\n        if (!formattedText) {\r\n            element.innerText = null;\r\n            return;\r\n        }\r\n\r\n        const { text, entities } = formattedText;\r\n        try {\r\n            const nodes = getNodes(text, entities, t);\r\n            element.innerHTML = null;\r\n            nodes.forEach(x => {\r\n                element.appendChild(x);\r\n            });\r\n        } catch (e) {\r\n            element.innerText = text;\r\n        }\r\n    }\r\n\r\n    handleDone = () => {\r\n        const { chatId, newItem, onSend, onEdit } = this.props;\r\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\r\n\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n\r\n        element.innerText = null;\r\n\r\n        const { text, entities } = getEntities(innerHTML);\r\n\r\n        const caption = {\r\n            '@type': 'formattedText',\r\n            text,\r\n            entities\r\n        };\r\n\r\n        const isEditing = Boolean(editMessage);\r\n        if (isEditing) {\r\n            if (editMedia) {\r\n                const { photo } = editMedia;\r\n                if (!photo) return;\r\n\r\n                const { sizes } = photo;\r\n                if (!sizes) return;\r\n\r\n                const size = sizes[sizes.length - 1];\r\n\r\n                const { width, height } = size;\r\n\r\n                const content = {\r\n                    '@type': 'inputMessagePhoto',\r\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\r\n                    width,\r\n                    height,\r\n                    caption\r\n                };\r\n\r\n                onEdit(null, content);\r\n            } else {\r\n                onEdit(caption, null);\r\n            }\r\n\r\n            editMessageAction(chatId, 0);\r\n        } else {\r\n            const { media, file } = newItem;\r\n            const { photo, document } = media;\r\n\r\n            let content = null;\r\n            if (photo) {\r\n                const { sizes } = photo;\r\n                if (!sizes) return;\r\n\r\n                const size = sizes[sizes.length - 1];\r\n\r\n                const { width, height } = size;\r\n\r\n                content = sendAsPhoto\r\n                    ? {\r\n                          '@type': 'inputMessagePhoto',\r\n                          photo: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                          width,\r\n                          height,\r\n                          caption\r\n                      }\r\n                    : {\r\n                          '@type': 'inputMessageDocument',\r\n                          document: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                          thumbnail: null,\r\n                          caption\r\n                      };\r\n            } else if (document) {\r\n                content = {\r\n                    '@type': 'inputMessageDocument',\r\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                    thumbnail: null,\r\n                    caption\r\n                };\r\n            }\r\n            if (!content) return;\r\n\r\n            onSend(content, file);\r\n        }\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { chatId, messageId, onCancel } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const isEditing = Boolean(message);\r\n\r\n        if (isEditing) {\r\n            editMessageAction(chatId, 0);\r\n        }\r\n\r\n        onCancel();\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\r\n\r\n        switch (keyCode) {\r\n            // enter\r\n            case 13: {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    if (!repeat) this.handleDone();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + b\r\n            case 66: {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\r\n                    if (!repeat) this.handleBold();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + i\r\n            case 73: {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\r\n                    if (!repeat) this.handleItalic();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            case 75: {\r\n                // cmd + k\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\r\n                    if (!repeat) this.handleUrl();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // alt + cmd + k\r\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\r\n                    if (!repeat) this.handleMono();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // alt + cmd + n\r\n            case 192: {\r\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\r\n                    if (!repeat) this.handleClear();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClear = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n    };\r\n\r\n    handleBold = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('bold', false, null);\r\n    };\r\n\r\n    handleItalic = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('italic', false, null);\r\n    };\r\n\r\n    handleMono = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        let text = '';\r\n        const { selection } = this;\r\n        if (selection && !selection.isCollapsed) {\r\n            text = selection.toString();\r\n        }\r\n\r\n        if (!text) return;\r\n        text = `<code>${text}</code>`;\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('insertHTML', false, text);\r\n    };\r\n\r\n    handleUnderline = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('underline', false, null);\r\n    };\r\n\r\n    handleStrikeThrough = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('strikeThrough', false, null);\r\n    };\r\n\r\n    handleUrl = () => {\r\n        this.openEditUrlDialog();\r\n    };\r\n\r\n    openEditUrlDialog = () => {\r\n        let defaultText = '';\r\n        let defaultUrl = '';\r\n\r\n        const { selection, range } = this;\r\n        if (range) {\r\n            let { startContainer, endContainer } = range;\r\n            if (startContainer === endContainer) {\r\n                const { parentElement } = startContainer;\r\n                if (parentElement && parentElement.nodeName === 'A') {\r\n                    defaultText = parentElement.innerText;\r\n                    defaultUrl = parentElement.href;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!defaultText && selection && !selection.isCollapsed) {\r\n            defaultText = selection.toString();\r\n        }\r\n\r\n        this.setState({\r\n            openEditUrl: true,\r\n            defaultUrl,\r\n            defaultText\r\n        });\r\n    };\r\n\r\n    closeEditUrlDialog = () => {\r\n        this.setState(\r\n            {\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.restoreSelection();\r\n            }\r\n        );\r\n    };\r\n\r\n    saveSelection() {\r\n        this.selection = document.getSelection();\r\n        if (!this.selection) return;\r\n        if (!this.selection.rangeCount) return;\r\n\r\n        this.range = this.selection.getRangeAt(0);\r\n    }\r\n\r\n    restoreSelection() {\r\n        const { range } = this;\r\n\r\n        if (!range) {\r\n            focusInput();\r\n            return;\r\n        }\r\n\r\n        const selection = document.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        this.captionRef.current.focus();\r\n    }\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleInput = () => {\r\n        this.clearInnerHtml();\r\n    };\r\n\r\n    clearInnerHtml() {\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    }\r\n\r\n    handleCancelEditUrl = () => {\r\n        this.closeEditUrlDialog();\r\n    };\r\n\r\n    handleDoneEditUrl = (text, url) => {\r\n        this.closeEditUrlDialog();\r\n        setTimeout(() => {\r\n            // edit current link node\r\n            const { range } = this;\r\n            if (range) {\r\n                const { startContainer, endContainer } = range;\r\n                if (startContainer && startContainer === endContainer) {\r\n                    const { parentNode } = startContainer;\r\n                    if (parentNode && parentNode.nodeName === 'A') {\r\n                        parentNode.href = url;\r\n                        parentNode.title = url;\r\n                        parentNode.innerText = text;\r\n\r\n                        // move cursor to end of editing node\r\n                        const { lastChild } = parentNode;\r\n                        if (lastChild) {\r\n                            const range = document.createRange();\r\n                            range.setStart(lastChild, lastChild.textContent.length);\r\n                            range.setEnd(lastChild, lastChild.textContent.length);\r\n\r\n                            const selection = document.getSelection();\r\n                            selection.removeAllRanges();\r\n                            selection.addRange(range);\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // replace selected text with new link node\r\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\r\n            document.execCommand('removeFormat', false, null);\r\n            document.execCommand('insertHTML', false, link);\r\n        }, 0);\r\n    };\r\n\r\n    handleEditMedia = event => {\r\n        const element = this.editMediaRef.current;\r\n        if (!element) return;\r\n\r\n        element.click();\r\n    };\r\n\r\n    handleEditMediaComplete = async () => {\r\n        const element = this.editMediaRef.current;\r\n        if (!element) return;\r\n\r\n        const { files } = element;\r\n        if (files.length === 0) return;\r\n\r\n        const [file, ...rest] = Array.from(files);\r\n        if (!file) return;\r\n\r\n        const editMedia = await getMediaPhotoFromFile(file);\r\n\r\n        this.setState({\r\n            editFile: file,\r\n            editMedia\r\n        });\r\n\r\n        element.value = '';\r\n    };\r\n\r\n    handleSendAsPhoto = () => {\r\n        const { sendAsPhoto } = this.state;\r\n\r\n        this.setState({\r\n            sendAsPhoto: !sendAsPhoto\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, newItem, open, t } = this.props;\r\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\r\n        if (!open) return null;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const isEditing = Boolean(message);\r\n        let isPhoto = false;\r\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\r\n            isPhoto = true;\r\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\r\n            isPhoto = true;\r\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\r\n            isPhoto = true;\r\n        }\r\n\r\n        let media = null;\r\n        if (isEditing) {\r\n            media = editMedia ? getMedia({ content: editMedia }) : getMedia(message, null);\r\n        } else if (newItem) {\r\n            media = getMedia({ content: newItem.media });\r\n        }\r\n        const doneLabel = isEditing ? t('Edit') : t('Send');\r\n\r\n        return (\r\n            <Dialog\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='edit-media-dialog-title'\r\n                onEnter={this.handleEnter}>\r\n                <div className='edit-media-dialog-content'>\r\n                    <div style={{ margin: 24 }}>{media}</div>\r\n                    {isEditing && (\r\n                        <>\r\n                            <IconButton\r\n                                disableRipple={true}\r\n                                aria-label={t('Edit')}\r\n                                className='edit-media-dialog-edit-button'\r\n                                size='small'\r\n                                onClick={this.handleEditMedia}>\r\n                                <EditIcon fontSize='inherit' />\r\n                            </IconButton>\r\n                            <input\r\n                                ref={this.editMediaRef}\r\n                                className='inputbox-attach-button'\r\n                                type='file'\r\n                                accept='image/*'\r\n                                onChange={this.handleEditMediaComplete}\r\n                            />\r\n                        </>\r\n                    )}\r\n                    {!isEditing && isPhoto && (\r\n                        <RadioGroup\r\n                            value={sendAsPhoto}\r\n                            onChange={this.handleSendAsPhoto}\r\n                            style={{ margin: '0 24px 24px' }}>\r\n                            <FormControlLabel\r\n                                value={true}\r\n                                control={<Radio color='primary' />}\r\n                                label={t('SendAsPhoto')}\r\n                            />\r\n                            <FormControlLabel\r\n                                value={false}\r\n                                control={<Radio color='primary' />}\r\n                                label={t('SendAsFile')}\r\n                            />\r\n                        </RadioGroup>\r\n                    )}\r\n                </div>\r\n                <div\r\n                    ref={this.captionRef}\r\n                    id='edit-media-dialog-caption'\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    placeholder={t('Caption')}\r\n                    onKeyDown={this.handleKeyDown}\r\n                    onPaste={this.handlePaste}\r\n                    onInput={this.handleInput}\r\n                />\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {doneLabel}\r\n                    </Button>\r\n                </DialogActions>\r\n                <EditUrlDialog\r\n                    open={openEditUrl}\r\n                    defaultText={defaultText}\r\n                    defaultUrl={defaultUrl}\r\n                    onDone={this.handleDoneEditUrl}\r\n                    onCancel={this.handleCancelEditUrl}\r\n                />\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nEditMediaDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    newItem: PropTypes.object,\r\n\r\n    onSend: PropTypes.func,\r\n    onEdit: PropTypes.func,\r\n    onCancel: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(EditMediaDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass OutputTypingManager {\r\n    constructor(chatId) {\r\n        this.chatId = chatId;\r\n        this.lastAction = null;\r\n    }\r\n\r\n    setTyping(action) {\r\n        if (!this.chatId) return;\r\n\r\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\r\n            let now = new Date();\r\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\r\n            if (this.lastTypingDate && this.lastTypingDate > now) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.lastAction = action;\r\n        this.lastTypingDate = new Date();\r\n\r\n        TdLibController.send({\r\n            '@type': 'sendChatAction',\r\n            chat_id: this.chatId,\r\n            action: action\r\n        });\r\n    }\r\n}\r\n\r\nexport default OutputTypingManager;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport emojiRegex from 'emoji-regex';\r\nimport DoneIcon from '../../Assets/Icons/Done';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\r\nimport SendIcon from '../../Assets/Icons/Send';\r\nimport AttachButton from './../ColumnMiddle/AttachButton';\r\nimport CreatePollDialog from '../Popup/CreatePollDialog';\r\nimport EditUrlDialog from '../Popup/EditUrlDialog';\r\nimport InputBoxHeader from './InputBoxHeader';\r\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\r\nimport EditMediaDialog from '../Popup/EditMediaDialog';\r\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\r\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\r\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\r\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\r\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\r\nimport { getSize, readImageSize } from '../../Utils/Common';\r\nimport { PHOTO_SIZE } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InputBox.css';\r\nimport { editMessage, replyMessage } from '../../Actions/Client';\r\n\r\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\r\n\r\nclass InputBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.attachDocumentRef = React.createRef();\r\n        this.attachPhotoRef = React.createRef();\r\n        this.newMessageRef = React.createRef();\r\n\r\n        const chatId = AppStore.getChatId();\r\n\r\n        this.state = {\r\n            chatId,\r\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\r\n            editMessageId: 0,\r\n            sendFile: null\r\n        };\r\n\r\n        document.execCommand('defaultParagraphSeparator', false, 'br');\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { t } = this.props;\r\n        const {\r\n            chatId,\r\n            newDraft,\r\n            files,\r\n            replyToMessageId,\r\n            editMessageId,\r\n            openEditMedia,\r\n            openEditUrl,\r\n            sendFile\r\n        } = this.state;\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.newDraft !== newDraft) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.files !== files) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.replyToMessageId !== replyToMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.editMessageId !== editMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.sendFile !== sendFile) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openEditUrl !== openEditUrl) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openEditMedia !== openEditMedia) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    loadDraft() {\r\n        this.setDraft();\r\n        this.setInputFocus();\r\n        this.handleInput();\r\n    }\r\n\r\n    saveDraft() {\r\n        const { chatId, editMessageId, replyToMessageId } = this.state;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        let innerHTML = null;\r\n        if (editMessageId) {\r\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\r\n        } else {\r\n            innerHTML = element.innerHTML;\r\n        }\r\n\r\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\r\n        this.setChatDraftMessage(draftMessage);\r\n    }\r\n\r\n    selectionChangeListener = () => {\r\n        // console.log('[ed] selectionchange', document.activeElement);\r\n        if (document.activeElement === this.newMessageRef.current) {\r\n            this.saveSelection();\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\r\n\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\r\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\r\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\r\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\r\n\r\n        this.loadDraft();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.saveDraft();\r\n\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\r\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\r\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\r\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\r\n\r\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\r\n    }\r\n\r\n    onClientUpdateSendFiles = update => {\r\n        const { files } = update;\r\n        if (!files) return;\r\n\r\n        this.handleSendFiles(Array.from(files));\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId, editMessageId } = this.state;\r\n        const { chat_id, message_ids, is_permanent } = update;\r\n\r\n        if (!editMessageId) return;\r\n        if (!is_permanent) return;\r\n        if (chatId !== chat_id) return;\r\n        if (message_ids.indexOf(editMessageId) === -1) return;\r\n\r\n        this.handleCancel();\r\n    };\r\n\r\n    onClientUpdateEditMessage = update => {\r\n        const { chatId, messageId } = update;\r\n        if (this.state.chatId !== chatId) return;\r\n\r\n        if (!messageId) {\r\n            this.restoreDraftAndSelection();\r\n        } else {\r\n            this.saveDraftAndSelection();\r\n        }\r\n\r\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\r\n        this.setState(\r\n            {\r\n                editMessageId: messageId,\r\n                openEditMedia\r\n            },\r\n            () => {\r\n                if (!this.state.openEditMedia) {\r\n                    this.setEditMessage();\r\n                    this.handleInput();\r\n                    setTimeout(() => {\r\n                        this.focusInput();\r\n                    }, 0);\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    restoreDraftAndSelection() {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        const { beforeEditText } = this;\r\n\r\n        if (beforeEditText) {\r\n            element.innerHTML = beforeEditText.innerHTML;\r\n\r\n            if (!beforeEditText.range) {\r\n                this.focusInput();\r\n                return;\r\n            }\r\n\r\n            const selection = document.getSelection();\r\n            selection.removeAllRanges();\r\n            selection.addRange(beforeEditText.range);\r\n\r\n            element.focus();\r\n        } else {\r\n            element.innerHTML = null;\r\n            this.focusInput();\r\n        }\r\n\r\n        this.handleInput();\r\n    }\r\n\r\n    saveDraftAndSelection() {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        this.beforeEditText = {\r\n            innerHTML: element.innerHTML,\r\n            range: this.range\r\n        };\r\n    }\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        const { focused } = update;\r\n        if (focused) return;\r\n\r\n        this.saveDraft();\r\n    };\r\n\r\n    onUpdateChatDraftMessage = update => {\r\n        const { chat_id } = update;\r\n        const { chatId } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.loadDraft();\r\n    };\r\n\r\n    onClientUpdateStickerSend = update => {\r\n        const { sticker: item } = update;\r\n        if (!item) return;\r\n\r\n        const { sticker, thumbnail, width, height } = item;\r\n        if (!sticker) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        element.innerText = null;\r\n\r\n        this.restoreSelection();\r\n\r\n        const content = {\r\n            '@type': 'inputMessageSticker',\r\n            sticker: {\r\n                '@type': 'inputFileId',\r\n                id: sticker.id\r\n            },\r\n            width,\r\n            height\r\n        };\r\n\r\n        if (thumbnail) {\r\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\r\n\r\n            content.thumbnail = {\r\n                thumbnail: {\r\n                    '@type': 'inputFileId',\r\n                    id: photo.id\r\n                },\r\n                width: thumbnailWidth,\r\n                height: thumbnailHeight\r\n            };\r\n        }\r\n\r\n        this.sendMessage(content, false, result => {});\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateLocalStickersHint',\r\n            hint: null\r\n        });\r\n    };\r\n\r\n    onClientUpdateReply = update => {\r\n        const { chatId: currentChatId } = this.state;\r\n        const { chatId, messageId } = update;\r\n\r\n        if (currentChatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ replyToMessageId: messageId });\r\n\r\n        if (messageId) {\r\n            this.setInputFocus();\r\n        }\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatId } = this.state;\r\n        if (chatId === update.nextChatId) return;\r\n\r\n        this.saveDraft();\r\n        this.beforeEditText = null;\r\n        this.setState(\r\n            {\r\n                chatId: update.nextChatId,\r\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\r\n                editMessageId: 0,\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.loadDraft();\r\n            }\r\n        );\r\n    };\r\n\r\n    setDraft = () => {\r\n        const { chatId } = this.state;\r\n\r\n        const element = this.newMessageRef.current;\r\n\r\n        const formattedText = getChatDraft(chatId);\r\n        if (formattedText) {\r\n            this.setFormattedText(formattedText);\r\n            this.setState({\r\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\r\n            });\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n    };\r\n\r\n    setEditMessage() {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, editMessageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        const { text, caption } = content;\r\n        if (!text && !caption) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n\r\n        if (text) {\r\n            this.setFormattedText(text);\r\n        } else if (caption) {\r\n            this.setFormattedText(caption);\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n    }\r\n\r\n    setFormattedText(formattedText) {\r\n        const { t } = this.props;\r\n        const element = this.newMessageRef.current;\r\n\r\n        if (!formattedText) {\r\n            element.innerText = null;\r\n            return;\r\n        }\r\n\r\n        const { text, entities } = formattedText;\r\n        try {\r\n            const nodes = getNodes(text, entities, t);\r\n            element.innerHTML = null;\r\n            nodes.forEach(x => {\r\n                element.appendChild(x);\r\n            });\r\n        } catch (e) {\r\n            element.innerText = text;\r\n        }\r\n    }\r\n\r\n    setInputFocus = () => {\r\n        setTimeout(() => {\r\n            const element = this.newMessageRef.current;\r\n\r\n            focusInput(element);\r\n        }, 100);\r\n    };\r\n\r\n    setChatDraftMessage = chatDraftMessage => {\r\n        if (!chatDraftMessage) return;\r\n\r\n        const { chatId, draftMessage } = chatDraftMessage;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setChatDraftMessage',\r\n            chat_id: chatId,\r\n            draft_message: draftMessage\r\n        });\r\n    };\r\n\r\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { draft_message } = chat;\r\n        const { text, entities } = getEntities(innerHTML);\r\n        const draftMessage =\r\n            (text && text.length > 0) || entities.length > 0\r\n                ? {\r\n                      '@type': 'draftMessage',\r\n                      reply_to_message_id: replyToMessageId,\r\n                      input_message_text: {\r\n                          '@type': 'inputMessageText',\r\n                          text: {\r\n                              '@type': 'formattedText',\r\n                              text,\r\n                              entities\r\n                          },\r\n                          disable_web_page_preview: false,\r\n                          clear_draft: false\r\n                      }\r\n                  }\r\n                : null;\r\n\r\n        if (draftEquals(draft_message, draftMessage)) {\r\n            return null;\r\n        }\r\n\r\n        return { chatId, draftMessage };\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        const { chatId, editMessageId } = this.state;\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        let { innerHTML } = element;\r\n\r\n        element.innerText = null;\r\n        this.handleInput();\r\n\r\n        editMessage(chatId, 0);\r\n\r\n        if (!innerHTML) return;\r\n        if (!innerHTML.trim()) return;\r\n\r\n        const { text, entities } = getEntities(innerHTML);\r\n\r\n        const formattedText = {\r\n            '@type': 'formattedText',\r\n            text,\r\n            entities\r\n        };\r\n        const inputContent = {\r\n            '@type': 'inputMessageText',\r\n            text: formattedText,\r\n            disable_web_page_preview: false,\r\n            clear_draft: true\r\n        };\r\n\r\n        if (editMessageId) {\r\n            const editedMessage = MessageStore.get(chatId, editMessageId);\r\n            if (!editedMessage) return;\r\n\r\n            const { content } = editedMessage;\r\n            if (!content) return;\r\n\r\n            const { text, caption } = content;\r\n            if (text) {\r\n                this.editMessageText(inputContent, result => {});\r\n            } else if (caption) {\r\n                this.editMessageCaption(formattedText);\r\n            }\r\n        } else {\r\n            this.sendMessage(inputContent, false, result => {});\r\n        }\r\n    };\r\n\r\n    handleAttachPoll = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewPoll'\r\n        });\r\n    };\r\n\r\n    handleAttachPhoto = () => {\r\n        if (!this.attachPhotoRef) return;\r\n\r\n        this.attachPhotoRef.current.click();\r\n    };\r\n\r\n    async getNewItem(file, sendAsFile) {\r\n        if (!file) return null;\r\n\r\n        const caption = this.newMessageRef.current.innerHTML;\r\n        if (caption) {\r\n            this.newMessageRef.current.innerHTML = null;\r\n            this.handleInput();\r\n        }\r\n\r\n        const media = sendAsFile ? await getMediaPhotoFromFile(file) : await getMediaDocumentFromFile(file);\r\n\r\n        return {\r\n            file,\r\n            media,\r\n            caption\r\n        };\r\n    }\r\n\r\n    handleAttachPhotoComplete = async () => {\r\n        const { files } = this.attachPhotoRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [newFile, ...rest] = Array.from(files);\r\n            if (!newFile) return;\r\n\r\n            const newItem = await this.getNewItem(newFile, true);\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            Array.from(files).forEach(async file => {\r\n                const [width, height] = await readImageSize(file);\r\n\r\n                const content = {\r\n                    '@type': 'inputMessagePhoto',\r\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\r\n                    width,\r\n                    height\r\n                };\r\n\r\n                this.handleSendPhoto(content, file);\r\n            });\r\n        }\r\n\r\n        this.attachPhotoRef.current.value = '';\r\n    };\r\n\r\n    handleAttachDocument = () => {\r\n        if (!this.attachDocumentRef) return;\r\n\r\n        this.attachDocumentRef.current.click();\r\n    };\r\n\r\n    handleAttachDocumentComplete = async () => {\r\n        const { files } = this.attachDocumentRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [newFile, ...rest] = Array.from(files);\r\n            if (!newFile) return;\r\n\r\n            const newItem = await this.getNewItem(newFile, false);\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            Array.from(files).forEach(file => {\r\n                const content = {\r\n                    '@type': 'inputMessageDocument',\r\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\r\n                };\r\n\r\n                this.handleSendDocument(content, file);\r\n            });\r\n        }\r\n\r\n        this.attachDocumentRef.current.value = '';\r\n    };\r\n\r\n    setTyping() {\r\n        const { chatId, editMessageId } = this.state;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        if (!innerText) return;\r\n        if (isMeChat(chatId)) return;\r\n        if (editMessageId) return;\r\n\r\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\r\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\r\n    }\r\n\r\n    setHints() {\r\n        const { editMessageId } = this.state;\r\n        const innerText = this.newMessageRef.current.innerText;\r\n        if (!innerText || innerText.length > 11 || editMessageId) {\r\n            const { hint } = StickerStore;\r\n            if (hint) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateLocalStickersHint',\r\n                    hint: null\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        const t0 = performance.now();\r\n        const regex = emojiRegex();\r\n        let match = regex.exec(innerText);\r\n        const t1 = performance.now();\r\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\r\n        if (!match || innerText !== match[0]) {\r\n            const { hint } = StickerStore;\r\n            if (hint) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateLocalStickersHint',\r\n                    hint: null\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        const timestamp = Date.now();\r\n        TdLibController.send({\r\n            '@type': 'getStickers',\r\n            emoji: match[0],\r\n            limit: 100\r\n        }).then(stickers => {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateLocalStickersHint',\r\n                hint: {\r\n                    timestamp,\r\n                    emoji: match[0],\r\n                    stickers\r\n                }\r\n            });\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchStickers',\r\n            emoji: match[0],\r\n            limit: 100\r\n        }).then(stickers => {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateRemoteStickersHint',\r\n                hint: {\r\n                    timestamp,\r\n                    emoji: match[0],\r\n                    stickers\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    handleClear = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n    };\r\n\r\n    handleBold = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('bold', false, null);\r\n    };\r\n\r\n    handleItalic = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('italic', false, null);\r\n    };\r\n\r\n    handleMono = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        let text = '';\r\n        const { selection } = this;\r\n        if (selection && !selection.isCollapsed) {\r\n            text = selection.toString();\r\n        }\r\n\r\n        if (!text) return;\r\n        text = `<code>${text}</code>`;\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('insertHTML', false, text);\r\n    };\r\n\r\n    handleUnderline = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('underline', false, null);\r\n    };\r\n\r\n    handleStrikeThrough = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('strikeThrough', false, null);\r\n    };\r\n\r\n    handleUrl = () => {\r\n        this.openEditUrlDialog();\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { chatId, editMessageId, replyToMessageId } = this.state;\r\n        if (editMessageId) {\r\n            editMessage(chatId, 0);\r\n        } else if (replyToMessageId) {\r\n            replyMessage(chatId, 0);\r\n        }\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\r\n\r\n        // console.log('[k] handleKeyDown', altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey);\r\n\r\n        switch (keyCode) {\r\n            // enter\r\n            case 13: {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    if (!repeat) this.handleSubmit();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // esc\r\n            case 27: {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    if (!repeat) this.handleCancel();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // arrow up\r\n            case 38: {\r\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    const element = this.newMessageRef.current;\r\n                    if (element && !element.innerText) {\r\n                        const { editMessageId } = this.state;\r\n                        if (editMessageId) return;\r\n\r\n                        TdLibController.clientUpdate({\r\n                            '@type': 'clientUpdateTryEditMessage'\r\n                        });\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            // cmd + b\r\n            case 66: {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\r\n                    if (!repeat) this.handleBold();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + i\r\n            case 73: {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\r\n                    if (!repeat) this.handleItalic();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            case 75: {\r\n                // cmd + k\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\r\n                    if (!repeat) this.handleUrl();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // alt + cmd + k\r\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\r\n                    if (!repeat) this.handleMono();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // alt + cmd + n\r\n            case 192: {\r\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\r\n                    if (!repeat) this.handleClear();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSendPhoto = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => {\r\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\r\n            if (cachedMessage != null) {\r\n                this.handleSendingMessage(cachedMessage, file);\r\n            }\r\n\r\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\r\n        });\r\n    };\r\n\r\n    handleSendPoll = poll => {\r\n        this.sendMessage(poll, true, () => {});\r\n    };\r\n\r\n    handleSendDocument = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\r\n    };\r\n\r\n    async handleSendFiles(files) {\r\n        if (!files) return;\r\n        if (!files.length) return;\r\n\r\n        if (files.length === 1) {\r\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\r\n            if (!newItem) return;\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            this.setState({ files });\r\n        }\r\n    }\r\n\r\n    handlePaste = async event => {\r\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\r\n        if (!items) return;\r\n\r\n        const files = [];\r\n        Array.from(items).forEach(item => {\r\n            if (item.kind.indexOf('file') === 0) {\r\n                const file = item.getAsFile();\r\n                if (file) {\r\n                    files.push(file);\r\n                }\r\n            }\r\n        });\r\n\r\n        if (files.length > 0) {\r\n            event.preventDefault();\r\n\r\n            this.handleSendFiles(files);\r\n            return;\r\n        }\r\n\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n            return;\r\n        }\r\n    };\r\n\r\n    handlePasteConfirm = () => {\r\n        const { files } = this.state;\r\n        if (!files) return;\r\n        if (!files.length) return;\r\n\r\n        files.forEach(file => {\r\n            const content = {\r\n                '@type': 'inputMessageDocument',\r\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\r\n            };\r\n\r\n            this.handleSendDocument(content, file);\r\n        });\r\n\r\n        this.handlePasteCancel();\r\n    };\r\n\r\n    handlePasteCancel = () => {\r\n        this.setState({ files: null });\r\n    };\r\n\r\n    handleUpdateDraftConfirm = () => {\r\n        const { newDraft } = this.state;\r\n        if (!newDraft) return;\r\n\r\n        this.loadDraft();\r\n        this.handleUpdateDraftCancel();\r\n    };\r\n\r\n    handleUpdateDraftCancel = () => {\r\n        this.setState({ newDraft: null });\r\n    };\r\n\r\n    handleSendingMessage = (message, blob) => {\r\n        if (!message) return;\r\n\r\n        const { sending_state, content, chat_id, id } = message;\r\n        if (!sending_state) return;\r\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\r\n        if (content['@type'] !== 'messagePhoto') return;\r\n\r\n        const { photo } = content;\r\n        if (!photo) return;\r\n\r\n        const size = getSize(photo.sizes, PHOTO_SIZE);\r\n        if (!size) return;\r\n\r\n        const { photo: file } = size;\r\n        if (!file) return;\r\n        if (file.blob) return;\r\n\r\n        file.blob = blob;\r\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\r\n    };\r\n\r\n    editMessageMedia(content) {\r\n        const { chatId, editMessageId } = this.state;\r\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!content) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'editMessageMedia',\r\n            chat_id: chatId,\r\n            message_id: editMessageId,\r\n            input_message_content: content\r\n        });\r\n    }\r\n\r\n    editMessageCaption(caption) {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!caption) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'editMessageCaption',\r\n            chat_id: chatId,\r\n            message_id: editMessageId,\r\n            caption\r\n        });\r\n    }\r\n\r\n    async editMessageText(content, callback) {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!content) return;\r\n\r\n        try {\r\n            const result = await TdLibController.send({\r\n                '@type': 'editMessageText',\r\n                chat_id: chatId,\r\n                message_id: editMessageId,\r\n                input_message_content: content\r\n            });\r\n\r\n            callback(result);\r\n        } finally {\r\n        }\r\n    }\r\n\r\n    sendMessage = async (content, clearDraft, callback) => {\r\n        const { chatId, replyToMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!content) return;\r\n\r\n        try {\r\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n\r\n            const result = await TdLibController.send({\r\n                '@type': 'sendMessage',\r\n                chat_id: chatId,\r\n                reply_to_message_id: replyToMessageId,\r\n                input_message_content: content\r\n            });\r\n\r\n            this.setState({ replyToMessageId: 0 }, () => {\r\n                if (clearDraft) {\r\n                    this.saveDraft();\r\n                }\r\n            });\r\n            //MessageStore.set(result);\r\n\r\n            TdLibController.send({\r\n                '@type': 'viewMessages',\r\n                chat_id: chatId,\r\n                message_ids: [result.id]\r\n            });\r\n\r\n            callback(result);\r\n        } catch (error) {\r\n            alert('sendMessage error ' + JSON.stringify(error));\r\n        }\r\n    };\r\n\r\n    handleEmojiSelect = emoji => {\r\n        if (!emoji) return;\r\n\r\n        this.restoreSelection();\r\n        document.execCommand('insertText', false, emoji.native);\r\n        this.handleInput();\r\n    };\r\n\r\n    handleInput = async event => {\r\n        this.setTyping();\r\n        this.setHints();\r\n    };\r\n\r\n    openEditUrlDialog = () => {\r\n        let defaultText = '';\r\n        let defaultUrl = '';\r\n\r\n        const { selection, range } = this;\r\n        if (range) {\r\n            let { startContainer, endContainer } = range;\r\n            if (startContainer === endContainer) {\r\n                const { parentElement } = startContainer;\r\n                if (parentElement && parentElement.nodeName === 'A') {\r\n                    defaultText = parentElement.innerText;\r\n                    defaultUrl = parentElement.href;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!defaultText && selection && !selection.isCollapsed) {\r\n            defaultText = selection.toString();\r\n        }\r\n\r\n        this.setState({\r\n            openEditUrl: true,\r\n            defaultUrl,\r\n            defaultText\r\n        });\r\n    };\r\n\r\n    closeEditUrlDialog = () => {\r\n        this.setState(\r\n            {\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.restoreSelection();\r\n            }\r\n        );\r\n    };\r\n\r\n    saveSelection() {\r\n        this.selection = document.getSelection();\r\n        if (!this.selection) return;\r\n        if (!this.selection.rangeCount) return;\r\n\r\n        this.range = this.selection.getRangeAt(0);\r\n    }\r\n\r\n    restoreSelection() {\r\n        const { range } = this;\r\n\r\n        if (!range) {\r\n            this.focusInput();\r\n            return;\r\n        }\r\n\r\n        const selection = document.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        this.newMessageRef.current.focus();\r\n    }\r\n\r\n    focusInput = () => {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n        if (!element.childNodes.length) {\r\n            element.focus();\r\n            return;\r\n        }\r\n\r\n        const lastTextNode = findLastTextNode(element);\r\n        if (!lastTextNode) {\r\n            return;\r\n        }\r\n\r\n        const range = document.createRange();\r\n        range.setStart(lastTextNode, lastTextNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        element.focus();\r\n    };\r\n\r\n    handleCancelEditUrl = () => {\r\n        this.closeEditUrlDialog();\r\n    };\r\n\r\n    handleDoneEditUrl = (text, url) => {\r\n        this.closeEditUrlDialog();\r\n        setTimeout(() => {\r\n            // edit current link node\r\n            const { range } = this;\r\n            if (range) {\r\n                const { startContainer, endContainer } = range;\r\n                if (startContainer && startContainer === endContainer) {\r\n                    const { parentNode } = startContainer;\r\n                    if (parentNode && parentNode.nodeName === 'A') {\r\n                        parentNode.href = url;\r\n                        parentNode.title = url;\r\n                        parentNode.innerText = text;\r\n\r\n                        // move cursor to end of editing node\r\n                        const { lastChild } = parentNode;\r\n                        if (lastChild) {\r\n                            const range = document.createRange();\r\n                            range.setStart(lastChild, lastChild.textContent.length);\r\n                            range.setEnd(lastChild, lastChild.textContent.length);\r\n\r\n                            const selection = document.getSelection();\r\n                            selection.removeAllRanges();\r\n                            selection.addRange(range);\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // replace selected text with new link node\r\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\r\n            document.execCommand('removeFormat', false, null);\r\n            document.execCommand('insertHTML', false, link);\r\n        }, 0);\r\n    };\r\n\r\n    handleCancelEditMedia = () => {\r\n        this.closeEditMediaDialog();\r\n    };\r\n\r\n    handleEditMedia = (caption, content) => {\r\n        if (content) {\r\n            this.editMessageMedia(content);\r\n            return;\r\n        }\r\n\r\n        this.editMessageCaption(caption);\r\n    };\r\n\r\n    handleSendMedia = (content, file) => {\r\n        this.closeEditMediaDialog(false);\r\n\r\n        switch (content['@type']) {\r\n            case 'inputMessagePhoto': {\r\n                this.handleSendPhoto(content, file);\r\n                break;\r\n            }\r\n            case 'inputMessageDocument': {\r\n                this.handleSendDocument(content, file);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    closeEditMediaDialog(cancel = true) {\r\n        const { newItem } = this.state;\r\n\r\n        this.setState(\r\n            {\r\n                openEditMedia: false,\r\n                newItem: null\r\n            },\r\n            () => {\r\n                if (cancel && newItem && newItem.caption) {\r\n                    this.newMessageRef.current.innerHTML = newItem.caption;\r\n                    this.focusInput();\r\n                    this.handleInput();\r\n                } else {\r\n                    this.restoreSelection();\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    handleHeaderClick = () => {\r\n        setTimeout(() => this.restoreSelection(), 0);\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            chatId,\r\n            editMessageId,\r\n            newItem,\r\n            replyToMessageId,\r\n            files,\r\n            newDraft,\r\n            defaultText,\r\n            defaultUrl,\r\n            openEditUrl,\r\n            openEditMedia\r\n        } = this.state;\r\n\r\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\r\n\r\n        return (\r\n            <div className='inputbox-background'>\r\n                <div className='inputbox'>\r\n                    <div className='inputbox-bubble'>\r\n                        <InputBoxHeader\r\n                            chatId={chatId}\r\n                            messageId={replyToMessageId}\r\n                            editMessageId={openEditMedia ? 0 : editMessageId}\r\n                            onClick={this.handleHeaderClick}\r\n                        />\r\n                        <div className='inputbox-wrapper'>\r\n                            <div className='inputbox-left-column'>\r\n                                <React.Suspense\r\n                                    fallback={\r\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\r\n                                            <InsertEmoticonIcon />\r\n                                        </IconButton>\r\n                                    }>\r\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\r\n                                </React.Suspense>\r\n                            </div>\r\n                            <div className='inputbox-middle-column'>\r\n                                <div\r\n                                    id='inputbox-message'\r\n                                    ref={this.newMessageRef}\r\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\r\n                                    contentEditable\r\n                                    suppressContentEditableWarning\r\n                                    onKeyDown={this.handleKeyDown}\r\n                                    onPaste={this.handlePaste}\r\n                                    onInput={this.handleInput}\r\n                                />\r\n                            </div>\r\n                            <div className='inputbox-right-column'>\r\n                                <input\r\n                                    ref={this.attachDocumentRef}\r\n                                    className='inputbox-attach-button'\r\n                                    type='file'\r\n                                    multiple='multiple'\r\n                                    onChange={this.handleAttachDocumentComplete}\r\n                                />\r\n                                <input\r\n                                    ref={this.attachPhotoRef}\r\n                                    className='inputbox-attach-button'\r\n                                    type='file'\r\n                                    multiple='multiple'\r\n                                    accept='image/*'\r\n                                    onChange={this.handleAttachPhotoComplete}\r\n                                />\r\n                                {!Boolean(editMessageId) && (\r\n                                    <AttachButton\r\n                                        chatId={chatId}\r\n                                        onAttachPhoto={this.handleAttachPhoto}\r\n                                        onAttachDocument={this.handleAttachDocument}\r\n                                        onAttachPoll={this.handleAttachPoll}\r\n                                    />\r\n                                )}\r\n\r\n                                {/*<IconButton>*/}\r\n                                {/*<KeyboardVoiceIcon />*/}\r\n                                {/*</IconButton>*/}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='inputbox-send-button-background'>\r\n                        <IconButton\r\n                            className='inputbox-send-button'\r\n                            aria-label='Send'\r\n                            size='small'\r\n                            onClick={this.handleSubmit}>\r\n                            {editMessageId ? <DoneIcon /> : <SendIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\r\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\r\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\r\n                <EditUrlDialog\r\n                    open={openEditUrl}\r\n                    defaultText={defaultText}\r\n                    defaultUrl={defaultUrl}\r\n                    onDone={this.handleDoneEditUrl}\r\n                    onCancel={this.handleCancelEditUrl}\r\n                />\r\n                <EditMediaDialog\r\n                    open={openEditMedia}\r\n                    chatId={chatId}\r\n                    messageId={editMessageId}\r\n                    newItem={newItem}\r\n                    onEdit={this.handleEditMedia}\r\n                    onSend={this.handleSendMedia}\r\n                    onCancel={this.handleCancelEditMedia}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(InputBox);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button/Button';\r\nimport './FooterCommand.css';\r\n\r\nclass FooterCommand extends React.Component {\r\n    render() {\r\n        const { command, onCommand } = this.props;\r\n\r\n        return (\r\n            <div className='footer-command-wrapper'>\r\n                <div className='footer-command-actions'>\r\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\r\n                        {command}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterCommand;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FooterCommand from './FooterCommand';\r\nimport Notifications from './Notifications';\r\n\r\nclass NotificationsCommand extends Notifications {\r\n    render() {\r\n        const { t } = this.props;\r\n        const { isMuted } = this.state;\r\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\r\n\r\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(NotificationsCommand);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport InputBox from './InputBox';\r\nimport FooterCommand from './FooterCommand';\r\nimport NotificationsCommand from './NotificationsCommand';\r\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Footer.css';\r\n\r\nclass Footer extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { t, chatId } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleJoin = () => {\r\n        const { chatId } = this.props;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'joinChat',\r\n            chat_id: chatId\r\n        });\r\n    };\r\n\r\n    handleDeleteAndExit = () => {\r\n        const { chatId } = this.props;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteChatHistory',\r\n            chat_id: chatId,\r\n            remove_from_chat_list: true\r\n        });\r\n\r\n        // TdLibController\r\n        //     .send({\r\n        //         '@type': 'leaveChat',\r\n        //         chat_id: this.props.chatId\r\n        //     });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { type } = chat;\r\n        if (!type) return null;\r\n\r\n        switch (type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n                if (!basicGroup) return null;\r\n\r\n                const { status } = basicGroup;\r\n                if (!status) return null;\r\n\r\n                const { is_member, permissions } = status;\r\n\r\n                switch (status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return is_member ? <InputBox /> : null;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return null;\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (is_member) {\r\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\r\n                        } else {\r\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                return <InputBox />;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                return <InputBox />;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(type.supergroup_id);\r\n                if (!supergroup) return null;\r\n\r\n                const { is_channel, status } = supergroup;\r\n                if (!status) return null;\r\n\r\n                const { is_member, permissions } = status;\r\n\r\n                switch (status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return is_member ? <InputBox /> : null;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return (\r\n                            <FooterCommand\r\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\r\n                                onCommand={this.handleJoin}\r\n                            />\r\n                        );\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        if (is_channel) {\r\n                            return <NotificationsCommand chatId={chatId} />;\r\n                        } else {\r\n                            return <InputBox />;\r\n                        }\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (is_member) {\r\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\r\n                        } else {\r\n                            return (\r\n                                <FooterCommand\r\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\r\n                                    onCommand={this.handleJoin}\r\n                                />\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Footer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport './NotificationTimer.css';\r\n\r\nclass NotificationTimer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            seconds: this.props.timeout / 1000,\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startTime = new Date();\r\n        this.expire = this.startTime;\r\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\r\n        this.timerId = setInterval(this.handleTimer, 100);\r\n    }\r\n\r\n    handleTimer = () => {\r\n        const now = new Date();\r\n        const seconds = this.expire - now;\r\n        const value = 100 - (seconds / this.props.timeout) * 100;\r\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\r\n        this.setState({\r\n            seconds: seconds > 0 ? seconds : 0,\r\n            value: value > 100 ? 100 : value\r\n        });\r\n\r\n        if (now >= this.expire) {\r\n            if (this.timerId) {\r\n                clearInterval(this.timerId);\r\n                this.timerId = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        if (this.timerId) {\r\n            clearInterval(this.timerId);\r\n            this.timerId = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { value, seconds } = this.state;\r\n\r\n        return (\r\n            <div className='notification-timer'>\r\n                <div className='notification-timer-text'>\r\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\r\n                </div>\r\n                <div className='notification-timer-progress'>\r\n                    <CircularProgress size={32} value={100 - value} variant='static' />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNotificationTimer.propTypes = {\r\n    timeout: PropTypes.number.isRequired\r\n};\r\n\r\nexport default NotificationTimer;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '../../Assets/Icons/More';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport NotificationTimer from '../Additional/NotificationTimer';\r\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MainMenuButton.css';\r\n\r\nclass LeaveChatDialog extends React.Component {\r\n    getDeleteDialogText = (chatId, t) => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n        if (!chat.type) return null;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return `Are you sure you want to leave group ${chat.title}?`;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel\r\n                        ? `Are you sure you want to leave channel ${chat.title}?`\r\n                        : `Are you sure you want to leave group ${chat.title}?`;\r\n                }\r\n\r\n                return null;\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    render() {\r\n        const { onClose, chatId, t, ...other } = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='delete-dialog-title'\r\n                {...other}>\r\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className='delete-dialog-content'>\r\n                        <ChatTile chatId={chatId} />\r\n                        <DialogContentText id='delete-dialog-description'>\r\n                            {this.getDeleteDialogText(chatId, t)}\r\n                        </DialogContentText>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\r\n\r\nclass ClearHistoryDialog extends React.Component {\r\n    render() {\r\n        const { onClose, chatId, t, ...other } = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='delete-dialog-title'\r\n                {...other}>\r\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className='delete-dialog-content'>\r\n                        <ChatTile chatId={chatId} />\r\n                        <DialogContentText id='delete-dialog-description'>\r\n                            Are you sure you want clear history?\r\n                        </DialogContentText>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\r\n\r\nclass MainMenuButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            anchorEl: null,\r\n            openDelete: false,\r\n            openClearHistory: false\r\n        };\r\n    }\r\n\r\n    handleButtonClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleChatInfo = () => {\r\n        this.handleMenuClose();\r\n        setTimeout(() => this.props.openChatDetails(), 150);\r\n    };\r\n\r\n    handleClearHistory = () => {\r\n        this.handleMenuClose();\r\n\r\n        this.setState({ openClearHistory: true });\r\n    };\r\n\r\n    handleClearHistoryContinue = result => {\r\n        this.setState({ openClearHistory: false });\r\n\r\n        if (!result) return;\r\n\r\n        const chatId = ApplicationStore.getChatId();\r\n        const message = 'Messages deleted';\r\n        const request = {\r\n            '@type': 'deleteChatHistory',\r\n            chat_id: chatId,\r\n            remove_from_chat_list: false\r\n        };\r\n\r\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\r\n    };\r\n\r\n    handleLeave = () => {\r\n        this.handleMenuClose();\r\n\r\n        this.setState({ openDelete: true });\r\n    };\r\n\r\n    handleLeaveContinue = result => {\r\n        this.setState({ openDelete: false });\r\n\r\n        if (!result) return;\r\n\r\n        const chatId = ApplicationStore.getChatId();\r\n        const message = this.getLeaveChatNotification(chatId);\r\n        const request = isPrivateChat(chatId)\r\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\r\n            : { '@type': 'leaveChat', chat_id: chatId };\r\n\r\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\r\n    };\r\n\r\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\r\n        const { t } = this.props;\r\n        if (!clientUpdateType) return;\r\n\r\n        const key = `${clientUpdateType} chatId=${chatId}`;\r\n        const action = async () => {\r\n            try {\r\n                await TdLibController.send(request);\r\n            } finally {\r\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\r\n            }\r\n        };\r\n        const cancel = () => {\r\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\r\n        };\r\n\r\n        const { enqueueSnackbar } = this.props;\r\n        if (!enqueueSnackbar) return;\r\n\r\n        const TRANSITION_DELAY = 150;\r\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\r\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\r\n            enqueueSnackbar(message, {\r\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\r\n                action: [\r\n                    <IconButton key='progress' color='inherit' className='progress-button'>\r\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\r\n                    </IconButton>,\r\n                    <Button\r\n                        key='undo'\r\n                        color='primary'\r\n                        size='small'\r\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\r\n                        {t('Undo')}\r\n                    </Button>\r\n                ]\r\n            });\r\n        }\r\n    };\r\n\r\n    getLeaveChatTitle = (chatId, t) => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n        if (!chat.type) return null;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return t('DeleteChat');\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\r\n                }\r\n\r\n                return null;\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return t('DeleteChatUser');\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    getLeaveChatNotification = chatId => {\r\n        const { t } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return t('ChatDeletedUndo');\r\n        if (!chat.type) return t('ChatDeletedUndo');\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return t('ChatDeletedUndo');\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\r\n                }\r\n\r\n                return t('ChatDeletedUndo');\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return t('ChatDeletedUndo');\r\n            }\r\n        }\r\n\r\n        return t('ChatDeletedUndo');\r\n    };\r\n\r\n    handleUnpin = () => {\r\n        this.handleMenuClose();\r\n\r\n        const chatId = ApplicationStore.getChatId();\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateUnpin',\r\n            chatId\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { anchorEl, openDelete, openClearHistory } = this.state;\r\n\r\n        const chatId = ApplicationStore.getChatId();\r\n        const clearHistory = canClearHistory(chatId);\r\n        const deleteChat = canDeleteChat(chatId);\r\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\r\n        const unpinMessage = canUnpinMessage(chatId);\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='main-menu-button'\r\n                    aria-label='Menu'\r\n                    onClick={this.handleButtonClick}>\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\r\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\r\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\r\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\r\n                </Menu>\r\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\r\n                <EnhancedClearHistoryDialog\r\n                    chatId={chatId}\r\n                    open={openClearHistory}\r\n                    onClose={this.handleClearHistoryContinue}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withSnackbar,\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(MainMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport './HeaderChatSubtitle.css';\r\n\r\nclass HeaderChatSubtitle extends React.Component {\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\r\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onUpdateChatOnlineMemberCount = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUserChatAction = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n                if (fullInfo && fullInfo.members) {\r\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\r\n                    if (member) {\r\n                        this.forceUpdate();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (\r\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\r\n            chat.type.user_id === update.user_id\r\n        ) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId } = this.props;\r\n\r\n        const subtitle = getChatSubtitle(chatId, true);\r\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\r\n\r\n        return (\r\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\r\n                {subtitle}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderChatSubtitle.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default HeaderChatSubtitle;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\r\nimport './HeaderChat.css';\r\n\r\nclass HeaderChat extends React.Component {\r\n    render() {\r\n        const { className, chatId, onClick } = this.props;\r\n\r\n        return (\r\n            <div className={classNames('header-chat', className)} onClick={onClick}>\r\n                <ChatTile chatId={chatId} size={44} />\r\n                <div className='header-chat-content'>\r\n                    <DialogTitle chatId={chatId} />\r\n                    <HeaderChatSubtitle chatId={chatId} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default HeaderChat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './HeaderCommand.css';\r\n\r\nclass HeaderCommand extends React.Component {\r\n    handleCancel = () => {\r\n        clearSelection();\r\n    };\r\n\r\n    handleDelete = () => {\r\n        let id = 0;\r\n        let messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        deleteMessages(id, messageIds);\r\n    };\r\n\r\n    handleForward = () => {\r\n        let id;\r\n        const messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        forwardMessages(id, messageIds);\r\n    };\r\n\r\n    render() {\r\n        const { t, count } = this.props;\r\n\r\n        let canBeDeleted = true;\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeDeleted = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\r\n                canBeDeleted = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        let canBeForwarded = true;\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeForwarded = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_forwarded) {\r\n                canBeForwarded = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='header-command'>\r\n                {canBeForwarded && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\r\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\r\n                    </Button>\r\n                )}\r\n                {canBeDeleted && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\r\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\r\n                    </Button>\r\n                )}\r\n                <div className='header-command-space' />\r\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\r\n                    {t('Cancel')}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderCommand.propTypes = {\r\n    count: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(HeaderCommand);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ReplyTile from '../Tile/ReplyTile';\r\nimport { canPinMessages } from '../../Utils/Chat';\r\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\r\nimport { loadMessageContents } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './PinnedMessage.css';\r\n\r\nclass PinnedMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevPropsChatId } = state;\r\n        const { chatId } = props;\r\n\r\n        if (prevPropsChatId !== chatId) {\r\n            const chat = ChatStore.get(chatId);\r\n            return {\r\n                prevPropsChatId: chatId,\r\n                clientData: ChatStore.getClientData(chatId),\r\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\r\n                confirm: false\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { messageId } = this.state;\r\n\r\n        if (messageId && prevState.messageId !== messageId) {\r\n            this.loadContent();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\r\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\r\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\r\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\r\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\r\n    }\r\n\r\n    onClientUpdateUnpin = update => {\r\n        const { chatId } = update;\r\n\r\n        if (this.props.chatId !== chatId) return;\r\n\r\n        this.handleDelete();\r\n    };\r\n\r\n    onClientUpdateDialogsReady = update => {\r\n        const { messageId } = this.state;\r\n\r\n        if (messageId) {\r\n            this.loadContent();\r\n        }\r\n    };\r\n\r\n    onClientUpdateSetChatClientData = update => {\r\n        const { chatId, clientData } = update;\r\n\r\n        if (this.props.chatId !== chatId) return;\r\n\r\n        this.setState({ clientData });\r\n    };\r\n\r\n    onUpdateChatPinnedMessage = update => {\r\n        const { chat_id, pinned_message_id: messageId } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.setState({ messageId });\r\n    };\r\n\r\n    loadContent = () => {\r\n        const { chatId } = this.props;\r\n        const { messageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!messageId) return;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (message) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getMessage',\r\n            chat_id: chatId,\r\n            message_id: messageId\r\n        })\r\n            .then(result => {\r\n                MessageStore.set(result);\r\n\r\n                const store = FileStore.getStore();\r\n                loadMessageContents(store, [result]);\r\n\r\n                this.forceUpdate();\r\n            })\r\n            .catch(error => {\r\n                const { code, message } = error;\r\n                if (message !== 'Chat not found') {\r\n                    const deletedMessage = {\r\n                        '@type': 'deletedMessage',\r\n                        chat_id: chatId,\r\n                        id: messageId,\r\n                        content: null\r\n                    };\r\n\r\n                    MessageStore.set(deletedMessage);\r\n                    this.forceUpdate();\r\n                }\r\n            });\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, t, theme } = this.props;\r\n        const { clientData, confirm, messageId } = this.state;\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clientData !== clientData) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.confirm !== confirm) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleClick = event => {\r\n        const { chatId } = this.props;\r\n        const { messageId } = this.state;\r\n\r\n        if (!messageId) return;\r\n\r\n        openChat(chatId, messageId);\r\n    };\r\n\r\n    handleDelete = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId } = this.props;\r\n        const { messageId } = this.state;\r\n\r\n        const canPin = canPinMessages(chatId);\r\n        if (canPin) {\r\n            this.setState({ confirm: true });\r\n        } else {\r\n            const data = ChatStore.getClientData(chatId);\r\n            await TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateSetChatClientData',\r\n                chatId: chatId,\r\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\r\n            });\r\n        }\r\n    };\r\n\r\n    handleUnpin = async () => {\r\n        const { chatId } = this.props;\r\n\r\n        this.handleClose();\r\n\r\n        TdLibController.send({\r\n            '@type': 'unpinChatMessage',\r\n            chat_id: chatId\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ confirm: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { messageId, confirm } = this.state;\r\n\r\n        if (!chatId) return null;\r\n\r\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\r\n        if (unpinned_message_id === messageId) return null;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        let content = !message ? t('Loading') : getContent(message, t);\r\n        const photoSize = getReplyPhotoSize(chatId, messageId);\r\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n        if (isDeletedMessage(message)) {\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='pinned-message' onMouseDown={this.handleClick}>\r\n                    <div className='border reply-border' />\r\n                    {photoSize && (\r\n                        <ReplyTile\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            photoSize={photoSize}\r\n                            minithumbnail={minithumbnail}\r\n                        />\r\n                    )}\r\n                    <div className='pinned-message-content'>\r\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\r\n                        <div className='pinned-message-subtitle'>{content}</div>\r\n                    </div>\r\n                </div>\r\n                {confirm && (\r\n                    <Dialog\r\n                        transitionDuration={0}\r\n                        open\r\n                        onClose={this.handleClose}\r\n                        aria-labelledby='unpin-message-confirmation'>\r\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color='primary'>\r\n                                {t('Cancel')}\r\n                            </Button>\r\n                            <Button onClick={this.handleUnpin} color='primary'>\r\n                                {t('Ok')}\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPinnedMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(PinnedMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '../../Assets/Icons/Search';\r\nimport MainMenuButton from './MainMenuButton';\r\nimport HeaderChat from '../Tile/HeaderChat';\r\nimport HeaderCommand from './HeaderCommand';\r\nimport HeaderProgress from './HeaderProgress';\r\nimport PinnedMessage from './PinnedMessage';\r\nimport {\r\n    getChatShortTitle,\r\n    getChatSubtitle,\r\n    getChatTitle,\r\n    isAccentChatSubtitle,\r\n    isChannelChat,\r\n    isPrivateChat,\r\n    isSupergroup\r\n} from '../../Utils/Chat';\r\nimport { clearSelection, searchChat } from '../../Actions/Client';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            connectionState: AppStore.getConnectionState(),\r\n            openDeleteDialog: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextState !== this.state) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.theme !== this.props.theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== this.props.t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\r\n\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\r\n\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n    }\r\n\r\n    onClientUpdateDeleteMessages = update => {\r\n        const { chatId, messageIds } = update;\r\n\r\n        let canBeDeletedForAllUsers = true;\r\n        for (let messageId of messageIds) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeDeletedForAllUsers = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_deleted_for_all_users) {\r\n                canBeDeletedForAllUsers = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            openDeleteDialog: true,\r\n            chatId,\r\n            messageIds,\r\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\r\n            revoke: canBeDeletedForAllUsers\r\n        });\r\n    };\r\n\r\n    handleRevokeChange = () => {\r\n        this.setState({ revoke: !this.state.revoke });\r\n    };\r\n\r\n    handleCloseDelete = () => {\r\n        this.setState({ openDeleteDialog: false });\r\n    };\r\n\r\n    handleDeleteContinue = () => {\r\n        const { revoke, chatId, messageIds } = this.state;\r\n\r\n        clearSelection();\r\n        this.handleCloseDelete();\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteMessages',\r\n            chat_id: chatId,\r\n            message_ids: messageIds,\r\n            revoke: revoke\r\n        });\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateConnectionState = update => {\r\n        this.setState({ connectionState: update.state });\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    openChatDetails = () => {\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        AppStore.changeChatDetailsVisibility(true);\r\n    };\r\n\r\n    handleSearchChat = () => {\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        searchChat(chatId);\r\n    };\r\n\r\n    localize = str => {\r\n        const { t } = this.props;\r\n\r\n        return t(str)\r\n            .replace('...', '')\r\n            .replace('…', '');\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            authorizationState,\r\n            connectionState,\r\n            selectionCount,\r\n            openDeleteDialog,\r\n            canBeDeletedForAllUsers,\r\n            revoke,\r\n            messageIds\r\n        } = this.state;\r\n\r\n        const count = messageIds ? messageIds.length : 0;\r\n\r\n        let control = null;\r\n        if (selectionCount) {\r\n            control = <HeaderCommand count={selectionCount} />;\r\n        }\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\r\n        let title = getChatTitle(chatId, true, t);\r\n        let subtitle = getChatSubtitle(chatId, true);\r\n        let showProgressAnimation = false;\r\n\r\n        if (connectionState) {\r\n            switch (connectionState['@type']) {\r\n                case 'connectionStateConnecting':\r\n                    title = this.localize('Connecting');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateConnectingToProxy':\r\n                    title = this.localize('Connecting to proxy');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateReady':\r\n                    break;\r\n                case 'connectionStateUpdating':\r\n                    title = this.localize('Updating');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateWaitingForNetwork':\r\n                    title = this.localize('Waiting for network');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n            }\r\n        } else if (authorizationState) {\r\n            switch (authorizationState['@type']) {\r\n                case 'authorizationStateClosed':\r\n                    break;\r\n                case ' authorizationStateClosing':\r\n                    break;\r\n                case 'authorizationStateLoggingOut':\r\n                    title = this.localize('Logging out');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'authorizationStateReady':\r\n                    break;\r\n                case 'authorizationStateWaitCode':\r\n                    break;\r\n                case 'authorizationStateWaitEncryptionKey':\r\n                    title = this.localize('Loading');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'authorizationStateWaitPassword':\r\n                    break;\r\n                case 'authorizationStateWaitPhoneNumber':\r\n                    break;\r\n                case 'authorizationStateWaitTdlibParameters':\r\n                    title = this.localize('Loading');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n            }\r\n        } else {\r\n            title = this.localize('Loading');\r\n            subtitle = '';\r\n            showProgressAnimation = true;\r\n        }\r\n\r\n        control = control || (\r\n            <div className='header-details'>\r\n                {showProgressAnimation ? (\r\n                    <div\r\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\r\n                        onClick={this.openChatDetails}>\r\n                        <span className='header-status-content'>{title}</span>\r\n                        <HeaderProgress />\r\n                        <span\r\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\r\n                            {subtitle}\r\n                        </span>\r\n                        <span className='header-status-tail' />\r\n                    </div>\r\n                ) : (\r\n                    <HeaderChat\r\n                        className={classNames('grow', 'cursor-pointer')}\r\n                        chatId={chatId}\r\n                        onClick={this.openChatDetails}\r\n                    />\r\n                )}\r\n                <PinnedMessage chatId={chatId} />\r\n                {chat && (\r\n                    <>\r\n                        <IconButton\r\n                            className='header-right-second-button'\r\n                            aria-label='Search'\r\n                            onClick={this.handleSearchChat}>\r\n                            <SearchIcon />\r\n                        </IconButton>\r\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\r\n                    </>\r\n                )}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <>\r\n                {control}\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={openDeleteDialog}\r\n                    onClose={this.handleCloseDelete}\r\n                    aria-labelledby='delete-dialog-title'>\r\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            {count === 1\r\n                                ? 'Do you want to delete this message?'\r\n                                : `Do you want to delete ${count} messages?`}\r\n                        </DialogContentText>\r\n                        {isSupergroup(chatId) ? (\r\n                            <DialogContentText>\r\n                                {!isChannelChat(chatId) &&\r\n                                    (count === 1\r\n                                        ? 'This will delete it for everyone in this chat'\r\n                                        : 'This will delete them for everyone in this chat')}\r\n                            </DialogContentText>\r\n                        ) : (\r\n                            <>\r\n                                {canBeDeletedForAllUsers && (\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox\r\n                                                checked={revoke}\r\n                                                onChange={this.handleRevokeChange}\r\n                                                color='primary'\r\n                                            />\r\n                                        }\r\n                                        label={\r\n                                            isPrivateChat(chatId)\r\n                                                ? `Delete for ${getChatShortTitle(chatId, false, t)}`\r\n                                                : 'Delete for all'\r\n                                        }\r\n                                    />\r\n                                )}\r\n                            </>\r\n                        )}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseDelete} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Header);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './VolumeButton.css';\r\n\r\nclass VolumeButton extends React.Component {\r\n    state = {\r\n        anchorEl: null,\r\n        value: PlayerStore.volume,\r\n        prevValue: PlayerStore.volume,\r\n        dragging: false,\r\n        buttonOver: false,\r\n        popupOver: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n    }\r\n\r\n    onClientUpdateMediaVolume = update => {\r\n        const { volume, prevVolume } = update;\r\n\r\n        if (prevVolume === undefined) {\r\n            this.setState({ value: volume });\r\n        } else {\r\n            this.setState({ value: volume, prevValue: prevVolume });\r\n        }\r\n    };\r\n\r\n    handlePopoverOpen = anchorEl => {\r\n        this.setState({ anchorEl: anchorEl });\r\n    };\r\n\r\n    handlePopoverClose = () => {\r\n        const { dragging, buttonOver, popupOver } = this.state;\r\n\r\n        if (dragging) return;\r\n        if (buttonOver) return;\r\n        if (popupOver) return;\r\n\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleMouseEnter = (event, openPopover) => {\r\n        this.setState({ buttonOver: true });\r\n\r\n        if (openPopover) {\r\n            this.handlePopoverOpen(event.currentTarget);\r\n        }\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState({ buttonOver: false }, () => {\r\n            this.handlePopoverClose();\r\n        });\r\n    };\r\n\r\n    handlePopupMouseLeave = () => {\r\n        this.setState({ popupOver: false }, () => {\r\n            this.handlePopoverClose();\r\n        });\r\n    };\r\n\r\n    handleVoiceClick = () => {\r\n        const { value, prevValue } = this.state;\r\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaVolume',\r\n            volume: nextValue\r\n        });\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        const { dragging, prevValue } = this.state;\r\n\r\n        if (dragging) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaVolume',\r\n                volume: value\r\n            });\r\n        } else {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaVolume',\r\n                prevVolume: value > 0 ? value : prevValue,\r\n                volume: value\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDragStart = () => {\r\n        const { value } = this.state;\r\n\r\n        this.setState({\r\n            dragging: true,\r\n            prevValue: value\r\n        });\r\n    };\r\n\r\n    handleDragEnd = () => {\r\n        const { value, prevValue } = this.state;\r\n\r\n        this.setState(\r\n            {\r\n                dragging: false,\r\n                prevValue: value > 0 ? value : prevValue\r\n            },\r\n            () => {\r\n                this.handlePopoverClose();\r\n            }\r\n        );\r\n    };\r\n\r\n    getVolumeIcon = value => {\r\n        if (value === 0) {\r\n            return <VolumeOffIcon fontSize='small' />;\r\n        }\r\n\r\n        if (value < 0.25) {\r\n            return <VolumeMuteIcon fontSize='small' />;\r\n        }\r\n\r\n        if (value < 0.5) {\r\n            return <VolumeDownIcon fontSize='small' />;\r\n        }\r\n\r\n        return <VolumeUpIcon fontSize='small' />;\r\n    };\r\n\r\n    render() {\r\n        const { anchorEl, value } = this.state;\r\n        const open = Boolean(anchorEl);\r\n\r\n        return (\r\n            <div\r\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\r\n                onMouseLeave={this.handleMouseLeave}\r\n                style={{\r\n                    position: 'relative',\r\n                    background: 'transparent'\r\n                }}>\r\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\r\n                    {this.getVolumeIcon(value)}\r\n                </IconButton>\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        background: 'transparent',\r\n                        visibility: open ? 'visible' : 'hidden',\r\n                        zIndex: 1\r\n                    }}\r\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\r\n                    onMouseLeave={this.handlePopupMouseLeave}>\r\n                    <div className='volume-button-panel'>\r\n                        <Slider\r\n                            min={0}\r\n                            max={1}\r\n                            step={0.01}\r\n                            value={value}\r\n                            onChange={this.handleChange}\r\n                            onDragStart={this.handleDragStart}\r\n                            onDragEnd={this.handleDragEnd}\r\n                            orientation='vertical'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VolumeButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\r\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass RepeatButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { repeat } = PlayerStore;\r\n\r\n        this.state = {\r\n            repeat\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\r\n    }\r\n\r\n    onClientUpdateMediaRepeat = update => {\r\n        const { repeat } = update;\r\n\r\n        this.setState({ repeat });\r\n    };\r\n\r\n    handleRepeat = () => {\r\n        const { repeat } = this.state;\r\n\r\n        let nextRepeat = repeat;\r\n        switch (repeat) {\r\n            case RepeatEnum.NONE: {\r\n                nextRepeat = RepeatEnum.REPEAT;\r\n                break;\r\n            }\r\n            case RepeatEnum.REPEAT: {\r\n                nextRepeat = RepeatEnum.REPEAT_ONE;\r\n                break;\r\n            }\r\n            case RepeatEnum.REPEAT_ONE: {\r\n                nextRepeat = RepeatEnum.NONE;\r\n                break;\r\n            }\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaRepeat',\r\n            repeat: nextRepeat\r\n        });\r\n    };\r\n\r\n    getIcon = repeat => {\r\n        switch (repeat) {\r\n            case RepeatEnum.NONE: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n            case RepeatEnum.REPEAT: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n            case RepeatEnum.REPEAT_ONE: {\r\n                return <RepeatOneIcon fontSize='small' />;\r\n            }\r\n            default: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { repeat } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\r\n                onClick={this.handleRepeat}>\r\n                {this.getIcon(repeat)}\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RepeatButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass ShuffleButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { shuffle } = PlayerStore;\r\n\r\n        this.state = {\r\n            shuffle\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\r\n    }\r\n\r\n    onClientUpdateMediaShuffle = update => {\r\n        const { shuffle } = update;\r\n\r\n        this.setState({ shuffle });\r\n    };\r\n\r\n    handleShuffle = () => {\r\n        const { shuffle } = this.state;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaShuffle',\r\n            shuffle: !shuffle\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { shuffle } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={!shuffle ? 'default' : 'primary'}\r\n                onClick={this.handleShuffle}>\r\n                <ShuffleIcon fontSize='small' />\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShuffleButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\r\n\r\nclass PlaybackRateButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { playbackRate } = PlayerStore;\r\n\r\n        this.state = {\r\n            playbackRate\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n    }\r\n\r\n    onClientUpdateMediaPlaybackRate = update => {\r\n        const { playbackRate } = update;\r\n\r\n        this.setState({ playbackRate });\r\n    };\r\n\r\n    handlePlaybackRate = () => {\r\n        const { playbackRate } = this.state;\r\n\r\n        const nextPlaybackRate =\r\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPlaybackRate',\r\n            playbackRate: nextPlaybackRate\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { playbackRate } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\r\n                onClick={this.handlePlaybackRate}>\r\n                <div className='header-player-playback-icon'>2X</div>\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlaybackRateButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { getDurationString } from '../../Utils/Common';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\n\r\nclass Time extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentTime: 0,\r\n            duration: 0,\r\n            timeString: this.getTimeString(0, 0)\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n    }\r\n\r\n    onClientUpdateMediaTime = update => {\r\n        const { currentTime } = update;\r\n\r\n        this.setState({\r\n            currentTime: currentTime,\r\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\r\n        });\r\n    };\r\n\r\n    getTimeString = (currentTime, duration) => {\r\n        const type = 0;\r\n\r\n        const durationString = getDurationString(Math.floor(duration || 0));\r\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\r\n\r\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\r\n\r\n        return currentTimeString;\r\n    };\r\n\r\n    render() {\r\n        const { currentTimeString } = this.state;\r\n\r\n        return <>{currentTimeString}</>;\r\n    }\r\n}\r\n\r\nexport default Time;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { openMedia } from '../../Utils/Message';\r\nimport { getMedia } from '../../Utils/Media';\r\nimport { SCROLL_PRECISION } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Playlist.css';\r\n\r\nclass Playlist extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.itemRefMap = new Map();\r\n\r\n        const { message, playlist } = PlayerStore;\r\n\r\n        this.chatId = message ? message.chat_id : 0;\r\n        this.messageId = message ? message.id : 0;\r\n\r\n        this.state = {\r\n            open: false,\r\n            titleMouseOver: false,\r\n            playlistMouseOver: false,\r\n            playlist: playlist\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { open } = this.state;\r\n\r\n        if (!prevState.open && open) {\r\n            this.scrollToActive();\r\n        }\r\n    }\r\n\r\n    scrollToActive = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        const { messageId } = this;\r\n        if (!messageId) return;\r\n\r\n        const item = this.itemRefMap.get(messageId);\r\n        if (!item) return;\r\n\r\n        const node = ReactDOM.findDOMNode(item);\r\n        if (!node) return;\r\n\r\n        list.scrollTop = node.offsetTop - 15;\r\n    };\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\r\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\r\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\r\n    }\r\n\r\n    onClientUpdateMediaTitleMouseOver = update => {\r\n        const { over } = update;\r\n\r\n        if (over) {\r\n            this.setState(\r\n                {\r\n                    playlistMouseOver: over\r\n                },\r\n                () => {\r\n                    this.tryOpen();\r\n                }\r\n            );\r\n        } else {\r\n            this.setState(\r\n                {\r\n                    playlistMouseOver: over\r\n                },\r\n                () => {\r\n                    this.tryClose();\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { chatId, messageId } = update;\r\n\r\n        this.chatId = chatId;\r\n        this.messageId = messageId;\r\n    };\r\n\r\n    onClientUpdateMediaPlaylistLoading = update => {\r\n        const { chatId, messageId } = this;\r\n\r\n        if (update.chatId === chatId && update.messageId === messageId) {\r\n            this.setState({\r\n                playlist: null\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylist = update => {\r\n        const { chatId, messageId } = this;\r\n        const { playlist } = update;\r\n\r\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\r\n            this.setState({\r\n                playlist: playlist\r\n            });\r\n        }\r\n    };\r\n\r\n    tryOpen = () => {\r\n        clearTimeout(this.openTimeout);\r\n\r\n        this.openTimeout = setTimeout(() => {\r\n            const { titleMouseOver, playlistMouseOver } = this.state;\r\n            this.setState({\r\n                open: titleMouseOver || playlistMouseOver\r\n            });\r\n        }, 250);\r\n    };\r\n\r\n    tryClose = () => {\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            const { titleMouseOver, playlistMouseOver } = this.state;\r\n            this.setState({\r\n                open: titleMouseOver || playlistMouseOver\r\n            });\r\n        }, 250);\r\n    };\r\n\r\n    handleMouseEnter = () => {\r\n        this.setState({\r\n            playlistMouseOver: true,\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState(\r\n            {\r\n                playlistMouseOver: false\r\n            },\r\n            () => {\r\n                this.tryClose();\r\n            }\r\n        );\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        if (list.scrollTop <= SCROLL_PRECISION) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylistNext'\r\n            });\r\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylistPrev'\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { open, playlist } = this.state;\r\n        if (!open) return null;\r\n        if (!playlist) return null;\r\n\r\n        const { messages } = playlist;\r\n        if (!messages) return null;\r\n        if (messages.length <= 1) return null;\r\n\r\n        this.itemRefMap.clear();\r\n\r\n        return (\r\n            <div className='playlist'>\r\n                <div className='playlist-wrapper'>\r\n                    <div\r\n                        ref={this.listRef}\r\n                        className='playlist-items'\r\n                        onMouseEnter={this.handleMouseEnter}\r\n                        onMouseLeave={this.handleMouseLeave}\r\n                        onScroll={this.handleScroll}>\r\n                        {playlist.messages\r\n                            .slice(0)\r\n                            .reverse()\r\n                            .map(x => (\r\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\r\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Playlist;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\r\nimport PauseIcon from '../../Assets/Icons/Pause';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VolumeButton from '../Player/VolumeButton';\r\nimport RepeatButton from '../Player/RepeatButton';\r\nimport ShuffleButton from '../Player/ShuffleButton';\r\nimport PlaybackRateButton from './PlaybackRateButton';\r\nimport Time from '../Player/Time';\r\nimport Playlist from '../Player/Playlist';\r\nimport { getSrc } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { getDurationString } from '../../Utils/Common';\r\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\r\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './HeaderPlayer.css';\r\n\r\nclass HeaderPlayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        const { message, playlist } = PlayerStore;\r\n\r\n        this.startTime = PLAYER_STARTTIME;\r\n\r\n        this.state = {\r\n            currentTime: 0,\r\n            currentTimeString: getDurationString(0),\r\n            message: message,\r\n            playlist: playlist,\r\n            playing: false,\r\n            src: this.getMediaSrc(message),\r\n            mimeType: this.getMediaMimeType(message)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { theme } = this.props;\r\n        const { message, playlist, src, playing } = this.state;\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.message !== message) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playlist !== playlist) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.src !== src) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playing !== playing) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\r\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\r\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\r\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\r\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\r\n\r\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\r\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\r\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\r\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\r\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\r\n\r\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }\r\n\r\n    onClientUpdateMediaPlaybackRate = update => {\r\n        const { playbackRate } = update;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.playbackRate = playbackRate;\r\n    };\r\n\r\n    onClientUpdateMediaVolume = update => {\r\n        const { volume } = update;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.volume = volume;\r\n    };\r\n\r\n    onClientUpdateMediaSeek = update => {\r\n        const { chatId, messageId, value } = update;\r\n        const { message } = this.state;\r\n\r\n        if (!message) return;\r\n\r\n        const { chat_id, id, content } = message;\r\n        if (!content) return;\r\n        if (chatId !== chat_id || messageId !== id) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n        if (!player.duration) return;\r\n\r\n        player.currentTime = value * player.duration;\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\r\n    };\r\n\r\n    onClientUpdateMediaViewerEnded = update => {\r\n        this.playingMediaViewer = false;\r\n    };\r\n\r\n    onClientUpdateMediaViewerPause = update => {\r\n        this.playingMediaViewer = false;\r\n    };\r\n\r\n    onClientUpdateMediaViewerPlay = update => {\r\n        this.playingMediaViewer = true;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.pause();\r\n    };\r\n\r\n    startPlayingFile = message => {\r\n        const { chat_id, id } = message;\r\n\r\n        const { src: prevSrc } = this.state;\r\n\r\n        const src = this.getMediaSrc(message);\r\n        const mimeType = this.getMediaMimeType(message);\r\n        const playing = Boolean(src);\r\n        const { playlist } = PlayerStore;\r\n\r\n        this.setState(\r\n            {\r\n                message,\r\n                playlist,\r\n                playing,\r\n                src,\r\n                mimeType\r\n            },\r\n            () => {\r\n                const player = this.videoRef.current;\r\n                if (!player) return;\r\n\r\n                if (prevSrc !== src) {\r\n                    player.load();\r\n                }\r\n                player.currentTime = this.startTime;\r\n                if (this.playingMediaViewer) {\r\n                    player.pause();\r\n\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateMediaPause',\r\n                        chatId: chat_id,\r\n                        messageId: id\r\n                    });\r\n                } else if (player.paused) {\r\n                    player.play();\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { chatId, messageId } = update;\r\n        const { message } = this.state;\r\n\r\n        if (!message) return;\r\n\r\n        const { chat_id, id, content } = message;\r\n        if (!content) return;\r\n        if (chatId !== chat_id || messageId !== id) return;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageText': {\r\n                const { web_page } = content;\r\n                if (web_page) {\r\n                    const { audio, voice_note, video_note } = web_page;\r\n\r\n                    if (audio) {\r\n                        const file = audio.audio;\r\n                        if (file) {\r\n                            this.startPlayingFile(message);\r\n                        }\r\n                    }\r\n\r\n                    if (voice_note) {\r\n                        const { voice } = voice_note;\r\n                        if (voice) {\r\n                            this.startPlayingFile(message);\r\n                        }\r\n                    }\r\n\r\n                    if (video_note) {\r\n                        const { video } = video_note;\r\n                        if (video) {\r\n                            this.startPlayingFile(message);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageAudio': {\r\n                const { audio } = content;\r\n                if (audio) {\r\n                    const file = audio.audio;\r\n                    if (file) {\r\n                        this.startPlayingFile(message);\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageVoiceNote': {\r\n                const { voice_note } = content;\r\n                if (voice_note) {\r\n                    const { voice } = voice_note;\r\n                    if (voice) {\r\n                        this.startPlayingFile(message);\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageVideoNote': {\r\n                const { video_note } = content;\r\n                if (video_note) {\r\n                    const { video } = video_note;\r\n                    if (video) {\r\n                        this.startPlayingFile(message);\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylist = update => {\r\n        const { playlist } = update;\r\n        const { chatId, messageId } = playlist;\r\n        const { message } = this.state;\r\n\r\n        if (message && message.chat_id === chatId && message.id === messageId) {\r\n            this.setState({ playlist: playlist });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaClose = update => {\r\n        this.setState({\r\n            message: null,\r\n            playlist: null,\r\n            playing: false,\r\n            src: null,\r\n            mimeType: null\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { chatId, messageId } = update;\r\n        const { message, src } = this.state;\r\n\r\n        if (message && message.chat_id === chatId && message.id === messageId) {\r\n            if (!src) return;\r\n\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            if (player.paused) {\r\n                player.play();\r\n            } else {\r\n                player.pause();\r\n            }\r\n        } else {\r\n            this.startPlayingFile(PlayerStore.message);\r\n        }\r\n    };\r\n\r\n    handlePrev = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPrev'\r\n        });\r\n    };\r\n\r\n    handlePlay = () => {\r\n        const { message } = this.state;\r\n        if (!message) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaActive',\r\n            chatId: message.chat_id,\r\n            messageId: message.id\r\n        });\r\n    };\r\n\r\n    handleNext = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaNext'\r\n        });\r\n    };\r\n\r\n    getMediaMimeType = message => {\r\n        if (message) {\r\n            const { content } = message;\r\n            if (content) {\r\n                const { audio, voice_note, video_note, web_page } = content;\r\n\r\n                if (audio) {\r\n                    return audio.mime_type;\r\n                }\r\n\r\n                if (voice_note) {\r\n                    return voice_note.mime_type;\r\n                }\r\n\r\n                if (video_note) {\r\n                    return 'video/mp4';\r\n                }\r\n\r\n                if (web_page) {\r\n                    if (web_page.audio) {\r\n                        return web_page.audio.mime_type;\r\n                    }\r\n\r\n                    if (web_page.voice_note) {\r\n                        return web_page.voice_note.mime_type;\r\n                    }\r\n\r\n                    if (web_page.video_note) {\r\n                        return 'video/mp4';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    getMediaSrc = message => {\r\n        if (message) {\r\n            const { content } = message;\r\n            if (content) {\r\n                const { audio, voice_note, video_note, web_page } = content;\r\n\r\n                if (audio) {\r\n                    const file = audio.audio;\r\n                    if (file) {\r\n                        return getSrc(file);\r\n                    }\r\n                }\r\n\r\n                if (voice_note) {\r\n                    const { voice } = voice_note;\r\n                    if (voice) {\r\n                        return getSrc(voice);\r\n                    }\r\n                }\r\n\r\n                if (video_note) {\r\n                    const { video } = video_note;\r\n                    if (video) {\r\n                        return getSrc(video);\r\n                    }\r\n                }\r\n\r\n                if (web_page) {\r\n                    if (web_page.audio) {\r\n                        const file = web_page.audio.audio;\r\n                        if (file) {\r\n                            return getSrc(file);\r\n                        }\r\n                    }\r\n\r\n                    if (web_page.voice_note) {\r\n                        const { voice } = web_page.voice_note;\r\n                        if (voice) {\r\n                            return getSrc(voice);\r\n                        }\r\n                    }\r\n\r\n                    if (web_page.video_note) {\r\n                        const { video } = web_page.video_note;\r\n                        if (video) {\r\n                            return getSrc(video);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    handleEnded = (moveNext = true) => {\r\n        const { message } = this.state;\r\n        if (!message) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaEnding',\r\n            chatId: message.chat_id,\r\n            messageId: message.id,\r\n            moveNext: moveNext\r\n        });\r\n\r\n        this.setState(\r\n            {\r\n                //playing: false,\r\n                //message: null,\r\n                //src: null\r\n            },\r\n            () => {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateMediaEnd',\r\n                    chatId: message.chat_id,\r\n                    messageId: message.id,\r\n                    moveNext: moveNext\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleVideoEnded = () => {\r\n        this.handleEnded(true);\r\n    };\r\n\r\n    handleClose = () => {\r\n        const player = this.videoRef.current;\r\n        if (player) {\r\n            player.pause();\r\n        }\r\n\r\n        this.handleEnded(false);\r\n    };\r\n\r\n    handleTimeUpdate = () => {\r\n        const { message } = this.state;\r\n        if (!message) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        this.setState({\r\n            currentTime: player.currentTime,\r\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTime',\r\n            chatId: message.chat_id,\r\n            messageId: message.id,\r\n            duration: player.duration,\r\n            currentTime: player.currentTime,\r\n            timestamp: Date.now()\r\n        });\r\n    };\r\n\r\n    handleCanPlay = () => {\r\n        const { message } = this.state;\r\n        if (!message) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { playbackRate, volume } = PlayerStore;\r\n\r\n        const { chat_id, id } = message;\r\n        const audio = hasAudio(chat_id, id);\r\n\r\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\r\n        player.volume = volume;\r\n        player.muted = false;\r\n\r\n        if (audio) {\r\n            return;\r\n        }\r\n\r\n        let stream = null;\r\n        if ('captureStream' in player) {\r\n            stream = player.captureStream();\r\n        } else if ('mozCaptureStream' in player) {\r\n            stream = player.mozCaptureStream();\r\n        }\r\n\r\n        if (!stream) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaCaptureStream',\r\n            chatId: message.chat_id,\r\n            messageId: message.id,\r\n            stream: stream\r\n        });\r\n    };\r\n\r\n    handleVideoPlay = () => {\r\n        const { message } = this.state;\r\n        if (!message) return;\r\n\r\n        this.setState({\r\n            playing: true\r\n        });\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPlay',\r\n            chatId: message.chat_id,\r\n            messageId: message.id,\r\n            currentTime: player.currentTime,\r\n            duration: player.duration,\r\n            timestamp: Date.now()\r\n        });\r\n    };\r\n\r\n    handleVideoPause = () => {\r\n        const { message } = this.state;\r\n        if (!message) return;\r\n\r\n        this.setState({\r\n            playing: false\r\n        });\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPause',\r\n            chatId: message.chat_id,\r\n            messageId: message.id\r\n        });\r\n    };\r\n\r\n    handlePlaybackRate = () => {\r\n        const { playbackRate } = this.state;\r\n\r\n        const nextPlaybackRate =\r\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\r\n\r\n        this.setState(\r\n            {\r\n                playbackRate: nextPlaybackRate\r\n            },\r\n            () => {\r\n                const player = this.videoRef.current;\r\n                if (!player) return;\r\n\r\n                player.playbackRate = nextPlaybackRate;\r\n            }\r\n        );\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPlaybackRate',\r\n            playbackRate: nextPlaybackRate\r\n        });\r\n    };\r\n\r\n    hasPrev = (message, playlist) => {\r\n        if (!message) return false;\r\n        if (!playlist || !playlist.messages.length) return false;\r\n\r\n        const { chat_id, id } = message;\r\n\r\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\r\n        if (index === -1) return false;\r\n\r\n        return index + 1 < playlist.messages.length;\r\n    };\r\n\r\n    hasNext = (message, playlist) => {\r\n        if (!message) return false;\r\n        if (!playlist || !playlist.messages.length) return false;\r\n\r\n        const { chat_id, id } = message;\r\n\r\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\r\n        if (index === -1) return false;\r\n\r\n        return index - 1 >= 0;\r\n    };\r\n\r\n    handleTitleMouseEnter = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTitleMouseOver',\r\n            over: true\r\n        });\r\n    };\r\n\r\n    handleTitleMouseLeave = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTitleMouseOver',\r\n            over: false\r\n        });\r\n    };\r\n\r\n    handleTitleClick = () => {\r\n        const { message } = this.state;\r\n        if (!message) return;\r\n\r\n        openChat(message.chat_id, message.id);\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { playing, message, playlist, src, mimeType } = this.state;\r\n\r\n        let audio = false;\r\n        if (message) {\r\n            const { chat_id, id } = message;\r\n            audio = hasAudio(chat_id, id);\r\n        }\r\n\r\n        const date = message ? message.date : null;\r\n\r\n        const title = getMediaTitle(message, t);\r\n        const dateHintStr = getDateHint(date);\r\n        const dateStr = getDate(date);\r\n        const showDate = !audio;\r\n        const showPlaybackRate = !audio;\r\n        const showRepeat = audio;\r\n        const showShuffle = audio;\r\n        const hasPrev = this.hasPrev(message, playlist);\r\n        const hasNext = this.hasNext(message, playlist);\r\n\r\n        const source = src ? <source src={src} type={mimeType} /> : null;\r\n\r\n        return (\r\n            <>\r\n                <video\r\n                    className='header-player-video'\r\n                    ref={this.videoRef}\r\n                    autoPlay={true}\r\n                    controls={false}\r\n                    width={44}\r\n                    height={44}\r\n                    onCanPlay={this.handleCanPlay}\r\n                    onPlay={this.handleVideoPlay}\r\n                    onPause={this.handleVideoPause}\r\n                    onTimeUpdate={this.handleTimeUpdate}\r\n                    onEnded={this.handleVideoEnded}>\r\n                    {source}\r\n                </video>\r\n                {message && (\r\n                    <div className='header-player'>\r\n                        <IconButton\r\n                            disabled={!hasPrev}\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            onClick={this.handlePrev}>\r\n                            <SkipPreviousIcon fontSize='small' />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            disabled={!src}\r\n                            onClick={this.handlePlay}>\r\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\r\n                        </IconButton>\r\n                        <IconButton\r\n                            disabled={!hasNext}\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            onClick={this.handleNext}>\r\n                            <SkipNextIcon fontSize='small' />\r\n                        </IconButton>\r\n                        <Playlist />\r\n                        <div\r\n                            className='header-player-content'\r\n                            onMouseEnter={this.handleTitleMouseEnter}\r\n                            onMouseLeave={this.handleTitleMouseLeave}\r\n                            onClick={this.handleTitleClick}>\r\n                            <div className='header-player-title'>\r\n                                {title}\r\n                                {showDate && (\r\n                                    <span title={dateHintStr}>\r\n                                        &nbsp;\r\n                                        {dateStr}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            &nbsp;\r\n                            <Time />\r\n                        </div>\r\n                        <VolumeButton />\r\n                        {showPlaybackRate && <PlaybackRateButton />}\r\n                        {showRepeat && <RepeatButton />}\r\n                        {showShuffle && <ShuffleButton />}\r\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\r\n                            <CloseIcon fontSize='small' />\r\n                        </IconButton>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(HeaderPlayer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ActionBar.css';\r\n\r\nclass ActionBar extends React.Component {\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\r\n    }\r\n\r\n    onUpdateChatActionBar = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        TdLibController.send({\r\n            '@type': 'removeChatActionBar',\r\n            chat_id: chatId\r\n        });\r\n    };\r\n\r\n    handleReportSpam = () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        TdLibController.send({\r\n            '@type': 'reportChat',\r\n            chat_id: chatId,\r\n            reason: {\r\n                '@type': 'chatReportReasonSpam'\r\n            },\r\n            message_ids: []\r\n        });\r\n    };\r\n\r\n    handleReportUnrelatedLocation = () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        TdLibController.send({\r\n            '@type': 'reportChat',\r\n            chat_id: chatId,\r\n            reason: {\r\n                '@type': 'chatReportReasonUnrelatedLocation'\r\n            },\r\n            message_ids: []\r\n        });\r\n    };\r\n\r\n    handleSharePhoneNumber = () => {\r\n        const { chatId } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'sharePhoneNumber',\r\n            user_id: userId\r\n        });\r\n    };\r\n\r\n    handleAddContact = () => {\r\n        const { chatId } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        const user = UserStore.get(userId);\r\n        if (!user) return;\r\n\r\n        const { user_id, phone_number, first_name, last_name } = user;\r\n\r\n        TdLibController.send({\r\n            '@type': 'addContact',\r\n            contact: {\r\n                '@type': 'contact',\r\n                phone_number,\r\n                first_name,\r\n                last_name,\r\n                vcard: '',\r\n                user_id\r\n            },\r\n            share_phone_number: false\r\n        });\r\n    };\r\n\r\n    handleBlockUser = () => {\r\n        const { chatId } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'blockUser',\r\n            user_id: userId\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        if (!chatId) return null;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { action_bar } = chat;\r\n        if (!action_bar) return null;\r\n\r\n        let content = null;\r\n        switch (action_bar['@type']) {\r\n            case 'chatActionBarSharePhoneNumber': {\r\n                content = (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\r\n                        {t('ShareMyPhone')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarAddContact': {\r\n                content = (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\r\n                        {t('AddContactChat')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarReportAddBlock': {\r\n                content = (\r\n                    <>\r\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\r\n                            {t('AddContactChat')}\r\n                        </Button>\r\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\r\n                            {t('ReportSpamUser')}\r\n                        </Button>\r\n                    </>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarUnrelatedLocation': {\r\n                content = (\r\n                    <Button\r\n                        color='secondary'\r\n                        className='header-command-button'\r\n                        onClick={this.handleReportUnrelatedLocation}>\r\n                        {t('ReportSpamLocation')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarReportSpam': {\r\n                content = (\r\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\r\n                        {t('ReportSpam')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='action-bar' onMouseDown={this.handleClick}>\r\n                <div className='action-bar-content'>{content}</div>\r\n                <div className='action-bar-close-button'>\r\n                    <IconButton onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nActionBar.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(ActionBar);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport './DayMeta.css';\r\n\r\nclass DayMeta extends React.Component {\r\n    componentDidMount() {\r\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\r\n    }\r\n\r\n    onClientUpdateLanguage = () => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { date, i18n } = this.props;\r\n\r\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\r\n        const options = showYear\r\n            ? {\r\n                  day: 'numeric',\r\n                  month: 'long',\r\n                  year: 'numeric'\r\n              }\r\n            : {\r\n                  day: 'numeric',\r\n                  month: 'long'\r\n              };\r\n\r\n        return (\r\n            <div className='day-meta'>\r\n                <div className='day-meta-wrapper'>\r\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDayMeta.propTypes = {\r\n    date: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(DayMeta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './FilesDropTarget.css';\r\n\r\nclass FilesDropTarget extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { dragParams } = AppStore;\r\n\r\n        this.state = { dragParams };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\r\n    }\r\n\r\n    onClientUpdateDragging = update => {\r\n        const { dragParams } = AppStore;\r\n\r\n        this.setState({ dragParams });\r\n    };\r\n\r\n    handleDragEnter = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleDrop = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: false\r\n        });\r\n\r\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\r\n    };\r\n\r\n    handleDragLeave = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: false\r\n        });\r\n    };\r\n\r\n    handleAttachDocumentComplete = files => {\r\n        if (files.length === 0) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSendFiles',\r\n            files\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { dragParams } = this.state;\r\n        if (!dragParams) return null;\r\n\r\n        return (\r\n            <div\r\n                className='files-drop-target'\r\n                onDragEnter={this.handleDragEnter}\r\n                onDragLeave={this.handleDragLeave}\r\n                onDrop={this.handleDrop}>\r\n                <div className='files-drop-target-wrapper'>\r\n                    <div className='files-drop-target-text'>\r\n                        <div className='files-drop-target-title'>Drop files here</div>\r\n                        <div className='files-drop-target-subtitle'>to send them</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilesDropTarget;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\r\nimport { openUser, openChat } from '../../Actions/Client';\r\nimport './Forward.css';\r\n\r\nclass Forward extends React.Component {\r\n    state = {\r\n        arrowRef: null\r\n    };\r\n\r\n    handleArrowRef = node => {\r\n        this.setState({\r\n            arrowRef: node\r\n        });\r\n    };\r\n\r\n    openForward = event => {\r\n        event.stopPropagation();\r\n\r\n        const { forwardInfo } = this.props;\r\n        if (!forwardInfo) return null;\r\n\r\n        const { origin } = forwardInfo;\r\n\r\n        switch (origin['@type']) {\r\n            case 'messageForwardOriginUser': {\r\n                const { sender_user_id } = origin;\r\n\r\n                openUser(sender_user_id, true);\r\n                break;\r\n            }\r\n            case 'messageForwardOriginHiddenUser': {\r\n                break;\r\n            }\r\n            case 'messageForwardOriginChannel': {\r\n                const { chat_id, message_id } = origin;\r\n\r\n                openChat(chat_id, message_id);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, forwardInfo } = this.props;\r\n        const { arrowRef } = this.state;\r\n\r\n        const title = getForwardTitle(forwardInfo, t);\r\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\r\n            <>\r\n                {t('HidAccount')}\r\n                <span className='forward-arrow' ref={this.handleArrowRef} />\r\n            </>\r\n        ) : (\r\n            ''\r\n        );\r\n\r\n        return (\r\n            <div className={classNames('message-author', 'forward')}>\r\n                <div>{t('ForwardedMessage')}</div>\r\n                <div>\r\n                    {t('From') + ' '}\r\n                    <Tooltip\r\n                        title={tooltip}\r\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\r\n                        PopperProps={{\r\n                            popperOptions: {\r\n                                modifiers: {\r\n                                    arrow: {\r\n                                        enabled: Boolean(arrowRef),\r\n                                        element: arrowRef\r\n                                    }\r\n                                }\r\n                            }\r\n                        }}\r\n                        placement='top'>\r\n                        <a onClick={this.openForward}>{title}</a>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForward.propTypes = {\r\n    forwardInfo: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(Forward);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Status from './Status';\r\nimport { getDate, getDateHint } from '../../Utils/Message';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Meta.css';\r\n\r\nclass Meta extends React.Component {\r\n    render() {\r\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { is_outgoing } = message;\r\n\r\n        const dateStr = getDate(date);\r\n        const dateHintStr = getDateHint(date);\r\n\r\n        return (\r\n            <div className={classNames('meta', className)} style={style}>\r\n                <span>&ensp;</span>\r\n                {views > 0 && (\r\n                    <>\r\n                        <VisibilityIcon className='meta-views-icon' />\r\n                        <span className='meta-views'>\r\n                            &nbsp;\r\n                            {views}\r\n                            &nbsp; &nbsp;\r\n                        </span>\r\n                    </>\r\n                )}\r\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\r\n                <a onClick={onDateClick}>\r\n                    <span title={dateHintStr}>{dateStr}</span>\r\n                </a>\r\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMeta.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    views: PropTypes.number,\r\n    date: PropTypes.number.isRequired,\r\n    editDate: PropTypes.number,\r\n    onDateClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Meta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport {\r\n    canMessageBeClosed,\r\n    canMessageBeDeleted,\r\n    canMessageBeEdited,\r\n    canMessageBeForwarded,\r\n    canMessageBeUnvoted,\r\n    isMessagePinned\r\n} from '../../Utils/Message';\r\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\r\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\r\nimport { copy } from '../../Utils/Text';\r\nimport {\r\n    clearSelection,\r\n    deleteMessages,\r\n    editMessage,\r\n    forwardMessages,\r\n    replyMessage,\r\n    selectMessage\r\n} from '../../Actions/Client';\r\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MessageMenu.css';\r\n\r\nclass MessageMenu extends React.PureComponent {\r\n    state = {\r\n        confirmStopPoll: false\r\n    };\r\n\r\n    handleConfirmStopPoll = event => {\r\n        const { dialog } = this.state;\r\n        if (dialog) return;\r\n\r\n        this.setState({\r\n            confirmStopPoll: true,\r\n            contextMenu: false\r\n        });\r\n    };\r\n\r\n    handleCloseConfirm = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ confirmStopPoll: false });\r\n    };\r\n\r\n    handleStopPoll = event => {\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n        const { confirmStopPoll } = this.state;\r\n\r\n        if (confirmStopPoll) {\r\n            this.setState({ confirmStopPoll: false });\r\n        }\r\n\r\n        stopPoll(chatId, messageId);\r\n    };\r\n\r\n    handleUnvote = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        cancelPollAnswer(chatId, messageId);\r\n    };\r\n\r\n    handleCopyLink = event => {\r\n        const { onClose } = this.props;\r\n        const { copyLink } = this.state;\r\n\r\n        onClose(event);\r\n\r\n        if (!copyLink) return;\r\n        copy(copyLink);\r\n    };\r\n\r\n    handleReply = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n        replyMessage(chatId, messageId);\r\n    };\r\n\r\n    handlePin = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n\r\n        if (isMessagePinned(chatId, messageId)) {\r\n            unpinMessage(chatId);\r\n        } else {\r\n            pinMessage(chatId, messageId);\r\n        }\r\n    };\r\n\r\n    handleForward = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        forwardMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleEdit = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n        editMessage(chatId, messageId);\r\n    };\r\n\r\n    handleSelect = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        selectMessage(chatId, messageId, true);\r\n    };\r\n\r\n    handleDelete = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        deleteMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleDownload = async event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        const { audio } = content;\r\n        if (!audio) return;\r\n\r\n        const { audio: file } = audio;\r\n        if (!file) return;\r\n\r\n        const { id: file_id } = file;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'downloadFile',\r\n            file_id,\r\n            priority: 1,\r\n            offset: 10 * 1024,\r\n            limit: 1024,\r\n            synchronous: true\r\n        });\r\n\r\n        const blob = await TdLibController.send({\r\n            '@type': 'readFilePart',\r\n            file_id,\r\n            offset: 10 * 1024,\r\n            count: 1024\r\n        });\r\n\r\n        console.log('[file] result', result, blob);\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId, anchorPosition, canCopyLink, open, onClose } = this.props;\r\n        const { confirmStopPoll } = this.state;\r\n\r\n        const isPinned = isMessagePinned(chatId, messageId);\r\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\r\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\r\n        const canBeReplied = canSendMessages(chatId);\r\n        const canBePinned = canPinMessages(chatId);\r\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\r\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\r\n        const canBeEdited = canMessageBeEdited(chatId, messageId);\r\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\r\n\r\n        return (\r\n            <>\r\n                <Popover\r\n                    open={open}\r\n                    onClose={onClose}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={anchorPosition}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        {/*<MenuItem onClick={this.handleDownload}>{t('Download')}</MenuItem>*/}\r\n                        {canCopyLink && <MenuItem onClick={this.handleCopyLink}>{t('CopyLink')}</MenuItem>}\r\n                        {canBeReplied && <MenuItem onClick={this.handleReply}>{t('Reply')}</MenuItem>}\r\n                        {canBePinned && (\r\n                            <MenuItem onClick={this.handlePin}>{isPinned ? t('Unpin') : t('Pin')}</MenuItem>\r\n                        )}\r\n                        {canBeSelected && <MenuItem onClick={this.handleSelect}>{t('Select')}</MenuItem>}\r\n                        {canBeForwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\r\n                        {canBeEdited && <MenuItem onClick={this.handleEdit}>{t('Edit')}</MenuItem>}\r\n                        {canBeDeleted && <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>}\r\n                        {canBeUnvoted && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\r\n                        {canBeClosed && <MenuItem onClick={this.handleConfirmStopPoll}>{t('StopPoll')}</MenuItem>}\r\n                    </MenuList>\r\n                </Popover>\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={confirmStopPoll}\r\n                    onClose={this.handleCloseConfirm}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleStopPoll} color='primary'>\r\n                            {t('Stop')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMessageMenu.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    anchorPosition: PropTypes.object,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    canCopyLink: PropTypes.bool\r\n};\r\n\r\nexport default withTranslation()(MessageMenu);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport './UnreadSeparator.css';\r\n\r\nfunction UnreadSeparator(props) {\r\n    const { t } = props;\r\n\r\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\r\n}\r\n\r\nexport default withTranslation()(UnreadSeparator);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { loadInstantViewContent } from '../Utils/File';\r\nimport { setInstantViewContent } from './Client';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nlet timestamp = null;\r\n\r\nexport async function openInstantView(url) {\r\n    try {\r\n        const now = (timestamp = new Date());\r\n        const result = await TdLibController.send({\r\n            '@type': 'getWebPageInstantView',\r\n            url,\r\n            force_full: true\r\n        });\r\n        if (timestamp !== now) return;\r\n\r\n        console.log('[IV] open', result);\r\n        loadInstantViewContent(result);\r\n        setInstantViewContent({ instantView: result });\r\n    } catch {\r\n        const newWindow = window.open();\r\n        newWindow.opener = null;\r\n        newWindow.location = url;\r\n    }\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport Animation from './Animation';\r\nimport Audio from './Audio';\r\nimport Document from './Document';\r\nimport Photo from './Photo';\r\nimport Sticker, { StickerSourceEnum } from './Sticker';\r\nimport Video from './Video';\r\nimport VideoNote from './VideoNote';\r\nimport VoiceNote from './VoiceNote';\r\nimport { getSize } from '../../../Utils/Common';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { openInstantView } from '../../../Actions/InstantView';\r\nimport {\r\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\r\n    PHOTO_DISPLAY_SIZE,\r\n    PHOTO_DISPLAY_SMALL_SIZE,\r\n    PHOTO_SIZE\r\n} from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './WebPage.css';\r\n\r\nclass WebPage extends React.Component {\r\n    getMedia = () => {\r\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const {\r\n            site_name,\r\n            title,\r\n            description,\r\n            url,\r\n            photo,\r\n            animation,\r\n            video,\r\n            audio,\r\n            document,\r\n            voice_note,\r\n            video_note,\r\n            sticker,\r\n            type\r\n        } = web_page;\r\n\r\n        if (sticker) {\r\n            return [\r\n                null,\r\n                <Sticker\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    sticker={sticker}\r\n                    openMedia={openMedia}\r\n                    source={StickerSourceEnum.MESSAGE}\r\n                />\r\n            ];\r\n        }\r\n\r\n        if (voice_note) {\r\n            return [\r\n                null,\r\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\r\n            ];\r\n        }\r\n\r\n        if (video_note) {\r\n            return [\r\n                null,\r\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\r\n            ];\r\n        }\r\n\r\n        if (audio) {\r\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\r\n        }\r\n\r\n        if (document) {\r\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\r\n        }\r\n\r\n        if (animation) {\r\n            const animationSrc = getSrc(animation.animation);\r\n            if (animationSrc || animation.thumbnail) {\r\n                return [\r\n                    null,\r\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\r\n                ];\r\n            }\r\n        }\r\n\r\n        if (video) {\r\n            if (video.thumbnail) {\r\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\r\n            }\r\n        }\r\n\r\n        if (photo) {\r\n            const photoSize = getSize(photo.sizes, size);\r\n            const smallPhoto =\r\n                (type === 'article' || type === 'photo') &&\r\n                (site_name || title || description) &&\r\n                photoSize &&\r\n                photoSize.width === photoSize.height;\r\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\r\n\r\n            const style =\r\n                smallPhoto || extraSmallPhoto\r\n                    ? {\r\n                          float: 'right',\r\n                          marginLeft: 6\r\n                      }\r\n                    : {};\r\n\r\n            return [\r\n                smallPhoto ? (\r\n                    <Photo\r\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\r\n                        style={style}\r\n                        chatId={chatId}\r\n                        messageId={messageId}\r\n                        photo={photo}\r\n                        openMedia={openMedia}\r\n                    />\r\n                ) : null,\r\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\r\n            ];\r\n        }\r\n\r\n        return [null, null];\r\n    };\r\n\r\n    handleInstantViewClick = async event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const { url } = web_page;\r\n\r\n        openInstantView(url);\r\n    };\r\n\r\n    getWebPage() {\r\n        const { chatId, messageId, t } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const { description, instant_view_version, site_name, title } = web_page;\r\n\r\n        const webPageContent = (\r\n            <>\r\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\r\n                {title && <div className='web-page-title'>{title}</div>}\r\n                {description && <div className='web-page-description'>{description}</div>}\r\n            </>\r\n        );\r\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\r\n        const webPageInstantView = instant_view_version > 0 && (\r\n            <Button\r\n                variant='outlined'\r\n                color='primary'\r\n                classes={{\r\n                    outlinedPrimary: 'message-control',\r\n                    disabled: 'message-control-disabled'\r\n                }}\r\n                fullWidth\r\n                onClick={this.handleInstantViewClick}\r\n                className='web-page-button'>\r\n                <SvgIcon>\r\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\r\n                </SvgIcon>\r\n                {t('InstantView')}\r\n            </Button>\r\n        );\r\n\r\n        return (\r\n            <>\r\n                {webPageMediaTop}\r\n                {webPageContent}\r\n                {webPageMediaBottom}\r\n                {webPageInstantView}\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { meta } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='web-page'>\r\n                    <div className='border' />\r\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\r\n                </div>\r\n                {meta}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nWebPage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    size: PropTypes.number,\r\n    displaySize: PropTypes.number,\r\n    displaySmallSize: PropTypes.number,\r\n    displayExtraSmallSize: PropTypes.number,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nWebPage.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\r\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\r\n};\r\n\r\nexport default withTranslation()(WebPage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport DayMeta from './DayMeta';\r\nimport Reply from './Reply';\r\nimport Forward from './Forward';\r\nimport Meta from './Meta';\r\nimport MessageAuthor from './MessageAuthor';\r\nimport MessageMenu from './MessageMenu';\r\nimport UserTile from '../Tile/UserTile';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport UnreadSeparator from './UnreadSeparator';\r\nimport WebPage from './Media/WebPage';\r\nimport {\r\n    getEmojiMatches,\r\n    getText,\r\n    getWebPage,\r\n    openMedia,\r\n    showMessageForward,\r\n    isMetaBubble,\r\n    canMessageBeForwarded,\r\n    getMessageStyle\r\n} from '../../Utils/Message';\r\nimport { getMedia } from '../../Utils/Media';\r\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\r\nimport { openUser, openChat, selectMessage, openReply, replyMessage, forwardMessages } from '../../Actions/Client';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Message.css';\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = this.props;\r\n        this.state = {\r\n            message: MessageStore.get(chatId, messageId),\r\n            emojiMatches: getEmojiMatches(chatId, messageId),\r\n            selected: false,\r\n            highlighted: false,\r\n            shook: false,\r\n\r\n            contextMenu: false,\r\n            canCopyLink: false,\r\n            left: 0,\r\n            top: 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\r\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('Message.shouldComponentUpdate true chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            // console.log('Message.shouldComponentUpdate true messageId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.sendingState !== sendingState) {\r\n            // console.log('Message.shouldComponentUpdate true sendingState');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\r\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showTail !== showTail) {\r\n            // console.log('Message.shouldComponentUpdate true showTail');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showTitle !== showTitle) {\r\n            // console.log('Message.shouldComponentUpdate true showTitle');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            // console.log('Message.shouldComponentUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            // console.log('Message.shouldComponentUpdate true selected');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            // console.log('Message.shouldComponentUpdate true highlighted');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.shook !== shook) {\r\n            // console.log('Message.shouldComponentUpdate true shook');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\r\n            return true;\r\n        }\r\n\r\n        // console.log('Message.shouldComponentUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\r\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\r\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\r\n    }\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onClientUpdateMessageShake = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { shook } = this.state;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (shook) {\r\n                this.setState({ shook: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ shook: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ shook: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ selected, highlighted: false });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageEdited = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === chat_id && messageId === message_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateMessageViews = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === chat_id && messageId === message_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId } = this.props;\r\n        const { emojiMatches } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id) return;\r\n\r\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\r\n        if (newEmojiMatches !== emojiMatches) {\r\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\r\n        } else {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleSelectUser = userId => {\r\n        openUser(userId, true);\r\n    };\r\n\r\n    handleSelectChat = chatId => {\r\n        openChat(chatId, null, true);\r\n    };\r\n\r\n    handleSelection = () => {\r\n        if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (selection) return;\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n    };\r\n\r\n    handleDateClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const canBeReplied = canSendMessages(chatId);\r\n        if (canBeReplied) {\r\n            replyMessage(chatId, messageId);\r\n\r\n            return;\r\n        }\r\n\r\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\r\n        if (canBeForwarded) {\r\n            forwardMessages(chatId, [messageId]);\r\n        }\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        openMedia(chatId, messageId);\r\n    };\r\n\r\n    handleAnimationEnd = () => {\r\n        this.setState({ highlighted: false });\r\n    };\r\n\r\n    handleMouseDown = () => {\r\n        this.mouseDown = true;\r\n    };\r\n\r\n    handleMouseOver = () => {\r\n        this.mouseDown = false;\r\n    };\r\n\r\n    handleMouseOut = () => {\r\n        this.mouseOut = false;\r\n    };\r\n\r\n    handleReplyClick = () => {\r\n        const { chatId, messageId } = this.props;\r\n        openReply(chatId, messageId);\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            if (MessageStore.selectedItems.size > 1) {\r\n                return;\r\n            }\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const canCopyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                canCopyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\r\n        const { emojiMatches, selected, highlighted, shook, canCopyLink, contextMenu, left, top } = this.state;\r\n\r\n        // console.log('Message.render', messageId);\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageId={messageId}\r\n                date={date}\r\n                editDate={edit_date}\r\n                views={views}\r\n            />\r\n        );\r\n        const text = getText(message, inlineMeta, t);\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        const webPage = getWebPage(message);\r\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            tile = sender_user_id ? (\r\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\r\n            ) : (\r\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\r\n            );\r\n        }\r\n\r\n        const style = getMessageStyle(chatId, messageId);\r\n        const withBubble =\r\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', {\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        'message-highlighted': highlighted && !selected,\r\n                        'message-top': showTitle && !showTail,\r\n                        'message-bottom': !showTitle && showTail,\r\n                        'message-middle': !showTitle && !showTail,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'message-wrapper-shook': shook })}>\r\n                            {tile}\r\n                            <div\r\n                                className={classNames('message-content', {\r\n                                    'message-bubble': withBubble,\r\n                                    'message-bubble-out': withBubble && isOutgoing\r\n                                })}\r\n                                style={style}>\r\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                    <div className='message-title'>\r\n                                        {showTitle && !showForward && (\r\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\r\n                                        )}\r\n                                        {showForward && <Forward forwardInfo={forward_info} />}\r\n                                    </div>\r\n                                )}\r\n                                {showReply && (\r\n                                    <Reply\r\n                                        chatId={chatId}\r\n                                        messageId={reply_to_message_id}\r\n                                        onClick={this.handleReplyClick}\r\n                                    />\r\n                                )}\r\n                                {media}\r\n                                <div\r\n                                    className={classNames('message-text', {\r\n                                        'message-text-1emoji': emojiMatches === 1,\r\n                                        'message-text-2emoji': emojiMatches === 2,\r\n                                        'message-text-3emoji': emojiMatches === 3\r\n                                    })}>\r\n                                    {text}\r\n                                </div>\r\n                                {webPage && (\r\n                                    <WebPage\r\n                                        chatId={chatId}\r\n                                        messageId={messageId}\r\n                                        openMedia={this.openMedia}\r\n                                        meta={inlineMeta}\r\n                                    />\r\n                                )}\r\n                                {withBubble && (\r\n                                    <Meta\r\n                                        className={classNames('meta-text', {\r\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\r\n                                        })}\r\n                                        chatId={chatId}\r\n                                        messageId={messageId}\r\n                                        date={date}\r\n                                        editDate={edit_date}\r\n                                        views={views}\r\n                                        onDateClick={this.handleDateClick}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    canCopyLink={canCopyLink}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Message);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './Placeholder.css';\r\n\r\nclass Placeholder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\r\n        this.state = {\r\n            chatId,\r\n            dialogsReady,\r\n            cacheLoaded\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (nextState.chatId !== this.state.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n    }\r\n\r\n    onClientUpdateCacheLoaded = update => {\r\n        const { cacheLoaded } = AppStore;\r\n\r\n        this.setState({ cacheLoaded });\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { nextChatId: chatId } = update;\r\n\r\n        this.setState({ chatId });\r\n    };\r\n\r\n    onClientUpdateDialogsReady = update => {\r\n        const { dialogsReady } = AppStore;\r\n\r\n        this.setState({ dialogsReady });\r\n    };\r\n\r\n    render() {\r\n        const { t, force } = this.props;\r\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\r\n        if (chatId) return null;\r\n        // if (!dialogsReady && !cacheLoaded) return null;\r\n\r\n        return (\r\n            <div className='placeholder'>\r\n                <div className='placeholder-wrapper'>\r\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\r\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Placeholder);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport './ScrollDownButton.css';\r\n\r\nclass ScrollDownButton extends React.Component {\r\n    render() {\r\n        const { onClick } = this.props;\r\n\r\n        return (\r\n            <div className='scroll-down-button'>\r\n                <IconButton disableRipple={true} onMouseDown={onClick}>\r\n                    <ArrowDownwardIcon />\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nScrollDownButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ScrollDownButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport DayMeta from './DayMeta';\r\nimport UnreadSeparator from './UnreadSeparator';\r\nimport Photo from './Media/Photo';\r\nimport { openMedia } from '../../Utils/Message';\r\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './ServiceMessage.css';\r\n\r\nconst chatPhotoStyle = {\r\n    width: 64,\r\n    height: 64,\r\n    borderRadius: '50%',\r\n    margin: '0 auto 5px'\r\n};\r\n\r\nclass ServiceMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = this.props;\r\n        this.state = {\r\n            message: MessageStore.get(chatId, messageId),\r\n            highlighted: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\r\n        const { highlighted } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.sendingState !== sendingState) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    handleAnimationEnd = () => {\r\n        this.setState({ highlighted: false });\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        openMedia(chatId, messageId);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\r\n        const { highlighted } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content, date } = message;\r\n        if (!content) return null;\r\n\r\n        const { photo } = content;\r\n\r\n        const text = getServiceMessageContent(message, true);\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\r\n                    onAnimationEnd={this.handleAnimationEnd}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='service-message-wrapper'>\r\n                        <div className='service-message-content'>\r\n                            <div>{text}</div>\r\n                        </div>\r\n                    </div>\r\n                    {photo && (\r\n                        <Photo\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            photo={photo}\r\n                            style={chatPhotoStyle}\r\n                            openMedia={this.openMedia}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ServiceMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport StickerPreview from './StickerPreview';\r\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\r\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickersHint.css';\r\n\r\nclass StickersHint extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.hintsRef = React.createRef();\r\n\r\n        this.state = {\r\n            hint: null,\r\n            items: [],\r\n            previewStickerId: 0,\r\n            showPreview: false,\r\n            cancelSend: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\r\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\r\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\r\n    }\r\n\r\n    onClientUpdateRemoteStickersHint = update => {\r\n        const { hint } = update;\r\n        const { hint: currentHint } = this.state;\r\n\r\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\r\n\r\n        this.setState({\r\n            hint: StickerStore.hint,\r\n            items: this.getItems(StickerStore.hint)\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        const { stickers } = hint;\r\n        loadStickersContent(store, stickers.stickers);\r\n    };\r\n\r\n    onClientUpdateLocalStickersHint = update => {\r\n        const { hint } = update;\r\n\r\n        this.setState({\r\n            hint,\r\n            items: this.getItems(hint),\r\n            previewStickerId: 0,\r\n            showPreview: false,\r\n            cancelSend: false\r\n        });\r\n\r\n        if (!hint) return;\r\n\r\n        const store = FileStore.getStore();\r\n        const { stickers } = hint;\r\n        loadStickersContent(store, stickers.stickers);\r\n    };\r\n\r\n    handleSend = sticker => {\r\n        const { cancelSend } = this.state;\r\n        if (cancelSend) return;\r\n        if (!sticker) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSend',\r\n            sticker\r\n        });\r\n    };\r\n\r\n    loadPreviewContent = stickerId => {\r\n        const { items } = this.state;\r\n\r\n        const sticker = items.find(x => x.sticker.id === stickerId);\r\n        if (!sticker) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadStickerContent(store, sticker, null);\r\n\r\n        let stickersPerRow = 8;\r\n        if (this.hintsRef && this.hintsRef.current) {\r\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\r\n        }\r\n\r\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\r\n        preloadStickers.forEach(x => {\r\n            loadStickerContent(store, x, null);\r\n        });\r\n    };\r\n\r\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\r\n        if (!stickers) return [];\r\n\r\n        const indexes = [];\r\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        if (index === -1) return [];\r\n\r\n        const row = Math.floor(index / stickersPerRow);\r\n        const column = index % stickersPerRow;\r\n\r\n        const prevRow = row - 1;\r\n        const nextRow = row + 1;\r\n        const prevColumn = column - 1;\r\n        const nextColumn = column + 1;\r\n\r\n        if (prevRow >= 0) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(stickersPerRow * prevRow + prevColumn);\r\n            }\r\n            indexes.push(stickersPerRow * prevRow + column);\r\n            if (nextColumn < stickersPerRow) {\r\n                indexes.push(stickersPerRow * prevRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        if (prevColumn >= 0) {\r\n            indexes.push(stickersPerRow * row + prevColumn);\r\n        }\r\n        if (nextColumn < stickersPerRow) {\r\n            indexes.push(stickersPerRow * row + nextColumn);\r\n        }\r\n\r\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(stickersPerRow * nextRow + prevColumn);\r\n            }\r\n            indexes.push(stickersPerRow * nextRow + column);\r\n            if (nextColumn < stickersPerRow) {\r\n                indexes.push(stickersPerRow * nextRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        return indexes.map(i => stickers[i]);\r\n    };\r\n\r\n    handleMouseEnter = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        if (!this.mouseDown) return;\r\n\r\n        if (this.mouseDownStickerId !== stickerId) {\r\n            this.mouseDownStickerId = null;\r\n        }\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        this.mouseDownStickerId = stickerId;\r\n        const now = Date.now();\r\n\r\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\r\n        setTimeout(() => {\r\n            const { timestamp } = this.state;\r\n            if (timestamp === now) {\r\n                this.setState({ showPreview: true, cancelSend: true });\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateStickerPreview',\r\n                    sticker\r\n                });\r\n            }\r\n        }, 500);\r\n\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        this.mouseDown = true;\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n\r\n    handleMouseUp = () => {\r\n        const sticker = null;\r\n        this.setState({ sticker, timestamp: 0, showPreview: false });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.mouseDown = false;\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    getItems = hint => {\r\n        const items = [];\r\n        if (!hint) return items;\r\n\r\n        const dict = new Map();\r\n        const { stickers, foundStickers } = hint;\r\n        if (stickers) {\r\n            stickers.stickers.forEach(x => {\r\n                items.push(x);\r\n                dict.set(x.sticker.id, x.sticker.id);\r\n            });\r\n        }\r\n        if (foundStickers) {\r\n            foundStickers.stickers.forEach(x => {\r\n                if (!dict.has(x.sticker.id)) {\r\n                    items.push(x);\r\n                    dict.set(x.sticker.id, x.sticker.id);\r\n                }\r\n            });\r\n        }\r\n\r\n        return items;\r\n    };\r\n\r\n    getSticker(stickerId) {\r\n        const { items } = this.state;\r\n\r\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\r\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\r\n    }\r\n\r\n    render() {\r\n        const { hint, items, sticker, showPreview } = this.state;\r\n        if (!hint) return null;\r\n        if (!items) return null;\r\n        if (!items.length) return null;\r\n\r\n        const controls = items.map(x => (\r\n            <div\r\n                className='sticker-set-dialog-item'\r\n                key={x.sticker.id}\r\n                data-sticker-id={x.sticker.id}\r\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\r\n                onClick={() => this.handleSend(x)}\r\n                onMouseEnter={this.handleMouseEnter}\r\n                onMouseDown={this.handleMouseDown}>\r\n                <Sticker\r\n                    key={x.sticker.id}\r\n                    className='sticker-set-dialog-item-sticker'\r\n                    sticker={x}\r\n                    autoplay={false}\r\n                    blur={false}\r\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\r\n                    preview\r\n                    source={StickerSourceEnum.HINTS}\r\n                />\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <div ref={this.hintsRef} className='stickers-hint'>\r\n                {controls}\r\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StickersHint;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport classNames from 'classnames';\r\nimport ActionBar from './ActionBar';\r\nimport DayMeta from '../Message/DayMeta';\r\nimport FilesDropTarget from './FilesDropTarget';\r\nimport Message from '../Message/Message';\r\nimport Placeholder from './Placeholder';\r\nimport ScrollDownButton from './ScrollDownButton';\r\nimport ServiceMessage from '../Message/ServiceMessage';\r\nimport StickersHint from './StickersHint';\r\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\r\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\r\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\r\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\r\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\r\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\r\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MessagesList.css';\r\n\r\nconst ScrollBehaviorEnum = Object.freeze({\r\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\r\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\r\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\r\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\r\n    NONE: 'NONE'\r\n});\r\n\r\nclass MessagesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\r\n\r\n        // console.log('MessagesList.newSessionId ctor');\r\n        this.sessionId = Date.now();\r\n        this.state = {\r\n            prevChatId: 0,\r\n            prevMessageId: null,\r\n            playerOpened: false,\r\n            history: [],\r\n            clearHistory: false,\r\n            selectionActive: false,\r\n            separatorMessageId: 0,\r\n            scrollDownVisible: false,\r\n            replyHistory: []\r\n        };\r\n\r\n        this.listRef = React.createRef();\r\n        this.itemsRef = React.createRef();\r\n        this.scrollDownButtonRef = React.createRef();\r\n\r\n        this.defferedActions = [];\r\n        this.itemsMap = new Map();\r\n\r\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\r\n            return {\r\n                prevChatId: props.chatId,\r\n                prevMessageId: props.messageId,\r\n                clearHistory: false,\r\n                selectionActive: false,\r\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\r\n                scrollDownVisible:\r\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\r\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const list = this.listRef.current;\r\n        const { scrollTop, scrollHeight, offsetHeight } = list;\r\n\r\n        const snapshot = {\r\n            scrollTop,\r\n            scrollHeight,\r\n            offsetHeight\r\n        };\r\n\r\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\r\n        this.snapshot = snapshot;\r\n        return snapshot;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, messageId } = this.props;\r\n        const { scrollDownVisible } = this.state;\r\n\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] componentDidUpdate\r\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\r\n        //     scrollDownVisible=${scrollDownVisible}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}`\r\n        // );\r\n\r\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\r\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\r\n        } else {\r\n            if (!this.scrollBehaviorNone) {\r\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, theme } = this.props;\r\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\r\n\r\n        if (nextProps.theme !== theme) {\r\n            // console.log('[ml] shouldComponentUpdate theme');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[ml] shouldComponentUpdate chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            // console.log('[ml] shouldComponentUpdate messageId');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\r\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playerOpened !== playerOpened) {\r\n            // console.log('[ml] shouldComponentUpdate playerOpened');\r\n            return true;\r\n        }\r\n\r\n        if (!historyEquals(nextState.history, history)) {\r\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\r\n            return true;\r\n        }\r\n\r\n        if (nextState.dragging !== dragging) {\r\n            // console.log('[ml] shouldComponentUpdate dragging');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clearHistory !== clearHistory) {\r\n            // console.log('[ml] shouldComponentUpdate clearHistory');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selectionActive !== selectionActive) {\r\n            // console.log('[ml] shouldComponentUpdate selectionActive');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[ml] shouldComponentUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\r\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\r\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\r\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\r\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\r\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\r\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        // if (event.keyCode === 27) {\r\n        //     if (MessageStore.selectedItems.size > 0) {\r\n        //         console.log('[k] messagesList onKeyDown');\r\n        //         clearSelection();\r\n        //         event.stopPropagation();\r\n        //         event.preventDefault();\r\n        //     }\r\n        // }\r\n    };\r\n\r\n    onClientUpdateTryEditMessage = async update => {\r\n        if (this.completed) {\r\n            const { history } = this.state;\r\n\r\n            for (let i = history.length - 1; i >= 0; i--) {\r\n                const message = history[i];\r\n                if (canMessageBeEdited(message.chat_id, message.id)) {\r\n                    editMessage(message.chat_id, message.id);\r\n\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: this.props.chatId,\r\n            query: '',\r\n            sender_user_id: UserStore.getMyId(),\r\n            from_message_id: 0,\r\n            offset: 0,\r\n            limit: 100,\r\n            filter: { '@type': 'searchMessagesFilterEmpty' }\r\n        });\r\n\r\n        for (let i = 0; i < result.messages.length; i++) {\r\n            const message = result.messages[i];\r\n            if (canMessageBeEdited(message.chat_id, message.id)) {\r\n                editMessage(message.chat_id, message.id);\r\n\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateDialogsReady = async update => {\r\n        await FileStore.initDB(async () => {\r\n            const { chatId, messageId } = this.props;\r\n            if (chatId) {\r\n                const chat = ChatStore.get(chatId);\r\n                if (chat) {\r\n                    const { type } = chat;\r\n                    switch (type['@type']) {\r\n                        case 'chatTypePrivate':\r\n                        case 'chatTypeSecret': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createPrivateChat',\r\n                                user_id: type.user_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                        case 'chatTypeBasicGroup': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createBasicGroupChat',\r\n                                basic_group_id: type.basic_group_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                        case 'chatTypeSupergroup': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createSupergroupChat',\r\n                                supergroup_id: type.supergroup_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                    }\r\n                    this.handleSelectChat(chatId, 0, messageId, 0);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        const { focused } = update;\r\n        if (focused) {\r\n            this.defferedActions.forEach(x => x());\r\n            this.defferedActions = [];\r\n        }\r\n    };\r\n\r\n    onClientUpdateOpenReply = update => {\r\n        const { chatId, messageId } = update;\r\n        const { replyHistory } = this.state;\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\r\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\r\n            return;\r\n        }\r\n\r\n        replyHistory.push({ chatId, messageId });\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const list = this.listRef.current;\r\n\r\n        const prevOffsetHeight = list.offsetHeight;\r\n        const prevScrollTop = list.scrollTop;\r\n        this.setState({ playerOpened: true }, () => {\r\n            if (list.scrollTop === prevScrollTop) {\r\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaEnding = udpate => {\r\n        const list = this.listRef.current;\r\n\r\n        this.prevOffsetHeight = list.offsetHeight;\r\n        this.prevScrollTop = list.scrollTop;\r\n    };\r\n\r\n    onClientUpdateMediaEnd = udpate => {\r\n        const list = this.listRef.current;\r\n\r\n        //const prevOffsetHeight = list.offsetHeight;\r\n        //const prevScrollTop = list.scrollTop;\r\n\r\n        this.setState({ playerOpened: false }, () => {\r\n            if (list.scrollTop === this.prevScrollTop) {\r\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateSelection = update => {\r\n        this.setState({\r\n            selectionActive: MessageStore.selectedItems.size > 0\r\n        });\r\n    };\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.setState({ clearHistory: update.inProgress });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        if (history.findIndex(x => x.id === message_id) !== -1) {\r\n            const message = MessageStore.get(chat_id, message_id);\r\n            if (!message) return;\r\n\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, [message]);\r\n        }\r\n    };\r\n\r\n    onUpdateChatLastMessage = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n    };\r\n\r\n    onUpdateMessageSendSucceeded = update => {\r\n        if (!this.completed) return;\r\n\r\n        const { message, old_message_id } = update;\r\n        const { chatId } = this.props;\r\n        if (chatId !== message.chat_id) return;\r\n\r\n        // let handleSendSucceeded = false;\r\n        // const { content } = message;\r\n        // switch (content['@type']) {\r\n        //     case 'messagePoll': {\r\n        //         handleSendSucceeded = true;\r\n        //         break;\r\n        //     }\r\n        // }\r\n        //\r\n        // if (!handleSendSucceeded) return;\r\n\r\n        const scrollBehavior = message.is_outgoing\r\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\r\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\r\n\r\n        this.replaceMessage(old_message_id, message, () => {\r\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n            }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, [message]);\r\n        this.viewMessages([message]);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        if (!this.completed) return;\r\n\r\n        const { message } = update;\r\n        const { chatId } = this.props;\r\n        if (chatId !== message.chat_id) return;\r\n\r\n        const { date } = message;\r\n        if (date === 0) return;\r\n\r\n        const list = this.listRef.current;\r\n\r\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\r\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n        }\r\n\r\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\r\n\r\n        const history = [message];\r\n        this.scrollBehaviorNone = true;\r\n        this.insertPrevious(filterMessages(history), newState, () => {\r\n            this.scrollBehaviorNone = false;\r\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, history);\r\n        this.viewMessages(history);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id, is_permanent, message_ids } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        if (!is_permanent) return;\r\n\r\n        this.deleteHistory(message_ids);\r\n    };\r\n\r\n    updateItemsInView = () => {\r\n        if (!this.messages) return;\r\n\r\n        const messages = new Map();\r\n        const items = itemsInView(this.listRef, this.itemsRef);\r\n        for (let i = 0; i < items.length; i++) {\r\n            const messageWrapper = this.messages[items[i]];\r\n            if (messageWrapper) {\r\n                const message = messageWrapper;\r\n                const { chatId, messageId } = message.props;\r\n                const key = `${chatId}_${messageId}`;\r\n                messages.set(key, key);\r\n            }\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMessagesInView',\r\n            messages: messages\r\n        });\r\n        return;\r\n\r\n        if (!messages.length) return;\r\n\r\n        /*let ids = messages.map(x => x.id);\r\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\r\n\r\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\r\n\r\n                if (this.previousMessages){\r\n                    let cancelMessages = [];\r\n                    for (let i = 0; i < this.previousMessages.length; i++){\r\n                        if (!messagesMap.has(this.previousMessages[i].id)){\r\n                            cancelMessages.push(this.previousMessages[i]);\r\n                        }\r\n                    }\r\n                    if (cancelMessages.length > 0) {\r\n                        this.cancelLoadMessageContents(cancelMessages);\r\n                    }\r\n                }\r\n                this.previousMessages = messages;*/\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n    };\r\n\r\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\r\n        const chat = ChatStore.get(chatId);\r\n        const previousChat = ChatStore.get(previousChatId);\r\n\r\n        //console.log('MessagesList.newSessionId handleSelectChat');\r\n        this.sessionId = Date.now();\r\n        this.loading = false;\r\n        this.completed = false;\r\n        this.loadMigratedHistory = false;\r\n        this.defferedActions = [];\r\n\r\n        if (chat) {\r\n            TdLibController.send({\r\n                '@type': 'openChat',\r\n                chat_id: chat.id\r\n            });\r\n\r\n            const unread = !messageId && chat.unread_count > 0;\r\n            const fromMessageId =\r\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\r\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\r\n            const limit =\r\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\r\n\r\n            this.loading = true;\r\n            const sessionId = this.sessionId;\r\n            const result = await TdLibController.send({\r\n                '@type': 'getChatHistory',\r\n                chat_id: chat.id,\r\n                from_message_id: fromMessageId,\r\n                offset: offset,\r\n                limit: limit\r\n            }).finally(() => {\r\n                this.loading = false;\r\n            });\r\n\r\n            if (sessionId !== this.sessionId) {\r\n                return;\r\n            }\r\n\r\n            if (chat.last_message) {\r\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\r\n            } else {\r\n                this.completed = true;\r\n            }\r\n\r\n            MessageStore.setItems(result.messages);\r\n            result.messages.reverse();\r\n\r\n            let separatorMessageId = this.state.separatorMessageId;\r\n            if (chatId !== previousChatId) {\r\n                separatorMessageId = Number.MAX_VALUE;\r\n                if (chat && chat.unread_count > 1) {\r\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\r\n                        const { id } = result.messages[i];\r\n                        if (\r\n                            !result.messages[i].is_outgoing &&\r\n                            id > chat.last_read_inbox_message_id &&\r\n                            id < separatorMessageId\r\n                        ) {\r\n                            separatorMessageId = id;\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\r\n            }\r\n\r\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n            if (messageId) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\r\n            } else if (unread && separatorMessageId) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\r\n            }\r\n\r\n            this.replace(separatorMessageId, result.messages, () => {\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n                if (messageId) {\r\n                    highlightMessage(chatId, messageId);\r\n                }\r\n            });\r\n\r\n            // load files\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, result.messages);\r\n            this.viewMessages(result.messages);\r\n\r\n            loadChatsContent(store, [chatId]);\r\n            loadDraftContent(store, chatId);\r\n\r\n            this.loadIncompleteHistory(result);\r\n\r\n            // load full info\r\n            getChatFullInfo(chat.id);\r\n        } else {\r\n            this.loading = true;\r\n            this.replace(0, [], () => {\r\n                this.loading = false;\r\n            });\r\n        }\r\n\r\n        if (previousChat && previousChatId !== chatId) {\r\n            TdLibController.send({\r\n                '@type': 'closeChat',\r\n                chat_id: previousChatId\r\n            });\r\n        }\r\n    }\r\n\r\n    viewMessages(messages) {\r\n        if (!messages) return;\r\n        if (messages.length === 0) return;\r\n        if (!messages[0].chat_id) return;\r\n\r\n        const viewAction = () => {\r\n            TdLibController.send({\r\n                '@type': 'viewMessages',\r\n                chat_id: messages[0].chat_id,\r\n                message_ids: messages.map(x => x.id)\r\n            });\r\n        };\r\n\r\n        if (window.hasFocus) {\r\n            viewAction();\r\n        } else {\r\n            this.defferedActions.push(viewAction);\r\n        }\r\n    }\r\n\r\n    cancelLoadMessageContents(messages) {\r\n        //return;\r\n        for (let i = messages.length - 1; i >= 0; i--) {\r\n            let message = messages[i];\r\n            if (message && message.content) {\r\n                switch (message.content['@type']) {\r\n                    case 'messagePhoto': {\r\n                        let [id, pid] = this.getMessagePhoto(message);\r\n                        if (pid) {\r\n                            let obj = getPhotoSize(message.content.photo.sizes);\r\n                            if (!obj.blob) {\r\n                                FileStore.cancelGetRemoteFile(id, message);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'messageSticker': {\r\n                        let [id, pid] = this.getMessageSticker(message);\r\n                        if (pid) {\r\n                            let obj = message.content.sticker.sticker;\r\n                            if (!obj.blob) {\r\n                                FileStore.cancelGetRemoteFile(id, message);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadIncompleteHistory = async result => {\r\n        const MAX_ITERATIONS = 5;\r\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\r\n\r\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\r\n            result = await this.onLoadNext();\r\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\r\n        }\r\n    };\r\n\r\n    onLoadNext = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (this.loading) return;\r\n\r\n        if (this.loadMigratedHistory) {\r\n            this.onLoadMigratedHistory();\r\n            return;\r\n        }\r\n\r\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\r\n\r\n        this.loading = true;\r\n        const sessionId = this.sessionId;\r\n        let result = await TdLibController.send({\r\n            '@type': 'getChatHistory',\r\n            chat_id: chatId,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: MESSAGE_SLICE_LIMIT\r\n        }).finally(() => {\r\n            this.loading = false;\r\n        });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.insertNext(filterMessages(result.messages), () => {\r\n            if (!result.messages.length) {\r\n                this.onLoadMigratedHistory();\r\n            }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    onLoadMigratedHistory = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (this.loading) return;\r\n\r\n        const supergroupId = getSupergroupId(chatId);\r\n        if (!supergroupId) return;\r\n\r\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\r\n        if (!fullInfo) return;\r\n        if (!fullInfo.upgraded_from_basic_group_id) return;\r\n\r\n        this.loadMigratedHistory = true;\r\n\r\n        const basicGroupChat = await TdLibController.send({\r\n            '@type': 'createBasicGroupChat',\r\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\r\n        });\r\n\r\n        if (!basicGroupChat) return;\r\n\r\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\r\n\r\n        this.loading = true;\r\n        const sessionId = this.sessionId;\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChatHistory',\r\n            chat_id: basicGroupChat.id,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: MESSAGE_SLICE_LIMIT\r\n        }).finally(() => {\r\n            this.loading = false;\r\n        });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.insertNext(filterMessages(result.messages));\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n    };\r\n\r\n    onLoadPrevious = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        if (!chat) return;\r\n        if (this.loading) return;\r\n        if (this.completed) return;\r\n\r\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\r\n\r\n        this.loading = true;\r\n        const sessionId = this.sessionId;\r\n        let result = await TdLibController.send({\r\n            '@type': 'getChatHistory',\r\n            chat_id: chatId,\r\n            from_message_id: fromMessageId,\r\n            offset: -MESSAGE_SLICE_LIMIT - 1,\r\n            limit: MESSAGE_SLICE_LIMIT + 1\r\n        }).finally(() => {\r\n            this.loading = false;\r\n        });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        if (chat.last_message) {\r\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\r\n        } else {\r\n            this.completed = true;\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.state.history);\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.scrollBehaviorNone = true;\r\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\r\n            this.scrollBehaviorNone = false;\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    replace(separatorMessageId, history, callback) {\r\n        this.setState({ separatorMessageId, history }, callback);\r\n    }\r\n\r\n    replaceMessage(oldMessageId, message, callback) {\r\n        if (!message) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState(\r\n            {\r\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\r\n            },\r\n            callback\r\n        );\r\n    }\r\n\r\n    insertNext(history, callback) {\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({ history: history.concat(this.state.history) }, callback);\r\n    }\r\n\r\n    insertPrevious(history, newState, callback) {\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\r\n    }\r\n\r\n    deleteHistory(message_ids, callback) {\r\n        const { history } = this.state;\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        const map = new Map(message_ids.map(x => [x, x]));\r\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\r\n    }\r\n\r\n    handleScroll = () => {\r\n        const { scrollDownVisible, replyHistory, history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] handleScroll\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        this.updateItemsInView();\r\n\r\n        if (list.scrollTop <= SCROLL_PRECISION) {\r\n            this.onLoadNext();\r\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            this.onLoadPrevious();\r\n        }\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (this.completed && scrollDownVisible) {\r\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\r\n                    this.setState({\r\n                        scrollDownVisible: false,\r\n                        replyHistory: []\r\n                    });\r\n                } else if (!replyHistory.length) {\r\n                    this.setState({\r\n                        scrollDownVisible: false\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            if (!scrollDownVisible) {\r\n                this.setState({ scrollDownVisible: true });\r\n            }\r\n        }\r\n\r\n        this.prevScrollTop = list.scrollTop;\r\n        this.prevHistory = history;\r\n    };\r\n\r\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\r\n        const { chatId, messageId } = this.props;\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\r\n            scrollTop: 0,\r\n            scrollHeight: 0,\r\n            offsetHeight: 0\r\n        };\r\n\r\n        // console.log(\r\n        //     `[ml] handleScrollBehavior\r\n        //     scrollBehavior=${scrollBehavior}\r\n        //     snapshot.scrollTop=${scrollTop}\r\n        //     snapshot.offsetHeight=${offsetHeight}\r\n        //     snapshot.scrollHeight=${scrollHeight}`\r\n        // );\r\n\r\n        switch (scrollBehavior) {\r\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\r\n                this.scrollToBottom();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\r\n                this.scrollToMessage();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\r\n                this.scrollToUnread();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\r\n                this.keepScrollPosition(snapshot);\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.NONE: {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    keepScrollPosition = snapshot => {\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] keepScrollPosition before\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\r\n\r\n        // console.log(\r\n        //     `[ml] keepScrollPosition after\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n    };\r\n\r\n    scrollToUnread = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToUnread before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            let itemComponent = this.itemsMap.get(i);\r\n            let item = ReactDOM.findDOMNode(itemComponent);\r\n            if (item) {\r\n                if (itemComponent.props.showUnreadSeparator) {\r\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToUnread after\r\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        if (!scrolled) {\r\n            this.scrollToBottom();\r\n        }\r\n    };\r\n\r\n    scrollToMessage = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToMessage before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`,\r\n        //     this.itemsMap\r\n        // );\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            const itemComponent = this.itemsMap.get(i);\r\n            const node = ReactDOM.findDOMNode(itemComponent);\r\n            if (node) {\r\n                if (itemComponent.props.messageId === messageId) {\r\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToMessage after\r\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        // if (!scrolled) {\r\n        //     this.scrollToBottom();\r\n        // }\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToBottom before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\r\n        if (nextScrollTop !== list.scrollTop) {\r\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\r\n\r\n            // console.log(\r\n            //     `MessagesList.scrollToBottom after\r\n            // chatId=${chatId} messageId=${messageId}\r\n            // list.scrollTop=${list.scrollTop}\r\n            // list.offsetHeight=${list.offsetHeight}\r\n            // list.scrollHeight=${list.scrollHeight}`\r\n            // );\r\n        } else {\r\n            // console.log(\r\n            //     `MessagesList.scrollToBottom after (no changes)\r\n            // chatId=${chatId} messageId=${messageId}\r\n            // list.scrollTop=${list.scrollTop}\r\n            // list.offsetHeight=${list.offsetHeight}\r\n            // list.scrollHeight=${list.scrollHeight}`\r\n            // );\r\n        }\r\n    };\r\n\r\n    scrollToStart = async () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        // console.log('MessagesList.newSessionId scrollToStart');\r\n        this.sessionId = Date.now();\r\n        this.loading = false;\r\n        this.completed = false;\r\n\r\n        const fromMessageId = 0;\r\n        const offset = 0;\r\n        const limit = MESSAGE_SLICE_LIMIT;\r\n\r\n        this.loading = true;\r\n        const sessionId = this.sessionId;\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChatHistory',\r\n            chat_id: chat.id,\r\n            from_message_id: fromMessageId,\r\n            offset: offset,\r\n            limit: limit\r\n        }).finally(() => {\r\n            this.loading = false;\r\n        });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        if (chat.last_message) {\r\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\r\n        } else {\r\n            this.completed = true;\r\n        }\r\n        // console.log('MessagesList.scrollToStart scrollDown', false);\r\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n\r\n        this.replace(this.state.separatorMessageId, result.messages, () => {\r\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\r\n        });\r\n\r\n        // load files\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        this.loadIncompleteHistory(result);\r\n    };\r\n\r\n    handleListDragEnter = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId } = this.props;\r\n        if (!canSendMediaMessages(chatId)) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: true,\r\n            files: event.dataTransfer.files\r\n        });\r\n    };\r\n\r\n    handleScrollDownClick = event => {\r\n        const { replyHistory } = this.state;\r\n\r\n        if (replyHistory.length > 0) {\r\n            const lastReply = replyHistory.pop();\r\n            if (lastReply) {\r\n                const { chatId, messageId } = lastReply;\r\n                if (chatId === this.props.chatId) {\r\n                    openChat(chatId, messageId);\r\n                }\r\n            }\r\n        } else {\r\n            this.scrollToStart();\r\n        }\r\n    };\r\n\r\n    showMessageTitle(message, prevMessage, isFirst) {\r\n        if (!message) return false;\r\n\r\n        const { chat_id, date, sender_user_id, content } = message;\r\n\r\n        if (isFirst) {\r\n            return true;\r\n        }\r\n\r\n        if (isChannelChat(chat_id)) {\r\n            return true;\r\n        }\r\n\r\n        return (\r\n            prevMessage &&\r\n            (isServiceMessage(prevMessage) ||\r\n                sender_user_id !== prevMessage.sender_user_id ||\r\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\r\n        );\r\n    }\r\n\r\n    showMessageDate(message, prevMessage, isFirst) {\r\n        if (isFirst) {\r\n            return true;\r\n        }\r\n\r\n        const date = new Date(message.date * 1000);\r\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\r\n\r\n        if (\r\n            date.getFullYear() !== prevDate.getFullYear() ||\r\n            date.getMonth() !== prevDate.getMonth() ||\r\n            date.getDate() !== prevDate.getDate()\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { chatId } = this.props;\r\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\r\n\r\n        // console.log('[ml] render ', history);\r\n\r\n        // const isChannel = isChannelChat(chatId);\r\n\r\n        this.itemsMap.clear();\r\n        this.messages = clearHistory\r\n            ? null\r\n            : history.map((x, i) => {\r\n                  const prevMessage = i > 0 ? history[i - 1] : null;\r\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\r\n\r\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                  let m = null;\r\n                  if (isServiceMessage(x)) {\r\n                      m = (\r\n                          <ServiceMessage\r\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\r\n                              ref={el => this.itemsMap.set(i, el)}\r\n                              chatId={x.chat_id}\r\n                              messageId={x.id}\r\n                              showUnreadSeparator={separatorMessageId === x.id}\r\n                          />\r\n                      );\r\n                  } else {\r\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\r\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\r\n\r\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\r\n\r\n                      m = (\r\n                          <Message\r\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\r\n                              ref={el => this.itemsMap.set(i, el)}\r\n                              chatId={x.chat_id}\r\n                              messageId={x.id}\r\n                              sendingState={x.sending_state}\r\n                              showTitle={showTitle}\r\n                              showTail={showTail}\r\n                              showUnreadSeparator={separatorMessageId === x.id}\r\n                              showDate={showDate}\r\n                          />\r\n                      );\r\n                  }\r\n\r\n                  return m;\r\n              });\r\n\r\n        return (\r\n            <div\r\n                className={classNames('messages-list', {\r\n                    'messages-list-selection-active': selectionActive\r\n                })}\r\n                onDragEnter={this.handleListDragEnter}>\r\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\r\n                    <div className='messages-list-top' />\r\n                    <div ref={this.itemsRef} className='messages-list-items'>\r\n                        {this.messages}\r\n                    </div>\r\n                </div>\r\n                <ActionBar chatId={chatId} />\r\n                <Placeholder />\r\n                {scrollDownVisible && (\r\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\r\n                )}\r\n                <FilesDropTarget />\r\n                <StickersHint />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessagesList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { copy } from '../../Utils/Text';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport MoreIcon from '../../Assets/Icons/More';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { forward } from '../../Actions/Client';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass ShareStickerSetButton extends React.Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleMenuClick = event => {\r\n        this.handleOpen(event.currentTarget);\r\n    };\r\n\r\n    handleOpen = anchorEl => {\r\n        this.setState({ anchorEl });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleCopyLink = () => {\r\n        this.handleClose();\r\n\r\n        const { t } = this.props;\r\n\r\n        const link = this.getStickersLink(StickerStore.stickerSet);\r\n        if (!link) return;\r\n\r\n        copy(link);\r\n\r\n        const key = `${link}_copy_stickers_link`;\r\n        const message = t('LinkCopied');\r\n        const action = null;\r\n\r\n        this.handleScheduledAction(key, message, action);\r\n    };\r\n\r\n    getStickersLink = stickerSet => {\r\n        if (!stickerSet) return '';\r\n\r\n        const { name } = stickerSet;\r\n        if (!name) return '';\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n\r\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\r\n    };\r\n\r\n    handleScheduledAction = (key, message, action) => {\r\n        if (!key) return;\r\n\r\n        const { enqueueSnackbar, classes, t } = this.props;\r\n        if (!enqueueSnackbar) return;\r\n\r\n        const TRANSITION_DELAY = 150;\r\n        if (\r\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\r\n        ) {\r\n            enqueueSnackbar(message, {\r\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n                action: [\r\n                    <IconButton\r\n                        key='close'\r\n                        aria-label='Close'\r\n                        color='inherit'\r\n                        className='notification-close-button'\r\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                ]\r\n            });\r\n        }\r\n    };\r\n\r\n    handleShare = () => {\r\n        this.handleClose();\r\n\r\n        const link = this.getStickersLink(StickerStore.stickerSet);\r\n        if (!link) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSet',\r\n            stickerSet: null\r\n        });\r\n\r\n        const inputMessageContent = {\r\n            '@type': 'inputMessageText',\r\n            text: {\r\n                '@type': 'formattedText',\r\n                text: link,\r\n                entities: null\r\n            },\r\n            disable_web_page_preview: false,\r\n            clear_draft: false\r\n        };\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    render() {\r\n        const { t, className } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    className={className}\r\n                    aria-label='Share'\r\n                    open={Boolean(anchorEl)}\r\n                    onClick={this.handleMenuClick}>\r\n                    <MoreIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='attach-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    onClose={this.handleClose}>\r\n                    <MenuItem onClick={this.handleCopyLink}>\r\n                        <ListItemIcon>\r\n                            <LinkIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('CopyLink')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleShare}>\r\n                        <ListItemIcon>\r\n                            <ShareIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('StickersShare')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nShareStickerSetButton.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(ShareStickerSetButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ShareStickerSetButton from './ShareStickerSetButton';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\r\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\r\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickerSetDialog.css';\r\n\r\nclass StickerSetDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            stickerSet: StickerStore.stickerSet,\r\n            stickerId: 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { stickerSet, sticker } = this.state;\r\n\r\n        return stickerSet !== nextState.stickerSet || sticker !== nextState.sticker;\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\r\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\r\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\r\n    }\r\n\r\n    handleUpdateInstalledStickerSets = update => {\r\n        const { stickerSet } = StickerStore;\r\n\r\n        this.setState({ stickerSet });\r\n    };\r\n\r\n    handleClientUpdateStickerSet = update => {\r\n        const { stickerSet } = update;\r\n\r\n        this.setState({ stickerSet });\r\n\r\n        if (stickerSet) {\r\n            const store = FileStore.getStore();\r\n            loadStickerSetContent(store, stickerSet);\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSet',\r\n            stickerSet: null\r\n        });\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return;\r\n\r\n        const { is_installed } = stickerSet;\r\n\r\n        TdLibController.send({\r\n            '@type': 'changeStickerSet',\r\n            set_id: stickerSet.id,\r\n            is_installed: !is_installed\r\n        });\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    loadPreviewContent = stickerId => {\r\n        const { stickerSet } = this.state;\r\n        const { stickers } = stickerSet;\r\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\r\n        if (!sticker) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadStickerContent(store, sticker, null);\r\n\r\n        const preloadStickers = this.getNeighborStickers(stickerId);\r\n        preloadStickers.forEach(x => {\r\n            loadStickerContent(store, x, null);\r\n        });\r\n    };\r\n\r\n    getNeighborStickers = stickerId => {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return [];\r\n\r\n        const { stickers } = stickerSet;\r\n        if (!stickers) return [];\r\n\r\n        const indexes = [];\r\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        if (index === -1) return [];\r\n\r\n        const STICKERS_PER_ROW = 4;\r\n        const row = Math.floor(index / STICKERS_PER_ROW);\r\n        const column = index % STICKERS_PER_ROW;\r\n\r\n        const prevRow = row - 1;\r\n        const nextRow = row + 1;\r\n        const prevColumn = column - 1;\r\n        const nextColumn = column + 1;\r\n\r\n        if (prevRow >= 0) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\r\n            }\r\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\r\n            if (nextColumn < STICKERS_PER_ROW) {\r\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        if (prevColumn >= 0) {\r\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\r\n        }\r\n        if (nextColumn < STICKERS_PER_ROW) {\r\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\r\n        }\r\n\r\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\r\n            }\r\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\r\n            if (nextColumn < STICKERS_PER_ROW) {\r\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        return indexes.map(i => stickers[i]);\r\n    };\r\n\r\n    // handleMouseOver = event => {\r\n    //     const stickerId = Number(event.target.dataset.stickerId);\r\n    //     if (!stickerId) return;\r\n    //\r\n    //     if (!this.mouseDown) return;\r\n    //\r\n    //     this.setState({ stickerId });\r\n    //     this.loadPreviewContent(stickerId);\r\n    // };\r\n\r\n    // handleMouseDown = event => {\r\n    //     const stickerId = Number(event.target.dataset.stickerId);\r\n    //     if (!stickerId) return;\r\n    //\r\n    //     this.setState({ stickerId });\r\n    //     this.loadPreviewContent(stickerId);\r\n    //\r\n    //     this.mouseDown = true;\r\n    //     document.addEventListener('mouseup', this.handleMouseUp);\r\n    //\r\n    //     event.preventDefault();\r\n    //     event.stopPropagation();\r\n    //     return false;\r\n    // };\r\n\r\n    getSticker(stickerId) {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return null;\r\n\r\n        const { stickers } = stickerSet;\r\n\r\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\r\n    }\r\n\r\n    handleMouseUp = () => {\r\n        const sticker = null;\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.mouseDown = false;\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    handleMouseEnter = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        if (!this.mouseDown) return;\r\n\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        this.mouseDown = true;\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { stickerSet, sticker } = this.state;\r\n        if (!stickerSet) return null;\r\n\r\n        const { title, stickers, is_installed } = stickerSet;\r\n\r\n        const items = stickers.map(x => (\r\n            <div\r\n                className='sticker-set-dialog-item'\r\n                key={x.sticker.id}\r\n                data-sticker-id={x.sticker.id}\r\n                style={{ width: 76, height: 76 }}\r\n                onMouseEnter={this.handleMouseEnter}\r\n                onMouseDown={this.handleMouseDown}>\r\n                <Sticker\r\n                    key={x.sticker.id}\r\n                    className='sticker-set-dialog-item-sticker'\r\n                    sticker={x}\r\n                    autoplay={false}\r\n                    blur={false}\r\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\r\n                    preview\r\n                    source={StickerSourceEnum.STICKER_SET}\r\n                />\r\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <Dialog\r\n                className='sticker-set-dialog'\r\n                open\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='sticker-set-dialog-title-text'\r\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\r\n                <DialogTitle\r\n                    id='sticker-set-dialog-title-text'\r\n                    className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}\r\n                    disableTypography>\r\n                    <Typography variant='h6' className='sticker-set-dialog-title-typography' noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                    <ShareStickerSetButton className='sticker-set-dialog-share-button' />\r\n                </DialogTitle>\r\n                <DialogContent\r\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}>\r\n                    {items}\r\n                </DialogContent>\r\n                <DialogActions className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}>\r\n                    <Button color='primary' onClick={this.handleClose}>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button color='primary' onClick={this.handleDone}>\r\n                        {is_installed ? t('StickersRemove') : t('Add')}\r\n                    </Button>\r\n                </DialogActions>\r\n                {<StickerPreview sticker={sticker} />}\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nStickerSetDialog.propTypes = {};\r\n\r\nexport default withTranslation()(StickerSetDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\nimport HeaderPlayer from '../Player/HeaderPlayer';\r\nimport MessagesList from './MessagesList';\r\nimport StickerSetDialog from '../Popup/StickerSetDialog';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogDetails.css';\r\nimport { getSrc } from '../../Utils/File';\r\nimport FileStore from '../../Stores/FileStore';\r\n\r\nclass DialogDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatId: AppStore.getChatId(),\r\n            messageId: AppStore.getMessageId(),\r\n            selectedCount: 0,\r\n            wallpaper: null,\r\n            wallpaperSrc: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\r\n        if (nextState.chatId !== chatId) {\r\n            return true;\r\n        }\r\n        if (nextState.messageId !== messageId) {\r\n            return true;\r\n        }\r\n        if (nextState.selectedCount !== selectedCount) {\r\n            return true;\r\n        }\r\n        if (nextState.wallpaper !== wallpaper) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n    }\r\n\r\n    onClientUpdateDocumentBlob = update => {\r\n        const { wallpaper } = this.state;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { document: file } = document;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        if (this.thumbnailTime) {\r\n            if (this.thumbnailTime.wallpaper === wallpaper) {\r\n                const diff = new Date() - this.thumbnailTime.time;\r\n                if (diff < 250) {\r\n                    setTimeout(() => {\r\n                        this.forceUpdate();\r\n                    }, 250);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateDocumentThumbnailBlob = update => {\r\n        const { wallpaper } = this.state;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail } = document;\r\n        if (!thumbnail) return;\r\n\r\n        const file = thumbnail.photo;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        this.thumbnailTime = {\r\n            wallpaper,\r\n            time: new Date()\r\n        };\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatBackground = update => {\r\n        const { wallpaper } = update;\r\n\r\n        this.thumbnailTime = {\r\n            wallpaper,\r\n            time: new Date()\r\n        };\r\n        this.setState({\r\n            wallpaper\r\n        });\r\n    };\r\n\r\n    onUpdateChatDetailsVisibility = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        this.setState({\r\n            chatId: update.nextChatId,\r\n            messageId: update.nextMessageId\r\n        });\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        this.messagesList.scrollToBottom();\r\n    };\r\n\r\n    scrollToStart = () => {\r\n        this.messagesList.scrollToStart();\r\n    };\r\n\r\n    scrollToMessage = () => {\r\n        this.messagesList.scrollToMessage();\r\n    };\r\n\r\n    render() {\r\n        /*let groups = [];\r\n        if (this.props.history.length > 0){\r\n            let currentGroup = {\r\n                key: this.props.history[0].id,\r\n                date: this.props.history[0].date,\r\n                senderUserId: this.props.history[0].sender_user_id,\r\n                messages: [this.props.history[0]]\r\n            };\r\n\r\n            for (let i = 1; i < this.props.history.length; i++){\r\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\r\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\r\n                    && i % 20 !== 0){\r\n                    currentGroup.key += '_' + this.props.history[i].id;\r\n                    currentGroup.messages.push(this.props.history[i]);\r\n                }\r\n                else {\r\n                    groups.push(currentGroup);\r\n                    currentGroup = {\r\n                        key: this.props.history[i].id,\r\n                        date: this.props.history[i].date,\r\n                        senderUserId: this.props.history[i].sender_user_id,\r\n                        messages: [this.props.history[i]]\r\n                    };\r\n                }\r\n            }\r\n            groups.push(currentGroup);\r\n        }\r\n\r\n        this.groups = groups.map(x => {\r\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\r\n        });*/\r\n        const { chatId, messageId, wallpaper } = this.state;\r\n        const { isChatDetailsVisible } = AppStore;\r\n\r\n        let style = null;\r\n        let src = null;\r\n        if (wallpaper) {\r\n            const { document } = wallpaper;\r\n            if (document) {\r\n                const { thumbnail, document: file } = document;\r\n                if (file) {\r\n                    src = getSrc(file);\r\n                }\r\n\r\n                if (!src && thumbnail) {\r\n                    src = getSrc(thumbnail.photo);\r\n                }\r\n            }\r\n\r\n            style = {\r\n                backgroundImage: src ? `url(${src})` : null\r\n            };\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}\r\n                style={style}>\r\n                <HeaderPlayer />\r\n                <Header chatId={chatId} />\r\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\r\n                <Footer chatId={chatId} />\r\n                <StickerSetDialog />\r\n                <ChatInfoDialog />\r\n                {/*<Footer />*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogDetails;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { getDisplayName } from '../../Utils/HOC';\r\n\r\nconst IVContext = React.createContext(null);\r\n\r\nexport default IVContext;\r\n\r\nexport function withIV(Component) {\r\n    class IVComponent extends React.Component {\r\n        render() {\r\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\r\n        }\r\n    }\r\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\r\n\r\n    return IVComponent;\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getRichText } from '../../../Utils/InstantView';\r\n\r\nfunction RichText(props) {\r\n    return getRichText(props.text);\r\n}\r\n\r\nRichText.propTypes = {\r\n    text: PropTypes.object.isRequired\r\n};\r\n\r\nexport default RichText;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\r\nimport Animation from '../Components/InstantView/Blocks/Animation';\r\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\r\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\r\nimport Collage from '../Components/InstantView/Blocks/Collage';\r\nimport Cover from '../Components/InstantView/Blocks/Cover';\r\nimport Details from '../Components/InstantView/Blocks/Details';\r\nimport Divider from '../Components/InstantView/Blocks/Divider';\r\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\r\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\r\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\r\nimport Footer from '../Components/InstantView/Blocks/Footer';\r\nimport Header from '../Components/InstantView/Blocks/Header';\r\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\r\nimport List from '../Components/InstantView/Blocks/List';\r\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\r\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\r\nimport Photo from '../Components/InstantView/Blocks/Photo';\r\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\r\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\r\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\r\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\r\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\r\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\r\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\r\nimport Title from '../Components/InstantView/Blocks/Title';\r\nimport Bold from '../Components/InstantView/RichText/Bold';\r\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\r\nimport Fixed from '../Components/InstantView/RichText/Fixed';\r\nimport Icon from '../Components/InstantView/RichText/Icon';\r\nimport Italic from '../Components/InstantView/RichText/Italic';\r\nimport Marked from '../Components/InstantView/RichText/Marked';\r\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\r\nimport Plain from '../Components/InstantView/RichText/Plain';\r\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\r\nimport Subscript from '../Components/InstantView/RichText/Subscript';\r\nimport Superscript from '../Components/InstantView/RichText/Superscript';\r\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\r\nimport Texts from '../Components/InstantView/RichText/Texts';\r\nimport Underline from '../Components/InstantView/RichText/Underline';\r\nimport Url from '../Components/InstantView/RichText/Url';\r\nimport Table from '../Components/InstantView/Blocks/Table';\r\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\r\nimport Map from '../Components/InstantView/Blocks/Map';\r\nimport Audio from '../Components/InstantView/Blocks/Audio';\r\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\r\nimport Video from '../Components/InstantView/Blocks/Video';\r\nimport { download } from './File';\r\nimport { setInstantViewViewerContent } from '../Actions/Client';\r\nimport FileStore from '../Stores/FileStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\r\n    // console.log('[IV] openIVMedia', media);\r\n\r\n    if (!media) return;\r\n\r\n    const chatId = 0;\r\n    const messageId = 0;\r\n\r\n    switch (media['@type']) {\r\n        case 'animation': {\r\n            let { animation: file } = media;\r\n            if (!file) return;\r\n\r\n            file = FileStore.get(file.id) || file;\r\n            if (fileCancel && file.local.is_downloading_active) {\r\n                FileStore.cancelGetRemoteFile(file.id, media);\r\n                return;\r\n            } else if (fileCancel && file.remote.is_uploading_active) {\r\n                FileStore.cancelUploadFile(file.id, media);\r\n                return;\r\n            } else {\r\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\r\n            }\r\n\r\n            setInstantViewViewerContent({\r\n                media,\r\n                caption,\r\n                block,\r\n                instantView\r\n            });\r\n            break;\r\n        }\r\n        case 'audio': {\r\n            let { audio: file } = media;\r\n            if (!file) return;\r\n\r\n            file = FileStore.get(file.id) || file;\r\n            if (fileCancel && file.local.is_downloading_active) {\r\n                FileStore.cancelGetRemoteFile(file.id, media);\r\n                return;\r\n            } else if (fileCancel && file.remote.is_uploading_active) {\r\n                FileStore.cancelUploadFile(file.id, media);\r\n                return;\r\n            } else {\r\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\r\n            }\r\n\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaActive',\r\n                instantView,\r\n                block\r\n            });\r\n            break;\r\n        }\r\n        case 'photo': {\r\n            setInstantViewViewerContent({\r\n                media,\r\n                caption,\r\n                block,\r\n                instantView\r\n            });\r\n            break;\r\n        }\r\n        case 'video': {\r\n            let { video: file } = media;\r\n            if (!file) return;\r\n\r\n            file = FileStore.get(file.id) || file;\r\n            if (fileCancel && file.local.is_downloading_active) {\r\n                FileStore.cancelGetRemoteFile(file.id, media);\r\n                return;\r\n            } else if (fileCancel && file.remote.is_uploading_active) {\r\n                FileStore.cancelUploadFile(file.id, media);\r\n                return;\r\n            } else {\r\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\r\n            }\r\n\r\n            setInstantViewViewerContent({\r\n                media,\r\n                caption,\r\n                block,\r\n                instantView\r\n            });\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nexport function getPageBlock(block, iv, key = undefined) {\r\n    if (!block) return null;\r\n\r\n    let element = null;\r\n    switch (block['@type']) {\r\n        case 'pageBlockAnchor': {\r\n            element = <Anchor name={block.name} />;\r\n            break;\r\n        }\r\n        case 'pageBlockAnimation': {\r\n            element = (\r\n                <Animation\r\n                    block={block}\r\n                    caption={block.caption}\r\n                    animation={block.animation}\r\n                    needAutoplay={block.need_autoplay}\r\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\r\n                />\r\n            );\r\n            break;\r\n        }\r\n        case 'pageBlockAudio': {\r\n            element = (\r\n                <Audio\r\n                    caption={block.caption}\r\n                    audio={block.audio}\r\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\r\n                />\r\n            );\r\n            break;\r\n        }\r\n        case 'pageBlockAuthorDate': {\r\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\r\n            break;\r\n        }\r\n        case 'pageBlockBlockQuote': {\r\n            element = <BlockQuote credit={block.credit} text={block.text} />;\r\n            break;\r\n        }\r\n        case 'pageBlockCollage': {\r\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\r\n            break;\r\n        }\r\n        case 'pageBlockChatLink': {\r\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\r\n            break;\r\n        }\r\n        case 'pageBlockCover': {\r\n            element = <Cover cover={block.cover} />;\r\n            break;\r\n        }\r\n        case 'pageBlockDetails': {\r\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\r\n            break;\r\n        }\r\n        case 'pageBlockDivider': {\r\n            element = <Divider />;\r\n            break;\r\n        }\r\n        case 'pageBlockEmbedded': {\r\n            element = (\r\n                <Embedded\r\n                    url={block.url}\r\n                    html={block.html}\r\n                    posterPhoto={block.poster_photo}\r\n                    width={block.width}\r\n                    height={block.height}\r\n                    caption={block.caption}\r\n                    isFullWidth={block.is_full_width}\r\n                    allowScrolling={block.allow_scrolling}\r\n                />\r\n            );\r\n            break;\r\n        }\r\n        case 'pageBlockEmbeddedPost': {\r\n            element = (\r\n                <EmbeddedPost\r\n                    url={block.url}\r\n                    author={block.author}\r\n                    authorPhoto={block.author_photo}\r\n                    date={block.date}\r\n                    pageBlocks={block.page_blocks}\r\n                    caption={block.caption}\r\n                />\r\n            );\r\n            break;\r\n        }\r\n        case 'pageBlockFooter': {\r\n            element = <Footer footer={block.footer} />;\r\n            break;\r\n        }\r\n        case 'pageBlockHeader': {\r\n            element = <Header header={block.header} />;\r\n            break;\r\n        }\r\n        case 'pageBlockKicker': {\r\n            element = <Kicker kicker={block.kicker} />;\r\n            break;\r\n        }\r\n        case 'pageBlockList': {\r\n            element = <List items={block.items} />;\r\n            break;\r\n        }\r\n        case 'pageBlockListItem': {\r\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\r\n            break;\r\n        }\r\n        case 'pageBlockMap': {\r\n            element = (\r\n                <Map\r\n                    location={block.location}\r\n                    zoom={block.zoom}\r\n                    width={block.width}\r\n                    height={block.height}\r\n                    caption={block.caption}\r\n                />\r\n            );\r\n            break;\r\n        }\r\n        case 'pageBlockParagraph': {\r\n            element = <Paragraph text={block.text} />;\r\n            break;\r\n        }\r\n        case 'pageBlockPhoto': {\r\n            element = (\r\n                <Photo\r\n                    caption={block.caption}\r\n                    photo={block.photo}\r\n                    url={block.url}\r\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\r\n                />\r\n            );\r\n            break;\r\n        }\r\n        case 'pageBlockPreformatted': {\r\n            element = <Preformatted text={block.text} language={block.language} />;\r\n            break;\r\n        }\r\n        case 'pageBlockPullQuote': {\r\n            element = <PullQuote credit={block.credit} text={block.text} />;\r\n            break;\r\n        }\r\n        case 'pageBlockRelatedArticle': {\r\n            element = (\r\n                <RelatedArticle\r\n                    url={block.url}\r\n                    title={block.title}\r\n                    description={block.description}\r\n                    photo={block.photo}\r\n                    author={block.author}\r\n                    publishDate={block.publish_date}\r\n                />\r\n            );\r\n            break;\r\n        }\r\n        case 'pageBlockRelatedArticles': {\r\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\r\n            break;\r\n        }\r\n        case 'pageBlockSlideshow': {\r\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\r\n            break;\r\n        }\r\n        case 'pageBlockSubheader': {\r\n            element = <Subheader subheader={block.subheader} />;\r\n            break;\r\n        }\r\n        case 'pageBlockSubtitle': {\r\n            element = <Subtitle subtitle={block.subtitle} />;\r\n            break;\r\n        }\r\n        case 'pageBlockTable': {\r\n            element = (\r\n                <Table\r\n                    caption={block.caption}\r\n                    cells={block.cells}\r\n                    isBordered={block.is_bordered}\r\n                    isStriped={block.is_striped}\r\n                />\r\n            );\r\n            break;\r\n        }\r\n        case 'pageBlockTableCell': {\r\n            element = (\r\n                <TableCell\r\n                    text={block.text}\r\n                    isHeader={block.is_header}\r\n                    colspan={block.colspan}\r\n                    rowspan={block.rowspan}\r\n                    align={block.align}\r\n                    valign={block.valign}\r\n                />\r\n            );\r\n            break;\r\n        }\r\n        case 'pageBlockTitle': {\r\n            element = <Title title={block.title} />;\r\n            break;\r\n        }\r\n        case 'pageBlockVideo': {\r\n            element = (\r\n                <Video\r\n                    caption={block.caption}\r\n                    video={block.video}\r\n                    needAutoplay={block.need_autoplay}\r\n                    isLooped={block.is_looped}\r\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\r\n                />\r\n            );\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (element) {\r\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\r\n    }\r\n\r\n    return <div>{`[${block['@type']}]`}</div>;\r\n}\r\n\r\nexport function getRichText(richText) {\r\n    if (!richText) {\r\n        return null;\r\n    }\r\n\r\n    if (richText instanceof String) {\r\n        return richText;\r\n    }\r\n\r\n    switch (richText['@type']) {\r\n        case 'richTextAnchor': {\r\n            const { name, text } = richText;\r\n\r\n            return <TextAnchor text={text} name={name} />;\r\n        }\r\n        case 'richTextBold': {\r\n            const { text } = richText;\r\n\r\n            return <Bold text={text} />;\r\n        }\r\n        case 'richTextEmailAddress': {\r\n            const { email_address, text } = richText;\r\n\r\n            return <EmailAddress emailAddress={email_address} text={text} />;\r\n        }\r\n        case 'richTextFixed': {\r\n            const { text } = richText;\r\n\r\n            return <Fixed text={text} />;\r\n        }\r\n        case 'richTextIcon': {\r\n            const { document, height, width } = richText;\r\n\r\n            return <Icon document={document} height={height} width={width} />;\r\n        }\r\n        case 'richTextItalic': {\r\n            const { text } = richText;\r\n\r\n            return <Italic text={text} />;\r\n        }\r\n        case 'richTextMarked': {\r\n            const { text } = richText;\r\n\r\n            return <Marked text={text} />;\r\n        }\r\n        case 'richTextPhoneNumber': {\r\n            const { phone_number, text } = richText;\r\n\r\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\r\n        }\r\n        case 'richTextPlain': {\r\n            const { text } = richText;\r\n\r\n            return <Plain text={text} />;\r\n        }\r\n        case 'richTextStrikethrough': {\r\n            const { text } = richText;\r\n\r\n            return <Strikethrough text={text} />;\r\n        }\r\n        case 'richTextSubscript': {\r\n            const { text } = richText;\r\n\r\n            return <Subscript text={text} />;\r\n        }\r\n        case 'richTextSuperscript': {\r\n            const { text } = richText;\r\n\r\n            return <Superscript text={text} />;\r\n        }\r\n        case 'richTexts': {\r\n            const { texts } = richText;\r\n\r\n            return <Texts texts={texts} />;\r\n        }\r\n        case 'richTextUnderline': {\r\n            const { text } = richText;\r\n\r\n            return <Underline text={text} />;\r\n        }\r\n        case 'richTextUrl': {\r\n            const { text, url } = richText;\r\n\r\n            return <Url text={text} url={url} />;\r\n        }\r\n    }\r\n\r\n    return `[${richText['@type']}]`;\r\n}\r\n\r\nexport function isEmptyText(richText) {\r\n    if (!richText) return true;\r\n\r\n    switch (richText['@type']) {\r\n        case 'richTextAnchor': {\r\n            const { text } = richText;\r\n\r\n            return isEmptyText(text);\r\n        }\r\n        case 'richTextBold': {\r\n            const { text } = richText;\r\n\r\n            return isEmptyText(text);\r\n        }\r\n        case 'richTextEmailAddress': {\r\n            const { text } = richText;\r\n\r\n            return isEmptyText(text);\r\n        }\r\n        case 'richTextFixed': {\r\n            const { text } = richText;\r\n\r\n            return isEmptyText(text);\r\n        }\r\n        case 'richTextIcon': {\r\n            return false;\r\n        }\r\n        case 'richTextItalic': {\r\n            const { text } = richText;\r\n\r\n            return isEmptyText(text);\r\n        }\r\n        case 'richTextMarked': {\r\n            const { text } = richText;\r\n\r\n            return isEmptyText(text);\r\n        }\r\n        case 'richTextPhoneNumber': {\r\n            const { text } = richText;\r\n\r\n            return isEmptyText(text);\r\n        }\r\n        case 'richTextPlain': {\r\n            const { text } = richText;\r\n\r\n            return isEmptyText(text);\r\n        }\r\n        case 'richTextStrikethrough': {\r\n            const { text } = richText;\r\n\r\n            return isEmptyText(text);\r\n        }\r\n        case 'richTextSubscript': {\r\n            const { text } = richText;\r\n\r\n            return isEmptyText(text);\r\n        }\r\n        case 'richTextSuperscript': {\r\n            const { text } = richText;\r\n\r\n            return isEmptyText(text);\r\n        }\r\n        case 'richTexts': {\r\n            const { texts } = richText;\r\n\r\n            return texts.every(isEmptyText);\r\n        }\r\n        case 'richTextUnderline': {\r\n            const { text } = richText;\r\n\r\n            return isEmptyText(text);\r\n        }\r\n        case 'richTextUrl': {\r\n            const { text } = richText;\r\n\r\n            return isEmptyText(text);\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport function getHorizontalAlignment(align) {\r\n    if (!align) return null;\r\n\r\n    switch (align['@type']) {\r\n        case 'pageBlockHorizontalAlignmentCenter': {\r\n            return 'center';\r\n        }\r\n        case 'pageBlockHorizontalAlignmentLeft': {\r\n            return 'left';\r\n        }\r\n        case 'pageBlockHorizontalAlignmentRight': {\r\n            return 'right';\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getVerticalAlignment(valign) {\r\n    if (!valign) return null;\r\n\r\n    switch (valign['@type']) {\r\n        case 'pageBlockVerticalAlignmentBottom': {\r\n            return 'bottom';\r\n        }\r\n        case 'pageBlockVerticalAlignmentMiddle': {\r\n            return 'middle';\r\n        }\r\n        case 'pageBlockVerticalAlignmentTop': {\r\n            return 'top';\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getInnerBlocks(block) {\r\n    if (!block) return [];\r\n\r\n    switch (block['@type']) {\r\n        case 'pageBlockAnchor': {\r\n            return [];\r\n        }\r\n        case 'pageBlockAnimation': {\r\n            return [block.caption];\r\n        }\r\n        case 'pageBlockAudio': {\r\n            return [block.caption];\r\n        }\r\n        case 'pageBlockAuthorDate': {\r\n            return [];\r\n        }\r\n        case 'pageBlockBlockQuote': {\r\n            return [];\r\n        }\r\n        case 'pageBlockChatLink': {\r\n            return [];\r\n        }\r\n        case 'pageBlockCollage': {\r\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\r\n\r\n            return [].concat.apply([], innerBlocks);\r\n        }\r\n        case 'pageBlockCover': {\r\n            return [block.cover];\r\n        }\r\n        case 'pageBlockDetails': {\r\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\r\n\r\n            return [].concat.apply([], innerBlocks);\r\n        }\r\n        case 'pageBlockDivider': {\r\n            return [];\r\n        }\r\n        case 'pageBlockEmbedded': {\r\n            return [block.caption];\r\n        }\r\n        case 'pageBlockEmbeddedPost': {\r\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\r\n\r\n            return [].concat.apply([block.caption], innerBlocks);\r\n        }\r\n        case 'pageBlockFooter': {\r\n            return [];\r\n        }\r\n        case 'pageBlockHeader': {\r\n            return [];\r\n        }\r\n        case 'pageBlockKicker': {\r\n            return [];\r\n        }\r\n        case 'pageBlockList': {\r\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\r\n\r\n            return [].concat.apply([], innerBlocks);\r\n        }\r\n        case 'pageBlockListItem': {\r\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\r\n\r\n            return [].concat.apply([], innerBlocks);\r\n        }\r\n        case 'pageBlockMap': {\r\n            return [block.caption];\r\n        }\r\n        case 'pageBlockParagraph': {\r\n            return [];\r\n        }\r\n        case 'pageBlockPhoto': {\r\n            return [block.caption];\r\n        }\r\n        case 'pageBlockPreformatted': {\r\n            return [];\r\n        }\r\n        case 'pageBlockPullQuote': {\r\n            return [];\r\n        }\r\n        case 'pageBlockRelatedArticle': {\r\n            return [];\r\n        }\r\n        case 'pageBlockRelatedArticles': {\r\n            return [...block.articles];\r\n        }\r\n        case 'pageBlockSlideshow': {\r\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\r\n\r\n            return [].concat.apply([block.caption], innerBlocks);\r\n        }\r\n        case 'pageBlockSubheader': {\r\n            return [];\r\n        }\r\n        case 'pageBlockSubtitle': {\r\n            return [];\r\n        }\r\n        case 'pageBlockTable': {\r\n            return [...block.cells];\r\n        }\r\n        case 'pageBlockTableCell': {\r\n            return [];\r\n        }\r\n        case 'pageBlockTitle': {\r\n            return [];\r\n        }\r\n        case 'pageBlockVideo': {\r\n            return [block.caption];\r\n        }\r\n    }\r\n\r\n    return [];\r\n}\r\n\r\nexport function getBlockMedia(block) {\r\n    if (!block) return null;\r\n\r\n    switch (block['@type']) {\r\n        case 'pageBlockAnimation': {\r\n            return block.animation;\r\n        }\r\n        case 'pageBlockPhoto': {\r\n            return block.photo;\r\n        }\r\n        case 'pageBlockVideo': {\r\n            return block.video;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getBlockCaption(block) {\r\n    if (!block) return null;\r\n\r\n    switch (block['@type']) {\r\n        case 'pageBlockAnimation': {\r\n            return block.caption;\r\n        }\r\n        case 'pageBlockPhoto': {\r\n            return block.caption;\r\n        }\r\n        case 'pageBlockVideo': {\r\n            return block.caption;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getBlockUrl(block) {\r\n    if (!block) return null;\r\n\r\n    switch (block['@type']) {\r\n        case 'pageBlockPhoto': {\r\n            return block.url;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function isValidMediaBlock(block) {\r\n    if (!block) return false;\r\n\r\n    switch (block['@type']) {\r\n        case 'pageBlockAnimation': {\r\n            return true;\r\n        }\r\n        case 'pageBlockPhoto': {\r\n            return true;\r\n        }\r\n        case 'pageBlockVideo': {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport function getValidMediaBlocks(iv) {\r\n    if (!iv) return [];\r\n\r\n    const { page_blocks } = iv;\r\n\r\n    const blocks = [];\r\n    page_blocks.forEach(x => {\r\n        blocks.push(x);\r\n        const innerBlocks = getInnerBlocks(x);\r\n        innerBlocks.forEach(i => {\r\n            blocks.push(i);\r\n        });\r\n    });\r\n\r\n    return blocks.filter(isValidMediaBlock);\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from '../RichText/RichText';\r\n\r\nfunction Anchor(props) {\r\n    return <a id={props.name} />;\r\n}\r\n\r\nAnchor.propTypes = {\r\n    name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Anchor;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from '../RichText/RichText';\r\nimport { isEmptyText } from '../../../Utils/InstantView';\r\n\r\nfunction Caption(props) {\r\n    const { text, credit } = props;\r\n\r\n    const hasText = !isEmptyText(text);\r\n    const hastCredit = !isEmptyText(credit);\r\n    if (!hasText && !hastCredit) return null;\r\n\r\n    return (\r\n        <figcaption>\r\n            {hasText && <RichText text={text} />}\r\n            {hastCredit && (\r\n                <cite>\r\n                    <RichText text={credit} />\r\n                </cite>\r\n            )}\r\n        </figcaption>\r\n    );\r\n}\r\n\r\nCaption.propTypes = {\r\n    text: PropTypes.object.isRequired,\r\n    credit: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Caption;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Caption from './Caption';\r\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\r\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\r\n\r\nfunction Animation(props) {\r\n    const { animation, block, caption, need_autoplay, openMedia } = props;\r\n\r\n    return (\r\n        <figure>\r\n            <MediaAnimation\r\n                iv={true}\r\n                pageBlock={block}\r\n                animation={animation}\r\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\r\n                openMedia={openMedia}\r\n            />\r\n            <Caption text={caption.text} credit={caption.credit} />\r\n        </figure>\r\n    );\r\n}\r\n\r\nAnimation.propTypes = {\r\n    block: PropTypes.object.isRequired,\r\n    animation: PropTypes.object,\r\n    caption: PropTypes.object.isRequired,\r\n    needAutoplay: PropTypes.bool.isRequired,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default Animation;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from '../RichText/RichText';\r\nimport dateFormat from '../../../Utils/Date';\r\nimport { isEmptyText } from '../../../Utils/InstantView';\r\n\r\nfunction AuthorDate(props) {\r\n    const { author, publishDate } = props;\r\n\r\n    const hasAuthor = !isEmptyText(author);\r\n    const hasDate = publishDate > 0;\r\n    if (!hasAuthor && !hasDate) return null;\r\n\r\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\r\n\r\n    return (\r\n        <address>\r\n            {hasAuthor && (\r\n                <a rel='author'>\r\n                    <RichText text={author} />\r\n                </a>\r\n            )}\r\n            {hasAuthor && hasDate && ' • '}\r\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\r\n        </address>\r\n    );\r\n}\r\n\r\nAuthorDate.propTypes = {\r\n    author: PropTypes.object,\r\n    publishDate: PropTypes.number\r\n};\r\n\r\nexport default AuthorDate;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from '../RichText/RichText';\r\n\r\nfunction Blockquote(props) {\r\n    const { text, credit } = props;\r\n    return (\r\n        <blockquote>\r\n            <RichText text={text} />\r\n            {credit && (\r\n                <cite>\r\n                    <RichText text={credit} />\r\n                </cite>\r\n            )}\r\n        </blockquote>\r\n    );\r\n}\r\n\r\nBlockquote.propTypes = {\r\n    text: PropTypes.object.isRequired,\r\n    credit: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Blockquote;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withIV } from '../IVContext';\r\nimport Caption from './Caption';\r\nimport { getPageBlock } from '../../../Utils/InstantView';\r\n\r\nfunction Collage(props) {\r\n    const { pageBlocks, caption, iv } = props;\r\n\r\n    return (\r\n        <div className='collage'>\r\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\r\n            <Caption text={caption.text} credit={caption.credit} />\r\n        </div>\r\n    );\r\n}\r\n\r\nCollage.propTypes = {\r\n    pageBlocks: PropTypes.array.isRequired,\r\n    caption: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withIV(Collage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withIV } from '../IVContext';\r\nimport { getPageBlock } from '../../../Utils/InstantView';\r\n\r\nfunction Cover(props) {\r\n    return getPageBlock(props.cover, props.iv);\r\n}\r\n\r\nCover.propTypes = {\r\n    cover: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withIV(Cover);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withIV } from '../IVContext';\r\nimport RichText from '../RichText/RichText';\r\nimport { getPageBlock } from '../../../Utils/InstantView';\r\n\r\nfunction Details(props) {\r\n    const { header, pageBlocks, isOpen, iv } = props;\r\n\r\n    return (\r\n        <details open={isOpen}>\r\n            <summary>\r\n                <RichText text={header} />\r\n            </summary>\r\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\r\n        </details>\r\n    );\r\n}\r\n\r\nDetails.propTypes = {\r\n    header: PropTypes.object.isRequired,\r\n    pageBlocks: PropTypes.array.isRequired,\r\n    isOpen: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default withIV(Details);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from '../RichText/RichText';\r\n\r\nfunction Divider() {\r\n    return <hr />;\r\n}\r\n\r\nexport default Divider;\r\n","/**\r\n *\r\n * inject script to facilitate iframe resizing\r\n * https://github.com/davidjbradshaw/iframe-resizer\r\n *\r\n */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\r\n\r\nclass IframeResizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.frameRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        // can't update until we have a mounted iframe\r\n        this.updateIframe(this.props);\r\n        this.resizeIframe(this.props);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // React will remove the iframe, however we need to manually\r\n        // call iframe-resizer to stop its listeners\r\n        const frame = this.frameRef.current;\r\n        if (!frame) return;\r\n\r\n        const { iframeResizer } = frame;\r\n        if (!iframeResizer) return;\r\n\r\n        iframeResizer.removeListeners();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        // can replace content if we got new props\r\n        this.updateIframe(nextProps);\r\n        this.resizeIframe(nextProps);\r\n    }\r\n\r\n    updateIframe = props => {\r\n        // has src - no injected content\r\n        if (props.src) return;\r\n        // do we have content to inject (content or children)\r\n        const content = props.content || props.children;\r\n        if (!content) return;\r\n        // get frame to inject into\r\n        const frame = this.frameRef.current;\r\n        if (!frame) return;\r\n        // verify frame document access\r\n        // Due to browser security, this will fail with the following error\r\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\r\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\r\n        // resolve this by loading documents from the same domain name,\r\n        // or injecting HTML `content` vs. loading via `src`\r\n        const doc = frame.contentDocument;\r\n        if (!doc) return;\r\n        // replace iframe document content\r\n        if (typeof content === 'string') {\r\n            // assume this is a HTML block\r\n            //   we could send this in via REACT dangerously set HTML\r\n            //   but we are in an iframe anyway, already a red-headed step-child.\r\n            doc.open();\r\n            doc.write(content);\r\n            doc.close();\r\n        } else {\r\n            // assume this is a REACT component\r\n            doc.open();\r\n            doc.write('<div id=\"iframe-root\"></div>');\r\n            doc.close();\r\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\r\n        }\r\n    };\r\n\r\n    // inject the iframe resizer \"content window\" script\r\n    injectIframeResizerUrl = () => {\r\n        if (!this.props.iframeResizerUrl) return;\r\n        const frame = this.frameRef.current;\r\n        if (!frame) return;\r\n        // verify frame document access\r\n        // Due to browser security, this will fail with the following error\r\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\r\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\r\n        // resolve this by loading documents from the same domain name,\r\n        // or injecting HTML `content` vs. loading via `src`\r\n        const doc = frame.contentDocument;\r\n        if (!doc) return;\r\n        // where can we insert into? (fail into whatever we can find)\r\n        let injectTarget = null;\r\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\r\n            if (injectTarget) return;\r\n            const found = doc.getElementsByTagName(tagName);\r\n            if (!(found && found.length)) return;\r\n            injectTarget = found[0];\r\n        });\r\n        if (!injectTarget) {\r\n            console.error('Unable to inject iframe resizer script');\r\n            return;\r\n        }\r\n        const resizerScriptElement = document.createElement('script');\r\n        resizerScriptElement.type = 'text/javascript';\r\n        resizerScriptElement.src = this.props.iframeResizerUrl;\r\n        injectTarget.appendChild(resizerScriptElement);\r\n    };\r\n\r\n    onLoad = () => {\r\n        this.injectIframeResizerUrl();\r\n        // DISABLED because it's causing a loading loop :(\r\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\r\n    };\r\n\r\n    resizeIframe = props => {\r\n        const frame = this.frameRef.current;\r\n        if (!frame) return;\r\n        if (props.iframeResizerEnable) {\r\n            iframeResizerLib(props.iframeResizerOptions, frame);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { src, id, frameBorder, className, style } = this.props;\r\n        return (\r\n            <iframe\r\n                ref={this.frameRef}\r\n                src={src}\r\n                id={id}\r\n                frameBorder={frameBorder}\r\n                className={className}\r\n                style={style}\r\n                onLoad={this.onLoad}\r\n            />\r\n        );\r\n    }\r\n}\r\nIframeResizer.propTypes = {\r\n    // iframe content/document\r\n    // option 1. content of HTML to load in the iframe\r\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n    // option 2. src to a URL to load in the iframe\r\n    src: PropTypes.string,\r\n    // iframe-resizer controls and helpers\r\n    iframeResizerEnable: PropTypes.bool,\r\n    iframeResizerOptions: PropTypes.object,\r\n    iframeResizerUrl: PropTypes.oneOfType([\r\n        PropTypes.string, // URL to inject\r\n        PropTypes.bool // false = disable inject\r\n    ]),\r\n    // misc props to pass through to iframe\r\n    id: PropTypes.string,\r\n    frameBorder: PropTypes.number,\r\n    className: PropTypes.string,\r\n    style: PropTypes.object\r\n    // optional extra callback when iframe is loaded\r\n    // onIframeLoaded: PropTypes.func,\r\n};\r\nIframeResizer.defaultProps = {\r\n    // resize iframe\r\n    iframeResizerEnable: true,\r\n    iframeResizerOptions: {\r\n        // log: true,\r\n        // autoResize: true,\r\n        // checkOrigin: false,\r\n        // resizeFrom: 'parent',\r\n        // heightCalculationMethod: 'max',\r\n        // initCallback: () => { console.log('ready!'); },\r\n        // resizedCallback: () => { console.log('resized!'); },\r\n    },\r\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\r\n    // misc props to pass through to iframe\r\n    frameBorder: 0,\r\n    style: {\r\n        width: '100%',\r\n        minHeight: 20\r\n    }\r\n};\r\n\r\nexport default IframeResizer;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactIframeResizer from '../../Additional/IframeResizer';\r\nimport Caption from './Caption';\r\n\r\nclass Embedded extends React.Component {\r\n    state = {};\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\r\n            return {\r\n                url: null,\r\n                html: null,\r\n                prevUrl: props.url,\r\n                prevHtml: props.html\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setIframeSource();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { url, html } = this.props;\r\n\r\n        if (url !== prevProps.url || html !== prevProps.html) {\r\n            this.setIframeSource();\r\n        }\r\n    }\r\n\r\n    setIframeSource() {\r\n        const { url, html } = this.props;\r\n\r\n        this.setState({\r\n            url,\r\n            html\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { url, html } = this.state;\r\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\r\n\r\n        const options = {\r\n            scrolling: allowScrolling\r\n        };\r\n\r\n        const hasWidthHeight = width > 0 && height > 0;\r\n        const hasSource = Boolean(url) || Boolean(html);\r\n\r\n        return (\r\n            <figure>\r\n                {hasSource && (\r\n                    <>\r\n                        {hasWidthHeight ? (\r\n                            <iframe\r\n                                src={url ? url : null}\r\n                                srcDoc={url ? null : html}\r\n                                width={width > 0 ? width : null}\r\n                                height={height > 0 ? height : null}\r\n                                allowFullScreen={isFullWidth}\r\n                                scrolling={allowScrolling ? 'auto' : 'no'}\r\n                                frameBorder={0}\r\n                            />\r\n                        ) : (\r\n                            <ReactIframeResizer\r\n                                content={html}\r\n                                src={url}\r\n                                iframeResizerOptions={options}\r\n                                style={{ width: '100%' }}\r\n                            />\r\n                        )}\r\n                    </>\r\n                )}\r\n                <Caption text={caption.text} credit={caption.credit} />\r\n            </figure>\r\n        );\r\n    }\r\n}\r\n\r\nEmbedded.propTypes = {\r\n    url: PropTypes.string.isRequired,\r\n    html: PropTypes.string.isRequired,\r\n    posterPhoto: PropTypes.object,\r\n    width: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    caption: PropTypes.object.isRequired,\r\n    isFullWidth: PropTypes.bool.isRequired,\r\n    allowScrolling: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Embedded;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withIV } from '../IVContext';\r\nimport Caption from './Caption';\r\nimport { getPageBlock } from '../../../Utils/InstantView';\r\nimport AuthorDate from './AuthorDate';\r\nimport RichText from '../RichText/RichText';\r\n\r\nfunction EmbeddedPost(props) {\r\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\r\n\r\n    return (\r\n        <blockquote>\r\n            <figure>\r\n                {Boolean(author) && <h3>{author}</h3>}\r\n                <AuthorDate author={null} publishDate={date} />\r\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\r\n                <Caption text={caption.text} credit={caption.credit} />\r\n            </figure>\r\n        </blockquote>\r\n    );\r\n}\r\n\r\nEmbeddedPost.propTypes = {\r\n    url: PropTypes.string.isRequired,\r\n    author: PropTypes.string.isRequired,\r\n    authorPhoto: PropTypes.object,\r\n    date: PropTypes.number.isRequired,\r\n    pageBlocks: PropTypes.array.isRequired,\r\n    caption: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withIV(EmbeddedPost);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport './ErrorHandler.css';\r\n\r\nclass ErrorHandler extends React.Component {\r\n    state = {\r\n        error: null,\r\n        errorInfo: null\r\n    };\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({ error, errorInfo });\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n        const { error, errorInfo } = this.state;\r\n        if (error || errorInfo) {\r\n            return (\r\n                <div className='error-handler'>\r\n                    <span>\r\n                        <pre>\r\n                            {`${error.name}: ${error.message}`}\r\n                            {errorInfo.componentStack}\r\n                        </pre>\r\n                    </span>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return children;\r\n    }\r\n}\r\n\r\nexport default ErrorHandler;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from '../RichText/RichText';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <footer>\r\n            <RichText text={props.footer} />\r\n        </footer>\r\n    );\r\n}\r\n\r\nFooter.propTypes = {\r\n    footer: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Footer;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from '../RichText/RichText';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <h3>\r\n            <RichText text={props.header} />\r\n        </h3>\r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n    header: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Header;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from '../RichText/RichText';\r\n\r\nfunction Kicker(props) {\r\n    const { kicker } = props;\r\n    return (\r\n        <h6 className='kicker'>\r\n            <RichText text={kicker} />\r\n        </h6>\r\n    );\r\n}\r\n\r\nKicker.propTypes = {\r\n    kicker: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Kicker;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withIV } from '../IVContext';\r\nimport { getPageBlock } from '../../../Utils/InstantView';\r\n\r\nfunction ListItem(props) {\r\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\r\n}\r\n\r\nListItem.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    pageBlocks: PropTypes.array.isRequired\r\n};\r\n\r\nexport default withIV(ListItem);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from './ListItem';\r\n\r\nfunction List(props) {\r\n    return (\r\n        <ul>\r\n            {props.items.map((x, index) => (\r\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nList.propTypes = {\r\n    items: PropTypes.array.isRequired\r\n};\r\n\r\nexport default List;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from '../RichText/RichText';\r\n\r\nfunction Paragraph(props) {\r\n    return (\r\n        <p>\r\n            <RichText text={props.text} />\r\n        </p>\r\n    );\r\n}\r\n\r\nParagraph.propTypes = {\r\n    text: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Paragraph;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Caption from './Caption';\r\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\r\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\r\n\r\nfunction Photo(props) {\r\n    const { photo, caption, url, openMedia } = props;\r\n\r\n    return (\r\n        <figure>\r\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\r\n            <Caption text={caption.text} credit={caption.credit} />\r\n        </figure>\r\n    );\r\n}\r\n\r\nPhoto.propTypes = {\r\n    photo: PropTypes.object,\r\n    caption: PropTypes.object.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default Photo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from '../RichText/RichText';\r\n\r\nfunction Preformatted(props) {\r\n    return (\r\n        <pre>\r\n            <RichText text={props.text} />\r\n        </pre>\r\n    );\r\n}\r\n\r\nPreformatted.propTypes = {\r\n    text: PropTypes.object.isRequired,\r\n    language: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Preformatted;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from '../RichText/RichText';\r\n\r\nfunction PullQuote(props) {\r\n    const { text, credit } = props;\r\n    return (\r\n        <aside>\r\n            <RichText text={text} />\r\n            {credit && (\r\n                <cite>\r\n                    <RichText text={credit} />\r\n                </cite>\r\n            )}\r\n        </aside>\r\n    );\r\n}\r\n\r\nPullQuote.propTypes = {\r\n    text: PropTypes.object.isRequired,\r\n    credit: PropTypes.object.isRequired\r\n};\r\n\r\nPullQuote.propTypes = {};\r\n\r\nexport default PullQuote;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SafeLink from '../../Additional/SafeLink';\r\nimport dateFormat from '../../../Utils/Date';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\n\r\nclass RelatedArticle extends React.Component {\r\n    handleClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { url } = this.props;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateInstantViewUrl',\r\n            url\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { author, description, publishDate, title, url } = this.props;\r\n\r\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\r\n        const hasAuthorDateSeparator = author && d;\r\n        const hasAuthorDate = d || author;\r\n\r\n        return (\r\n            <li>\r\n                <SafeLink url={url} onClick={this.handleClick}>\r\n                    {title}\r\n                </SafeLink>\r\n                {hasAuthorDate && (\r\n                    <address>\r\n                        {author}\r\n                        {hasAuthorDateSeparator && ' • '}\r\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\r\n                    </address>\r\n                )}\r\n                {/*{ description && (*/}\r\n                {/*    <div>{description}</div>*/}\r\n                {/*)}*/}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nRelatedArticle.propTypes = {\r\n    url: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    photo: PropTypes.object,\r\n    author: PropTypes.string.isRequired,\r\n    publishDate: PropTypes.number.isRequired\r\n};\r\n\r\nexport default RelatedArticle;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RelatedArticle from './RelatedArticle';\r\nimport RichText from '../RichText/RichText';\r\n\r\nfunction RelatedArticles(props) {\r\n    return (\r\n        <>\r\n            <h4>\r\n                <RichText text={props.header} />\r\n            </h4>\r\n            <ul className='related-articles'>\r\n                {props.articles.map(x => (\r\n                    <RelatedArticle\r\n                        key={x.url}\r\n                        url={x.url}\r\n                        title={x.title}\r\n                        description={x.description}\r\n                        photo={x.photo}\r\n                        author={x.author}\r\n                        publishDate={x.publish_date}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nRelatedArticles.propTypes = {\r\n    header: PropTypes.object.isRequired,\r\n    articles: PropTypes.array.isRequired\r\n};\r\n\r\nexport default RelatedArticles;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withIV } from '../IVContext';\r\nimport Caption from './Caption';\r\nimport { getPageBlock } from '../../../Utils/InstantView';\r\n\r\nfunction Slideshow(props) {\r\n    const { pageBlocks, caption, iv } = props;\r\n\r\n    return (\r\n        <div className='slideshow'>\r\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\r\n            <Caption text={caption.text} credit={caption.credit} />\r\n        </div>\r\n    );\r\n}\r\n\r\nSlideshow.propTypes = {\r\n    pageBlocks: PropTypes.array.isRequired,\r\n    caption: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withIV(Slideshow);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from '../RichText/RichText';\r\n\r\nfunction Subheader(props) {\r\n    return (\r\n        <h4>\r\n            <RichText text={props.subheader} />\r\n        </h4>\r\n    );\r\n}\r\n\r\nSubheader.propTypes = {\r\n    subheader: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Subheader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from '../RichText/RichText';\r\n\r\nfunction Subtitle(props) {\r\n    return (\r\n        <h2>\r\n            <RichText text={props.subtitle} />\r\n        </h2>\r\n    );\r\n}\r\n\r\nSubtitle.propTypes = {\r\n    subtitle: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Subtitle;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from '../RichText/RichText';\r\n\r\nfunction Title(props) {\r\n    return (\r\n        <h1>\r\n            <RichText text={props.title} />\r\n        </h1>\r\n    );\r\n}\r\n\r\nTitle.propTypes = {\r\n    title: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Title;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from './RichText';\r\n\r\nfunction Bold(props) {\r\n    return (\r\n        <b>\r\n            <RichText text={props.text} />\r\n        </b>\r\n    );\r\n}\r\n\r\nBold.propTypes = {\r\n    text: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Bold;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from './RichText';\r\n\r\nfunction EmailAddress(props) {\r\n    return (\r\n        <a href={`mailto:${props.emailAddress}`}>\r\n            <RichText text={props.text} />\r\n        </a>\r\n    );\r\n}\r\n\r\nEmailAddress.propTypes = {\r\n    emailAddress: PropTypes.string.isRequired,\r\n    text: PropTypes.object.isRequired\r\n};\r\n\r\nexport default EmailAddress;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from './RichText';\r\n\r\nfunction Fixed(props) {\r\n    return (\r\n        <code>\r\n            <RichText text={props.text} />\r\n        </code>\r\n    );\r\n}\r\n\r\nFixed.propTypes = {\r\n    text: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Fixed;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport FileStore from '../../../Stores/FileStore';\r\n\r\nclass Icon extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n    }\r\n\r\n    onClientUpdateDocumentThumbnailBlob = update => {\r\n        const { document } = this.props;\r\n        if (!document) return;\r\n\r\n        const { thumbnail } = document;\r\n        if (!thumbnail) return;\r\n\r\n        const file = thumbnail.photo;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateDocumentBlob = update => {\r\n        const { document } = this.props;\r\n        if (!document) return;\r\n\r\n        const file = document.document;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    emptyPlaceholderSrc(width, height) {\r\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\r\n    }\r\n\r\n    render() {\r\n        const { document, height, width } = this.props;\r\n        if (!document) return null;\r\n\r\n        const { thumbnail, document: file } = document;\r\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\r\n        const src = getSrc(file);\r\n\r\n        return (\r\n            <img\r\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\r\n                width={width > 0 ? width : null}\r\n                height={height > 0 ? height : null}\r\n                draggable={false}\r\n                alt=''\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nIcon.propTypes = {\r\n    document: PropTypes.object.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    width: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Icon;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from './RichText';\r\n\r\nfunction Italic(props) {\r\n    return (\r\n        <i>\r\n            <RichText text={props.text} />\r\n        </i>\r\n    );\r\n}\r\n\r\nItalic.propTypes = {\r\n    text: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Italic;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from './RichText';\r\n\r\nfunction Marked(props) {\r\n    return (\r\n        <mark>\r\n            <RichText text={props.text} />\r\n        </mark>\r\n    );\r\n}\r\n\r\nMarked.propTypes = {\r\n    text: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Marked;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from './RichText';\r\n\r\nfunction PhoneNumber(props) {\r\n    return (\r\n        <a href={`tel:${props.phoneNumber}`}>\r\n            <RichText text={props.text} />\r\n        </a>\r\n    );\r\n}\r\n\r\nPhoneNumber.propTypes = {\r\n    phoneNumber: PropTypes.string.isRequired,\r\n    text: PropTypes.object.isRequired\r\n};\r\n\r\nexport default PhoneNumber;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Plain(props) {\r\n    return props.text;\r\n}\r\n\r\nPlain.propTypes = {\r\n    text: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Plain;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from './RichText';\r\n\r\nfunction Strikethrough(props) {\r\n    return (\r\n        <del>\r\n            <RichText text={props.text} />\r\n        </del>\r\n    );\r\n}\r\n\r\nStrikethrough.propTypes = {\r\n    text: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Strikethrough;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from './RichText';\r\n\r\nfunction Subscript(props) {\r\n    return (\r\n        <sub>\r\n            <RichText text={props.text} />\r\n        </sub>\r\n    );\r\n}\r\n\r\nSubscript.propTypes = {\r\n    text: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Subscript;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from './RichText';\r\n\r\nfunction Superscript(props) {\r\n    return (\r\n        <sup>\r\n            <RichText text={props.text} />\r\n        </sup>\r\n    );\r\n}\r\n\r\nSuperscript.propTypes = {\r\n    text: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Superscript;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from './RichText';\r\n\r\nfunction Anchor(props) {\r\n    return (\r\n        <a id={props.name}>\r\n            <RichText text={props.text} />\r\n        </a>\r\n    );\r\n}\r\n\r\nAnchor.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    text: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Anchor;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from './RichText';\r\n\r\nfunction Texts(props) {\r\n    return (\r\n        <>\r\n            {props.texts.map((x, index) => (\r\n                <RichText key={index} text={x} />\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\nTexts.propTypes = {\r\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};\r\n\r\nexport default Texts;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from './RichText';\r\n\r\nfunction Underline(props) {\r\n    return (\r\n        <ins>\r\n            <RichText text={props.text} />\r\n        </ins>\r\n    );\r\n}\r\n\r\nUnderline.propTypes = {\r\n    text: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Underline;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from './RichText';\r\nimport SafeLink from '../../Additional/SafeLink';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\n\r\nclass Url extends React.Component {\r\n    handleClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { url } = this.props;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateInstantViewUrl',\r\n            url\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { text, url } = this.props;\r\n\r\n        return (\r\n            <SafeLink url={url} onClick={this.handleClick}>\r\n                <RichText text={text} />\r\n            </SafeLink>\r\n        );\r\n    }\r\n}\r\n\r\nUrl.propTypes = {\r\n    text: PropTypes.object.isRequired,\r\n    url: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Url;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withIV } from '../IVContext';\r\nimport RichText from '../RichText/RichText';\r\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\r\n\r\nfunction Table(props) {\r\n    const { caption, cells, isBordered, isStriped, iv } = props;\r\n\r\n    return (\r\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\r\n            {!isEmptyText(caption) && (\r\n                <caption>\r\n                    <RichText text={caption} />\r\n                </caption>\r\n            )}\r\n            <tbody>\r\n                {cells.map((row, rowIndex) => {\r\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nTable.propTypes = {\r\n    caption: PropTypes.object.isRequired,\r\n    cells: PropTypes.array.isRequired,\r\n    isBordered: PropTypes.bool.isRequired,\r\n    isStriped: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default withIV(Table);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RichText from '../RichText/RichText';\r\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\r\n\r\nfunction TableCell(props) {\r\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\r\n    if (isEmptyText(text)) return null;\r\n\r\n    const attributes = {\r\n        colSpan: colspan,\r\n        rowSpan: rowspan,\r\n        align: getHorizontalAlignment(align),\r\n        valign: getVerticalAlignment(valign)\r\n    };\r\n\r\n    const content = <RichText text={text} />;\r\n\r\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\r\n}\r\n\r\nTableCell.propTypes = {\r\n    text: PropTypes.object.isRequired,\r\n    isHeader: PropTypes.bool.isRequired,\r\n    colspan: PropTypes.number.isRequired,\r\n    rowspan: PropTypes.number.isRequired,\r\n    align: PropTypes.object.isRequired,\r\n    valign: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableCell;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Caption from './Caption';\r\nimport Location from '../../Message/Media/Location';\r\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\r\n\r\nfunction Map(props) {\r\n    const { location, caption } = props;\r\n\r\n    return (\r\n        <figure>\r\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\r\n            <Caption text={caption.text} credit={caption.credit} />\r\n        </figure>\r\n    );\r\n}\r\n\r\nMap.propTypes = {\r\n    location: PropTypes.object.isRequired,\r\n    zoom: PropTypes.number.isRequired,\r\n    width: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    caption: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Map;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MediaAudio from '../../Message/Media/Audio';\r\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\r\nimport Caption from './Caption';\r\n\r\nfunction Audio(props) {\r\n    const { audio, caption, openMedia } = props;\r\n\r\n    return (\r\n        <figure>\r\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\r\n            <Caption text={caption.text} credit={caption.credit} />\r\n        </figure>\r\n    );\r\n}\r\n\r\nAudio.propTypes = {\r\n    audio: PropTypes.object,\r\n    caption: PropTypes.object.isRequired,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default Audio;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ChatLink(props) {\r\n    return <div />;\r\n}\r\n\r\nChatLink.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    photo: PropTypes.object,\r\n    username: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ChatLink;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Caption from './Caption';\r\nimport MediaVideo from '../../../Components/Message/Media/Video';\r\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\r\n\r\nfunction Video(props) {\r\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\r\n\r\n    return (\r\n        <figure>\r\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\r\n            <Caption text={caption.text} credit={caption.credit} />\r\n        </figure>\r\n    );\r\n}\r\n\r\nVideo.propTypes = {\r\n    video: PropTypes.object,\r\n    caption: PropTypes.object.isRequired,\r\n    needAutoplay: PropTypes.bool.isRequired,\r\n    isLooped: PropTypes.bool.isRequired,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default Video;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSaveRef } from '../../Utils/HOC';\r\nimport { withIV } from './IVContext';\r\nimport { getPageBlock } from '../../Utils/InstantView';\r\nimport './Article.css';\r\n\r\nclass Article extends React.PureComponent {\r\n    render() {\r\n        const { forwardedRef, iv } = this.props;\r\n        if (!iv) return null;\r\n\r\n        const { page_blocks, is_rtl } = iv;\r\n        if (!page_blocks) return;\r\n\r\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\r\n\r\n        return (\r\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\r\n                {blocks}\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nArticle.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withIV\r\n);\r\n\r\nexport default enhance(Article);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\r\n    'Left'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\r\n    'Share'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MediaCaption.css';\r\n\r\nclass MediaCaption extends React.Component {\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { text } = this.props;\r\n\r\n        return (\r\n            <div className='media-caption' onClick={this.handleClick}>\r\n                <div className='media-caption-text'>{text}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaCaption.propTypes = {\r\n    text: PropTypes.object\r\n};\r\n\r\nMediaCaption.defaultProps = {};\r\n\r\nexport default MediaCaption;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport FileProgress from './FileProgress';\r\nimport MediaCaption from './MediaCaption';\r\nimport { getSrc, getViewerFile, getViewerThumbnail } from '../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../Utils/Media';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport Caption from '../InstantView/Blocks/Caption';\r\nimport { isEmptyText } from '../../Utils/InstantView';\r\nimport SafeLink from '../Additional/SafeLink';\r\n\r\nclass InstantViewMediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { media, size, caption, url } = props;\r\n\r\n        if (media !== state.prevMedia) {\r\n            let [width, height, file, mimeType] = getViewerFile(media, size);\r\n            file = FileStore.get(file.id) || file;\r\n\r\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\r\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\r\n\r\n            return {\r\n                prevMedia: media,\r\n\r\n                speed: 1,\r\n                isPlaying: false,\r\n                width,\r\n                height,\r\n                file,\r\n                src: getSrc(file),\r\n                mimeType,\r\n                thumbnailWidth,\r\n                thumbnailHeight,\r\n                thumbnail\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { src } = this.state;\r\n\r\n        if (prevState.src !== src) {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        }\r\n    }\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { fileId } = update;\r\n        const { media, size } = this.props;\r\n        const { file } = this.state;\r\n\r\n        if (file && file.id === fileId) {\r\n            const [width, height, file, mimeType] = getViewerFile(media, size);\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src: getSrc(file),\r\n                mimeType\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaThumbnailBlob = update => {\r\n        const { fileId } = update;\r\n        const { thumbnail: file } = this.state;\r\n\r\n        if (file && file.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { media, caption, url } = this.props;\r\n        if (!media) return null;\r\n\r\n        const {\r\n            width,\r\n            height,\r\n            file,\r\n            src,\r\n            mimeType,\r\n            thumbnailWidth,\r\n            thumbnailHeight,\r\n            thumbnail,\r\n            isPlaying\r\n        } = this.state;\r\n        if (!file) return null;\r\n\r\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\r\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\r\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\r\n\r\n        let videoWidth = width;\r\n        let videoHeight = height;\r\n        if (Math.max(videoWidth, videoHeight) > 640) {\r\n            const scale = 640 / Math.max(videoWidth, videoHeight);\r\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\r\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\r\n        }\r\n\r\n        let content = null;\r\n        const source = src ? <source src={src} type={mimeType} /> : null;\r\n        switch (media['@type']) {\r\n            case 'video': {\r\n                content = (\r\n                    <div className='media-viewer-content-wrapper'>\r\n                        <video\r\n                            ref={this.videoRef}\r\n                            className='media-viewer-content-video-player'\r\n                            onClick={this.handleContentClick}\r\n                            controls\r\n                            autoPlay\r\n                            width={videoWidth}\r\n                            height={videoHeight}\r\n                            onPlay={() => {\r\n                                this.setState({ isPlaying: true });\r\n                                TdLibController.clientUpdate({\r\n                                    '@type': 'clientUpdateMediaViewerPlay'\r\n                                });\r\n                            }}\r\n                            onCanPlay={() => {\r\n                                const player = this.videoRef.current;\r\n                                if (player) {\r\n                                    player.volume = PlayerStore.volume;\r\n                                }\r\n                            }}\r\n                            onPause={() => {\r\n                                TdLibController.clientUpdate({\r\n                                    '@type': 'clientUpdateMediaViewerPause'\r\n                                });\r\n                            }}\r\n                            onEnded={() => {\r\n                                TdLibController.clientUpdate({\r\n                                    '@type': 'clientUpdateMediaViewerEnded'\r\n                                });\r\n                            }}\r\n                            onVolumeChange={() => {\r\n                                const player = this.videoRef.current;\r\n                                if (player) {\r\n                                    TdLibController.clientUpdate({\r\n                                        '@type': 'clientUpdateMediaVolume',\r\n                                        volume: player.volume\r\n                                    });\r\n                                }\r\n                            }}>\r\n                            {source}\r\n                        </video>\r\n                        {!isPlaying &&\r\n                            (!src && thumbnailSrc ? (\r\n                                <img\r\n                                    className={classNames('media-viewer-content-video-thumbnail', {\r\n                                        'media-blurred': isBlurred\r\n                                    })}\r\n                                    src={thumbnailSrc}\r\n                                    alt=''\r\n                                    width={videoWidth}\r\n                                    height={videoHeight}\r\n                                />\r\n                            ) : (\r\n                                <div\r\n                                    className='media-viewer-content-video-thumbnail'\r\n                                    style={{\r\n                                        width: videoWidth,\r\n                                        height: videoHeight\r\n                                    }}\r\n                                />\r\n                            ))}\r\n                    </div>\r\n                );\r\n                break;\r\n            }\r\n            case 'animation': {\r\n                content = (\r\n                    <div className='media-viewer-content-wrapper'>\r\n                        <video\r\n                            ref={this.videoRef}\r\n                            className='media-viewer-content-video-player'\r\n                            onClick={this.handleContentClick}\r\n                            loop\r\n                            autoPlay\r\n                            width={videoWidth}\r\n                            height={videoHeight}\r\n                            onPlay={() => {\r\n                                this.setState({ isPlaying: true });\r\n                            }}>\r\n                            {source}\r\n                        </video>\r\n                        {!isPlaying &&\r\n                            (!src && thumbnailSrc ? (\r\n                                <img\r\n                                    className={classNames('media-viewer-content-video-thumbnail', {\r\n                                        'media-blurred': isBlurred\r\n                                    })}\r\n                                    src={thumbnailSrc}\r\n                                    alt=''\r\n                                    width={videoWidth}\r\n                                    height={videoHeight}\r\n                                />\r\n                            ) : (\r\n                                <div\r\n                                    className='media-viewer-content-video-thumbnail'\r\n                                    style={{\r\n                                        width: videoWidth,\r\n                                        height: videoHeight\r\n                                    }}\r\n                                />\r\n                            ))}\r\n                    </div>\r\n                );\r\n                break;\r\n            }\r\n            default: {\r\n                content = (\r\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='media-viewer-content'>\r\n                {content}\r\n                <FileProgress file={file} zIndex={2} />\r\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\r\n                    <MediaCaption\r\n                        text={\r\n                            <>\r\n                                <Caption text={caption.text} credit={caption.credit} />\r\n                                <SafeLink url={url} />\r\n                            </>\r\n                        }\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewMediaViewerContent.propTypes = {\r\n    media: PropTypes.object.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    caption: PropTypes.object,\r\n    url: PropTypes.string\r\n};\r\n\r\nexport default InstantViewMediaViewerContent;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaViewerButton.css';\r\n\r\nclass MediaViewerButton extends React.Component {\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { disabled, onClick } = this.props;\r\n\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { disabled, grow, children, className, style } = this.props;\r\n\r\n        const cx = classNames(\r\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\r\n            { grow: grow },\r\n            className\r\n        );\r\n\r\n        return (\r\n            <div className={cx} style={style} onClick={this.handleClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerButton.propTypes = {\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default MediaViewerButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MediaViewerFooterText.css';\r\n\r\nclass MediaViewerFooterText extends React.Component {\r\n    render() {\r\n        const { title, subtitle, style } = this.props;\r\n\r\n        return (\r\n            <div className='media-viewer-footer-text' style={style}>\r\n                <div className='media-viewer-footer-text-wrapper'>\r\n                    <span>{title}</span>\r\n                    {Boolean(subtitle) && (\r\n                        <span>\r\n                            &nbsp;\r\n                            {subtitle}\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerFooterText.propTypes = {\r\n    title: PropTypes.string,\r\n    subtitle: PropTypes.string\r\n};\r\n\r\nexport default MediaViewerFooterText;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaViewerFooterButton.css';\r\n\r\nclass MediaViewerFooterButton extends React.Component {\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { onClick, disabled } = this.props;\r\n\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { checked, children, disabled, title } = this.props;\r\n\r\n        return (\r\n            <div\r\n                className={classNames('media-viewer-footer-button', {\r\n                    'media-viewer-footer-button-checked': checked,\r\n                    'media-viewer-footer-button-disabled': disabled\r\n                })}\r\n                title={title}\r\n                onClick={this.handleClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerFooterButton.propTypes = {\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    checked: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default MediaViewerFooterButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SaveIcon from '../../Assets/Icons/Download';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './MediaViewerFooterButton.css';\r\n\r\nclass MediaViewerDownloadButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { fileId } = props;\r\n\r\n        this.state = {\r\n            prevPropsFileId: fileId,\r\n            fileId: fileId,\r\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { fileId } = props;\r\n        const { prevPropsFileId } = state;\r\n\r\n        if (fileId !== prevPropsFileId) {\r\n            return {\r\n                prevPropsFileId: fileId,\r\n                fileId: fileId,\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n    }\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { fileId } = this.state;\r\n\r\n        if (fileId === update.fileId) {\r\n            this.setState({\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            });\r\n        }\r\n    };\r\n\r\n    static saveDisabled = fileId => {\r\n        return !Boolean(FileStore.getBlob(fileId));\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { onClick } = this.props;\r\n        const { disabled } = this.state;\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { title, children } = this.props;\r\n        const { disabled } = this.state;\r\n\r\n        return (\r\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\r\n                {children || <SaveIcon />}\r\n            </MediaViewerFooterButton>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerDownloadButton.propTypes = {\r\n    fileId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default MediaViewerDownloadButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withIV } from '../InstantView/IVContext';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\r\nimport {\r\n    cancelPreloadIVMediaViewerContent,\r\n    getViewerFile,\r\n    preloadIVMediaViewerContent,\r\n    saveMedia\r\n} from '../../Utils/File';\r\nimport { getInputMediaContent } from '../../Utils/Media';\r\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\r\nimport './InstantViewMediaViewer.css';\r\n\r\nclass InstantViewMediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            index: -1,\r\n            hasPreviousMedia: false,\r\n            hasNextMedia: false,\r\n            blocks: []\r\n        };\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (event.keyCode === 27) {\r\n            this.handleClose();\r\n        } else if (event.keyCode === 39) {\r\n            this.handlePrevious();\r\n        } else if (event.keyCode === 37) {\r\n            this.handleNext();\r\n        }\r\n    };\r\n\r\n    loadContent() {\r\n        const { iv, media } = this.props;\r\n\r\n        const blocks = getValidMediaBlocks(iv);\r\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\r\n\r\n        this.setState({\r\n            blocks,\r\n            index,\r\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\r\n            hasNextMedia: this.hasNextMedia(index, blocks)\r\n        });\r\n\r\n        preloadIVMediaViewerContent(index, blocks);\r\n    }\r\n\r\n    hasPreviousMedia(index, blocks) {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < blocks.length;\r\n    }\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        const nextIndex = index + 1;\r\n\r\n        if (!this.hasPreviousMedia(index, blocks)) return;\r\n\r\n        return this.loadMedia(nextIndex);\r\n    };\r\n\r\n    hasNextMedia(index, blocks) {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    }\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        const nextIndex = index - 1;\r\n\r\n        if (!this.hasNextMedia(index, blocks)) return;\r\n\r\n        return this.loadMedia(nextIndex);\r\n    };\r\n\r\n    loadMedia = index => {\r\n        const { blocks } = this.state;\r\n\r\n        if (index < 0) return false;\r\n        if (index >= blocks.length) return false;\r\n\r\n        this.setState({\r\n            index,\r\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\r\n            hasNextMedia: this.hasNextMedia(index, blocks)\r\n        });\r\n\r\n        preloadIVMediaViewerContent(index, blocks);\r\n        return true;\r\n    };\r\n\r\n    handleClose = () => {\r\n        setInstantViewViewerContent(null);\r\n\r\n        const { index, blocks } = this.state;\r\n        if (index !== -1) {\r\n            cancelPreloadIVMediaViewerContent(index, blocks);\r\n        }\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { media } = this.props;\r\n\r\n        const inputMessageContent = getInputMediaContent(media, null);\r\n        if (!inputMessageContent) return;\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { media } = this.props;\r\n\r\n        saveMedia(media, null);\r\n    };\r\n\r\n    render() {\r\n        const { size, t } = this.props;\r\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\r\n        if (!blocks) return null;\r\n        if (index === -1) return null;\r\n\r\n        const block = blocks[index];\r\n        const media = getBlockMedia(block);\r\n        const caption = getBlockCaption(block);\r\n        const url = getBlockUrl(block);\r\n\r\n        const [width, height, file] = getViewerFile(media, size);\r\n\r\n        let title = '';\r\n        if (media['@type'] === 'photo') {\r\n            title = t('AttachPhoto');\r\n        }\r\n        if (media['@type'] === 'video') {\r\n            title = t('AttachVideo');\r\n        } else if (media['@type'] === 'animation') {\r\n            title = t('AttachGif');\r\n        }\r\n        const maxCount = blocks.length;\r\n\r\n        return (\r\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\r\n                <div className='media-viewer-footer'>\r\n                    <MediaViewerFooterText\r\n                        title={title}\r\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\r\n                        style={{ marginLeft: 128 }}\r\n                    />\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\r\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper'>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                    <div className='media-viewer-content-column'>\r\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\r\n                    </div>\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewMediaViewer.propTypes = {\r\n    media: PropTypes.object.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    caption: PropTypes.object.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withIV\r\n);\r\n\r\nexport default enhance(InstantViewMediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Article from './Article';\r\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\r\nimport IVContext from './IVContext';\r\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport { itemsInView, throttle } from '../../Utils/Common';\r\nimport { getInnerBlocks } from '../../Utils/InstantView';\r\nimport { openInstantView } from '../../Actions/InstantView';\r\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\r\nimport { scrollTop } from '../../Utils/DOM';\r\nimport { IV_PHOTO_SIZE } from '../../Constants';\r\nimport InstantViewStore from '../../Stores/InstantViewStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InstantViewer.css';\r\n\r\nclass InstantViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.articleRef = React.createRef();\r\n        this.instantViewerRef = React.createRef();\r\n\r\n        this.state = {};\r\n\r\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.instantView !== state.prevInstantView) {\r\n            return {\r\n                prevInstantView: props.instantView,\r\n                hasPrev: InstantViewStore.hasPrev(),\r\n                hasScroll: false,\r\n                media: null,\r\n                caption: null,\r\n                url: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { instantView } = this.props;\r\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\r\n\r\n        if (instantView !== nextProps.instantView) {\r\n            return true;\r\n        }\r\n\r\n        if (hasScroll !== nextState.hasScroll) {\r\n            return true;\r\n        }\r\n\r\n        if (hasPrev !== nextState.hasPrev) {\r\n            return true;\r\n        }\r\n\r\n        if (media !== nextState.media) {\r\n            return true;\r\n        }\r\n\r\n        if (caption !== nextState.caption) {\r\n            return true;\r\n        }\r\n\r\n        if (url !== nextState.url) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        this.handleScroll();\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\r\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\r\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\r\n    }\r\n\r\n    onClientUpdateInstantViewViewerContent = update => {\r\n        const { content } = update;\r\n        if (!content) {\r\n            this.setState({ media: null, caption: null, url: null });\r\n            return;\r\n        }\r\n\r\n        const { media, caption, url, instantView } = content;\r\n\r\n        if (this.props.instantView !== instantView) return;\r\n\r\n        this.setState({ media, caption, url });\r\n    };\r\n\r\n    onClientUpdateInstantViewUrl = async update => {\r\n        console.log('[IV] clientUpdateInstantViewUrl', update);\r\n        const { url } = update;\r\n        const active = InstantViewStore.getCurrent();\r\n        const { instantView } = this.props;\r\n\r\n        if (active !== instantView) return;\r\n\r\n        if (instantView && url.startsWith(instantView.url)) {\r\n            const hash = new URL(url).hash;\r\n            if (url.indexOf('#') === url.length - 1) {\r\n                this.scrollTop('smooth');\r\n\r\n                return;\r\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        openInstantView(url);\r\n    };\r\n\r\n    scrollToHash(hash, behavior) {\r\n        if (!hash) return false;\r\n\r\n        const hiddenElement = document.getElementById(hash.substr(1));\r\n        if (hiddenElement) {\r\n            const details = [];\r\n            let finished = false;\r\n            let currentElement = hiddenElement;\r\n            do {\r\n                currentElement = currentElement.parentNode;\r\n                if (currentElement) {\r\n                    if (currentElement.nodeName === 'DETAILS') {\r\n                        details.push(currentElement);\r\n                    } else if (currentElement.nodeName === 'ARTICLE') {\r\n                        finished = true;\r\n                    }\r\n                } else {\r\n                    finished = true;\r\n                }\r\n            } while (!finished);\r\n\r\n            details.forEach(x => (x.open = true));\r\n\r\n            hiddenElement.scrollIntoView({\r\n                block: 'center',\r\n                behavior\r\n            });\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    scrollTop(behavior) {\r\n        const element = this.instantViewerRef.current;\r\n\r\n        switch (behavior) {\r\n            case 'smooth': {\r\n                scrollTop(element);\r\n                break;\r\n            }\r\n            default: {\r\n                element.scrollTo({\r\n                    top: 0,\r\n                    behavior\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { instantView, url } = this.props;\r\n        console.log('[IV] componentDidUpdate', instantView.url, instantView.url === prevProps.instantView.url);\r\n\r\n        const hash = new URL(instantView.url).hash;\r\n        if (prevProps.instantView !== instantView) {\r\n            if (prevProps.instantView.url !== instantView.url) {\r\n                if (instantView.url.indexOf('#') === instantView.url.length - 1) {\r\n                    console.log('[IV] componentDidUpdate scrollTop auto');\r\n                    this.scrollTop('auto');\r\n                } else if (hash) {\r\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\r\n                    this.scrollToHash(hash, 'auto');\r\n                } else {\r\n                    console.log('[IV] componentDidUpdate scrollTop auto');\r\n                    this.scrollTop('auto');\r\n                }\r\n            } else {\r\n                if (hash) {\r\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\r\n                    this.scrollToHash(hash, 'auto');\r\n                } else {\r\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\r\n                    this.scrollTop('smooth');\r\n                }\r\n            }\r\n\r\n            this.handleScroll();\r\n        }\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (event.keyCode === 27) {\r\n            const { media } = this.state;\r\n\r\n            if (media) {\r\n                setInstantViewViewerContent(null);\r\n                return;\r\n            }\r\n\r\n            this.handleClose();\r\n        }\r\n    };\r\n\r\n    handleClose() {\r\n        setInstantViewContent(null);\r\n    }\r\n\r\n    handleBack = () => {\r\n        const { hasPrev, hasScroll } = this.state;\r\n        if (hasScroll) {\r\n            this.scrollTop('smooth');\r\n            return;\r\n        }\r\n\r\n        if (hasPrev) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdatePrevInstantView'\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const element = this.instantViewerRef.current;\r\n        this.setState({\r\n            hasScroll: element.scrollTop > 50\r\n        });\r\n\r\n        this.updateItemsInView();\r\n    };\r\n\r\n    updateItemsInView() {\r\n        if (!this.mounted) return;\r\n\r\n        const { instantView } = this.props;\r\n        if (!instantView) return;\r\n\r\n        const { page_blocks } = instantView;\r\n\r\n        const blocks = new Map();\r\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\r\n\r\n        for (let i = 0; i < items.length; i++) {\r\n            const block = page_blocks[items[i]];\r\n            blocks.set(block, block);\r\n\r\n            const innerBlocks = getInnerBlocks(block);\r\n            innerBlocks.forEach(x => blocks.set(x, x));\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateBlocksInView',\r\n            blocks\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes, instantView } = this.props;\r\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\r\n        if (!instantView) return null;\r\n\r\n        return (\r\n            <IVContext.Provider value={instantView}>\r\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\r\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\r\n                        <MediaViewerButton\r\n                            className='instant-viewer-left-button'\r\n                            style={{ alignItems: 'flex-start' }}\r\n                            onClick={this.handleBack}>\r\n                            <NavigateBeforeIcon\r\n                                style={{\r\n                                    transition: 'transform 0.25s ease-out',\r\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\r\n                                }}\r\n                            />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                    <div className='instant-viewer-content-column'>\r\n                        <div>\r\n                            <Article ref={this.articleRef} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='instant-viewer-right-column'>\r\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\r\n                            <CloseIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\r\n            </IVContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewer.propTypes = {\r\n    instantView: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(InstantViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\r\nimport UserTile from './UserTile';\r\nimport ChatTile from './ChatTile';\r\nimport MessageAuthor from '../Message/MessageAuthor';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './MediaInfo.css';\r\n\r\nclass MediaInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { date } = message;\r\n\r\n        const userId = getSenderUserId(message);\r\n        const dateHint = getDateHint(date);\r\n\r\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\r\n\r\n        return (\r\n            <div className='media-info'>\r\n                <div className='media-info-wrapper'>\r\n                    {tileControl}\r\n                    <div className='media-info-content'>\r\n                        <div className='media-info-row'>\r\n                            <MessageAuthor chatId={chatId} userId={userId} />\r\n                        </div>\r\n                        <div className='media-info-row meta'>\r\n                            <span>{dateHint}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaInfo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default MediaInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FileProgress from './FileProgress';\r\nimport MediaCaption from './MediaCaption';\r\nimport { getAnimationData, getMediaFile, getMediaPreviewFile, getSrc } from '../../Utils/File';\r\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\r\nimport { isBlurredThumbnail } from '../../Utils/Media';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MediaViewerContent.css';\r\n\r\n// const Lottie = React.lazy(() => import('./Lottie'));\r\n\r\nclass MediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this.videoRef = React.createRef();\r\n        this.lottieRef = React.createRef();\r\n\r\n        this.updateAnimationData();\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId, size, t } = props;\r\n\r\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\r\n            let [width, height, file, mimeType] = getMediaFile(chatId, messageId, size);\r\n            file = FileStore.get(file.id) || file;\r\n\r\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\r\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\r\n\r\n            const message = MessageStore.get(chatId, messageId);\r\n            const text = getText(message, null, t);\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n\r\n                speed: 1,\r\n                isPlaying: false,\r\n                width,\r\n                height,\r\n                file,\r\n                src: getSrc(file),\r\n                mimeType,\r\n                text,\r\n                thumbnailWidth,\r\n                thumbnailHeight,\r\n                thumbnail\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, messageId } = this.props;\r\n        const { src } = this.state;\r\n\r\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\r\n            this.updateAnimationData();\r\n        }\r\n\r\n        if (prevState.src !== src) {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        }\r\n    }\r\n\r\n    onClientUpdateDocumentBlob = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.updateAnimationData();\r\n        }\r\n    };\r\n\r\n    updateAnimationData = async () => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (!isLottieMessage(chatId, messageId)) {\r\n            return;\r\n        }\r\n\r\n        const { file } = this.state;\r\n        const animationData = await getAnimationData(file);\r\n\r\n        this.setState({ animationData });\r\n    };\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { chatId, messageId, size } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const [width, height, file, mimeType] = getMediaFile(chatId, messageId, size);\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src: getSrc(file),\r\n                mimeType\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaThumbnailBlob = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\r\n            this.setState({\r\n                thumbnailWidth: width,\r\n                thumbnailHeight: height,\r\n                thumbnail: file\r\n            });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, messageId, size, t } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId === chat_id && messageId === message_id) {\r\n            const [width, height, file, mimeType] = getMediaFile(chatId, messageId, size);\r\n            const message = MessageStore.get(chatId, messageId);\r\n            const text = getText(message, null, t);\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src: getSrc(file),\r\n                mimeType,\r\n                text\r\n            });\r\n        }\r\n    };\r\n\r\n    handleContentClick = event => {\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    changeSpeed = speed => {\r\n        this.setState({\r\n            speed\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            animationData,\r\n            width,\r\n            height,\r\n            file,\r\n            src,\r\n            mimeType,\r\n            text,\r\n            thumbnailWidth,\r\n            thumbnailHeight,\r\n            thumbnail,\r\n            isPlaying\r\n        } = this.state;\r\n        if (!file) return null;\r\n\r\n        // const src = getSrc(file);\r\n\r\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\r\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\r\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\r\n\r\n        const isVideo = isVideoMessage(chatId, messageId);\r\n        const isAnimation = isAnimationMessage(chatId, messageId);\r\n        const isLottie = isLottieMessage(chatId, messageId);\r\n\r\n        let videoWidth = width;\r\n        let videoHeight = height;\r\n        if (Math.max(videoWidth, videoHeight) > 640) {\r\n            const scale = 640 / Math.max(videoWidth, videoHeight);\r\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\r\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\r\n        }\r\n\r\n        let content = null;\r\n        const source = src ? <source src={src} type={mimeType} /> : null;\r\n        if (isVideo) {\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <video\r\n                        ref={this.videoRef}\r\n                        className='media-viewer-content-video-player'\r\n                        onClick={this.handleContentClick}\r\n                        controls\r\n                        autoPlay\r\n                        width={videoWidth}\r\n                        height={videoHeight}\r\n                        onPlay={() => {\r\n                            this.setState({ isPlaying: true });\r\n                            TdLibController.clientUpdate({\r\n                                '@type': 'clientUpdateMediaViewerPlay'\r\n                            });\r\n                        }}\r\n                        onCanPlay={() => {\r\n                            const player = this.videoRef.current;\r\n                            if (player) {\r\n                                player.volume = PlayerStore.volume;\r\n                            }\r\n                        }}\r\n                        onPause={() => {\r\n                            TdLibController.clientUpdate({\r\n                                '@type': 'clientUpdateMediaViewerPause'\r\n                            });\r\n                        }}\r\n                        onEnded={() => {\r\n                            TdLibController.clientUpdate({\r\n                                '@type': 'clientUpdateMediaViewerEnded'\r\n                            });\r\n                        }}\r\n                        onVolumeChange={() => {\r\n                            const player = this.videoRef.current;\r\n                            if (player) {\r\n                                TdLibController.clientUpdate({\r\n                                    '@type': 'clientUpdateMediaVolume',\r\n                                    volume: player.volume\r\n                                });\r\n                            }\r\n                        }}>\r\n                        {source}\r\n                    </video>\r\n                    {!isPlaying &&\r\n                        (!src && thumbnailSrc ? (\r\n                            <img\r\n                                className={classNames('media-viewer-content-video-thumbnail', {\r\n                                    'media-blurred': isBlurred\r\n                                })}\r\n                                src={thumbnailSrc}\r\n                                alt=''\r\n                                width={videoWidth}\r\n                                height={videoHeight}\r\n                            />\r\n                        ) : (\r\n                            <div\r\n                                className='media-viewer-content-video-thumbnail'\r\n                                style={{\r\n                                    width: videoWidth,\r\n                                    height: videoHeight\r\n                                }}\r\n                            />\r\n                        ))}\r\n                </div>\r\n            );\r\n        } else if (isAnimation) {\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <video\r\n                        ref={this.videoRef}\r\n                        className='media-viewer-content-video-player'\r\n                        onClick={this.handleContentClick}\r\n                        loop\r\n                        autoPlay\r\n                        width={videoWidth}\r\n                        height={videoHeight}\r\n                        onPlay={() => {\r\n                            this.setState({ isPlaying: true });\r\n                        }}>\r\n                        {source}\r\n                    </video>\r\n                    {!isPlaying &&\r\n                        (!src && thumbnailSrc ? (\r\n                            <img\r\n                                className={classNames('media-viewer-content-video-thumbnail', {\r\n                                    'media-blurred': isBlurred\r\n                                })}\r\n                                src={thumbnailSrc}\r\n                                alt=''\r\n                                width={videoWidth}\r\n                                height={videoHeight}\r\n                            />\r\n                        ) : (\r\n                            <div\r\n                                className='media-viewer-content-video-thumbnail'\r\n                                style={{\r\n                                    width: videoWidth,\r\n                                    height: videoHeight\r\n                                }}\r\n                            />\r\n                        ))}\r\n                </div>\r\n            );\r\n        } else if (isLottie) {\r\n            const defaultOptions = {\r\n                loop: true,\r\n                autoplay: true,\r\n                //path: src,\r\n                animationData: animationData,\r\n                rendererSettings: {\r\n                    preserveAspectRatio: 'xMidYMid slice'\r\n                }\r\n            };\r\n            const { speed } = this.state;\r\n\r\n            content = null;\r\n            // content = (\r\n            //     <Lottie\r\n            //         ref={this.lottieRef}\r\n            //         speed={speed}\r\n            //         options={defaultOptions}\r\n            //         height='auto'\r\n            //         width={400}\r\n            //         isStopped={false}\r\n            //         isPaused={false}\r\n            //     />\r\n            // );\r\n        } else {\r\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\r\n        }\r\n\r\n        return (\r\n            <div className='media-viewer-content'>\r\n                <React.Suspense fallback=''>{content}</React.Suspense>\r\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\r\n                <FileProgress file={file} zIndex={2} />\r\n                {text && text.length > 0 && <MediaCaption text={text} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerContent.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    size: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(MediaViewerContent);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport MediaInfo from '../Tile/MediaInfo';\r\nimport MediaViewerContent from './MediaViewerContent';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\r\nimport {\r\n    cancelPreloadMediaViewerContent,\r\n    getMediaFile,\r\n    loadMediaViewerContent,\r\n    preloadMediaViewerContent,\r\n    saveMedia\r\n} from '../../Utils/File';\r\nimport {\r\n    filterDuplicateMessages,\r\n    isAnimationMessage,\r\n    isLottieMessage,\r\n    isMediaContent,\r\n    isVideoMessage\r\n} from '../../Utils/Message';\r\nimport { between } from '../../Utils/Common';\r\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MediaViewer.css';\r\n\r\nclass MediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.contentRef = React.createRef();\r\n        this.history = [];\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        this.state = {\r\n            speed: 1,\r\n            background: 'media-viewer-default',\r\n            prevChatId: chatId,\r\n            prevMessageId: messageId,\r\n            currentMessageId: messageId,\r\n            hasNextMedia: false,\r\n            hasPreviousMedia: false,\r\n            deleteConfirmationOpened: false,\r\n            deleteForAll: true\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            background,\r\n            currentMessageId,\r\n            deleteConfirmationOpened,\r\n            firstSliceLoaded,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            speed,\r\n            totalCount\r\n        } = this.state;\r\n\r\n        if (nextState.background !== background) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentMessageId !== currentMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasNextMedia !== hasNextMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.totalCount !== totalCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.speed !== speed) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadHistory();\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (event.keyCode === 27) {\r\n            const { deleteConfirmationOpened } = this.state;\r\n            if (deleteConfirmationOpened) return;\r\n\r\n            this.handleClose();\r\n        } else if (event.keyCode === 39) {\r\n            this.handleNext();\r\n        } else if (event.keyCode === 37) {\r\n            this.handlePrevious();\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id, new_content, old_content } = update;\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        const message = MessageStore.get(chat_id, message_id);\r\n        if (!message) return;\r\n\r\n        loadMediaViewerContent([message]);\r\n\r\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\r\n        if (addMessage) {\r\n            if (\r\n                this.history.length >= 2 &&\r\n                (this.firstSliceLoaded ||\r\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\r\n            ) {\r\n                let inserted = false;\r\n                let history = [];\r\n                for (let i = 0; i < this.history.length; i++) {\r\n                    if (this.history[i].id > message_id) {\r\n                        history.push(this.history[i]);\r\n                    } else {\r\n                        if (!inserted) {\r\n                            inserted = true;\r\n                            history.push(message);\r\n                        }\r\n                        history.push(this.history[i]);\r\n                    }\r\n                }\r\n                this.history = history;\r\n            }\r\n\r\n            const index = this.history.findIndex(x => x.id === currentMessageId);\r\n            this.setState({\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index),\r\n                totalCount: totalCount + 1\r\n            });\r\n        }\r\n\r\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\r\n        if (removeMessage) {\r\n            let oldHistory = this.history;\r\n            this.history = this.history.filter(x => x.id !== message_id);\r\n\r\n            if (currentMessageId === message_id) {\r\n                const filterMap = new Map();\r\n                filterMap.set(message_id, message_id);\r\n\r\n                this.moveToNextMedia(oldHistory, filterMap);\r\n                this.setState({\r\n                    totalCount: Math.max(totalCount - 1, 0)\r\n                });\r\n            } else {\r\n                const index = this.history.findIndex(x => x.id === currentMessageId);\r\n                this.setState({\r\n                    hasNextMedia: this.hasNextMedia(index),\r\n                    hasPreviousMedia: this.hasPreviousMedia(index),\r\n                    totalCount: Math.max(totalCount - 1, 0)\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chat_id, message_ids, is_permanent } = update;\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        if (!is_permanent) return;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\r\n            accumulator.set(currentId, currentId);\r\n            return accumulator;\r\n        }, new Map());\r\n\r\n        const oldHistory = this.history;\r\n        let deletedCount = oldHistory.length;\r\n\r\n        this.history = this.history.filter(x => !filterMap.has(x.id));\r\n        deletedCount -= this.history.length;\r\n\r\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\r\n\r\n        if (!this.history.length) {\r\n            setMediaViewerContent(null);\r\n            return;\r\n        }\r\n\r\n        if (filterMap.has(currentMessageId)) {\r\n            this.moveToNextMedia(oldHistory, filterMap);\r\n        }\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        const { message } = update;\r\n        if (!message) return;\r\n        if (!isMediaContent(message.content)) return;\r\n\r\n        if (message.chat_id !== chatId) return;\r\n        if (!this.firstSliceLoaded) return;\r\n\r\n        this.history = [message].concat(this.history);\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: totalCount + 1\r\n        });\r\n    };\r\n\r\n    getFilter = (chatId, messageId) => {\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageChatChangePhoto': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterChatPhoto'\r\n                };\r\n            }\r\n            case 'messagePhoto': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\r\n                };\r\n            }\r\n            case 'messageVideo': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\r\n                };\r\n            }\r\n            default: {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n\r\n    loadHistory = async () => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: messageId,\r\n                offset: -MEDIA_SLICE_LIMIT,\r\n                limit: 2 * MEDIA_SLICE_LIMIT,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.history = result.messages;\r\n        this.firstSliceLoaded = result.messages.length === 0;\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index)\r\n        });\r\n\r\n        if (index === -1) {\r\n            this.history = [MessageStore.get(chatId, currentMessageId)];\r\n            preloadMediaViewerContent(0, this.history);\r\n        } else {\r\n            preloadMediaViewerContent(index, this.history);\r\n\r\n            const filter = this.getFilter(chatId, messageId);\r\n            if (!filter) return;\r\n\r\n            const maxCount = 1500;\r\n            let count = 0;\r\n            while (!this.firstSliceLoaded && count < maxCount) {\r\n                const result = await TdLibController.send({\r\n                    '@type': 'searchChatMessages',\r\n                    chat_id: chatId,\r\n                    query: '',\r\n                    sender_user_id: 0,\r\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\r\n                    offset: -99,\r\n                    limit: 99 + 1,\r\n                    filter: filter\r\n                });\r\n                count += result.messages.length;\r\n\r\n                filterDuplicateMessages(result, this.history);\r\n                MessageStore.setItems(result.messages);\r\n\r\n                this.history = result.messages.concat(this.history);\r\n                this.firstSliceLoaded = result.messages.length === 0;\r\n\r\n                const { currentMessageId } = this.state;\r\n                const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n                this.setState({\r\n                    hasNextMedia: this.hasNextMedia(index),\r\n                    hasPreviousMedia: this.hasPreviousMedia(index),\r\n                    firstSliceLoaded: this.firstSliceLoaded,\r\n                    totalCount: result.total_count\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        setMediaViewerContent(null);\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        if (index !== -1) {\r\n            cancelPreloadMediaViewerContent(index, this.history);\r\n        }\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        let media = null;\r\n        switch (content['@type']) {\r\n            case 'messageAnimation': {\r\n                const { animation } = content;\r\n\r\n                media = animation;\r\n                break;\r\n            }\r\n            case 'messageChatChangePhoto': {\r\n                const { photo } = content;\r\n\r\n                media = photo;\r\n                break;\r\n            }\r\n            case 'messageDocument': {\r\n                const { document } = content;\r\n\r\n                media = document;\r\n                break;\r\n            }\r\n            case 'messagePhoto': {\r\n                const { photo } = content;\r\n\r\n                media = photo;\r\n                break;\r\n            }\r\n            case 'messageText': {\r\n                const { web_page } = content;\r\n                if (!web_page) return;\r\n\r\n                const { animation, document, photo, video } = web_page;\r\n\r\n                if (animation) {\r\n                    media = animation;\r\n                    break;\r\n                }\r\n\r\n                if (document) {\r\n                    media = document;\r\n                    break;\r\n                }\r\n\r\n                if (photo) {\r\n                    media = photo;\r\n                    break;\r\n                }\r\n\r\n                if (video) {\r\n                    media = video;\r\n                    break;\r\n                }\r\n                break;\r\n            }\r\n            case 'messageVideo': {\r\n                const { video } = content;\r\n\r\n                media = video;\r\n                break;\r\n            }\r\n        }\r\n\r\n        saveMedia(media, message);\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        forwardMessages(chatId, [currentMessageId]);\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleDialogOpen();\r\n    };\r\n\r\n    hasPreviousMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < this.history.length;\r\n    };\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        const nextIndex = index + 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadPrevious = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: currentMessageId,\r\n                offset: 0,\r\n                limit: MEDIA_SLICE_LIMIT,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.history = this.history.concat(result.messages);\r\n\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: result.total_count\r\n        });\r\n    };\r\n\r\n    hasNextMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    };\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        const nextIndex = index - 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadNext = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: currentMessageId,\r\n                offset: -MEDIA_SLICE_LIMIT,\r\n                limit: MEDIA_SLICE_LIMIT + 1,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.firstSliceLoaded = result.messages.length === 0;\r\n        this.history = result.messages.concat(this.history);\r\n\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            firstSliceLoaded: this.firstSliceLoaded,\r\n            totalCount: result.total_count\r\n        });\r\n    };\r\n\r\n    loadMedia = (index, callback) => {\r\n        if (index < 0) return false;\r\n        if (index >= this.history.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                currentMessageId: this.history[index].id,\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index)\r\n            },\r\n            callback\r\n        );\r\n\r\n        preloadMediaViewerContent(index, this.history);\r\n        return true;\r\n    };\r\n\r\n    moveToNextMedia = (oldHistory, filterMap) => {\r\n        const { currentMessageId } = this.state;\r\n\r\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\r\n        let nextId = 0;\r\n        for (let i = index - 1; i >= 0; i--) {\r\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\r\n                nextId = oldHistory[i].id;\r\n                break;\r\n            }\r\n        }\r\n        if (!nextId) {\r\n            for (let i = index + 1; i < oldHistory.length; i++) {\r\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\r\n                    nextId = oldHistory[i].id;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!nextId) return;\r\n\r\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            } else if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    handleDialogOpen = () => {\r\n        this.setState({ deleteConfirmationOpened: true });\r\n    };\r\n\r\n    handleDialogClose = () => {\r\n        this.setState({ deleteConfirmationOpened: false });\r\n    };\r\n\r\n    handleDone = () => {\r\n        this.setState({ deleteConfirmationOpened: false });\r\n\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, deleteForAll } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n\r\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\r\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\r\n        if (!canBeDeleted) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteMessages',\r\n            chat_id: chatId,\r\n            message_ids: [currentMessageId],\r\n            revoke: can_be_deleted_for_all_users && deleteForAll\r\n        });\r\n    };\r\n\r\n    handleChangeDeleteForAll = event => {\r\n        this.setState({ deleteForAll: event.target.checked });\r\n    };\r\n\r\n    handleInvertColors = () => {\r\n        const { background } = this.state;\r\n\r\n        let nextBackground = 'media-viewer-default';\r\n        switch (background) {\r\n            case 'media-viewer-default': {\r\n                nextBackground = 'media-viewer-dark';\r\n                break;\r\n            }\r\n            case 'media-viewer-dark': {\r\n                nextBackground = 'media-viewer-light';\r\n                break;\r\n            }\r\n            case 'media-viewer-light': {\r\n                nextBackground = 'media-viewer-default';\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            background: nextBackground\r\n        });\r\n    };\r\n\r\n    handleChangeSpeed = () => {\r\n        if (!this.contentRef) return;\r\n\r\n        const { current } = this.contentRef;\r\n        if (!current) return;\r\n\r\n        const { speed } = this.state;\r\n        const nextSpeed = speed < 1 ? 1 : 0.1;\r\n\r\n        this.setState({ speed: nextSpeed });\r\n\r\n        current.changeSpeed(nextSpeed);\r\n    };\r\n\r\n    canBeForwarded = (chatId, messageId) => {\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return false;\r\n\r\n        const { can_be_forwarded, content } = message;\r\n        if (!content) return false;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageChatChangePhoto': {\r\n                return true;\r\n            }\r\n            default: {\r\n                return can_be_forwarded;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const {\r\n            background,\r\n            currentMessageId,\r\n            deleteConfirmationOpened,\r\n            deleteForAll,\r\n            firstSliceLoaded,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            speed,\r\n            totalCount\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount && firstSliceLoaded) {\r\n            index = this.history.findIndex(x => x.id === currentMessageId);\r\n        }\r\n        const maxCount = Math.max(this.history.length, totalCount);\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\r\n\r\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\r\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\r\n\r\n        let deleteConfirmationContent = '';\r\n        if (isVideoMessage(chatId, currentMessageId)) {\r\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\r\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\r\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\r\n        } else {\r\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\r\n        }\r\n        const deleteConfirmation = deleteConfirmationOpened ? (\r\n            <Dialog\r\n                transitionDuration={0}\r\n                open={deleteConfirmationOpened}\r\n                onClose={this.handleDialogClose}\r\n                aria-labelledby='form-dialog-title'>\r\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\r\n                    {can_be_deleted_for_all_users && (\r\n                        <FormControlLabel\r\n                            label={t('DeleteForAll')}\r\n                            control={\r\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\r\n                            }\r\n                            checked={deleteForAll}\r\n                        />\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleDialogClose} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        ) : null;\r\n\r\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\r\n\r\n        const fileId = file ? file.id : 0;\r\n        let title = t('AttachPhoto');\r\n        if (isVideoMessage(chatId, currentMessageId)) {\r\n            title = t('AttachVideo');\r\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\r\n            title = t('AttachGif');\r\n        } else if (isLottieMessage(chatId, currentMessageId)) {\r\n            title = '';\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('media-viewer', background)}>\r\n                <div className='media-viewer-footer'>\r\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\r\n                    <MediaViewerFooterText\r\n                        title={title}\r\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\r\n                    />\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\r\n                    <MediaViewerFooterButton\r\n                        title={t('Forward')}\r\n                        disabled={!canBeForwarded}\r\n                        onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\r\n                        <DeleteIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-content-column'>\r\n                        <MediaViewerContent\r\n                            ref={this.contentRef}\r\n                            chatId={chatId}\r\n                            messageId={currentMessageId}\r\n                            size={PHOTO_BIG_SIZE}\r\n                            onClick={this.handlePrevious}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n                {deleteConfirmation}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewer.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(MediaViewer);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FileProgress from './FileProgress';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ProfileMediaViewer.css';\r\n\r\nclass ProfileMediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, photo } = this.props;\r\n\r\n        let { big: file } = photo;\r\n        file = FileStore.get(file.id) || file;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            prevPhoto: photo,\r\n            width: PROFILE_PHOTO_BIG_SIZE,\r\n            height: PROFILE_PHOTO_BIG_SIZE,\r\n            file: file\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, photo } = props;\r\n\r\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevPhoto: photo,\r\n                width: PROFILE_PHOTO_BIG_SIZE,\r\n                height: PROFILE_PHOTO_BIG_SIZE,\r\n                file: photo.big\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n    }\r\n\r\n    onClientUpdateChatBlob = update => {\r\n        const { chatId, photo } = this.props;\r\n\r\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\r\n            const file = FileStore.get(update.fileId) || this.state.file;\r\n            this.setState({\r\n                file: file\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateUserBlob = update => {\r\n        const { chatId, photo } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n\r\n        if (userId === update.userId && photo.big.id === update.fileId) {\r\n            const file = FileStore.get(update.fileId) || this.state.file;\r\n            this.setState({\r\n                file: file\r\n            });\r\n        }\r\n    };\r\n\r\n    handleContentClick = event => {\r\n        if (event) event.stopPropagation();\r\n\r\n        this.props.onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { width, height, file } = this.state;\r\n        if (!file) return null;\r\n\r\n        const blob = FileStore.getBlob(file.id) || file.blob;\r\n        const src = FileStore.getBlobUrl(blob);\r\n\r\n        return (\r\n            <div className='media-viewer-content'>\r\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\r\n                <FileProgress file={file} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaViewerContent.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    photo: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileMediaViewerContent;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChatTile from './ChatTile';\r\nimport MessageAuthor from '../Message/MessageAuthor';\r\nimport './MediaInfo.css';\r\n\r\nclass ProfileMediaInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, date } = this.props;\r\n\r\n        return (\r\n            <div className='media-info'>\r\n                <div className='media-info-wrapper'>\r\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\r\n                    <div className='media-info-content'>\r\n                        <div className='media-info-row'>\r\n                            <MessageAuthor chatId={chatId} />\r\n                        </div>\r\n                        {date && (\r\n                            <div className='media-info-row meta'>\r\n                                <span>{date}</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaInfo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    date: PropTypes.string\r\n};\r\n\r\nexport default ProfileMediaInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\r\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\r\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\r\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\r\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\r\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\r\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MediaViewer.css';\r\nimport './ProfileMediaViewer.css';\r\n\r\nclass ProfileMediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.history = [];\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n\r\n        const { chatId, fileId } = this.props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            prevFileId: fileId,\r\n            currentIndex: 0,\r\n            hasNextMedia: false,\r\n            hasPreviousMedia: false,\r\n            deleteConfirmationOpened: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            currentFileId,\r\n            hasPreviousMedia,\r\n            hasNextMedia,\r\n            firstSliceLoaded,\r\n            totalCount,\r\n            deleteConfirmationOpened\r\n        } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentFileId !== currentFileId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasNextMedia !== hasNextMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.totalCount !== totalCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId } = this.props;\r\n        const photo = getPhotoFromChat(chatId);\r\n        loadProfileMediaViewerContent(chatId, [photo]);\r\n\r\n        this.loadHistory(photo);\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        if (event.keyCode === 27) {\r\n            const { deleteConfirmationOpened } = this.state;\r\n            if (deleteConfirmationOpened) return;\r\n\r\n            this.handleClose();\r\n        } else if (event.keyCode === 39) {\r\n            this.handlePrevious();\r\n        } else if (event.keyCode === 37) {\r\n            this.handleNext();\r\n        }\r\n    };\r\n\r\n    loadHistory = async photo => {\r\n        const { chatId } = this.props;\r\n\r\n        if (!isPrivateChat(chatId)) return;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getUserProfilePhotos',\r\n            user_id: getChatUserId(chatId),\r\n            offset: 0,\r\n            limit: 100\r\n        });\r\n\r\n        this.history = result.photos;\r\n        this.firstSliceLoaded = result.photos.length === 0;\r\n\r\n        const index = 0;\r\n\r\n        this.setState({\r\n            currentIndex: index,\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: result.total_count\r\n        });\r\n\r\n        preloadProfileMediaViewerContent(chatId, index, this.history);\r\n    };\r\n\r\n    handleClose = () => {\r\n        setProfileMediaViewerContent(null);\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { chatId } = this.props;\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const photo =\r\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n        if (!photo.big) return;\r\n\r\n        const file = FileStore.get(photo.big.id) || photo.big;\r\n        if (!file) return;\r\n\r\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { chatId } = this.props;\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        let inputFile = null;\r\n        let inputMessagePhoto = null;\r\n        const inHistory = this.history && index >= 0 && index < this.history.length;\r\n        if (inHistory) {\r\n            const photo = getProfilePhoto(this.history[index]);\r\n            if (!photo) return;\r\n\r\n            let { big: file } = photo;\r\n            if (!file) return;\r\n\r\n            inputFile = {\r\n                '@type': 'inputFileId',\r\n                id: file.id\r\n            };\r\n        } else {\r\n            const chatPhoto = getPhotoFromChat(chatId);\r\n            if (!chatPhoto) return;\r\n\r\n            const { big: file } = chatPhoto;\r\n            if (!file) return;\r\n\r\n            const blob = FileStore.getBlob(file.id);\r\n            if (!blob) return;\r\n\r\n            inputFile = {\r\n                '@type': 'inputFileBlob',\r\n                data: blob,\r\n                name: ''\r\n            };\r\n        }\r\n\r\n        if (!inputFile) return;\r\n\r\n        const inputMessageContent = {\r\n            '@type': 'inputMessagePhoto',\r\n            photo: inputFile,\r\n            thumbnail: null,\r\n            added_sticker_file_ids: [],\r\n            width: PROFILE_PHOTO_BIG_SIZE,\r\n            height: PROFILE_PHOTO_BIG_SIZE,\r\n            caption: {\r\n                '@type': 'formattedText',\r\n                text: '',\r\n                entities: null\r\n            },\r\n            ttl: 0\r\n        };\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    handleDelete = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const photo =\r\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n\r\n        if (photo) {\r\n            let file = photo.big;\r\n            file = FileStore.get(file.id) || file;\r\n            if (file) {\r\n                const store = FileStore.getReadWriteStore();\r\n\r\n                FileStore.deleteLocalFile(store, file);\r\n            }\r\n        }\r\n    };\r\n\r\n    hasPreviousMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < this.history.length;\r\n    };\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentIndex } = this.state;\r\n        const nextIndex = currentIndex + 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadPrevious = async () => {\r\n        return;\r\n    };\r\n\r\n    hasNextMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    };\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentIndex } = this.state;\r\n        const nextIndex = currentIndex - 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadNext = async () => {\r\n        return;\r\n    };\r\n\r\n    loadMedia = (index, callback) => {\r\n        if (index < 0) return false;\r\n        if (index >= this.history.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                currentIndex: index,\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index)\r\n            },\r\n            callback\r\n        );\r\n\r\n        const { chatId } = this.props;\r\n\r\n        preloadProfileMediaViewerContent(chatId, index, this.history);\r\n        return true;\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const {\r\n            currentIndex,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            firstSliceLoaded,\r\n            totalCount,\r\n            deleteConfirmationOpened,\r\n            deleteForAll\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const deleteConfirmation = null;\r\n        const inHistory = index >= 0 && index < this.history.length;\r\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n        const userProfilePhoto = inHistory ? this.history[index] : null;\r\n        const { big: file } = photo;\r\n\r\n        return (\r\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\r\n                <div className='media-viewer-footer'>\r\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\r\n                    <MediaViewerFooterText\r\n                        title={t('AttachPhoto')}\r\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\r\n                    />\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\r\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerDownloadButton>\r\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\r\n                        <DeleteIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-content-column'>\r\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\r\n                    </div>\r\n\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n                {deleteConfirmation}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaViewer.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(ProfileMediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../Utils/HOC';\r\nimport withLanguage from '../Language';\r\nimport withSnackbarNotifications from '../Notifications';\r\nimport ForwardDialog from './Popup/ForwardDialog';\r\nimport ChatInfo from './ColumnRight/ChatInfo';\r\nimport Dialogs from './ColumnLeft/Dialogs';\r\nimport DialogDetails from './ColumnMiddle/DialogDetails';\r\nimport InstantViewer from './InstantView/InstantViewer';\r\nimport MediaViewer from './Viewer/MediaViewer';\r\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\r\nimport { highlightMessage } from '../Actions/Client';\r\nimport ApplicationStore from '../Stores/ApplicationStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport InstantViewStore from '../Stores/InstantViewStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport '../TelegramApp.css';\r\n\r\nclass MainPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogDetailsRef = React.createRef();\r\n\r\n        this.state = {\r\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\r\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\r\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\r\n            forwardInfo: null,\r\n            instantViewContent: null\r\n        };\r\n\r\n        /*this.store = localForage.createInstance({\r\n                    name: 'tdlib'\r\n                });*/\r\n\r\n        //this.initDB();\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\r\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\r\n\r\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\r\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\r\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\r\n\r\n        ApplicationStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        ApplicationStore.off('clientUpdateForward', this.onClientUpdateForward);\r\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n    }\r\n\r\n    onClientUpdateInstantViewContent = update => {\r\n        const { content } = update;\r\n\r\n        this.setState({\r\n            instantViewContent: content\r\n        });\r\n    };\r\n\r\n    onClientUpdateOpenChat = update => {\r\n        const { chatId, messageId, popup } = update;\r\n\r\n        this.handleSelectChat(chatId, messageId, popup);\r\n    };\r\n\r\n    onClientUpdateOpenUser = update => {\r\n        const { userId, popup } = update;\r\n\r\n        this.handleSelectUser(userId, popup);\r\n    };\r\n\r\n    onClientUpdateChatDetailsVisibility = update => {\r\n        this.setState({\r\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\r\n    };\r\n\r\n    onClientUpdateProfileMediaViewerContent = update => {\r\n        this.setState({\r\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\r\n        });\r\n    };\r\n\r\n    onClientUpdateForward = update => {\r\n        const { info } = update;\r\n\r\n        this.setState({ forwardInfo: info });\r\n    };\r\n\r\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\r\n        const currentChatId = ApplicationStore.getChatId();\r\n        const currentDialogChatId = ApplicationStore.dialogChatId;\r\n        const currentMessageId = ApplicationStore.getMessageId();\r\n\r\n        if (popup) {\r\n            if (currentDialogChatId !== chatId) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateDialogChatId',\r\n                    chatId\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\r\n            this.dialogDetailsRef.current.scrollToMessage();\r\n            if (messageId) {\r\n                highlightMessage(chatId, messageId);\r\n            }\r\n        } else if (currentChatId === chatId && !messageId) {\r\n            this.dialogDetailsRef.current.scrollToStart();\r\n        } else {\r\n            TdLibController.setChatId(chatId, messageId);\r\n        }\r\n    };\r\n\r\n    handleSelectUser = async (userId, popup) => {\r\n        if (!userId) return;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: userId,\r\n            force: true\r\n        });\r\n\r\n        this.handleSelectChat(chat.id, null, popup);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            instantViewContent,\r\n            isChatDetailsVisible,\r\n            mediaViewerContent,\r\n            profileMediaViewerContent,\r\n            forwardInfo\r\n        } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className={classNames('page', {\r\n                        'page-third-column': isChatDetailsVisible\r\n                    })}>\r\n                    <Dialogs />\r\n                    <DialogDetails ref={this.dialogDetailsRef} />\r\n                    {isChatDetailsVisible && <ChatInfo />}\r\n                </div>\r\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\r\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\r\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\r\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMainPage.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withLanguage,\r\n    withSnackbarNotifications\r\n);\r\n\r\nexport default enhance(MainPage);\r\n"],"sourceRoot":""}