{"version":3,"sources":["Components/Viewer/Lottie.js"],"names":["Lottie","this","props","options","eventListeners","loop","autoplay","animationData","rendererSettings","segments","container","el","renderer","Boolean","anim","lottie","loadAnimation","registerEvents","nextProps","nextState","nextContext","path","unregisterEvents","destroy","prevProps","prevState","snapshot","setSpeed","setDirection","currentRawFrame","currentFrame","speed","direction","play","forceFlag","playSegments","stop","isPaused","pause","forEach","eventName","callback","addEventListener","removeEventListener","width","height","ariaRole","ariaLabel","title","onMouseEnter","onComplete","onMouseOut","other","getSize","initial","lottieStyles","overflow","margin","outline","style","ref","c","role","aria-label","tabIndex","React","Component","defaultProps"],"mappings":"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","file":"static/js/0.34697ac6.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport lottie from 'lottie-web/build/player/lottie_light.min';\nimport './Lottie.css';\n\nclass Lottie extends React.Component {\n    componentDidMount() {\n        const { options, eventListeners } = this.props;\n        // console.log('Lottie.componentDidMount', eventListeners, this.props);\n\n        const {\n            loop,\n            autoplay,\n            animationData,\n            //path,\n            rendererSettings,\n            segments\n        } = options;\n\n        this.options = {\n            container: this.el,\n            renderer: 'svg',\n            loop: Boolean(loop),\n            autoplay: Boolean(autoplay),\n            segments: Boolean(segments),\n            animationData,\n            //path,\n            rendererSettings\n        };\n\n        this.options = { ...this.options, ...options };\n\n        this.anim = lottie.loadAnimation(this.options);\n        this.registerEvents(eventListeners);\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        /* Recreate the animation handle if the data is changed */\n        if (\n            this.options.animationData !== nextProps.options.animationData ||\n            this.options.path !== nextProps.options.path\n        ) {\n            this.unregisterEvents(this.props.eventListeners);\n            this.destroy();\n            this.options = { ...this.options, ...nextProps.options };\n            this.anim = lottie.loadAnimation(this.options);\n            this.registerEvents(nextProps.eventListeners);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // console.log('Lottie.componentDidUpdate', this.props.eventListeners, this.props);\n        // if (this.props.isStopped) {\n        //     this.stop();\n        // } else if (this.props.segments) {\n        //     this.playSegments();\n        // } else {\n        //     this.play();\n        // }\n\n        //this.pause();\n        this.setSpeed();\n        this.setDirection();\n    }\n\n    componentWillUnmount() {\n        // console.log('Lottie.componentWillUnmount', this.props.eventListeners, this.props);\n        this.unregisterEvents(this.props.eventListeners);\n        this.destroy();\n        this.options.animationData = null;\n        this.options.path = null;\n        this.anim = null;\n    }\n\n    getCurrentRawFrame() {\n        return this.anim.currentRawFrame;\n    }\n\n    getCurrentFrame() {\n        return this.anim.currentFrame;\n    }\n\n    setSpeed() {\n        this.anim.setSpeed(this.props.speed);\n    }\n\n    setDirection() {\n        this.anim.setDirection(this.props.direction);\n    }\n\n    play() {\n        this.anim.play();\n    }\n\n    playSegments(segments, forceFlag) {\n        this.anim.playSegments(segments, forceFlag);\n    }\n\n    stop() {\n        this.anim.stop();\n    }\n\n    pause() {\n        if (!this.anim.isPaused) {\n            this.anim.pause();\n            return true;\n        }\n\n        return false;\n    }\n\n    destroy() {\n        this.anim.destroy();\n    }\n\n    registerEvents(eventListeners) {\n        if (!this.anim) return;\n\n        if (!eventListeners) return;\n\n        eventListeners.forEach(({ eventName, callback }) => {\n            this.anim.addEventListener(eventName, callback);\n        });\n    }\n\n    unregisterEvents(eventListeners) {\n        if (!this.anim) return;\n\n        if (!eventListeners) return;\n\n        eventListeners.forEach(({ eventName, callback }) => {\n            this.anim.removeEventListener(eventName, callback);\n        });\n    }\n\n    render() {\n        const {\n            width,\n            height,\n            ariaRole,\n            ariaLabel,\n            title,\n            eventListeners,\n            onComplete,\n            onMouseEnter,\n            onMouseOut,\n            ...other\n        } = this.props;\n\n        const getSize = initial => {\n            let size;\n\n            if (typeof initial === 'number') {\n                size = `${initial}px`;\n            } else {\n                size = initial || '100%';\n            }\n\n            return size;\n        };\n\n        const lottieStyles = {\n            width: getSize(width),\n            height: getSize(height),\n            overflow: 'hidden',\n            margin: '0 auto',\n            outline: 'none',\n            ...this.props.style\n        };\n\n        return (\n            // Bug with eslint rules https://github.com/airbnb/javascript/issues/1374\n            // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n            <div\n                ref={c => {\n                    this.el = c;\n                }}\n                style={lottieStyles}\n                title={title}\n                role={ariaRole}\n                aria-label={ariaLabel}\n                tabIndex='0'\n                {...other}\n                onMouseEnter={onMouseEnter}\n                onMouseOut={onMouseOut}\n            />\n        );\n    }\n}\n\nLottie.propTypes = {\n    eventListeners: PropTypes.arrayOf(PropTypes.object),\n    options: PropTypes.object.isRequired,\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    speed: PropTypes.number,\n    segments: PropTypes.arrayOf(PropTypes.number),\n    direction: PropTypes.number,\n    ariaRole: PropTypes.string,\n    ariaLabel: PropTypes.string,\n    title: PropTypes.string,\n    style: PropTypes.string\n};\n\nLottie.defaultProps = {\n    eventListeners: [],\n    speed: 1,\n    ariaRole: 'button',\n    ariaLabel: 'animation',\n    title: ''\n};\n\nexport default Lottie;\n"],"sourceRoot":""}