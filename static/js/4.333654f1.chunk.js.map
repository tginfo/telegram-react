{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Channel.js","Utils/Supergroup.js","Components/Additional/MentionLink.js","Utils/Message.js","Assets/Icons/Close.js","Components/Message/Media/Call.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Venue.js","Utils/Media.js","Stores/PlayerStore.js","Utils/User.js","Components/Viewer/FileProgress.js","Workers/BlobInflator.js","Workers/Helpers.js","Components/Message/Media/Sticker.js","Stores/StickerStore.js","Stores/BasicGroupStore.js","Components/Tile/UserTile.js","Assets/Icons/Download.js","Components/Message/Media/Photo.js","Utils/Date.js","Components/Additional/SafeLink.js","Stores/InstantViewStore.js","Components/Message/MessageAuthor.js","Components/Tile/User.js","Components/Message/Media/Animation.js","Assets/Icons/PlayArrow.js","Utils/Currency.js","Utils/ServiceMessage.js","Utils/Url.js","Components/Message/Media/Audio.js","Assets/Icons/Pause.js","Components/Tile/DocumentTile.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Location.js","Components/Message/Media/Video.js","Components/Message/Media/MediaStatus.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/DeletedAccount.js","Actions/Poll.js","Components/Tile/UserStatus.js","Stores/PollStore.js","Utils/Poll.js","Utils/Punycode.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VideoNote.js","Components/Message/Media/VoiceNote.js","Components/Tile/VoiceNoteTile.js","Assets/Icons/Smile.js","Components/Message/Media/FireworksControl.js","Assets/Icons/Check.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Tile/UserPlaceholder.js","Components/Popup/PollOptionResult.js","Components/Popup/PollOptionResults.js","Components/Popup/PollResultsDialog.js","Components/Message/Media/Poll.js","Assets/Icons/Document.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Workers/pako.worker.js","Notifications.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Actions/Chat.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/Archive.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Additional/KeyboardManager.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Utils/Archive.js","Components/Popup/SidebarDialog.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Done.js","Assets/Icons/Send.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Assets/Icons/Share.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["useReadFile","store","reset","callbacks","db","urls","WeakMap","dataUrls","Map","items","blobItems","locationItems","downloads","uploads","onUpdate","update","a","onUpdateAuthorizationState","set","file","onUpdateFile","emit","onClientUpdate","addTdLibListener","TdLibController","on","removeTdLibListener","off","authorization_state","initDB","handleDownloads","handleUploads","arr","id","idb_key","local","has","is_downloading_completed","get","delete","getStore","forEach","item","handleAnimation","handleAudio","handleChat","handleDocument","handleGame","handleLocation","handleMessage","handlePageBlockMap","handlePhoto","handleSticker","handleVideo","handleVideoNote","handleVoiceNote","handleUser","console","error","remote","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","audio","photo","document","game","location","sticker","web_page","video","video_note","voice_note","venue","obj","chatId","chat_id","messageId","thumbnail","source","updateAnimationThumbnailBlob","THUMBNAIL_PRIORITY","updateAnimationBlob","album_cover_thumbnail","updateAudioThumbnailBlob","updateAudioBlob","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","pageBlockMap","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","i","sizes","length","photoSize","updatePhotoBlob","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","deleteLocalFile","fileId","getBlob","setBlob","blob","deleteBlob","setLocationFile","getDataUrl","setDataUrl","dataUrl","deleteDataUrl","getBlobUrl","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","callback","this","initiatingDB","push","openDB","catch","log","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","send","file_id","response","data","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","FileStore","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","PRELOAD_AUDIO_SIZE","cancelLoadAnimationContent","cancelGetRemoteFile","loadAnimationContent","PRELOAD_ANIMATION_SIZE","cancelLoadAnimationThumbnailContent","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","PRELOAD_DOCUMENT_SIZE","loadGameContent","width","height","zoom","LOCATION_ZOOM","scale","LOCATION_SCALE","loadLocationContent","LOCATION_WIDTH","LOCATION_HEIGHT","cancelLoadBigPhotoContent","getSize","PHOTO_BIG_SIZE","loadBigPhotoContent","displaySize","PHOTO_SIZE","getPhotoSize","loadPhotoThumbnailContent","thumbSize","getPhotoThumbnailSize","loadStickerContent","PRELOAD_STICKER_SIZE","cancelLoadVideoContent","loadVideoContent","PRELOAD_VIDEO_SIZE","cancelLoadVideoThumbnailContent","loadVideoNoteContent","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","keys","saveMedia","media","file_name","saveOrDownload","saveAnimation","saveDocument","savePhoto","saveVideo","fileName","mime","type","saveData","can_be_downloaded","getViewerThumbnail","getViewerFile","getMediaPreviewFile","getMediaFile","mime_type","cancelLoadIVMediaViewerContent","blocks","cancelLoadMediaViewerContent","loadIVMediaViewerContent","useSizeLimit","loadMediaViewerContent","cancelPreloadIVMediaViewerContent","index","preload","cancelPreloadMediaViewerContent","history","preloadMediaViewerContent","preloadIVMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","small","big","getChatUserId","getProfilePhoto","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","loadChatPhotoContent","loadChatsContent","loadDraftContent","draft_message","loadRecentStickersContent","recent","loadStickersContent","stickers","loadStickerSetContent","stickerSet","loadBackgroundsContent","backgrounds","background","loadBackgroundContent","full","is_animated","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","loadInstantViewContent","instantView","page_blocks","pageBlock","loadPageBlockContent","b","caption","author","loadRichTextContent","text","credit","cover","header","poster_photo","author_photo","footer","kicker","loadPageBlockMapContent","IV_PHOTO_SIZE","articles","subheader","subtitle","cells","row","title","t","texts","getAnimationData","fileReader","FileReader","onload","JSON","parse","onabort","readAsText","canUnpinMessage","pinned_message_id","isChatArchived","chat_list","canSetChatChatList","is_sponsored","isMeChat","SERVICE_NOTIFICATIONS_USER_ID","draftEquals","draft1","draft2","inputMessageText1","input_message_text","replyToMessageId1","inputMessageText2","formattedText1","formattedText2","text1","entities1","entities","text2","entities2","offset","every","entitiesEquals","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","next","value","action","getPrivateChatTypingString","firstUser","secondUser","first_name","second_name","getGroupChatTypingString","getMessageSenderFullName","k","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","key","getContent","showChatUnreadMentionCount","unread_mention_count","showChatUnreadCount","is_marked_as_unread","unread_count","isChatUnread","isChatMuted","notification_settings","use_default_mute_for","mute_for","settings","NotificationStore","isChannelChat","getScopeNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","is_member","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getChannelStatus","getSupergroupStatus","getChatSubtitle","showSavedMessages","chatTypingString","getChatLetters","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","formatPhoneNumber","phone_number","getChatBio","description","bio","isPrivateChat","isGroupChat","isChatMember","getChatTitle","isDeletedPrivateChat","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendMediaMessages","globalPermissions","permissions","can_send_media_messages","getChatShortTitle","canClearHistory","Boolean","canDeleteChat","canSendPolls","can_send_polls","canSendMessages","can_send_messages","getChatDraft","getChatDraftReplyToMessageId","replyToMessageId","canPinMessages","can_pin_messages","isChatVerified","is_verified","isChatSecret","MentionLink","props","handleClick","stopPropagation","preventDefault","popup","openUser","setState","openChat","handleClose","handleDialogClick","state","children","onClick","Dialog","transitionDuration","onClose","aria-labelledby","DialogTitle","DialogContent","classes","root","DialogContentText","DialogActions","Button","prevUserId","prevUsername","React","Component","defaultProps","withTranslation","isMetaBubble","isMessageUnread","last_read_inbox_message_id","last_read_outbox_message_id","is_outgoing","isMe","getTitle","substring","start","end","searchCurrentChat","AppStore","searchChat","getFormattedText","formattedText","deleteLineBreakAfterPre","entity","textBefore","textBeforeLength","substr","entityKey","entityText","command","rel","SafeLink","textAfter","getText","meta","concat","getWebPage","d","getDateHint","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getSenderUserId","filterDuplicateMessages","reduce","accumulator","current","filterMessages","ttl","getServiceMessageContent","poll","question","emoji","isMediaContent","longitude","latitude","isVideoMessage","isLottieMessage","endsWith","isAnimationMessage","isContentOpened","is_listened","is_viewed","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","message_id","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","openVideo","openVideoNote","openVoiceNote","openMedia","openChatPhoto","openContact","openGame","isDeletedMessage","getReplyMinithumbnail","minithumbnail","getReplyPhotoSize","getEmojiMatches","textContent","m","lastIndex","emojiMatches","re","emojiRegex","exec","messageComparatorDesc","left","right","checkInclusion","checkIntersection","startIndex","endIndex","checkEntity","removeOffsetAfter","countToRemove","e","addOffsetAfter","countToAdd","removeEntities","entityStart","entityEnd","splice","addTextNode","nodes","node","createTextNode","getNodes","sort","prevEntity","innerText","dataset","getDecodedUrl","getEntities","replace","join","isPre","DOMParser","parseFromString","finalText","childNodes","nodeName","indexOf","language","lastChar","firstChar","c","checkString","checkChar","prevChar","canMessageBeEdited","can_be_edited","showMessageForward","isTextMessage","isMessagePinned","canMessageBeUnvoted","is_closed","options","is_chosen","is_being_chosen","canMessageBeClosed","canMessageBeForwarded","can_be_forwarded","canMessageBeDeleted","can_be_deleted_only_for_self","can_be_deleted_for_all_users","getMessageStyle","fitSize","getFitSize","PHOTO_DISPLAY_SIZE","createSvgIcon","Call","duration","callTitle","getCallTitle","durationString","getDurationString","Math","floor","className","classNames","IconButton","color","aria-label","fontSize","Contact","last_name","fullName","number","UserTile","firstName","lastName","Game","Animation","fitPhotoSize","Photo","Venue","venueTitle","address","Location","discard_reason","isEditedMedia","isValidAnimatedSticker","sending_state","isBlurredThumbnail","blurredSize","THUMBNAIL_BLURRED_SIZE_90","max","performer","trimmedTitle","trim","trimmedPerformer","getAudioShortTitle","getAudioSubtitle","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","setIndex","findIndex","stickerIndex","prevRows","ceil","toRowColumn","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","getInputMediaThumbnail","getInputMediaCaption","getInputMediaContent","live_period","added_sticker_file_ids","supports_streaming","waveform","getMedia","hasTitle","hasCaption","inlineMeta","Audio","duraton","discardReason","Document","Poll","Sticker","StickerSourceEnum","MESSAGE","Video","VideoNote","VoiceNote","getMediaTags","jsmediatags","read","onSuccess","tag","tags","artist","AudioContext","arrayBuffer","trunc","decodeAudioData","onError","getMediaDocumentFromFile","getRandomInt","name","album_cover_minithumbnail","expected_size","getMediaPhotoFromFile","startsWith","readImageSize","has_stickers","RepeatEnum","Object","freeze","NONE","REPEAT","REPEAT_ONE","playlist","time","videoStream","close","getPlaylist","volume","savePlayerSettings","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","currentTime","timestamp","stream","useRepeatShuffle","nextIndex","currentPlaylist","totalCount","query","from_message_id","limit","total_count","loadPlayerSettings","player","localStorage","getItem","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","setItem","stringify","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","isUserBlocked","is_blocked","getUserLetters","firstNameSymbol","getFirstLetter","lastNameSymbol","getUserStatusOrder","expires","PROFILE_PHOTO_SMALL_SIZE","PROFILE_PHOTO_BIG_SIZE","getProfilePhotoDateHint","userProfilePhoto","added_date","isDeletedUser","FileProgress","currentFile","nextFile","fileEquals","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","nextProps","nextState","icon","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","file1","file2","local1","remote1","local2","remote2","can_be_deleted","download_offset","downloaded_prefix_size","path","cancelButton","zIndex","completeIcon","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","circle","variant","thickness","worker","PakoWorker","handlers","inflateBlob","random","toString","slice","postMessage","onmessage","msg","Lottie","lazy","HINTS","PICKER_HEADER","PICKER","PREVIEW","STICKER_SET","UNKNOWN","onClientUpdateInstantViewContent","openIV","InstantViewStore","getCurrent","startStopAnimation","onClientUpdateDialogChatId","dialogChatId","ApplicationStore","onClientUpdateMediaViewerContent","openMediaViewer","mediaViewerContent","onClientUpdateProfileMediaViewerContent","openProfileMediaViewer","profileMediaViewerContent","onClientUpdateStickerPreview","stickerPreview","onClientUpdateMessagesInView","inView","onClientUpdateStickerSet","openedStickerSet","onClientUpdateFocusWindow","focused","windowFocused","onClientUpdateStickerBlob","loadContent","forceUpdate","onClientUpdateStickerThumbnailBlob","autoplay","play","isAnimated","animationData","handleMouseEnter","handleAnimationMouseEnter","entered","lottieRef","loopCount","handleAnimationLoopComplete","handleAnimationMouseOut","createRef","hasFocus","StickerStore","animationDate","hasError","errorInfo","nextContext","blur","prevProps","prevState","snapshot","pause","paused","preview","src","isBlurred","draggable","alt","Suspense","fallback","ref","loop","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","eventListeners","eventName","onMouseOut","stickerStyle","onMouseEnter","STICKER_DISPLAY_SIZE","hint","sticker_set_ids","is_installed","assign","foundStickers","fullInfoItems","basic_group","setFullInfo","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","loaded","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","handleLoad","fistName","dialog","pointer","tileLoaded","tileColor","abs","onLoad","onClientUpdatePhotoBlob","showProgress","miniSrc","thumbSrc","photoStyle","hasSrc","thumbnailSize","prevPhoto","PHOTO_THUMBNAIL_SIZE","token","timezone","timezoneClip","mask","utc","gmt","arguments","kindOf","test","undefined","isNaN","TypeError","maskSlice","String","masks","_","D","y","H","M","s","L","o","getTimezoneOffset","W","getWeek","N","getDayOfWeek","flags","dd","pad","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","round","timeNames","tt","T","TT","Z","match","S","val","len","targetThursday","getFullYear","getMonth","firstThursday","ds","getHours","weekDiff","dow","Array","isArray","call","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","confirm","handleDone","newWindow","opener","handleSafeClick","isTelegramLink","messageLinkInfo","lowerCaseUrl","decodedUrl","safe","displayText","mail","prevUrl","prevDisplayText","isUrlSafe","getHref","viewerContent","prevInstantView","MessageAuthor","openUserCommand","openChatCommand","User","showStatus","startStopPlayer","videoRef","ivInView","openIVMedia","onClientUpdateInstantViewViewerContent","onClientUpdateBlocksInView","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","setPlayerParams","animationStyle","isGif","poster","muted","autoPlay","playsInline","iv","transform","currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","Currency","getString","total_amount","getMessageAuthor","pinnedMessage","pinnedContent","domain_name","regExpRTLO","hasRTLOSymbol","decodedHref","decodeURI","domain","punycode","ToUnicode","regExpDomainExplicit","RegExp","regExpDomain","regExpProtocol","validateUrl","trimmed","domainMatch","protocolMatch","isGoodProtocol","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","PlayerStore","audioTitle","audioSubtitle","opacity","DocumentTile","onClientUpdateDocumentThumbnailBlob","AudioAction","onClientUpdateMediaSeeking","playerDuration","seekProgress","seeking","timeString","getTimeString","onClientUpdateMediaSeek","Infinity","onClientUpdateMediaTime","currentTimeString","audioDuration","theme","isDownloadingActive","isUploadingActive","sizeString","strings","onClientUpdateLocationBlob","locationStyle","onClientUpdateVideoThumbnailBlob","videoStyle","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","STICKER_PREVIEW_DISPLAY_SIZE","stroke","strokeWidth","strokeLinejoin","fill","cx","cy","r","setPollAnswer","optionIds","option_ids","cancelPollAnswer","stopPoll","reply_markup","UserStatus","onUpdateUserStatus","isAccent","allow_multiple_answers","is_anonymous","isAnonymous","newType","correct_option_id","option","source1","source2","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","POLL_OPTION_LENGTH","hasPollData","utf16","decode","input","extra","output","charCodeAt","RangeError","encode","fromCharCode","base","damp","tmin","tmax","skew","maxint","encode_digit","flag","adapt","delta","numpoints","firsttime","preserveCase","n","out","bias","basic","j","ic","oldi","w","digit","cp","case_flags","input_length","lastIndexOf","toUpperCase","q","ijv","bcp","Error","ToASCII","domain_array","VoiceNoteSlider","getValue","PLAYER_PROGRESS_TIMEOUT_MS","dragging","handleMouseDown","handleChangeCommitted","handleChange","track","thumb","min","step","onChange","onChangeCommitted","onMouseDown","circleStyle","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","sourceRef","getTracks","stop","load","progressTime","clamp","onCanPlay","VoiceNoteTile","Particle","fireworks","colorType","side","typeSize","xFinished","finishedStart","rotation","moveX","moveY","ctx","fillStyle","beginPath","arc","PI","save","translate","rotate","radius","tl","tr","br","bl","defaultRadius","moveTo","lineTo","quadraticCurveTo","closePath","roundRect","restore","dt","moveCoef","wasNegative","speedCoef","fallingDownCount","getMeasuredHeight","Fireworks","context","particlesCount","fallParticlesCount","particles","canvas","clientHeight","clientWidth","fall","particle","colors","getMeasuredWidth","xOffset","yOffset","started","startedFall","lastUpdateTime","createParticle","draw","newTime","clearRect","p","startFall","requestAnimationFrame","FireworksComponent","onResize","canvasRef","parentNode","attachToParent","detachFromParent","addEventListener","removeEventListener","getContext","position","top","pointerEvents","PollRadio","chosen","beingChosen","hidden","Radio","colorPrimary","disabled","TouchRippleProps","child","checked","checkedIcon","CircularProgress","PollPercentage","updateAnimation","stopAnimation","handle","onAnimationFrame","cancelAnimationFrame","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","animated","prevPropsValue","closed","PollOption","getTitleString","canBeSelected","onVote","maxVoterCount","isCorrect","voter_count","vote_percentage","isMultiChoosen","Close","Check","LinearProgress","bar","UserPlaceholder","titleWidth","sin","contentWidth","cos","marginLeft","PollOptionResult","ListItem","button","PollOptionResults","handleShowMore","newOffset","newCount","POLL_RESULTS_SLICE_LENGTH","updateVoters","handleCollapse","POLL_RESULTS_FIRST_SLICE_LENGTH","POLL_RESULTS_LEAVE_LENGTH","voters","loadMore","optionId","option_id","user_ids","offset2","isQuiz","results","voterCount","showMoreButton","showMoreCount","showMore","fullWidth","showCollapse","PollResultsDialog","onClientUpdateClosePollResults","handleContextMenu","PollStore","container","paper","onContextMenu","getTotalVoterCountString","handleSubmit","viewResults","handleVote","handleOpenResults","viewResultsPoll","handleCloseResults","fireworksRef","total_voter_count","recent_voter_user_ids","isSelected","showViewResults","showButton","buttonEnabled","recentVoters","marginRight","getOptionType","getOptionIsCorrect","textPrimary","fillRule","mixBlendMode","DocumentAction","Download","viewBox","data-name","data-ext","module","exports","Worker","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","OnlineStatus","online","borderSize","padding","ChatTile","onFastUpdatingComplete","showOnline","DeletedAccount","ForwardTargetChat","selected","shortTitle","copy","clipboard","writeText","copyOld","element","successful","contentEditable","readOnly","all","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","focus","select","execCommand","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","currentPackId","OptionStore","suggestedPackId","latinInput","getLatinInput","ForwardDialog","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","savedMessagesPromise","force","chats","savedMessages","chatIds","chat_ids","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","input_message_content","disable_web_page_preview","clear_draft","from_chat_id","as_album","handleChangeSelection","innerHTML","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","hasSearchText","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","aria-describedby","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","autoFocus","enhance","compose","withSnackbar","isVerified","DialogStatus","updateSubtitle","find","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","onUpdateSupergroup","prevChatId","externalSubtitle","Chat","onTileSelect","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","setChatChatList","chatList","toggleChatIsPinned","isPinned","is_pinned","toggleChatIsMarkedAsUnread","isMarkedAsUnread","toggleChatNotificationSettings","isMuted","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","getChatCounters","photoCounter","return_local","videoCounter","documentCounter","audioCounter","urlCounter","voiceAndVideoNoteCounter","Notifications","onUpdateChatNotificationSettings","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationsListItem","ListItemIcon","ListItemText","primary","Typography","noWrap","ListItemSecondaryAction","Switch","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isGroup","isBlocked","isMember","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","inset","ChatDetails","loadChatContents","handleUsernameHint","telegramUrlOption","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","scrollHeight","offsetHeight","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","member","wordWrap","Divider","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","SharedDocument","contextMenu","handleOpenContextMenu","clientX","clientY","handleCloseContextMenu","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","SpeedDialIcon","openIcon","SharedMediaBase","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","isValidContent","insertByOrder","onUpdateNewMessage","isValidMessage","onUpdateDeleteMessages","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","finally","incompleteResults","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","isRequired","func","bool","SharedDocuments","SharedLink","hostname","webPage","display_url","getTitleFromUrl","isValidEntityType","typeUrl","SharedLinks","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","label","minWidth","SharedPhoto","backgroundImage","backgroundSize","SharedPhotos","SharedVideo","SharedVideos","SharedVoiceNote","dateString","toLocaleDateString","month","year","hour","minute","hour12","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","isSmallWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","setCounters","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","Archive","openArchive","onClientUpdateClearHistory","clearHistory","contentControl","draft","senderName","x1","y1","x2","y2","strokeLinecap","DialogBadge","showUnreadMentionCount","showUnreadCount","Pin","Status","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","unread","Pending","Sent","Succeeded","prevMessageId","DialogMeta","previousChatId","contextMenuId","canPinChats","canTogglePin","canToggleArchive","handleMute","pinnedSumMaxOption","isSecret","pinnedSum","handlePin","handleArchive","getViewInfoTitle","handleViewInfo","handleRead","forceRead","force_read","viewMessages","isLastPinned","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","DialogListItem","DialogsList","onClientUpdateLeaveChat","hiddenChats","authorizationState","loadFirstSlice","isAuthorizationReady","saveCache","onSaveCache","onUpdateChatOrder","order","newChatIds","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","oldChatIds","innerListRef","KeyboardHandler","manager","handler","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderFullName","tile","SectionHeader","multiline","Search","concatSearchResults","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","recentlyFound","trimmedText","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","searchOrLoadContent","KeyboardManager","add","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","MainMenuButton","handleMenuOpen","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewGroup","handleContacts","handleArchived","handleSaved","handleSettings","handleHelp","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","nativeEvent","stopImmediatePropagation","handleInput","inputRef","onFocus","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","SidebarPage","remove","Slide","direction","mountOnEnter","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","Edit","Data","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","firstNameRef","lastNameRef","bioRef","userFullInfo","setName","setBio","setUsername","newFirstName","newLastName","newBio","usernameLabel","TextField","defaultValue","Wallpaper","wallpaper","backgroundPosition","ChatBackground","selectedId","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","main","palette","FormControl","FormLabel","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","LocalizationStore","language_packs","tabIndex","inputProps","secondary","native_name","handleMuteFor","property","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","role","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","handleCloseSettings","removeItem","clear","cache","contacts","CacheManager","saveChatsInternal","files","parseCache","archiveChats","basicGroups","supergroups","OutputTypingManager","updateChatChatList","archiveChatIds","fileMap","userMap","basicGroupMap","supergroupMap","entries","getCache","readAsDataURL","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","throttle","CacheStore","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","getArchiveTitle","archive","chatsOrder","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","visible","onEnter","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","onUpdateChatChatList","prevShowArchive","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","mainItems","archiveItems","loadCache","mainChatIds","saveChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","focusNode","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","optionTextRef","maxLength","remainLength","hasSelection","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","data-length","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","allowMultipleAnswers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","urlError","onDone","handleCancel","onCancel","textRef","urlRef","flexDirection","margin","autoComplete","prevOpen","ReplyTile","isVideoNote","Reply","onGetMessageResult","handleOpen","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","onEdit","editFile","editMedia","sendAsPhoto","editMessageAction","altKey","ctrlKey","metaKey","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","handleSendAsPhoto","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","accept","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","setEditMessage","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateStickerSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateReply","setInputFocus","beforeEditText","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","getDraftMessage","inputContent","editedMessage","editMessageText","editMessageCaption","attachPhotoRef","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","sendFile","sendAsFile","performance","cancel","isMediaEditing","multiple","Done","Send","FooterCommand","onCommand","NotificationsCommand","Footer","handleJoin","handleDeleteAndExit","remove_from_chat_list","NotificationTimer","handleTimer","expire","timerId","clearInterval","setMilliseconds","getMilliseconds","setInterval","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","getLeaveChatTitle","handleUnpin","deleteChat","leaveChatTitle","unpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","isAccentSubtitle","HeaderChat","HeaderCommand","selectedItems","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","code","deletedMessage","getClientData","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","onMouseLeave","visibility","Slider","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","onClientUpdateMediaPlaylist","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","onClientUpdateMediaBlob","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHintStr","dateStr","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","handleUnvote","copyLink","handleReply","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","synchronous","canCopyLink","canBeUnvoted","canBeClosed","canBeReplied","canBePinned","canBeEdited","hasSelectedMessage","openInstantView","force_full","setInstantViewContent","WebPage","displaySmallSize","displayExtraSmallSize","site_name","smallPhoto","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","shook","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","showForward","showReply","suppressTitle","withBubble","onMouseOver","onAnimationEnd","Placeholder","onClientUpdateCacheLoaded","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","getSticker","mouseDownStickerId","handleMouseUp","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","scrollDownButtonRef","historyEquals","previousChat","MAX_VALUE","highlightMessage","viewAction","getMessagePhoto","getMessageSticker","oldMessageId","prevMessage","isFirst","MESSAGE_SPLIT_MAX_TIME_S","prevDate","nextMessage","showMessageDate","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","IVContext","createContext","withIV","IVComponent","Consumer","RichText","richText","email_address","emailAddress","getRichText","object","Anchor","Caption","hasText","isEmptyText","hastCredit","block","need_autoplay","IV_PHOTO_DISPLAY_SIZE","AuthorDate","publishDate","hasAuthor","hasDate","dateTime","toISOString","Blockquote","pageBlocks","getPageBlock","Cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","getElementById","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevHtml","authorPhoto","ErrorHandler","componentStack","Kicker","data-before","Paragraph","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","publish_date","Subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","ChatLink","needAutoplay","isLooped","openInstantViewMedia","setInstantViewViewerContent","is_open","posterPhoto","is_full_width","allow_scrolling","is_bordered","is_striped","is_header","is_looped","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","dir","MediaCaption","InstantViewMediaViewerContent","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailBlob","videoWidth","videoHeight","handleContentClick","onVolumeChange","prevMedia","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","handleSave","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewUrl","hash","scrollToHash","handleBack","hasScroll","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","scrollIntoView","Provider","alignItems","transition","MediaInfo","dateHint","tileControl","MediaViewerContent","updateAnimationData","changeSpeed","isVideo","isAnimation","isLottie","MediaViewer","deleteConfirmationOpened","currentMessageId","firstSliceLoaded","inserted","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","MEDIA_SLICE_LIMIT","handleDialogOpen","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","ProfileMediaViewerContent","ProfileMediaInfo","ProfileMediaViewer","currentIndex","inputFile","chatPhoto","getReadWriteStore","prevFileId","currentFileId","inHistory","MainPage","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.333654f1.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\nconst useDownloadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.dataUrls = new Map();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateSendFiles': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n\n        const { authorization_state } = update;\n        if (!authorization_state) return;\n\n        switch (authorization_state['@type']) {\n            case 'authorizationStateWaitTdlibParameters': {\n                await this.initDB();\n                break;\n            }\n            case 'authorizationStateClosed': {\n                this.reset();\n                break;\n            }\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'animation': {\n                    this.handleAnimation(store, item, file, arr, null);\n                    break;\n                }\n                case 'audio': {\n                    this.handleAudio(store, item, file, arr, null);\n                    break;\n                }\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'document': {\n                    this.handleDocument(store, item, file, arr, null);\n                    break;\n                }\n                case 'game': {\n                    this.handleGame(store, item, file, arr, null);\n                    break;\n                }\n                case 'location': {\n                    this.handleLocation(store, item, file, arr, null);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'pageBlockMap': {\n                    this.handlePageBlockMap(store, item, file, arr, null);\n                    break;\n                }\n                case 'photo': {\n                    this.handlePhoto(store, item, file, arr, null);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'video': {\n                    this.handleVideo(store, item, file, arr, null);\n                    break;\n                }\n                case 'videoNote': {\n                    this.handleVideoNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'voiceNote': {\n                    this.handleVoiceNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || animation)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || animation)\n                );\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || audio)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || audio)\n                );\n            }\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || document)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || document)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || location)\n                );\n            }\n        }\n    };\n\n    handlePageBlockMap = (store, pageBlockMap, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const { location } = pageBlockMap;\n        const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || pageBlockMap)\n                );\n            }\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(chatId, messageId, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || photo)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || voiceNote)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || video)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || video)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            // console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            // console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        // console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        // console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            // console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        if (useReadFile) {\n            file = this.get(file.id) || file;\n            if (file && file.local && !file.local.is_downloading_completed) {\n                faultCallback();\n                return;\n            }\n\n            (async file => {\n                // console.log('[fs] readFile file_id=' + file.id);\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n\n                // console.log(`[fs] readFile result file_id=${file.id}`, file, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getDataUrl = id => {\n        if (!id) {\n            return null;\n        }\n\n        if (this.dataUrls.has(id)) {\n            return this.dataUrls.get(id);\n        }\n\n        return null;\n    };\n\n    setDataUrl = (id, dataUrl) => {\n        this.dataUrls.set(id, dataUrl);\n    };\n\n    deleteDataUrl = id => {\n        this.dataUrls.delete(id);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    IV_LOCATION_HEIGHT,\n    IV_LOCATION_WIDTH,\n    IV_PHOTO_SIZE,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return '';\n\n    let size = file.size;\n    if (!size) return '';\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || audio);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || audio)\n    );\n\n    return true;\n}\n\nfunction cancelLoadAnimationContent(animation) {\n    const { animation: file } = animation;\n    if (!file) return;\n\n    const { id } = file;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || animation);\n            }\n        }\n    );\n}\n\nfunction cancelLoadAnimationThumbnailContent(animation) {\n    if (!animation) return;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || animation)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || document);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || document)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadPageBlockMapContent(store, pageBlockMap, message) {\n    if (!pageBlockMap) return;\n\n    const { location } = pageBlockMap;\n    const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: IV_LOCATION_WIDTH,\n            height: IV_LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || pageBlockMap)\n    );\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || location)\n    );\n}\n\nfunction cancelLoadBigPhotoContent(photo) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message, displaySize = PHOTO_SIZE) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes, displaySize);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const thumbSize = getPhotoThumbnailSize(photo.sizes);\n    if (!thumbSize) return false;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (photoSize === thumbSize) return;\n\n    let { photo: file } = thumbSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction cancelLoadVideoContent(video) {\n    if (!video) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || video);\n            }\n        }\n    );\n}\n\nfunction cancelLoadVideoThumbnailContent(video) {\n    if (!video) return;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || video)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || videoNote);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || videoNote)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || voiceNote);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nexport function saveMedia(media, message) {\n    if (!media) return;\n\n    switch (media['@type']) {\n        case 'animation': {\n            saveAnimation(media, message);\n            break;\n        }\n        case 'document': {\n            saveDocument(media, message);\n            break;\n        }\n        case 'photo': {\n            savePhoto(media, message);\n            break;\n        }\n        case 'video': {\n            saveVideo(media, message);\n            break;\n        }\n    }\n}\n\nfunction saveAnimation(animation, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!animation) return;\n\n    const { animation: file, file_name } = animation;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || animation, () =>\n        FileStore.updateAnimationBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveDocument(document, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!document) return;\n\n    const { document: file, file_name } = document;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || document, () =>\n        FileStore.updateDocumentBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveVideo(video, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!video) return;\n\n    const { video: file, file_name } = video;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || video, () =>\n        FileStore.updateVideoBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction savePhoto(photo, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!photo) return;\n\n    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    const { photo: file } = photoSize;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, fileId + '.jpg', message || photo, () => FileStore.updatePhotoBlob(chatId, messageId, fileId));\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nfunction getViewerThumbnail(media) {\n    if (!media) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'document': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'photo': {\n            return getViewerFile(media, PHOTO_SIZE);\n        }\n        case 'video': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getViewerFile(media, size) {\n    if (!size) return [0, 0, null, ''];\n\n    switch (media['@type']) {\n        case 'animation': {\n            return [media.width, media.height, media.animation, media.mime_type];\n        }\n        case 'photo': {\n            const photoSize = getSize(media.sizes, size);\n            if (photoSize) {\n                return [photoSize.width, photoSize.height, photoSize.photo, ''];\n            }\n            break;\n        }\n        case 'document': {\n            return [50, 50, document.document, document.mime_type];\n        }\n        case 'video': {\n            return [media.width, media.height, media.video, media.mime_type];\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null, ''];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null, ''];\n\n    const { content } = message;\n    if (!content) return [0, 0, null, ''];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                const { width, height, animation: file, mime_type } = animation;\n                return [width, height, file, mime_type];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    const { width, height, photo: file } = photoSize;\n                    return [width, height, file, ''];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                const { document: file, mime_type } = document;\n                return [50, 50, file, mime_type];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    const { width, height, photo: file } = photoSize;\n                    return [width, height, file, ''];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    const { width, height, animation: file, mime_type } = animation;\n                    return [width, height, file, mime_type];\n                }\n\n                if (document) {\n                    const { document: file, mime_type } = document;\n                    return [50, 50, file, mime_type];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        const { width, height, photo: file } = photoSize;\n                        return [width, height, file, ''];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    const { width, height, video: file, mime_type } = video;\n                    return [width, height, file, mime_type];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                const { width, height, video: file, mime_type } = video;\n                return [width, height, file, mime_type];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null, ''];\n}\n\nexport function cancelLoadIVMediaViewerContent(blocks) {\n    if (!blocks) return;\n    if (!blocks.length) return;\n\n    for (let i = 0; i < blocks.length; i++) {\n        const content = blocks[i];\n        if (content) {\n            switch (content['@type']) {\n                case 'pageBlockAnimation': {\n                    const { animation } = content;\n                    if (!animation) break;\n\n                    cancelLoadAnimationThumbnailContent(animation);\n                    cancelLoadAnimationContent(animation);\n                    break;\n                }\n                case 'pageBlockPhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    cancelLoadBigPhotoContent(photo);\n                    break;\n                }\n                case 'pageBlockVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    cancelLoadVideoThumbnailContent(video);\n                    cancelLoadVideoContent(video);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n                    if (!animation) break;\n\n                    cancelLoadAnimationThumbnailContent(animation);\n                    cancelLoadAnimationContent(animation);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    cancelLoadBigPhotoContent(photo);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    cancelLoadVideoThumbnailContent(video);\n                    cancelLoadVideoContent(video);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { animation, photo, video } = web_page;\n\n                        if (animation) {\n                            cancelLoadAnimationThumbnailContent(animation);\n                            cancelLoadAnimationContent(animation);\n                        }\n\n                        if (photo) {\n                            cancelLoadBigPhotoContent(photo);\n                        }\n\n                        if (video) {\n                            cancelLoadVideoThumbnailContent(video);\n                            cancelLoadVideoContent(video);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport function loadIVMediaViewerContent(blocks, useSizeLimit = false) {\n    if (!blocks) return;\n    if (!blocks.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < blocks.length; i++) {\n        const content = blocks[i];\n        if (content) {\n            switch (content['@type']) {\n                case 'pageBlockAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, null, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, null);\n                    break;\n                }\n                case 'pageBlockPhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, null);\n                    break;\n                }\n                case 'pageBlockVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, null);\n                    loadVideoContent(store, video, null, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport function cancelPreloadIVMediaViewerContent(index, blocks) {\n    if (!blocks.length) return;\n\n    const preload = [];\n    if (index > 0) {\n        preload.push(blocks[index - 1]);\n    }\n    if (index < blocks.length - 1) {\n        preload.push(blocks[index + 1]);\n    }\n\n    cancelLoadIVMediaViewerContent([blocks[index]]);\n    cancelLoadIVMediaViewerContent(blocks);\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nexport function preloadIVMediaViewerContent(index, blocks) {\n    if (!blocks.length) return;\n\n    const preload = [];\n    if (index > 0) {\n        preload.push(blocks[index - 1]);\n    }\n    if (index < blocks.length - 1) {\n        preload.push(blocks[index + 1]);\n    }\n\n    loadIVMediaViewerContent([blocks[index]], false);\n    loadIVMediaViewerContent(preload, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const dataUrl = FileStore.getDataUrl(id);\n    if (dataUrl) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    loadChatPhotoContent(store, photo, chat.id);\n}\n\nfunction loadChatPhotoContent(store, photo, chatId) {\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nexport function loadRecentStickersContent(store, recent) {\n    if (!recent) return;\n\n    const { stickers } = recent;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nexport function loadBackgroundsContent(store, backgrounds) {\n    if (!backgrounds) return;\n\n    backgrounds.forEach(background => {\n        loadBackgroundContent(store, background, false);\n    });\n}\n\nexport function loadBackgroundContent(store, background, full = false) {\n    if (!background) return;\n\n    switch (background.type['@type']) {\n        case 'backgroundTypeFill': {\n            break;\n        }\n        case 'backgroundTypePattern': {\n            const { document } = background;\n            if (document) {\n                loadDocumentThumbnailContent(store, document, null);\n                if (full) loadDocumentContent(store, document, null, false);\n            }\n            break;\n        }\n        case 'backgroundTypeWallpaper': {\n            const { document } = background;\n            if (document) {\n                loadDocumentThumbnailContent(store, document, null);\n                if (full) loadDocumentContent(store, document, null, false);\n            }\n            break;\n        }\n    }\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n        if (sticker.is_animated) {\n            loadStickerContent(store, sticker, null);\n        }\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const dataUrl = file && FileStore.getDataUrl(file.id);\n    if (dataUrl) return dataUrl;\n\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nfunction loadInstantViewContent(instantView) {\n    if (!instantView) return;\n\n    const { page_blocks } = instantView;\n    if (!page_blocks) return;\n\n    const store = FileStore.getStore();\n\n    page_blocks.forEach(pageBlock => loadPageBlockContent(store, pageBlock));\n}\n\nfunction loadPageBlockContent(store, b) {\n    if (!b) return;\n\n    switch (b['@type']) {\n        case 'pageBlockAnchor': {\n            break;\n        }\n        case 'pageBlockAnimation': {\n            const { animation, caption } = b;\n\n            loadAnimationThumbnailContent(store, animation, null);\n            loadAnimationContent(store, animation, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAudio': {\n            const { audio, caption } = b;\n\n            loadAudioThumbnailContent(store, audio, null);\n            loadAudioContent(store, audio, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            const { author } = b;\n\n            loadRichTextContent(store, author);\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockCaption': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockChatLink': {\n            const { photo } = b;\n\n            loadChatPhotoContent(store, photo, 0);\n            break;\n        }\n        case 'pageBlockCollage': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockCover': {\n            const { cover } = b;\n\n            loadPageBlockContent(store, cover);\n            break;\n        }\n        case 'pageBlockDetails': {\n            const { header, page_blocks } = b;\n\n            loadPageBlockContent(store, header);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockDivider': {\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            const { poster_photo, caption } = b;\n\n            loadPhotoContent(store, poster_photo, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            const { author_photo, page_blocks, caption } = b;\n\n            loadPhotoContent(store, author_photo, null);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockFooter': {\n            const { footer } = b;\n\n            loadRichTextContent(store, footer);\n            break;\n        }\n        case 'pageBlockHeader': {\n            const { header } = b;\n\n            loadRichTextContent(store, header);\n            break;\n        }\n        case 'pageBlockKicker': {\n            const { kicker } = b;\n\n            loadRichTextContent(store, kicker);\n            break;\n        }\n        case 'pageBlockList': {\n            const { items } = b;\n\n            items.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockListItem': {\n            const { page_blocks } = b;\n\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockMap': {\n            const { caption } = b;\n\n            loadPageBlockMapContent(store, b, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockParagraph': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPhoto': {\n            const { photo, caption } = b;\n\n            loadPhotoContent(store, photo, null, IV_PHOTO_SIZE);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            const { header, articles } = b;\n\n            loadRichTextContent(store, header);\n            articles.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockRelatedArticle': {\n            const { photo } = b;\n\n            loadPhotoContent(store, photo, null);\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockSubheader': {\n            const { subheader } = b;\n\n            loadRichTextContent(store, subheader);\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            const { subtitle } = b;\n\n            loadRichTextContent(store, subtitle);\n            break;\n        }\n        case 'pageBlockTable': {\n            const { caption, cells } = b;\n\n            loadRichTextContent(store, caption);\n            cells.forEach(row => row.forEach(x => loadPageBlockContent(store, x)));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockTableCell': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockTitle': {\n            const { title } = b;\n\n            loadRichTextContent(store, title);\n            break;\n        }\n        case 'pageBlockVideo': {\n            const { video, caption } = b;\n\n            loadVideoThumbnailContent(store, video, null);\n            loadVideoContent(store, video, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n    }\n}\n\nfunction loadRichTextContent(store, t) {\n    if (!t) return;\n\n    switch (t['@type']) {\n        case 'richTextAnchor': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextBold': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextEmailAddress': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextFixed': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextIcon': {\n            const { document } = t;\n\n            loadDocumentThumbnailContent(store, document, null);\n            loadDocumentContent(store, document, null, false);\n            break;\n        }\n        case 'richTextItalic': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextMarked': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPlain': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTexts': {\n            const { texts } = t;\n\n            texts.forEach(x => loadRichTextContent(store, x));\n            break;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSubscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSuperscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUnderline': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUrl': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n    }\n}\n\nfunction getAnimationData(file) {\n    return new Promise(resolve => {\n        if (!file) {\n            resolve(null);\n            return;\n        }\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) {\n            resolve(null);\n            return;\n        }\n\n        const fileReader = new FileReader();\n        fileReader.onload = event => resolve(JSON.parse(event.target.result));\n        fileReader.onerror = () => resolve(null);\n        fileReader.onabort = () => resolve(null);\n        fileReader.readAsText(blob);\n    });\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadChatContent,\n    loadChatsContent,\n    loadDraftContent,\n    loadInstantViewContent,\n    loadStickerContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    loadStickerThumbnailContent,\n    loadUserContent,\n    loadUsersContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension,\n    getViewerFile,\n    getViewerThumbnail,\n    getAnimationData\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from '../Utils/Date';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport { formatPhoneNumber } from './Phone';\nimport { getChannelStatus } from './Channel';\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport ChatStore from '../Stores/ChatStore';\nimport NotificationStore from '../Stores/NotificationStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function canUnpinMessage(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { pinned_message_id } = chat;\n\n    return pinned_message_id > 0;\n}\n\nexport function isChatArchived(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { chat_list } = chat;\n    if (!chat_list) return false;\n\n    return chat_list['@type'] === 'chatListArchive';\n}\n\nexport function canSetChatChatList(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_sponsored, chat_list } = chat;\n    if (is_sponsored) return false;\n    if (!chat_list) return false;\n\n    if (chat_list['@type'] === 'chatListMain') {\n        if (isMeChat(chatId) || chatId === SERVICE_NOTIFICATIONS_USER_ID) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function draftEquals(draft1, draft2) {\n    if (!draft1 && !draft2) return true;\n    if (draft1 && !draft2) return false;\n    if (draft2 && !draft1) return false;\n\n    const { input_message_text: inputMessageText1, reply_to_message_id: replyToMessageId1 } = draft1;\n    const { input_message_text: inputMessageText2, reply_to_message_id: replyToMessageId2 } = draft2;\n\n    if (replyToMessageId1 !== replyToMessageId2) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== inputMessageText2['@type']) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== 'inputMessageText') {\n        return true;\n    }\n\n    const { text: formattedText1 } = inputMessageText1;\n    const { text: formattedText2 } = inputMessageText2;\n\n    if (!formattedText1 && !formattedText2) return true;\n    if (formattedText1 && !formattedText2) return false;\n    if (formattedText2 && !formattedText1) return false;\n\n    const { text: text1, entities: entities1 } = formattedText1;\n    const { text: text2, entities: entities2 } = formattedText2;\n\n    if (text1 !== text2) {\n        return false;\n    }\n\n    return entitiesEquals(entities1, entities2);\n}\n\nfunction entitiesEquals(entities1, entities2) {\n    if (!entities1 && !entities2) return true;\n    if (entities1 && !entities2) return false;\n    if (entities2 && !entities1) return false;\n\n    if (entities1.length !== entities2.length) {\n        return false;\n    }\n\n    const map = new Map();\n    entities1.forEach(x => {\n        map.set(`${x.type['@type']}_${x.offset}_${x.length}`, x);\n    });\n\n    return entities2.every(x => map.has(`${x.type['@type']}_${x.offset}_${x.length}`));\n}\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    return getUserFullName(message.sender_user_id, null, t);\n}\n\nfunction getMessageSenderName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id, t);\n}\n\nfunction getLastMessageSenderName(chat, t = k => k) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message, t);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction showChatUnreadMessageIcon(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, last_message, last_read_outbox_message_id } = chat;\n    if (!last_message) return false;\n\n    const { is_outgoing } = last_message;\n\n    return (\n        is_outgoing && last_message.id > last_read_outbox_message_id && !is_marked_as_unread && !showChatDraft(chatId)\n    );\n}\n\nfunction showChatUnreadMentionCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { unread_mention_count } = chat;\n\n    return unread_mention_count > 0;\n}\n\nfunction showChatUnreadCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return (\n        unread_count > 1 ||\n        (unread_count === 1 && unread_mention_count === 0) ||\n        (is_marked_as_unread && unread_count === 0 && unread_mention_count === 0)\n    );\n}\n\nfunction isChatUnread(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return is_marked_as_unread || unread_count > 0;\n}\n\nfunction isChatMuted(chatId) {\n    return getChatMuteFor(chatId) > 0;\n}\n\nfunction getChatMuteFor(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return 0;\n\n    const { use_default_mute_for, mute_for } = notification_settings;\n\n    if (use_default_mute_for) {\n        const settings = getScopeNotificationSettings(chatId);\n\n        return settings ? settings.mute_for : false;\n    }\n\n    return mute_for;\n}\n\nexport function getScopeNotificationSettings(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return NotificationStore.settings.get('notificationSettingsScopePrivateChats');\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            let settings = null;\n            if (isChannelChat(chatId)) {\n                settings = NotificationStore.settings.get('notificationSettingsScopeChannelChats');\n            } else {\n                settings = NotificationStore.settings.get('notificationSettingsScopeGroupChats');\n            }\n            return settings;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return supergroup.is_channel\n                    ? getChannelStatus(supergroup, chatId)\n                    : getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat, t) {\n    if (!chat) return null;\n\n    let title = chat.title || t('HiddenName');\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return formatPhoneNumber(user.phone_number);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return supergroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return basicGroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nexport function isDeletedPrivateChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            const user = UserStore.get(chat.type.user_id);\n\n            return user && user.type['@type'] === 'userTypeDeleted';\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nasync function getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypePrivate': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeSecret': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeBasicGroup': {\n            return await TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: type.basic_group_id\n            });\n        }\n        case 'chatTypeSupergroup': {\n            return await TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: type.supergroup_id\n            });\n        }\n    }\n\n    return null;\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendMediaMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_media_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_media_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_media_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_media_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_media_messages && is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false, t = k => k) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id, t);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPolls(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_polls } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_polls;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_polls;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_polls && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_polls && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_polls && is_member && permissions && permissions.can_send_polls;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_messages && is_member && permissions && permissions.can_send_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    return replyToMessageId;\n}\n\nfunction canPinMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_pin_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return false;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_pin_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return can_pin_messages || status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_pin_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_pin_messages && is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction isChatVerified(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n\n            return user && user.is_verified;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n\n            return supergroup && supergroup.is_verified;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatSecret(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate': {\n            return false;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    showChatUnreadMessageIcon,\n    showChatUnreadMentionCount,\n    showChatUnreadCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatUnread,\n    isChatMember,\n    isChatVerified,\n    isChatSecret,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canPinMessages,\n    canSendMediaMessages,\n    canSendMessages,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (\n        status &&\n        (status['@type'] === 'chatMemberStatusBanned' ||\n            status['@type'] === 'chatMemberStatusLeft' ||\n            (status['@type'] === 'chatMemberStatusCreator' && !status.is_member))\n    ) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getChannelStatus(supergroup, chatId) {\n    if (!supergroup) return '';\n\n    let { status, is_channel, member_count: count } = supergroup;\n    if (!is_channel) return '';\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return 'channel is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 subscribers';\n    if (count === 1) return '1 subscriber';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} subscribers, ${onlineCount} online`;\n    }\n\n    return `${count} subscribers`;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { openChat, openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MentionLink.css';\nimport { isGroupChat } from '../../Utils/Chat';\n\nclass MentionLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, username } = props;\n\n        if (state.prevUserId !== userId || state.prevUsername !== username) {\n            return {\n                prevUserId: userId,\n                prevUsername: username,\n                error: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = async event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { userId, username, popup } = this.props;\n        if (userId) {\n            openUser(userId, popup);\n        } else if (username) {\n            const chat = await TdLibController.send({\n                '@type': 'searchPublicChat',\n                username\n            }).catch(() => {\n                this.setState({ error: true });\n            });\n\n            if (chat) {\n                if (isGroupChat(chat.id)) {\n                    openChat(chat.id, null, false);\n                } else {\n                    openChat(chat.id, null, popup);\n                }\n            }\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ error: false });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { children, t, title, username } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <a title={title} onClick={this.handleClick}>\n                    {children}\n                </a>\n                {error && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleClose}\n                        onClick={this.handleDialogClick}\n                        aria-labelledby='confirm-dialog-title'>\n                        <DialogTitle id='confirm-dialog-title'>{t('Error')}</DialogTitle>\n                        <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                            <DialogContentText>{`Can't find username ${username}.`}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose}>{t('Ok')}</Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nMentionLink.propTypes = {\n    userId: PropTypes.number,\n    username: PropTypes.string,\n    title: PropTypes.string,\n    popup: PropTypes.bool\n};\n\nMentionLink.defaultProps = {\n    popup: true\n};\n\nexport default withTranslation()(MentionLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport emojiRegex from 'emoji-regex';\nimport MentionLink from '../Components/Additional/MentionLink';\nimport Poll from '../Components/Message/Media/Poll';\nimport SafeLink from '../Components/Additional/SafeLink';\nimport dateFormat from '../Utils/Date';\nimport { searchChat, setMediaViewerContent } from '../Actions/Client';\nimport { getChatTitle, isMeChat } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getFitSize, getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getDecodedUrl } from './Url';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport {\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_SIZE\n} from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function isMetaBubble(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { content } = message;\n    if (!content) {\n        return false;\n    }\n\n    const { caption } = content;\n    if (caption && caption.text && caption.text.length > 0) {\n        return false;\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageLocation': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageSticker': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageVideoNote': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isMessageUnread(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) {\n        return false;\n    }\n\n    const { last_read_inbox_message_id, last_read_outbox_message_id } = chat;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { id, is_outgoing } = message;\n    const isMe = isMeChat(chatId);\n    if (is_outgoing && isMe) {\n        return false;\n    }\n\n    return is_outgoing ? id > last_read_outbox_message_id : id > last_read_inbox_message_id;\n}\n\nfunction getAuthor(message, t = k => k) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(forward_info.sender_user_id, null, t);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message, t);\n}\n\nfunction getTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(sender_user_id, null, t);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction searchCurrentChat(event, text) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    const { chatId } = AppStore;\n\n    searchChat(chatId, text);\n}\n\nfunction getFormattedText(formattedText, t = k => k) {\n    if (formattedText['@type'] !== 'formattedText') return null;\n\n    const { text, entities } = formattedText;\n    if (!text) return null;\n    if (!entities) return text;\n\n    let deleteLineBreakAfterPre = false;\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const { offset, length, type } = entity;\n\n        // skip nested entities\n        if (index > offset) {\n            continue;\n        }\n\n        let textBefore = substring(text, index, offset);\n        const textBeforeLength = textBefore.length;\n        if (textBefore) {\n            if (deleteLineBreakAfterPre && textBefore.length > 0 && textBefore[0] === '\\n') {\n                textBefore = textBefore.substr(1);\n                deleteLineBreakAfterPre = false;\n            }\n            if (textBefore) {\n                result.push(textBefore);\n            }\n        }\n\n        const entityKey = offset;\n        let entityText = substring(text, offset, offset + length);\n        if (deleteLineBreakAfterPre && entityText.length > 0 && entityText[0] === '\\n') {\n            entityText = entityText.substr(1);\n            deleteLineBreakAfterPre = false;\n        }\n\n        switch (type['@type']) {\n            case 'textEntityTypeBold': {\n                result.push(<strong key={entityKey}>{entityText}</strong>);\n                break;\n            }\n            case 'textEntityTypeBotCommand': {\n                const command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a key={entityKey} onClick={stopPropagation} href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCode': {\n                result.push(<code key={entityKey}>{entityText}</code>);\n                break;\n            }\n            case 'textEntityTypeEmailAddress': {\n                result.push(\n                    <a\n                        key={entityKey}\n                        href={`mailto:${entityText}`}\n                        onClick={stopPropagation}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeHashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeItalic': {\n                result.push(<em key={entityKey}>{entityText}</em>);\n                break;\n            }\n            case 'textEntityTypeMentionName': {\n                result.push(\n                    <MentionLink key={entityKey} userId={type.user_id} title={getUserFullName(type.user_id, null, t)}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypeMention': {\n                result.push(\n                    <MentionLink key={entityKey} username={entityText}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypePhoneNumber': {\n                result.push(\n                    <a key={entityKey} href={`tel:${entityText}`} onClick={stopPropagation}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypePre': {\n                result.push(<pre key={entityKey}>{entityText}</pre>);\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypePreCode': {\n                result.push(\n                    <pre key={entityKey}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                const url = type.url ? type.url : entityText;\n\n                result.push(\n                    <SafeLink key={entityKey} url={url}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            case 'textEntityTypeUrl': {\n                result.push(\n                    <SafeLink key={entityKey} url={entityText}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += textBeforeLength + entity.length;\n    }\n\n    if (index < text.length) {\n        let textAfter = text.substring(index);\n        if (deleteLineBreakAfterPre && textAfter.length > 0 && textAfter[0] === '\\n') {\n            textAfter = textAfter.substr(1);\n        }\n        if (textAfter) {\n            result.push(textAfter);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message, meta, t = k => k) {\n    if (!message) return null;\n\n    let result = [];\n\n    const { content } = message;\n    if (!content) return [...result, meta];\n\n    const { text, caption } = content;\n\n    if (text && text['@type'] === 'formattedText' && text.text) {\n        result = getFormattedText(text, t);\n    } else if (caption && caption['@type'] === 'formattedText' && caption.text) {\n        const formattedText = getFormattedText(caption, t);\n        if (formattedText) {\n            result = result.concat(formattedText);\n        }\n    }\n\n    return result && result.length > 0 ? [...result, meta] : [];\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n\n    return dateFormat(d, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n    return dateFormat(d, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            return getUserFullName(sender_user_id, null, t);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterDuplicateMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction filterMessages(messages) {\n    return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document && document.file_name) {\n                return document.file_name + caption;\n            }\n\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(\n    location,\n    width = LOCATION_WIDTH,\n    height = LOCATION_HEIGHT,\n    zoom = LOCATION_ZOOM,\n    scale = LOCATION_SCALE\n) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${width},${height}&scale=${scale}&zoom=${zoom}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message, t);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        // download file at loadMediaViewerContent instead\n        // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.user_id, true);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                // openDocument(audio, message, fileCancel);\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nexport function getReplyMinithumbnail(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { minithumbnail } = animation;\n            return minithumbnail || null;\n        }\n        case 'messageAudio': {\n            return null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { minithumbnail } = document;\n            return minithumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { minithumbnail } = animation;\n                if (minithumbnail) {\n                    return minithumbnail;\n                }\n            }\n\n            if (photo) {\n                return photo.minithumbnail || null;\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageSticker': {\n            return null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return photo.minithumbnail || null;\n                }\n                if (animation) {\n                    const { minithumbnail } = animation;\n                    return minithumbnail || null;\n                }\n                if (audio) {\n                    return null;\n                }\n                if (document) {\n                    const { minithumbnail } = document;\n                    return minithumbnail || null;\n                }\n                if (sticker) {\n                    return null;\n                }\n                if (video) {\n                    const { minithumbnail } = video;\n                    return minithumbnail || null;\n                }\n                if (video_note) {\n                    const { minithumbnail } = video_note;\n                    return minithumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { minithumbnail } = video;\n            return minithumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { minithumbnail } = video_note;\n            return minithumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getEmojiMatches(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return 0;\n\n    const { content } = message;\n    if (!content) return 0;\n    if (content['@type'] !== 'messageText') return 0;\n\n    const { text: textContent } = content;\n    if (!textContent) return;\n    if (textContent['@type'] !== 'formattedText') return 0;\n\n    const { text, entities } = textContent;\n    if (!text) return 0;\n    if (entities && entities.length > 0) return 0;\n\n    let lastIndex = 0;\n    let emojiMatches = 0;\n    let m;\n    const re = emojiRegex();\n    do {\n        m = re.exec(text);\n\n        if (m) {\n            emojiMatches += 1;\n            // none-emoji symbol between prev and current emojis or before first\n            if (lastIndex !== m.index) {\n                emojiMatches = 0;\n                break;\n            }\n            // more than 3 emojis in a row\n            if (emojiMatches > 3) {\n                emojiMatches = 0;\n                break;\n            }\n            lastIndex = re.lastIndex;\n        }\n        // none-emoji symbol at the end\n        if (!m && lastIndex !== text.length) {\n            emojiMatches = 0;\n            break;\n        }\n    } while (m);\n\n    return emojiMatches;\n}\n\nfunction messageComparatorDesc(left, right) {\n    return left.id - right.id;\n}\n\nfunction checkInclusion(index, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (index >= entities[i].offset && index < entities[i].offset + entities[i].length) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkIntersection(startIndex, endIndex, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (startIndex <= entities[i].offset && entities[i].offset + entities[i].length - 1 <= endIndex) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkEntity(startIndex, endIndex, entities) {\n    return (\n        !checkInclusion(startIndex, entities) &&\n        !checkInclusion(endIndex, entities) &&\n        !checkIntersection(startIndex, endIndex, entities)\n    );\n}\n\nfunction removeOffsetAfter(start, countToRemove, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset -= countToRemove;\n        }\n    });\n}\n\nfunction addOffsetAfter(start, countToAdd, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset += countToAdd;\n        }\n    });\n}\n\nfunction removeEntities(startIndex, endIndex, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const entityStart = entity.offset;\n        const entityEnd = entity.offset + entity.length - 1;\n        if (\n            (startIndex <= entityStart && entityStart <= endIndex) ||\n            (startIndex <= entityEnd && entityEnd <= endIndex) ||\n            (entityStart < startIndex && endIndex > entityEnd)\n        ) {\n            entities.splice(i--, 1);\n        }\n    }\n}\n\nfunction addTextNode(offset, length, text, nodes) {\n    const node = document.createTextNode(text.substr(offset, length));\n    nodes.push(node);\n}\n\nexport function getNodes(text, entities, t = k => k) {\n    if (!text) return [];\n\n    entities = (entities || []).sort((a, b) => {\n        if (a.offset - b.offset !== 0) {\n            return a.offset - b.offset;\n        }\n\n        return b.length - a.length;\n    });\n\n    let nodes = [];\n    let offset = 0;\n    let prevEntity = null;\n    entities.forEach(x => {\n        if (x.offset - offset > 0) {\n            addTextNode(offset, x.offset - offset, text, nodes);\n            offset = x.offset;\n        }\n\n        if (!(prevEntity && checkInclusion(x.offset, [prevEntity]))) {\n            switch (x.type['@type']) {\n                case 'textEntityTypeBold': {\n                    const node = document.createElement('b');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeBotCommand': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCode': {\n                    const node = document.createTextNode('`' + text.substr(x.offset, x.length) + '`');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeEmailAddress': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeHashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeItalic': {\n                    const node = document.createElement('i');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeMention': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeMentionName': {\n                    try {\n                        const { user_id } = x.type;\n                        const user = UserStore.get(user_id);\n                        if (user) {\n                            const node = document.createElement('a');\n                            // node.href = getDecodedUrl(url, false);\n                            node.title = getUserFullName(user_id, null, t);\n                            // node.target = '_blank';\n                            // node.rel = 'noopener noreferrer';\n                            node.dataset.userId = user_id;\n                            node.innerText = text.substr(x.offset, x.length);\n                            nodes.push(node);\n                        } else {\n                            addTextNode(x.offset, x.length, text, nodes);\n                        }\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypePhoneNumber': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypePre': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypePreCode': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeTextUrl': {\n                    try {\n                        const { url } = x.type;\n\n                        const node = document.createElement('a');\n                        node.href = getDecodedUrl(url, false);\n                        node.title = getDecodedUrl(url, false);\n                        node.target = '_blank';\n                        node.rel = 'noopener noreferrer';\n                        node.innerText = text.substr(x.offset, x.length);\n                        nodes.push(node);\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypeUrl': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                default: {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n            }\n\n            prevEntity = x;\n            offset += x.length;\n        }\n    });\n\n    if (offset < text.length) {\n        addTextNode(offset, text.length - offset, text, nodes);\n    }\n\n    return nodes;\n}\n\n// based on code from official Android Telegram client\n// https://github.com/DrKLO/Telegram/blob/28eb8dfd0ef959fd5ad7d5d22f1d32879707c0a0/TMessagesProj/src/main/java/org/telegram/messenger/MediaDataController.java#L3782\nexport function getEntities(text) {\n    const entities = [];\n    if (!text) return { text, entities };\n\n    text = text.replace(/<div><br><\\/div>/gi, '<br>');\n    text = text.replace(/<div>/gi, '<br>');\n    text = text.replace(/<\\/div>/gi, '');\n\n    text = text.split('<br>').join('\\n');\n\n    // console.log(`[ge] start text=${text}`);\n\n    let index = -1; // first index of end tag\n    let lastIndex = 0; // first index after end tag\n    let start = -1; // first index of start tag\n    let isPre = false;\n    const mono = '`';\n    const pre = '```';\n    const bold = '**';\n    const italic = '__';\n\n    // 0 looking for html entities\n    const result = new DOMParser().parseFromString(text, 'text/html');\n    let offset = 0;\n    let length = 0;\n    let finalText = '';\n    result.body.childNodes.forEach(node => {\n        const { textContent, nodeName } = node;\n\n        length = textContent.length;\n        finalText += textContent;\n\n        if (!checkEntity(offset, offset + length - 1, entities)) {\n            return;\n        }\n\n        switch (nodeName) {\n            case '#text': {\n                offset += length;\n                break;\n            }\n            case 'A': {\n                if (node.dataset.userId) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeMentionName', user_id: node.dataset.userId },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                } else if (node.href) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeTextUrl', url: node.href },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                }\n                offset += length;\n                break;\n            }\n            case 'B':\n            case 'STRONG': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeBold' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'BR': {\n                break;\n            }\n            case 'CODE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeCode' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'I':\n            case 'EM': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeItalic' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'PRE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypePre' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            default: {\n                offset += length;\n                break;\n            }\n        }\n    });\n    text = finalText;\n    // console.log(`[ge] HTML nodes text=${text}`, entities);\n\n    // 1 looking for ``` and ` in order to find mono and pre entities\n    while ((index = text.indexOf(isPre ? pre : mono, lastIndex)) !== -1) {\n        if (start === -1) {\n            // find start tag\n            isPre = text.length - index > 2 && text[index + 1] === mono && text[index + 2] === mono;\n            start = index;\n            lastIndex = index + (isPre ? 3 : 1);\n        } else {\n            // find end tag\n            for (let i = index + (isPre ? 3 : 1); i < text.length; i++) {\n                if (text[i] === mono) {\n                    index++;\n                } else {\n                    break;\n                }\n            }\n\n            lastIndex = index + (isPre ? 3 : 1);\n            if (isPre) {\n                // add pre tag\n\n                let textBefore = text.substring(0, start);\n                let textContent = text.substring(start + 3, index);\n                let textAfter = text.substring(index + 3, text.length);\n\n                if (textContent.length > 0) {\n                    offset = start;\n                    length = index - start - 3;\n\n                    text = textBefore + textContent + textAfter;\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': 'textEntityTypePre' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 6);\n                    removeOffsetAfter(offset + length, 6, entities);\n                    entities.push(entity);\n                    lastIndex -= 6;\n\n                    // clean text before\n                    if (textBefore.length > 0) {\n                        const lastChar = textBefore[textBefore.length - 1];\n                        if (lastChar !== '\\n') {\n                            if (lastChar === ' ' || lastChar === '\\xA0') {\n                                textBefore = textBefore.substr(0, textBefore.length - 1) + '\\n';\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textBefore += '\\n';\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text after\n                    if (textAfter.length > 0) {\n                        const firstChar = textAfter[0];\n                        if (firstChar !== '\\n') {\n                            if (firstChar === ' ' || firstChar === '\\xA0') {\n                                textAfter = '\\n' + textAfter.substr(1);\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textAfter = '\\n' + textAfter;\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset + length - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text content\n                    if (textContent.length > 2) {\n                        if (textContent[0] === '\\n') {\n                            textContent = textContent.substring(1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n\n                    if (textContent.length > 2) {\n                        if (textContent[textContent.length - 1] === '\\n') {\n                            textContent = textContent.substring(0, textContent.length - 1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n                }\n            } else {\n                // add code tag\n                if (start + 1 !== index) {\n                    offset = start;\n                    length = index - start - 1;\n\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 1, index) +\n                        text.substring(index + 1, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeCode' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 2);\n                    removeOffsetAfter(offset + length, 2, entities);\n                    entities.push(entity);\n                    lastIndex -= 2;\n                }\n            }\n\n            start = -1;\n            isPre = false;\n        }\n    }\n\n    // 1.1 case when ``` is one ` mono symbol\n    if (start !== -1 && isPre) {\n        offset = start;\n        length = 1;\n\n        if (checkEntity(offset, offset + length + 2 - 1, entities)) {\n            text = text.substring(0, start) + text.substring(start + 2, text.length);\n\n            const entity = {\n                '@type': 'textEntity',\n                offset,\n                length,\n                type: { '@type': 'textEntityTypeCode' },\n                textContent: text.substring(offset, offset + length)\n            };\n            removeEntities(offset, offset + length - 1 + 2);\n            removeOffsetAfter(offset + length, 2, entities);\n            entities.push(entity);\n        }\n    }\n\n    // console.log(`[ge] pre and code text=${text}`, entities);\n    // 2 looking for bold, italic entities\n    for (let c = 0; c < 2; c++) {\n        lastIndex = 0;\n        start = -1;\n        const checkString = c === 0 ? bold : italic;\n        const checkChar = c === 0 ? '*' : '_';\n        while ((index = text.indexOf(checkString, lastIndex)) !== -1) {\n            if (start === -1) {\n                const prevChar = index === 0 ? ' ' : text[index - 1];\n                if (\n                    !checkInclusion(index, entities) &&\n                    (prevChar === ' ' || prevChar === '\\xA0' || prevChar === '\\n')\n                ) {\n                    start = index;\n                }\n                lastIndex = index + 2;\n            } else {\n                for (let a = index + 2; a < text.length; a++) {\n                    if (text[a] === checkChar) {\n                        index++;\n                    } else {\n                        break;\n                    }\n                }\n                lastIndex = index + 2;\n                if (checkInclusion(index, entities) || checkIntersection(start, index, entities)) {\n                    start = -1;\n                    continue;\n                }\n                if (start + 2 !== index) {\n                    offset = start;\n                    length = index - start - 2;\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 2, index) +\n                        text.substring(index + 2, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': c === 0 ? 'textEntityTypeBold' : 'textEntityTypeItalic' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeOffsetAfter(offset + length, 4, entities);\n                    entities.push(entity);\n                    lastIndex -= 4;\n                }\n                start = -1;\n            }\n        }\n    }\n    // console.log(`[ge] result text=${text}`, entities);\n\n    return { text, entities };\n}\n\nexport function canMessageBeEdited(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { can_be_edited } = message;\n\n    return can_be_edited;\n}\n\nexport function showMessageForward(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { forward_info, content } = message;\n\n    return forward_info && content && content['@type'] !== 'messageSticker' && content['@type'] !== 'messageAudio';\n}\n\nexport function isTextMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n\n    return content && content['@type'] === 'messageText';\n}\n\nexport function isMessagePinned(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    return chat.pinned_message_id === messageId;\n}\n\nexport function canMessageBeUnvoted(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    const { poll } = content;\n    if (!poll) return false;\n\n    const { type, is_closed, options } = poll;\n    if (!type) return false;\n    if (type['@type'] !== 'pollTypeRegular') return false;\n    if (is_closed) return false;\n\n    return options.some(x => x.is_chosen || x.is_being_chosen);\n}\n\nexport function canMessageBeClosed(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content, can_be_edited } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    return can_be_edited;\n}\n\nexport function canMessageBeForwarded(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n\n    return message && message.can_be_forwarded;\n}\n\nexport function canMessageBeDeleted(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n\n    return message && (message.can_be_deleted_only_for_self || message.can_be_deleted_for_all_users);\n}\n\nexport function getMessageStyle(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { width, height, thumbnail } = animation;\n\n            const size = { width, height } || thumbnail;\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const size = getSize(photo.sizes, PHOTO_SIZE);\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail, width, height } = video;\n\n            const size = { width, height } || thumbnail;\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n    }\n\n    return null;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterDuplicateMessages,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize,\n    getEmojiMatches,\n    messageComparatorDesc,\n    substring,\n    stopPropagation\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5.29289322,5.29289322 C5.68341751,4.90236893 6.31658249,4.90236893 6.70710678,5.29289322 L6.70710678,5.29289322 L12,10.585 L17.2928932,5.29289322 C17.6834175,4.90236893 18.3165825,4.90236893 18.7071068,5.29289322 C19.0976311,5.68341751 19.0976311,6.31658249 18.7071068,6.70710678 L13.415,12 L18.7071068,17.2928932 C19.0675907,17.6533772 19.0953203,18.2206082 18.7902954,18.6128994 L18.7071068,18.7071068 C18.3165825,19.0976311 17.6834175,19.0976311 17.2928932,18.7071068 L17.2928932,18.7071068 L12,13.415 L6.70710678,18.7071068 C6.31658249,19.0976311 5.68341751,19.0976311 5.29289322,18.7071068 C4.90236893,18.3165825 4.90236893,17.6834175 5.29289322,17.2928932 L10.585,12 L5.29289322,6.70710678 C4.93240926,6.34662282 4.90467972,5.77939176 5.20970461,5.38710056 Z' />,\n    'Close'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallIcon from '@material-ui/icons/Call';\nimport { getCallTitle } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport './Call.css';\n\nclass Call extends React.Component {\n    render() {\n        const { chatId, messageId, duration, openMedia, title, meta } = this.props;\n\n        const callTitle = getCallTitle(chatId, messageId);\n        const durationString = getDurationString(Math.floor(duration || 0));\n\n        return (\n            <div className={classNames('document', { 'media-title': title })}>\n                <IconButton color='primary' aria-label='Call'>\n                    <CallIcon fontSize='large' />\n                </IconButton>\n                <div className='document-content'>\n                    <div className='document-title'>{callTitle}</div>\n                    <div className='document-action'>\n                        {durationString}\n                        {meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCall.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nexport default Call;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from '../../Tile/UserTile';\nimport { formatPhoneNumber } from '../../../Utils/Phone';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, title, openMedia, meta, caption, t } = this.props;\n        if (!contact) return null;\n\n        const { user_id: id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id,\n            first_name,\n            last_name\n        };\n\n        const fullName = getUserFullName(id, user, t);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className={classNames('contact', { 'media-title': title })}>\n                <div className='contact-tile'>\n                    <UserTile userId={id} firstName={first_name} lastName={last_name} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>\n                        {number}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Contact);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport './Game.css';\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { game, t } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text, t);\n\n        return (\n            <div className='game'>\n                <div className='border' />\n                <div className='game-wrapper'>\n                    {title && <div className='game-title'>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia, meta, title, caption } = this.props;\n        if (!venue) return null;\n\n        const { title: venueTitle, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location\n                    type='venue'\n                    chatId={chatId}\n                    messageId={messageId}\n                    location={location}\n                    openMedia={openMedia}\n                    title={title}\n                    caption={caption}\n                />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{venueTitle}</div>\n                    </a>\n                    <div className='venue-subtitle'>\n                        {address}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Venue;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport jsmediatags from 'jsmediatags';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../Constants';\nimport MessageStore from '../Stores/MessageStore';\nimport Animation from '../Components/Message/Media/Animation';\nimport Audio from '../Components/Message/Media/Audio';\nimport Call from '../Components/Message/Media/Call';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker, { StickerSourceEnum } from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport React from 'react';\nimport { getRandomInt, readImageSize } from './Common';\nimport FileStore from '../Stores/FileStore';\n\nexport function getCallTitle(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content, is_outgoing } = message;\n    if (content['@type'] !== 'messageCall') return null;\n\n    const { discard_reason, duration } = content;\n    if (is_outgoing) {\n        return discard_reason['@type'] === 'callDiscardReasonMissed' ? 'Cancelled Call' : 'Outgoing Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonMissed') {\n        return 'Missed Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonDeclined') {\n        return 'Declined Call';\n    }\n\n    return 'Incoming Call';\n}\n\nexport function isEditedMedia(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageAudio': {\n            return true;\n        }\n        case 'messageDocument': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isValidAnimatedSticker(sticker, chatId, messageId) {\n    if (!sticker) return false;\n    if (!sticker.is_animated) return false;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (message) {\n        const { sending_state } = message;\n        if (sending_state && !sticker.set_id) return false;\n    }\n\n    return true;\n}\n\nexport function isBlurredThumbnail(thumbnail, blurredSize = THUMBNAIL_BLURRED_SIZE_90) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < blurredSize;\n}\n\nexport function getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nexport function getAudioShortTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer ? `${trimmedPerformer || 'Unknown Artist'}` : file_name;\n}\n\nexport function getAudioSubtitle(audio) {\n    if (!audio) return null;\n\n    const { title } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n\n    return trimmedTitle || 'Unknown Track';\n}\n\nexport function getStickers(sets) {\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\n\nexport function getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n    const result = [];\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\n    if (row === -1) return [];\n    if (column === -1) return [];\n\n    const prevPrevRow = row - 2;\n    const prevRow = row - 1;\n    const nextRow = row + 1;\n    const nextNextRow = row + 2;\n\n    const prevColumn = column - 1;\n    const nextColumn = column + 1;\n\n    let skipPrevRow = prevRow < 0;\n    let skipPrePrevRow = prevPrevRow < 0;\n    if (!skipPrevRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipPrevRow = true;\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n                skipPrePrevRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipPrevRow = true;\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n            skipPrePrevRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    if (prevColumn >= 0) {\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    if (nextColumn < stickersPerRow) {\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n    let skipNextRow = nextRow >= totalRows;\n    let skipNextNextRow = nextRow >= totalRows;\n    if (!skipNextRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipNextRow = true;\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n                skipNextNextRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipNextRow = true;\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n            skipNextNextRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    const items = getStickers(sets);\n    return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n    if (setIndex === -1) return [-1, -1];\n\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n    if (stickerIndex === -1) return [-1, -1];\n\n    let prevRows = 0;\n    for (let i = 0; i < setIndex; i++) {\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n    }\n\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n    let index = -1;\n    let totalRows = 0;\n    let setIndex = -1;\n    for (let i = 0; i < sets.length; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        totalRows += setRows;\n        if (totalRows > row) {\n            setIndex = i;\n            break;\n        }\n    }\n    if (setIndex === -1) return index;\n\n    let setRow = row;\n    let setColumn = column;\n    for (let i = 0; i < setIndex; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        setRow -= setRows;\n    }\n\n    index = stickersPerRow * setRow + setColumn;\n\n    if (index >= sets[setIndex].stickers.length) return -1;\n\n    for (let i = 0; i < setIndex; i++) {\n        index += sets[i].stickers.length;\n    }\n\n    return index;\n}\n\nfunction getInputMediaThumbnail(thumbnail) {\n    if (!thumbnail) return null;\n\n    const { photo, width, height } = thumbnail;\n    if (!photo) return null;\n\n    return {\n        '@type': 'inputThumbnail',\n        thumbnail: {\n            '@type': 'inputFileId',\n            id: photo.id\n        },\n        width,\n        height\n    };\n}\n\nfunction getInputMediaCaption(text) {\n    if (!text) return null;\n\n    return {\n        '@type': 'formattedText',\n        text: text,\n        entities: null\n    };\n}\n\nexport function getInputMediaContent(media, text) {\n    if (!media) return null;\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { animation: file, thumbnail, width, height, duration } = media;\n\n            return {\n                '@type': 'inputMessageAnimation',\n                animation: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'audio': {\n            const { audio: file, album_cover_thumbnail: thumbnail, title, performer, duration } = media;\n\n            return {\n                '@type': 'inputMessageAudio',\n                audio: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                album_cover_thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                title,\n                performer,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'contact': {\n            return {\n                '@type': 'inputMessageContact',\n                contact: media\n            };\n        }\n        case 'document': {\n            const { document: file, thumbnail } = media;\n\n            return {\n                '@type': 'inputMessageDocument',\n                document: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'game': {\n            return null;\n        }\n        case 'invoice': {\n            return null;\n        }\n        case 'location': {\n            return {\n                '@type': 'inputMessageLocation',\n                location: media,\n                live_period: 0\n            };\n        }\n        case 'photo': {\n            const { sizes } = media;\n            if (!sizes.length) return null;\n\n            const thumbnail = sizes[0];\n            const photo = sizes[sizes.length - 1];\n            if (!photo) return null;\n\n            const { photo: file, width, height } = photo;\n\n            return {\n                '@type': 'inputMessagePhoto',\n                photo: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                width,\n                height,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'poll': {\n            return null;\n        }\n        case 'sticker': {\n            const { sticker: file, thumbnail, width, height } = media;\n\n            return {\n                '@type': 'inputMessageSticker',\n                sticker: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'venue': {\n            return {\n                '@type': 'inputMessageVenue',\n                venue: media\n            };\n        }\n        case 'video': {\n            const { video: file, thumbnail, width, height, duration, supports_streaming } = media;\n\n            return {\n                '@type': 'inputMessageVideo',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                duration,\n                width,\n                height,\n                supports_streaming,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'videoNote': {\n            const { video: file, thumbnail, duration, length } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                length,\n                ttl: 0\n            };\n        }\n        case 'voiceNote': {\n            const { voice: file, duration, waveform } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                voice_note: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                duration,\n                waveform\n            };\n        }\n    }\n\n    return null;\n}\n\nexport function getMedia(message, openMedia, hasTitle = false, hasCaption = false, inlineMeta = null) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return (\n                <Animation\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    animation={content.animation}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageAudio':\n            return (\n                <Audio\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    audio={content.audio}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageCall':\n            return (\n                <Call\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    duraton={content.duration}\n                    discardReason={content.discard_reason}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageContact':\n            return (\n                <Contact\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    contact={content.contact}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageDocument':\n            return (\n                <Document\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    document={content.document}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return (\n                <Location\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    location={content.location}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePhoto':\n            return (\n                <Photo\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    photo={content.photo}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} meta={inlineMeta} />;\n        case 'messageSticker':\n            return (\n                <Sticker\n                    chatId={chat_id}\n                    messageId={id}\n                    sticker={content.sticker}\n                    source={StickerSourceEnum.MESSAGE}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return (\n                <Venue\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    venue={content.venue}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageVideo':\n            return (\n                <Video\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    video={content.video}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVideoNote':\n            return (\n                <VideoNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    videoNote={content.video_note}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVoiceNote':\n            return (\n                <VoiceNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    voiceNote={content.voice_note}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        default:\n            return [`[${content['@type']}]`, inlineMeta];\n    }\n}\n\nexport async function getMediaTags(file) {\n    return new Promise(resolve => {\n        jsmediatags.read(file, {\n            onSuccess: async function(tag) {\n                const { tags } = tag;\n                const { artist, title } = tags;\n\n                new AudioContext().decodeAudioData(\n                    await file.arrayBuffer(),\n                    result => {\n                        resolve({ title, performer: artist, duration: Math.trunc(result.duration) });\n                    },\n                    error => {\n                        resolve(null);\n                });\n            },\n            onError: function(error) {\n                resolve(null);\n            }\n        });\n    })\n}\n\nexport async function getMediaDocumentFromFile(file) {\n    if (!file) {\n        return null;\n    }\n\n    const fileId = -getRandomInt(1, 1000000);\n    FileStore.setBlob(fileId, file);\n\n    const { name, type, size } = file;\n\n    if (type === 'audio/mp3') {\n        const tags = await getMediaTags(file);\n        if (tags) {\n            const { title, performer, duration } = tags;\n\n            return ({\n                '@type': 'messageAudio',\n                audio: {\n                    '@type': 'audio',\n                    duration,\n                    title,\n                    performer,\n                    file_name: name,\n                    mime_type: type,\n                    album_cover_minithumbnail: null,\n                    album_cover_thumbnail: null,\n                    audio: {\n                        '@type': 'file',\n                        id: fileId,\n                        size,\n                        expected_size: size,\n                        local: {\n                            is_downloading_completed: true\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    return ({\n        '@type': 'messageDocument',\n        document: {\n            '@type': 'document',\n            file_name: name,\n            mime_type: type,\n            minithumbnail: null,\n            thumbnail: null,\n            document: {\n                '@type': 'file',\n                id: fileId,\n                size,\n                expected_size: size,\n                local: {\n                    is_downloading_completed: true\n                }\n            }\n        }\n    });\n}\n\nexport async function getMediaPhotoFromFile(file) {\n    if (!file) {\n        return null;\n    }\n\n    if (file.type.startsWith('image')) {\n        const [width, height] = await readImageSize(file);\n\n        const fileId = -getRandomInt(1, 1000000);\n        FileStore.setBlob(fileId, file);\n\n        const photoSize = {\n            '@type': 'photoSize',\n            photo: {\n                '@type': 'file',\n                id: fileId,\n                size: file.size,\n                expected_size: file.expected_size,\n                local: {\n                    is_downloading_completed: true\n                }\n            },\n            width,\n            height\n        };\n\n        return ({\n            '@type': 'messagePhoto',\n            photo: {\n                '@type': 'photo',\n                has_stickers: false,\n                minithumbnail: null,\n                sizes: [ photoSize ]\n            }\n        });\n    } else {\n        return null;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const { playbackRate, volume } = this.loadPlayerSettings();\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n        this.instantView = null;\n        this.pageBlock = null;\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    loadPlayerSettings() {\n        const player = localStorage.getItem('player') || {};\n\n        let { playbackRate, volume } = player;\n\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        return { playbackRate, volume };\n    }\n\n    savePlayerSettings() {\n        const { volume, playbackRate } = this;\n\n        localStorage.setItem('player', JSON.stringify({ volume, playbackRate }));\n    }\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.reset();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId, instantView, pageBlock } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (message) {\n                    this.message = message;\n                    this.emit(update['@type'], update);\n                    this.getPlaylist(chatId, messageId);\n\n                    return;\n                } else if (instantView && pageBlock) {\n                    this.instantView = instantView;\n                    this.pageBlock = pageBlock;\n                    this.emit(update['@type'], update);\n                }\n\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaSeek': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaSeeking': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from '../Utils/Date';\nimport { getFirstLetter, getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(userId, user, t = k => k) {\n    user = UserStore.get(userId) || user;\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name && last_name) return `${first_name} ${last_name}`;\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId, t = k => k) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(userId, firstName, lastName, t) {\n    const user = UserStore.get(userId);\n    if (!user && !(firstName || lastName)) return null;\n\n    const title = getUserFullName(userId, null, t) || `${firstName} ${lastName}`.trim();\n    const letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    if (user) {\n        firstName = user.first_name;\n        lastName = user.last_name;\n    }\n\n    const firstNameSymbol = getFirstLetter(firstName) || firstName.charAt(0);\n    if (firstNameSymbol) return firstNameSymbol;\n\n    const lastNameSymbol = getFirstLetter(lastName) || lastName.charAt(0);\n    if (lastNameSymbol) return lastNameSymbol;\n\n    return '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(photo) {\n    if (!photo) return null;\n\n    const { id, sizes } = photo;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const { photo: small } = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const { photo: big } = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id,\n        small,\n        big\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport function isDeletedUser(userId) {\n    const user = UserStore.get(userId);\n\n    return user && user.type['@type'] === 'userTypeDeleted';\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    fileEquals(file1, file2) {\n        if (file1 === file2 && file1 === null) return true;\n        if (file1 !== null && file2 === null) return false;\n        if (file1 === null && file2 !== null) return false;\n\n        const { local: local1, remote: remote1 } = file1;\n        const { local: local2, remote: remote2 } = file2;\n\n        if (local1.can_be_deleted !== local2.can_be_deleted) return false;\n        if (local1.can_be_downloaded !== local2.can_be_downloaded) return false;\n        if (local1.download_offset !== local2.download_offset) return false;\n        if (local1.downloaded_prefix_size !== local2.downloaded_prefix_size) return false;\n        if (local1.downloaded_size !== local2.downloaded_size) return false;\n        if (local1.is_downloading_active !== local2.is_downloading_active) return false;\n        if (local1.is_downloading_completed !== local2.is_downloading_completed) return false;\n        if (local1.path !== local2.path) return false;\n\n        if (remote1.id !== remote2.id) return false;\n        if (remote1.is_uploading_active !== remote2.is_uploading_active) return false;\n        if (remote1.is_uploading_completed !== remote2.is_uploading_completed) return false;\n        if (remote1.uploaded_size !== remote2.uploaded_size) return false;\n\n        return true;\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            if (this.fileEquals(nextFile, currentFile)) {\n                // console.log('[fp] update equals', nextFile, currentFile);\n            } else {\n                // console.log('[fp] update', nextFile, currentFile);\n                this.setState({ file: nextFile, prevFile: currentFile });\n            }\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `[fp]] render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className={classNames('file-progress', 'file-progress-complete')} style={style}>\n                        {completeIcon}\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <CircularProgress\n                        className='file-progress-indicator'\n                        classes={{ circle: 'file-progress-circle' }}\n                        variant='static'\n                        value={progress}\n                        size={48}\n                        thickness={2}\n                    />\n                    {cancelButton && <CloseIcon />}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    {icon}\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { randomString } from './Helpers';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport PakoWorker from './pako.worker';\n\nconst worker = new PakoWorker();\nconst handlers = new Map();\n\nworker.onmessage = event => {\n    const { data } = event;\n    if (!data) return;\n\n    const { key, error, result, msg } = data;\n\n    const { resolve, reject } = handlers.get(key);\n    handlers.delete(key);\n\n    if (!error) {\n        resolve(result);\n    } else {\n        reject(msg);\n    }\n};\n\nexport async function inflateBlob(blob) {\n    const key = randomString();\n    return new Promise((resolve, reject) => {\n        handlers.set(key, { resolve, reject });\n        worker.postMessage({ key, blob });\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function randomString() {\n    return (\n        '$' +\n        Math.random()\n            .toString(36)\n            .slice(2, 10)\n    );\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// import Lottie from '../../Viewer/Lottie';\nimport { isBlurredThumbnail, isValidAnimatedSticker } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getBlob, getSrc } from '../../../Utils/File';\nimport { inflateBlob } from '../../../Workers/BlobInflator';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport StickerStore from '../../../Stores/StickerStore';\nimport './Sticker.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nexport const StickerSourceEnum = Object.freeze({\n    HINTS: 'HINTS',\n    MESSAGE: 'MESSAGE',\n    PICKER_HEADER: 'PICKER_HEADER',\n    PICKER: 'PICKER',\n    PREVIEW: 'PREVIEW',\n    STICKER_SET: 'STICKER_SET',\n    UNKNOWN: 'UNKNOWN'\n});\n\nclass Sticker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.stickerPreview = StickerStore.stickerPreview;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.state = {\n            animationDate: null,\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log('[Sticker] render error', error, errorInfo);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, sticker, blur, displaySize } = this.props;\n        const { animationData } = this.state;\n\n        if (animationData !== nextState.animationData) {\n            return true;\n        }\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (sticker !== nextProps.sticker) {\n            return true;\n        }\n\n        if (blur !== nextProps.blur) {\n            return true;\n        }\n\n        if (displaySize !== nextProps.displaySize) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.sticker !== this.props.sticker) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.on('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.on('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.off('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.off('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.off('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateDialogChatId = update => {\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerPreview = update => {\n        this.stickerPreview = update.sticker;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.openedStickerSet = stickerSet;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        const { chatId, messageId, sticker } = this.props;\n\n        const isAnimated = isValidAnimatedSticker(sticker, chatId, messageId);\n        if (!isAnimated) return;\n\n        this.windowFocused = focused;\n        this.startStopAnimation();\n    };\n\n    startStopAnimation() {\n        const { autoplay } = this.props;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (\n            this.windowFocused &&\n            !this.stickerPreview &&\n            !this.openMediaViewer &&\n            !this.openProfileMediaViewer &&\n            !this.openIV &&\n            !this.dialogChatId\n        ) {\n            if (this.entered) {\n                // console.log('[Sticker] play 1');\n                player.play();\n                this.pause = false;\n                return;\n            }\n\n            // console.log('[Sticker] startStopAnimation', this.openedStickerSet);\n            if (!this.openedStickerSet) {\n                if (this.paused) {\n                    // console.log('[Sticker] play 2');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n\n                if (autoplay && this.inView) {\n                    // console.log('[Sticker] play 3');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n            }\n        }\n\n        // console.log('[Sticker] pause');\n        this.paused = player.pause();\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker, is_animated } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            if (is_animated) {\n                this.loadContent();\n            } else {\n                this.forceUpdate();\n            }\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = async () => {\n        const { chatId, messageId, sticker: source, autoplay, play } = this.props;\n        const { is_animated, sticker } = source;\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        if (!is_animated) return;\n        if (!isAnimated) return;\n        if (!play) return;\n\n        const blob = getBlob(sticker);\n        if (!blob) return;\n\n        let animationData = null;\n        try {\n            // animationData = StickerStore.getAnimationData(blob);\n            // if (animationData) {\n            //     this.setState({ animationData });\n            //     return;\n            // }\n            const result = await inflateBlob(blob);\n            if (!result) return;\n\n            animationData = JSON.parse(result);\n            // StickerStore.setAnimationData(blob, animationData);\n        } catch (err) {\n            console.log('[Sticker] loadContent error', err);\n        }\n        if (!animationData) return;\n\n        if (autoplay) {\n            this.setState({ animationData });\n        } else {\n            this.animationData = animationData;\n        }\n    };\n\n    handleMouseEnter = event => {\n        const { animationData } = this;\n        // console.log('[Sticker] handleMouseEnter', animationData);\n        if (animationData) {\n            this.setState({ animationData }, () => {\n                this.handleAnimationMouseEnter();\n            });\n        }\n    };\n\n    handleAnimationMouseEnter = () => {\n        // console.log('[Sticker] handleAnimationMouseEnter 1');\n        if (this.props.autoplay) return;\n\n        this.entered = true;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        // console.log('[Sticker] handleAnimationMouseEnter 2');\n        this.loopCount = 0;\n        this.startStopAnimation();\n    };\n\n    handleAnimationLoopComplete = () => {\n        if (this.props.autoplay) return;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (!this.entered) this.loopCount += 1;\n        if (this.loopCount > 2) {\n            const { animationData } = this.state;\n            if (animationData) {\n                this.setState({ animationData: null });\n            }\n        }\n    };\n\n    handleAnimationMouseOut = () => {\n        this.entered = false;\n    };\n\n    render() {\n        const {\n            chatId,\n            messageId,\n            autoplay,\n            className,\n            displaySize,\n            blur,\n            sticker: source,\n            style,\n            openMedia,\n            preview\n        } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n        const { animationData, hasError } = this.state;\n\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        if (hasError) {\n            const style = {\n                width: displaySize,\n                height: displaySize\n            };\n\n            if (process.env.NODE_ENV !== 'production') {\n                style.background = '#ff000066';\n            }\n\n            return (\n                <div className={classNames('sticker', className)} style={style} onClick={openMedia}>\n                    <img\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                </div>\n            );\n        }\n\n        let content = null;\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (fitSize) {\n            content = isAnimated ? (\n                <>\n                    {animationData ? (\n                        <React.Suspense fallback={null}>\n                            <Lottie\n                                ref={this.lottieRef}\n                                options={{\n                                    autoplay: autoplay,\n                                    loop: true,\n                                    animationData,\n                                    renderer: 'svg',\n                                    rendererSettings: {\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                        clearCanvas: false,\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                        className: 'lottie-svg'\n                                    }\n                                }}\n                                eventListeners={[\n                                    {\n                                        eventName: 'loopComplete',\n                                        callback: this.handleAnimationLoopComplete\n                                    }\n                                ]}\n                                onMouseOut={this.handleAnimationMouseOut}\n                            />\n                        </React.Suspense>\n                    ) : (\n                        <img\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                            draggable={false}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                    )}\n                </>\n            ) : (\n                <>\n                    {src && !preview ? (\n                        <img className='sticker-image' draggable={false} src={src} alt='' />\n                    ) : (\n                        <img\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                            draggable={false}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                    )}\n                </>\n            );\n        }\n\n        const stickerStyle = {\n            width: fitSize ? fitSize.width : 0,\n            height: fitSize ? fitSize.height : 0,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('sticker', className)}\n                style={stickerStyle}\n                onClick={openMedia}\n                onMouseEnter={this.handleMouseEnter}>\n                {content}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    autoplay: PropTypes.bool,\n    play: PropTypes.bool,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number,\n    preview: PropTypes.bool,\n    source: PropTypes.string\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n\n    autoplay: true,\n    play: true,\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE,\n    preview: false,\n    source: StickerSourceEnum.UNKNOWN\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n        this.animationData = new WeakMap();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            case 'updateRecentStickers': {\n                this.emit('updateRecentStickers', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            case 'clientUpdateStickerPreview': {\n                this.emit('clientUpdateStickerPreview', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    getAnimationData(key) {\n        return this.animationData.get(key);\n    }\n\n    setAnimationData(key, data) {\n        this.animationData.set(key, data);\n    }\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo': {\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport { getUserLetters, isDeletedUser } from '../../Utils/User';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTile.css';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\n\nclass UserTile extends Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                user: UserStore.get(this.props.userId),\n                loaded: false\n            };\n        } else {\n            this.state = {\n                loaded: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        if (nextState.loaded !== this.state.loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId !== update.userId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n        const { chatId } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n        const { chat_id, photo } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n\n                if (photo) {\n                    const store = FileStore.getStore();\n                    loadChatContent(store, chat);\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId && !chat.photo) return;\n\n                this.forceUpdate();\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { className, userId, fistName, lastName, onSelect, small, dialog, poll, t } = this.props;\n        const { loaded } = this.state;\n\n        const user = UserStore.get(userId);\n        if (!user && !(fistName || lastName)) return null;\n\n        if (isDeletedUser(userId)) {\n            return (\n                <div\n                    className={classNames(\n                        className,\n                        'user-tile',\n                        'tile_color_0',\n                        { pointer: onSelect },\n                        { 'tile-dialog': dialog },\n                        { 'tile-small': small },\n                        { 'tile-poll': poll }\n                    )}\n                    onClick={this.handleSelect}>\n                    <div className='tile-photo'>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize='default' />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const letters = getUserLetters(userId, fistName, lastName, t);\n        const src = getSrc(user && user.profile_photo ? user.profile_photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    className,\n                    'user-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-poll': poll }\n                )}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n            </div>\n        );\n    }\n}\n\nUserTile.propTypes = {\n    userId: PropTypes.number.isRequired,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    onSelect: PropTypes.func,\n    small: PropTypes.bool\n};\n\nexport default withTranslation()(UserTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5,19 L19,19 C19.5522847,19 20,19.4477153 20,20 C20,20.5128358 19.6139598,20.9355072 19.1166211,20.9932723 L19,21 L5,21 C4.44771525,21 4,20.5522847 4,20 C4,19.4871642 4.38604019,19.0644928 4.88337887,19.0067277 L5,19 L19,19 L5,19 Z M11.8833789,3.00672773 L12,3 C12.5128358,3 12.9355072,3.38604019 12.9932723,3.88337887 L13,4 L13,13.585 L16.2928932,10.2928932 C16.6533772,9.93240926 17.2206082,9.90467972 17.6128994,10.2097046 L17.7071068,10.2928932 C18.0675907,10.6533772 18.0953203,11.2206082 17.7902954,11.6128994 L17.7071068,11.7071068 L12.7071068,16.7071068 C12.3466228,17.0675907 11.7793918,17.0953203 11.3871006,16.7902954 L11.2928932,16.7071068 L6.29289322,11.7071068 C5.90236893,11.3165825 5.90236893,10.6834175 6.29289322,10.2928932 C6.65337718,9.93240926 7.22060824,9.90467972 7.61289944,10.2097046 L7.70710678,10.2928932 L11,13.585 L11,4 C11,3.48716416 11.3860402,3.06449284 11.8833789,3.00672773 L12,3 L11.8833789,3.00672773 Z' />,\n    'Download'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        if (photo !== state.prevPhoto) {\n            return {\n                prevPhoto: photo,\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo ? photo.minithumbnail : null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, openMedia, showProgress, title, caption, type, style } = this.props;\n        const { thumbSize, photoSize, minithumbnail } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = (!thumbSrc && miniSrc) || isBlurredThumbnail(thumbSize);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        // console.log('[photo] render', displaySize, fitPhotoSize);\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const hasSrc = Boolean(src || thumbSrc || miniSrc);\n\n        return (\n            <div\n                className={classNames(className, 'photo', {\n                    'photo-big': type === 'message',\n                    'photo-title': title,\n                    'photo-caption': caption,\n                    pointer: openMedia\n                })}\n                style={photoStyle}\n                onClick={openMedia}>\n                {hasSrc && (\n                    <img\n                        className={classNames('photo-image', {\n                            'media-blurred': !src && isBlurred,\n                            'media-mini-blurred': !src && !thumbSrc && isBlurred\n                        })}\n                        draggable={false}\n                        src={src || thumbSrc || miniSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\nconst dateFormat = (function() {\n    const token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n    const timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n    const timezoneClip = /[^-+\\dA-Z]/g;\n\n    // Regexes and supporting functions are cached through closure\n    return function(date, mask, utc, gmt) {\n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n            mask = date;\n            date = undefined;\n        }\n\n        date = date || new Date();\n\n        if (!(date instanceof Date)) {\n            date = new Date(date);\n        }\n\n        if (isNaN(date)) {\n            throw TypeError('Invalid date');\n        }\n\n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n\n        // Allow setting the utc/gmt argument via the mask\n        var maskSlice = mask.slice(0, 4);\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n            mask = mask.slice(4);\n            utc = true;\n            if (maskSlice === 'GMT:') {\n                gmt = true;\n            }\n        }\n\n        var _ = utc ? 'getUTC' : 'get';\n        var d = date[_ + 'Date']();\n        var D = date[_ + 'Day']();\n        var m = date[_ + 'Month']();\n        var y = date[_ + 'FullYear']();\n        var H = date[_ + 'Hours']();\n        var M = date[_ + 'Minutes']();\n        var s = date[_ + 'Seconds']();\n        var L = date[_ + 'Milliseconds']();\n        var o = utc ? 0 : date.getTimezoneOffset();\n        var W = getWeek(date);\n        var N = getDayOfWeek(date);\n        var flags = {\n            d: d,\n            dd: pad(d),\n            ddd: dateFormat.i18n.dayNames[D],\n            dddd: dateFormat.i18n.dayNames[D + 7],\n            m: m + 1,\n            mm: pad(m + 1),\n            mmm: dateFormat.i18n.monthNames[m],\n            mmmm: dateFormat.i18n.monthNames[m + 12],\n            yy: String(y).slice(2),\n            yyyy: y,\n            h: H % 12 || 12,\n            hh: pad(H % 12 || 12),\n            H: H,\n            HH: pad(H),\n            M: M,\n            MM: pad(M),\n            s: s,\n            ss: pad(s),\n            l: pad(L, 3),\n            L: pad(Math.round(L / 10)),\n            t: H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n            tt: H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n            T: H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n            TT: H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n            Z: gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n            o: (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + (Math.abs(o) % 60), 4),\n            S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (((d % 100) - (d % 10) != 10) * d) % 10],\n            W: W,\n            N: N\n        };\n\n        return mask.replace(token, function(match) {\n            if (match in flags) {\n                return flags[match];\n            }\n            return match.slice(1, match.length - 1);\n        });\n    };\n})();\n\ndateFormat.masks = {\n    default: 'ddd mmm dd yyyy HH:MM:ss',\n    shortDate: 'm/d/yy',\n    mediumDate: 'mmm d, yyyy',\n    longDate: 'mmmm d, yyyy',\n    fullDate: 'dddd, mmmm d, yyyy',\n    shortTime: 'h:MM TT',\n    mediumTime: 'h:MM:ss TT',\n    longTime: 'h:MM:ss TT Z',\n    isoDate: 'yyyy-mm-dd',\n    isoTime: 'HH:MM:ss',\n    isoDateTime: \"yyyy-mm-dd'T'HH:MM:sso\",\n    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",\n    expiresHeaderFormat: 'ddd, dd mmm yyyy HH:MM:ss Z'\n};\n\n// Internationalization strings\ndateFormat.i18n = {\n    dayNames: [\n        'Sun',\n        'Mon',\n        'Tue',\n        'Wed',\n        'Thu',\n        'Fri',\n        'Sat',\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ],\n    monthNames: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ],\n    timeNames: ['a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM']\n};\n\nfunction pad(val, len) {\n    val = String(val);\n    len = len || 2;\n    while (val.length < len) {\n        val = '0' + val;\n    }\n    return val;\n}\n\n/**\n * Get the ISO 8601 week number\n * Based on comments from\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getWeek(date) {\n    // Remove time components of date\n    var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n    // Change date to Thursday same week\n    targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n    // Take January 4th as it is always in week 1 (see ISO 8601)\n    var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n    // Change date to Thursday same week\n    firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n    // Check if daylight-saving-time-switch occurred and correct for it\n    var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n    targetThursday.setHours(targetThursday.getHours() - ds);\n\n    // Number of weeks between target Thursday and first Thursday\n    var weekDiff = (targetThursday - firstThursday) / (86400000 * 7);\n    return 1 + Math.floor(weekDiff);\n}\n\n/**\n * Get ISO-8601 numeric representation of the day of the week\n * 1 (for Monday) through 7 (for Sunday)\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getDayOfWeek(date) {\n    var dow = date.getDay();\n    if (dow === 0) {\n        dow = 7;\n    }\n    return dow;\n}\n\n/**\n * kind-of shortcut\n * @param  {*} val\n * @return {String}\n */\nfunction kindOf(val) {\n    if (val === null) {\n        return 'null';\n    }\n\n    if (val === undefined) {\n        return 'undefined';\n    }\n\n    if (typeof val !== 'object') {\n        return typeof val;\n    }\n\n    if (Array.isArray(val)) {\n        return 'array';\n    }\n\n    return {}.toString\n        .call(val)\n        .slice(8, -1)\n        .toLowerCase();\n}\n\nexport default dateFormat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { getDecodedUrl, getHref, isUrlSafe } from '../../Utils/Url';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './SafeLink.css';\nimport { openChat } from '../../Actions/Client';\n\nclass SafeLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displayText, mail, url } = props;\n\n        if (state.prevUrl !== url || state.prevDisplayText !== displayText) {\n            return {\n                prevUrl: url,\n                prevDisplayText: displayText,\n                safe: isUrlSafe(displayText, url),\n                decodedUrl: getDecodedUrl(url, mail),\n                href: getHref(url, mail),\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.setState({ confirm: true });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleDone = event => {\n        this.handleClose();\n\n        const { url, onClick } = this.props;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    isTelegramLink(url) {\n        if (!url) return false;\n\n        const lowerCaseUrl = url\n            .toLowerCase()\n            .replace('https://', '')\n            .replace('http://', '');\n\n        return lowerCaseUrl.startsWith('t.me') || lowerCaseUrl.startsWith('tg://');\n    }\n\n    handleSafeClick = async event => {\n        event.stopPropagation();\n\n        const { onClick, url: href } = this.props;\n\n        if (this.isTelegramLink(href)) {\n            event.preventDefault();\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: href\n                });\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                const { chat_id, message } = messageLinkInfo;\n                if (chat_id) {\n                    openChat(chat_id, message ? message.id : null);\n                    return;\n                }\n            } catch (error) {\n                console.log('[safeLink] messageLinkInfo error', error);\n            }\n\n            if (onClick) {\n                onClick(event);\n            }\n        }\n\n        if (onClick) {\n            event.preventDefault();\n            onClick(event);\n        }\n    };\n\n    render() {\n        const { className, children, t, url } = this.props;\n        const { confirm, decodedUrl, href, safe } = this.state;\n\n        if (!url) return null;\n        if (!decodedUrl) return null;\n\n        return (\n            <>\n                {safe ? (\n                    <a\n                        className={className}\n                        href={href}\n                        title={decodedUrl}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        onClick={this.handleSafeClick}>\n                        {children || url}\n                    </a>\n                ) : (\n                    <>\n                        <a className={className} title={decodedUrl} onClick={this.handleClick}>\n                            {children || url}\n                        </a>\n                        {confirm && (\n                            <Dialog\n                                transitionDuration={0}\n                                open={confirm}\n                                onClose={this.handleClose}\n                                onClick={this.handleDialogClick}\n                                aria-labelledby='confirm-dialog-title'>\n                                <DialogTitle id='confirm-dialog-title'>{t('Confirm')}</DialogTitle>\n                                <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                                    <DialogContentText>{`Open this link?\\n\\n${decodedUrl}`}</DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={this.handleClose}>{t('Cancel')}</Button>\n                                    <Button onClick={this.handleDone} color='primary'>\n                                        {t('Open')}\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n                        )}\n                    </>\n                )}\n            </>\n        );\n    }\n}\n\nSafeLink.propTypes = {\n    url: PropTypes.string.isRequired,\n    displayText: PropTypes.string,\n    mail: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SafeLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass InstantViewStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = [];\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateBlocksInView': {\n                this.emit('clientUpdateBlocksInView', update);\n                break;\n            }\n            case 'clientUpdateInstantViewContent': {\n                const { content } = update;\n\n                if (content) {\n                    this.items.push(content.instantView);\n                } else {\n                    this.items = [];\n                }\n\n                this.emit('clientUpdateInstantViewContent', update);\n\n                break;\n            }\n            case 'clientUpdateInstantViewUrl': {\n                this.emit('clientUpdateInstantViewUrl', update);\n                break;\n            }\n            case 'clientUpdateInstantViewViewerContent': {\n                const { content } = update;\n\n                this.viewerContent = content;\n\n                this.emit('clientUpdateInstantViewViewerContent', update);\n                break;\n            }\n            case 'clientUpdatePrevInstantView': {\n                if (this.items.length <= 1) return;\n\n                this.items.pop();\n                const prevInstantView = this.items.pop();\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateInstantViewContent',\n                    content: {\n                        instantView: prevInstantView\n                    }\n                });\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    hasPrev() {\n        return this.items.length > 1;\n    }\n\n    getCurrent() {\n        return this.items.length > 0 ? this.items[this.items.length - 1] : null;\n    }\n}\n\nconst store = new InstantViewStore();\nwindow.instantView = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(userId, null, t);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from './UserTile';\nimport UserStatus from './UserStatus';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from './../../Stores/UserStore';\nimport './User.css';\n\nclass User extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: UserStore.get(props.userId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, t, showStatus } = this.props;\n\n        const fullName = getUserFullName(userId, null, t);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='user-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='user-title'>{fullName}</div>\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                <UserStatus userId={userId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showStatus: PropTypes.bool\n};\n\nUser.defaultProps = {\n    showStatus: true\n};\n\nexport default withTranslation()(User);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport AppStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.setPlayerParams();\n    }\n\n    setPlayerParams() {\n        this.windowFocused = window.hasFocus;\n\n        this.inView = false;\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.ivInView = false;\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.animation !== this.props.animation) {\n            this.setPlayerParams();\n        }\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.on('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.off('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (\n            this.windowFocused &&\n            ((this.inView && !this.openMediaViewer && !this.openProfileMediaViewer && !this.openIV) ||\n                (this.ivInView && !this.openIVMedia))\n        ) {\n            player.play();\n        } else {\n            player.pause();\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateInstantViewViewerContent = update => {\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateBlocksInView = update => {\n        const { pageBlock } = this.props;\n        if (!pageBlock) return;\n\n        this.ivInView = update.blocks.has(pageBlock);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate(() => {\n                this.startStopPlayer();\n            });\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        const animationStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n        const isGif = isGifMimeType(mime_type);\n        const source = src ? <source src={src} type={mime_type} /> : null;\n\n        return (\n            <div\n                className={classNames('animation', {\n                    'animation-big': type === 'message',\n                    'animation-title': title,\n                    'media-title': title,\n                    'animation-caption': caption,\n                    pointer: openMedia\n                })}\n                style={animationStyle}\n                onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='animation-preview' src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-animation'\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={animationStyle.width}\n                            height={animationStyle.height}>\n                            {source}\n                        </video>\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                            })}\n                            src={thumbnailSrc || miniSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    pageBlock: PropTypes.object,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    iv: PropTypes.bool\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    iv: false\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-12.000000, -12.000000)'\n        d='M19.3717789,13.8876217 L33.8466511,23.2537154 C34.2588127,23.5204082 34.3767385,24.0707284 34.1100457,24.48289 C34.0418356,24.5883056 33.9520666,24.6780745 33.8466511,24.7462846 L19.3717789,34.1123783 C18.9596173,34.3790711 18.4092971,34.2611454 18.1426043,33.8489838 C18.0495218,33.705129 18,33.5374371 18,33.3660938 L18,14.6339062 C18,14.1429865 18.3979691,13.7450173 18.8888889,13.7450173 C19.0602323,13.7450173 19.2279241,13.7945391 19.3717789,13.8876217 Z'\n    />,\n    'PlayArrow'\n);\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport punycode from './Punycode';\n\nexport function getHref(url, mail) {\n    if (!url) return null;\n\n    if (mail) return url.startsWith('mailto:') ? url : 'mailto:' + url;\n\n    // if (url.startsWith('tg://')) return url;\n\n    return url.startsWith('http') ? url : 'http://' + url;\n}\n\nexport function isUrlSafe(displayText, url) {\n    if (displayText && displayText !== url) {\n        return false;\n    }\n\n    if (hasRTLOSymbol(url)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getDecodedUrl(url, mail) {\n    if (!url) return null;\n\n    const href = getHref(url, mail);\n\n    try {\n        let decodedHref = decodeURI(href);\n\n        const domain = decodedHref.match(/^https?:\\/\\/([^\\/:?#]+)(?:[\\/:?#]|$)/i)[1];\n        decodedHref = decodedHref.replace(domain, punycode.ToUnicode(domain));\n\n        return decodedHref;\n    } catch (error) {\n        console.log('SafeLink.getDecodedUrl error ', url, error);\n    }\n\n    return null;\n}\n\nconst regExpRTLO = /\\u202e/;\n\nexport function hasRTLOSymbol(url) {\n    if (!url) return false;\n\n    return regExpRTLO.test(url);\n}\n\nconst regExpDomainExplicit = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){0,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpDomain = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)?((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){1,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpProtocol = new RegExp('^([a-zA-Z]+):\\\\/\\\\/');\n\n// https://github.com/telegramdesktop/tdesktop/blob/4e80d54be130eca76129f2c4995fe685d1014442/Telegram/SourceFiles/base/qthelp_url.cpp#L105\nexport function validateUrl(value) {\n    // value = punycode.ToASCII(value);\n\n    const trimmed = value.trim();\n    if (!trimmed) {\n        return null;\n    }\n\n    const match = trimmed.match(regExpDomainExplicit);\n    if (!match) {\n        const domainMatch = trimmed.match(regExpDomain);\n        if (!domainMatch || domainMatch.index !== 0) {\n            return null;\n        }\n\n        return 'http://' + trimmed;\n    } else if (match.index !== 0) {\n        return null;\n    }\n\n    const protocolMatch = trimmed.match(regExpProtocol);\n    return protocolMatch && isGoodProtocol(protocolMatch[0]) ? trimmed : null;\n}\n\nfunction isGoodProtocol(value) {\n    return ['http', 'https', 'tg'].some(x => value.toLowerCase().indexOf(x) === 0);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../../Assets/Icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport { getAudioShortTitle, getAudioSubtitle, getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia, title, meta, caption } = this.props;\n        const { playing, active } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const audioTitle = getAudioSubtitle(audio);\n        const audioSubtitle = getAudioShortTitle(audio);\n\n        return (\n            <div className={classNames('audio', 'document', { 'media-title': title })}>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='audio-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={audioTitle}>\n                            {audioTitle}\n                        </a>\n                    </div>\n                    <div className='audio-action' style={{ opacity: active ? 0 : 1 }}>\n                        {audioSubtitle}\n                    </div>\n                    <VoiceNoteSlider\n                        className='audio-slider'\n                        chatId={chatId}\n                        messageId={messageId}\n                        duration={duration}\n                        style={{ opacity: active ? 1 : 0 }}\n                    />\n                    <AudioAction\n                        chatId={chatId}\n                        messageId={messageId}\n                        duration={duration}\n                        file={file}\n                        meta={caption ? null : meta}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    audio: PropTypes.object,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-15.000000, -15.000000)'\n        d='M23,16 C23.5522847,16 24,16.4477153 24,17 L24,37 C24,37.5522847 23.5522847,38 23,38 L18,38 C17.4477153,38 17,37.5522847 17,37 L17,17 C17,16.4477153 17.4477153,16 18,16 L23,16 Z M36,16 C36.5522847,16 37,16.4477153 37,17 L37,37 C37,37.5522847 36.5522847,38 36,38 L31,38 C30.4477153,38 30,37.5522847 30,37 L30,17 C30,16.4477153 30.4477153,16 31,16 L36,16 Z'\n    />,\n    'Pause'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nclass DocumentTile extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { minithumbnail, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n        const { loaded } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbnailSrc && loaded;\n        const src = thumbnailSrc || miniSrc;\n\n        return (\n            <div\n                className={classNames('document-tile', { 'document-tile-image': !src }, { pointer: openMedia })}\n                onClick={openMedia}>\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={src}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={typeof completeIcon === 'function' ? completeIcon(src) : completeIcon}\n                    />\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {!tileLoaded && <div className='document-tile-background' />}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\n\nexport default DocumentTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            seekProgress: 0,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n        PlayerStore.on('clientUpdateMediaSeeking', this.onClientUpdateMediaSeeking);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n        PlayerStore.off('clientUpdateMediaSeeking', this.onClientUpdateMediaSeeking);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    onClientUpdateMediaSeeking = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { duration: playerDuration, active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const d = playerDuration || duration;\n\n            this.setState({\n                seekProgress: update.value,\n                seeking: true,\n                timeString: this.getTimeString(d * update.value, d, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { duration: playerDuration, active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const d = playerDuration || duration;\n\n            this.setState({\n                seekProgress: 0,\n                seeking: false,\n                timeString: this.getTimeString(d * update.value, d, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, playerDuration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file, seekProgress, seeking } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            const time = seeking ? seekProgress * playerDuration : update.currentTime;\n\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                timeString: this.getTimeString(time, playerDuration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: active ? this.state.timeString : this.getTimeString(0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString} / ${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { title, meta } = this.props;\n        const { active, file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize} / ${size}` : `${size}`;\n        const strings = [];\n        if (!isDownloadingCompleted) {\n            strings.push(sizeString);\n        }\n        if (!isDownloadingActive) {\n            strings.push(timeString);\n        }\n\n        return (\n            <div className='audio-action'>\n                {!active && <span>{title}</span>}\n                {<span>{strings.join(', ')}</span>}\n                {meta}\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n\n    title: PropTypes.string\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location, width, height, zoom, scale } = this.props;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { location, width, height, zoom, scale, type, style, title, caption } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        const locationStyle = {\n            width,\n            height,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('location', {\n                    'location-message': type === 'message',\n                    'location-venue': type === 'venue',\n                    'location-title': title,\n                    'location-caption': caption\n                })}\n                style={locationStyle}>\n                <a href={source} target='_blank' rel='noopener noreferrer' onClick={this.handleClick}>\n                    <div className='location-wrapper'>\n                        <img className='location-image' draggable={false} alt={source} src={src} />\n                        <div className='location-icon'>\n                            <RoomIcon fontSize='large' color='primary' />\n                        </div>\n                    </div>\n                </a>\n            </div>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    width: PropTypes.number,\n    height: PropTypes.number,\n    zoom: PropTypes.number,\n    scale: PropTypes.number\n};\n\nLocation.defaultProps = {\n    width: LOCATION_WIDTH,\n    height: LOCATION_HEIGHT,\n    zoom: LOCATION_ZOOM,\n    scale: LOCATION_SCALE\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const videoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <div\n                className={classNames('video', {\n                    'video-big': type === 'message',\n                    'video-title': title,\n                    'video-caption': caption,\n                    pointer: openMedia\n                })}\n                style={videoStyle}\n                onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', {\n                        'media-blurred': isBlurred,\n                        'media-mini-blurred': !thumbnailSrc && isBlurred\n                    })}\n                    src={thumbnailSrc || miniSrc}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(3.000000, 0.600000)'>\n        <path\n            d='M9,0 C13.9705627,-9.13077564e-16 18,4.02943725 18,9 L18,23 L18,23 L15,20 L12,23 L9,20 L6,23 L3,20 L0,23 L0,9 C-6.08718376e-16,4.02943725 4.02943725,9.13077564e-16 9,0 Z'\n            stroke='currentColor'\n            strokeWidth='1.5'\n            strokeLinejoin='round'\n            fill='none'\n        />\n        <circle cx='5' cy='9' r='2' />\n        <circle cx='13' cy='9' r='2' />\n    </g>,\n    'DeletedAccount'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatus.css';\n\nclass UserStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { status, isAccent } = this.state;\n\n        return (\n            <div className={classNames('user-content', 'dialog-content', { 'user-status-accent': isAccent })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default UserStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateClosePollResults': {\n                this.emit('clientUpdateClosePollResults', update);\n                break;\n            }\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    type: {\n                        '@type': 'pollTypeRegular',\n                        allow_multiple_answers: false\n                    },\n                    id: Date.now(),\n                    question: '',\n                    options: [],\n                    is_anonymous: true\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAnonymous': {\n                const { poll } = this;\n                const isAnonymous = poll && poll.is_anonymous;\n\n                this.assign(this.poll, { is_anonymous: !isAnonymous });\n\n                this.emit('clientUpdatePollChangeAnonymous', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAllowMultipleAnswers': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const allowMultipleAnswers = poll && poll.type.allow_multiple_answers;\n\n                    const newType = { ...type, allow_multiple_answers: !allowMultipleAnswers };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeAllowMultipleAnswers', update);\n                break;\n            }\n            case 'clientUpdatePollChangeType': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const newType = { '@type': 'pollTypeQuiz', correct_option_id: -1 };\n\n                    this.assign(this.poll, { type: newType });\n                } else {\n                    const newType = { '@type': 'pollTypeRegular', allow_multiple_answers: false };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeType', update);\n                break;\n            }\n            case 'clientUpdatePollChooseOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, {\n                    options: options.map(x => (x.id === id ? { ...x, is_chosen: true } : { ...x, is_chosen: false }))\n                });\n\n                this.emit('clientUpdatePollChooseOption', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options, type, is_anonymous } = this.poll;\n\n        if (type['@type'] === 'pollTypeQuiz') {\n            type.correct_option_id = options.findIndex(x => x.is_chosen);\n\n            if (type.correct_option_id === -1) {\n                return null;\n            }\n        }\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text),\n            is_anonymous,\n            type,\n            is_closed: false\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","//https://stackoverflow.com/questions/183485/converting-punycode-with-dash-character-to-unicode\n//Javascript Punycode converter derived from example in RFC3492.\n//This implementation is created by some@domain.name and released into public domain\nfunction Punycode() {\n    // This object converts to and from puny-code used in IDN\n    //\n    // punycode.ToASCII ( domain )\n    //\n    // Returns a puny coded representation of \"domain\".\n    // It only converts the part of the domain name that\n    // has non ASCII characters. I.e. it dosent matter if\n    // you call it with a domain that already is in ASCII.\n    //\n    // punycode.ToUnicode (domain)\n    //\n    // Converts a puny-coded domain name to unicode.\n    // It only converts the puny-coded parts of the domain name.\n    // I.e. it dosent matter if you call it on a string\n    // that already has been converted to unicode.\n    //\n    //\n    this.utf16 = {\n        // The utf16-class is necessary to convert from javascripts internal character representation to unicode and back.\n        decode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value,\n                extra;\n            while (i < len) {\n                value = input.charCodeAt(i++);\n                if ((value & 0xf800) === 0xd800) {\n                    extra = input.charCodeAt(i++);\n                    if ((value & 0xfc00) !== 0xd800 || (extra & 0xfc00) !== 0xdc00) {\n                        throw new RangeError('UTF-16(decode): Illegal UTF-16 sequence');\n                    }\n                    value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                }\n                output.push(value);\n            }\n            return output;\n        },\n        encode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value;\n            while (i < len) {\n                value = input[i++];\n                if ((value & 0xf800) === 0xd800) {\n                    throw new RangeError('UTF-16(encode): Illegal UTF-16 value');\n                }\n                if (value > 0xffff) {\n                    value -= 0x10000;\n                    output.push(String.fromCharCode(((value >>> 10) & 0x3ff) | 0xd800));\n                    value = 0xdc00 | (value & 0x3ff);\n                }\n                output.push(String.fromCharCode(value));\n            }\n            return output.join('');\n        }\n    };\n\n    //Default parameters\n    var initial_n = 0x80;\n    var initial_bias = 72;\n    var delimiter = '\\x2D';\n    var base = 36;\n    var damp = 700;\n    var tmin = 1;\n    var tmax = 26;\n    var skew = 38;\n    var maxint = 0x7fffffff;\n\n    // decode_digit(cp) returns the numeric value of a basic code\n    // point (for use in representing integers) in the range 0 to\n    // base-1, or base if cp is does not represent a value.\n\n    function decode_digit(cp) {\n        return cp - 48 < 10 ? cp - 22 : cp - 65 < 26 ? cp - 65 : cp - 97 < 26 ? cp - 97 : base;\n    }\n\n    // encode_digit(d,flag) returns the basic code point whose value\n    // (when used for representing integers) is d, which needs to be in\n    // the range 0 to base-1. The lowercase form is used unless flag is\n    // nonzero, in which case the uppercase form is used. The behavior\n    // is undefined if flag is nonzero and digit d has no uppercase form.\n\n    function encode_digit(d, flag) {\n        return d + 22 + 75 * (d < 26) - ((flag != 0) << 5);\n        //  0..25 map to ASCII a..z or A..Z\n        // 26..35 map to ASCII 0..9\n    }\n    //** Bias adaptation function **\n    function adapt(delta, numpoints, firsttime) {\n        var k;\n        delta = firsttime ? Math.floor(delta / damp) : delta >> 1;\n        delta += Math.floor(delta / numpoints);\n\n        for (k = 0; delta > ((base - tmin) * tmax) >> 1; k += base) {\n            delta = Math.floor(delta / (base - tmin));\n        }\n        return Math.floor(k + ((base - tmin + 1) * delta) / (delta + skew));\n    }\n\n    // encode_basic(bcp,flag) forces a basic code point to lowercase if flag is zero,\n    // uppercase if flag is nonzero, and returns the resulting code point.\n    // The code point is unchanged if it is caseless.\n    // The behavior is undefined if bcp is not a basic code point.\n\n    function encode_basic(bcp, flag) {\n        bcp -= (bcp - 97 < 26) << 5;\n        return bcp + ((!flag && bcp - 65 < 26) << 5);\n    }\n\n    // Main decode\n    this.decode = function(input, preserveCase) {\n        // Dont use utf16\n        var output = [];\n        var case_flags = [];\n        var input_length = input.length;\n\n        var n, out, i, bias, basic, j, ic, oldi, w, k, digit, t, len;\n\n        // Initialize the state:\n\n        n = initial_n;\n        i = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points: Let basic be the number of input code\n        // points before the last delimiter, or 0 if there is none, then\n        // copy the first basic code points to the output.\n\n        basic = input.lastIndexOf(delimiter);\n        if (basic < 0) basic = 0;\n\n        for (j = 0; j < basic; ++j) {\n            if (preserveCase) case_flags[output.length] = input.charCodeAt(j) - 65 < 26;\n            if (input.charCodeAt(j) >= 0x80) {\n                throw new RangeError('Illegal input >= 0x80');\n            }\n            output.push(input.charCodeAt(j));\n        }\n\n        // Main decoding loop: Start just after the last delimiter if any\n        // basic code points were copied; start at the beginning otherwise.\n\n        for (ic = basic > 0 ? basic + 1 : 0; ic < input_length; ) {\n            // ic is the index of the next character to be consumed,\n\n            // Decode a generalized variable-length integer into delta,\n            // which gets added to i. The overflow checking is easier\n            // if we increase i as we go, then subtract off its starting\n            // value at the end to obtain delta.\n            for (oldi = i, w = 1, k = base; ; k += base) {\n                if (ic >= input_length) {\n                    throw RangeError('punycode_bad_input(1)');\n                }\n                digit = decode_digit(input.charCodeAt(ic++));\n\n                if (digit >= base) {\n                    throw RangeError('punycode_bad_input(2)');\n                }\n                if (digit > Math.floor((maxint - i) / w)) {\n                    throw RangeError('punycode_overflow(1)');\n                }\n                i += digit * w;\n                t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                if (digit < t) {\n                    break;\n                }\n                if (w > Math.floor(maxint / (base - t))) {\n                    throw RangeError('punycode_overflow(2)');\n                }\n                w *= base - t;\n            }\n\n            out = output.length + 1;\n            bias = adapt(i - oldi, out, oldi === 0);\n\n            // i was supposed to wrap around from out to 0,\n            // incrementing n each time, so we'll fix that now:\n            if (Math.floor(i / out) > maxint - n) {\n                throw RangeError('punycode_overflow(3)');\n            }\n            n += Math.floor(i / out);\n            i %= out;\n\n            // Insert n at position i of the output:\n            // Case of last character determines uppercase flag:\n            if (preserveCase) {\n                case_flags.splice(i, 0, input.charCodeAt(ic - 1) - 65 < 26);\n            }\n\n            output.splice(i, 0, n);\n            i++;\n        }\n        if (preserveCase) {\n            for (i = 0, len = output.length; i < len; i++) {\n                if (case_flags[i]) {\n                    output[i] = String.fromCharCode(output[i])\n                        .toUpperCase()\n                        .charCodeAt(0);\n                }\n            }\n        }\n        return this.utf16.encode(output);\n    };\n\n    //** Main encode function **\n\n    this.encode = function(input, preserveCase) {\n        //** Bias adaptation function **\n\n        var n, delta, h, b, bias, j, m, q, k, t, ijv, case_flags;\n\n        if (preserveCase) {\n            // Preserve case, step1 of 2: Get a list of the unaltered string\n            case_flags = this.utf16.decode(input);\n        }\n        // Converts the input in UTF-16 to Unicode\n        input = this.utf16.decode(input.toLowerCase());\n\n        var input_length = input.length; // Cache the length\n\n        if (preserveCase) {\n            // Preserve case, step2 of 2: Modify the list to true/false\n            for (j = 0; j < input_length; j++) {\n                case_flags[j] = input[j] != case_flags[j];\n            }\n        }\n\n        var output = [];\n\n        // Initialize the state:\n        n = initial_n;\n        delta = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points:\n        for (j = 0; j < input_length; ++j) {\n            if (input[j] < 0x80) {\n                output.push(String.fromCharCode(case_flags ? encode_basic(input[j], case_flags[j]) : input[j]));\n            }\n        }\n\n        h = b = output.length;\n\n        // h is the number of code points that have been handled, b is the\n        // number of basic code points\n\n        if (b > 0) output.push(delimiter);\n\n        // Main encoding loop:\n        //\n        while (h < input_length) {\n            // All non-basic code points < n have been\n            // handled already. Find the next larger one:\n\n            for (m = maxint, j = 0; j < input_length; ++j) {\n                ijv = input[j];\n                if (ijv >= n && ijv < m) m = ijv;\n            }\n\n            // Increase delta enough to advance the decoder's\n            // <n,i> state to <m,0>, but guard against overflow:\n\n            if (m - n > Math.floor((maxint - delta) / (h + 1))) {\n                throw RangeError('punycode_overflow (1)');\n            }\n            delta += (m - n) * (h + 1);\n            n = m;\n\n            for (j = 0; j < input_length; ++j) {\n                ijv = input[j];\n\n                if (ijv < n) {\n                    if (++delta > maxint) return Error('punycode_overflow(2)');\n                }\n\n                if (ijv == n) {\n                    // Represent delta as a generalized variable-length integer:\n                    for (q = delta, k = base; ; k += base) {\n                        t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                        if (q < t) break;\n                        output.push(String.fromCharCode(encode_digit(t + ((q - t) % (base - t)), 0)));\n                        q = Math.floor((q - t) / (base - t));\n                    }\n                    output.push(String.fromCharCode(encode_digit(q, preserveCase && case_flags[j] ? 1 : 0)));\n                    bias = adapt(delta, h + 1, h == b);\n                    delta = 0;\n                    ++h;\n                }\n            }\n\n            ++delta;\n            ++n;\n        }\n        return output.join('');\n    };\n\n    this.ToASCII = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/[^A-Za-z0-9-]/) ? 'xn--' + punycode.encode(s) : s);\n        }\n        return out.join('.');\n    };\n    this.ToUnicode = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/^xn--/) ? punycode.decode(s.slice(4)) : s);\n        }\n        return out.join('.');\n    };\n}\n\nconst punycode = new Punycode();\nexport default punycode;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './VoiceNoteSlider.css';\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, dragging } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (messageId !== update.messageId) return;\n\n        const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n        const value = this.getValue(update.currentTime, playerDuration, active);\n\n        if (dragging) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration\n            });\n        } else {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                value\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, dragging } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            let value = this.state.value;\n            if (!dragging) {\n                value = this.getValue(active ? currentTime : 0, playerDuration, true);\n            }\n\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        this.setState({\n            dragging: true\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { chatId, messageId } = this.props;\n        const { value, active } = this.state;\n        if (!active) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaSeek',\n            chatId,\n            messageId,\n            value\n        });\n\n        this.setState({\n            dragging: false\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { chatId, messageId } = this.props;\n        const { active, dragging } = this.state;\n        if (!active) return;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaSeeking',\n                chatId,\n                messageId,\n                value\n            });\n        }\n\n        this.setState({\n            value\n        });\n    };\n\n    render() {\n        const { className, style } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className={classNames('voice-note-slider', className)} style={style}>\n                <Slider\n                    className='voice-note-slider-component'\n                    classes={{\n                        track: 'voice-note-slider-track',\n                        thumb: 'voice-note-slider-thumb',\n                        active: 'voice-note-slider-active'\n                    }}\n                    min={0}\n                    max={1}\n                    step={0.01}\n                    value={value}\n                    onChange={this.handleChange}\n                    onChangeCommitted={this.handleChangeCommitted}\n                    onMouseDown={this.handleMouseDown}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    duration: PropTypes.number.isRequired\n};\n\nexport default VoiceNoteSlider;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { clamp, getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.sourceRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n\n        const source = this.sourceRef.current;\n        if (!source) return;\n\n        if (source.src !== src) {\n            source.src = src;\n            player.load();\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (\n                this.inView &&\n                this.windowFocused &&\n                !this.openMediaViewer &&\n                !this.openProfileMediaViewer &&\n                !this.openIV\n            ) {\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { minithumbnail, thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = clamp((progressTime / videoDuration) * 100, 0, 100);\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}>\n                            <source ref={this.sourceRef} src={null} type='video/mp4' />\n                        </video>\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', {\n                                    'media-blurred': isBlurred,\n                                    'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                                })}\n                                style={style}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<DownloadIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport AudioAction from './AudioAction';\nimport VoiceNoteTile from '../../Tile/VoiceNoteTile';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, title, meta, caption } = this.props;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <div className={classNames('voice-note', 'document', { 'media-title': title })}>\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport DocumentTile from './DocumentTile';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './VoiceNoteTile.css';\n\nclass VoiceNoteTile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { file, openMedia } = this.props;\n        const { playing } = this.state;\n\n        return (\n            <DocumentTile\n                thumbnail={null}\n                file={file}\n                openMedia={openMedia}\n                icon={<DownloadIcon />}\n                completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n            />\n        );\n    }\n}\n\nVoiceNoteTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNoteTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Draws a rounded rectangle using the current state of the canvas.\n * If you omit the last three params, it will draw a rectangle\n * outline with a 5 pixel border radius\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} [radius = 5] The corner radius; It can also be an object\n *                 to specify different radii for corners\n * @param {Number} [radius.tl = 0] Top left\n * @param {Number} [radius.tr = 0] Top right\n * @param {Number} [radius.br = 0] Bottom right\n * @param {Number} [radius.bl = 0] Bottom left\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\n */\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke) {\n    if (typeof stroke === 'undefined') {\n        stroke = true;\n    }\n    if (typeof radius === 'undefined') {\n        radius = 5;\n    }\n    if (typeof radius === 'number') {\n        radius = { tl: radius, tr: radius, br: radius, bl: radius };\n    } else {\n        var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\n        for (var side in defaultRadius) {\n            radius[side] = radius[side] || defaultRadius[side];\n        }\n    }\n    ctx.beginPath();\n    ctx.moveTo(x + radius.tl, y);\n    ctx.lineTo(x + width - radius.tr, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n    ctx.lineTo(x + width, y + height - radius.br);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n    ctx.lineTo(x + radius.bl, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n    ctx.lineTo(x, y + radius.tl);\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    if (stroke) {\n        ctx.stroke();\n    }\n}\n\nclass Particle {\n    constructor(fireworks) {\n        this.fireworks = fireworks;\n        this.type = 0;\n        this.colorType = 0;\n        this.side = 0;\n        this.typeSize = 4;\n        this.xFinished = false;\n        this.finishedStart = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.rotation = 0;\n        this.moveX = 0;\n        this.moveY = 0;\n    }\n\n    draw(ctx) {\n        ctx.fillStyle = this.colorType;\n\n        if (this.type === 0) {\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.typeSize, 0, Math.PI * 2, false);\n            ctx.fill();\n        } else {\n            ctx.save();\n            ctx.translate(this.x, this.y);\n            ctx.rotate((this.rotation * Math.PI) / 180);\n            roundRect(ctx, -this.typeSize, -2, this.typeSize * 2, 4, 2, true, false);\n            ctx.restore();\n        }\n    }\n\n    update(dt) {\n        const moveCoef = dt / 16.0;\n        this.x += this.moveX * moveCoef;\n        this.y += this.moveY * moveCoef;\n        if (this.xFinished !== 0) {\n            const dp = 0.5;\n            if (this.xFinished === 1) {\n                this.moveX += dp * moveCoef * 0.05;\n                if (this.moveX >= dp) {\n                    this.xFinished = 2;\n                }\n            } else {\n                this.moveX -= dp * moveCoef * 0.05;\n                if (this.moveX <= -dp) {\n                    this.xFinished = 1;\n                }\n            }\n        } else {\n            if (this.side === 0) {\n                if (this.moveX > 0) {\n                    this.moveX -= moveCoef * 0.05;\n                    if (this.moveX <= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            } else {\n                if (this.moveX < 0) {\n                    this.moveX += moveCoef * 0.05;\n                    if (this.moveX >= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            }\n        }\n        let yEdge = -0.5;\n        const wasNegative = this.moveY < yEdge;\n        if (this.moveY > yEdge) {\n            this.moveY += (1.0 / 3.0) * moveCoef * this.fireworks.speedCoef;\n        } else {\n            this.moveY += (1.0 / 3.0) * moveCoef;\n        }\n        if (wasNegative && this.moveY > yEdge) {\n            this.fireworks.fallingDownCount++;\n        }\n        if (this.type === 1) {\n            this.rotation += moveCoef * 10;\n            if (this.rotation > 360) {\n                this.rotation -= 360;\n            }\n        }\n\n        return this.y >= this.fireworks.getMeasuredHeight();\n    }\n}\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nclass Fireworks {\n    static colors = ['#E8BC2C', '#D0049E', '#02CBFE', '#5723FD', '#FE8C27', '#6CB859'];\n\n    constructor(context) {\n        this.context = context;\n        this.particlesCount = 60;\n        this.fallParticlesCount = 30;\n        this.particles = [];\n        this.speedCoef = 1.0;\n        this.fallingDownCount = 0;\n    }\n\n    getMeasuredHeight() {\n        return this.context.canvas.clientHeight;\n    }\n\n    getMeasuredWidth() {\n        return this.context.canvas.clientWidth;\n    }\n\n    createParticle(fall) {\n        const particle = new Particle(this);\n        particle.colorType = Fireworks.colors[getRandomInt(0, Fireworks.colors.length)];\n        particle.type = getRandomInt(0, 2);\n        particle.side = getRandomInt(0, 2);\n        particle.finishedStart = 1 + getRandomInt(0, 2);\n        if (particle.type === 0) {\n            particle.typeSize = 4 + Math.random() * 2;\n        } else {\n            particle.typeSize = 4 + Math.random() * 4;\n        }\n        if (fall) {\n            particle.y = -Math.random() * this.getMeasuredHeight() * 1.2;\n            particle.x = 5 + getRandomInt(0, this.getMeasuredWidth() - 10);\n            particle.xFinished = particle.finishedStart;\n        } else {\n            const xOffset = 4 + getRandomInt(0, 10);\n            const yOffset = this.getMeasuredHeight() / 4;\n            if (particle.side === 0) {\n                particle.x = -xOffset;\n            } else {\n                particle.x = this.getMeasuredWidth() + xOffset;\n            }\n            particle.rotation = Math.random() * 360;\n            particle.moveX = (particle.side === 0 ? 1 : -1) * (1.2 + Math.random() * 4);\n            particle.moveY = -(4 + Math.random() * 4);\n            particle.y = yOffset / 2 + getRandomInt(0, yOffset * 2);\n        }\n        // console.log(`particle side=${particle.side} x=${particle.x} y=${particle.y} moveX=${particle.moveX} moveY=${particle.moveY}`);\n        return particle;\n    }\n\n    start() {\n        if (this.started) {\n            return;\n        }\n\n        this.particles = [];\n        this.started = true;\n        this.startedFall = false;\n        this.fallingDownCount = 0;\n        this.speedCoef = 1.0;\n        this.lastUpdateTime = 0;\n        for (let a = 0; a < this.particlesCount; a++) {\n            this.particles.push(this.createParticle(false));\n        }\n\n        this.draw();\n    }\n\n    startFall() {\n        if (this.startedFall) {\n            return;\n        }\n        this.startedFall = true;\n        for (let a = 0; a < this.fallParticlesCount; a++) {\n            this.particles.push(this.createParticle(true));\n        }\n    }\n\n    draw() {\n        const newTime = Date.now();\n        let dt = newTime - this.lastUpdateTime;\n        this.lastUpdateTime = newTime;\n        if (dt > 18) {\n            dt = 16;\n        }\n        // console.log('draw dt', dt);\n        this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        for (let a = 0, N = this.particles.length; a < N; a++) {\n            const p = this.particles[a];\n            p.draw(this.context);\n            if (p.update(dt)) {\n                this.particles.splice(a, 1);\n                a--;\n                N--;\n            }\n        }\n        if (this.fallingDownCount >= this.particlesCount / 2 && this.speedCoef > 0.2) {\n            this.startFall();\n            this.speedCoef -= (dt / 16.0) * 0.15;\n            if (this.speedCoef < 0.2) {\n                this.speedCoef = 0.2;\n            }\n        }\n        if (this.particles.length) {\n            window.requestAnimationFrame(() => this.draw());\n        } else {\n            this.started = false;\n            this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        }\n    }\n}\n\nclass FireworksComponent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.canvasRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.attachToParent();\n    }\n\n    componentWillUnmount() {\n        this.detachFromParent();\n    }\n\n    attachToParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = parentNode;\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n        window.addEventListener('resize', this.onResize);\n    }\n\n    detachFromParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = null;\n        window.removeEventListener('resize', this.onResize);\n    }\n\n    onResize = () => {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n    };\n\n    start() {\n        const ctx = this.canvasRef.current.getContext('2d');\n\n        const fireworks = new Fireworks(ctx);\n        fireworks.start();\n    }\n\n    render() {\n        return (\n            <canvas\n                ref={this.canvasRef}\n                style={{\n                    zIndex: 2,\n                    position: 'absolute',\n                    left: 0,\n                    top: 0,\n                    width: '100%',\n                    height: '100%',\n                    pointerEvents: 'none'\n                }}\n            />\n        );\n    }\n}\n\nFireworksComponent.propTypes = {};\n\nexport default FireworksComponent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Check'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nclass PollRadio extends React.Component {\n    render() {\n        const { chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    color='primary'\n                    classes={{\n                        root: 'poll-radio-root',\n                        colorPrimary: 'message-control',\n                        disabled: 'message-control-disabled'\n                    }}\n                    TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? 'poll-radio-icon' : null }} />}\n                />\n                {beingChosen && (\n                    <CircularProgress\n                        size={20}\n                        thickness={4.4}\n                        classes={{ root: 'poll-radio-progress-root', colorPrimary: 'message-control' }}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool,\n    beingChosen: PropTypes.bool,\n    hidden: PropTypes.bool\n};\n\nexport default PollRadio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, theme, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (theme !== nextProps.theme) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className='poll-percentage'>\n                {/*{!closed && chosen ? (*/}\n                {/*    <a className='poll-percentage-action' onClick={onClick}>*/}\n                {/*        {animated + '%'}*/}\n                {/*    </a>*/}\n                {/*) : (*/}\n                {/*    <>{animated + '%'}</>*/}\n                {/*)}*/}\n                <>{animated + '%'}</>\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CheckIcon from '../../../Assets/Icons/Check';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport './PollOption.css';\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    render() {\n        const { option, onChange, canBeSelected, closed, maxVoterCount, t, type, isCorrect } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, isMultiChoosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage value={vote_percentage} chosen={is_chosen} closed={closed} />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen || isMultiChoosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        {(is_chosen || isCorrect) && (\n                            <div\n                                className={classNames(\n                                    'poll-option-mark',\n                                    { 'poll-option-mark-correct': type === 'correct' },\n                                    { 'poll-option-mark-incorrect': type === 'incorrect' }\n                                )}>\n                                {type === 'incorrect' ? (\n                                    <CloseIcon className='poll-option-mark-icon' />\n                                ) : (\n                                    <CheckIcon className='poll-option-mark-icon' />\n                                )}\n                            </div>\n                        )}\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <LinearProgress\n                    classes={{\n                        root: 'poll-option-progress-root',\n                        bar: classNames(\n                            'poll-option-progress-bar',\n                            { 'poll-option-progress-bar-correct': type === 'correct' },\n                            { 'poll-option-progress-bar-incorrect': type === 'incorrect' }\n                        )\n                    }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    type: PropTypes.oneOf(['regular', 'correct', 'incorrect']).isRequired,\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nexport default withTranslation()(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './UserPlaceholder.css';\nimport UserStatus from './UserStatus';\n\nclass UserPlaceholder extends React.Component {\n    render() {\n        const { index, showStatus } = this.props;\n\n        const titleWidth = `${20 + Math.sin(index) * 10}%`;\n        const contentWidth = `${30 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='user-placeholder'>\n                <div className='user-wrapper'>\n                    <div className='user-placeholder-tile' />\n                    <div className='user-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            <div className='dialog-placeholder-title' style={{ width: contentWidth, marginLeft: 8 }} />\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showStatus: PropTypes.bool\n};\n\nUserPlaceholder.defaultProps = {\n    showStatus: true\n};\n\nexport default UserPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../Tile/User';\nimport UserPlaceholder from '../Tile/UserPlaceholder';\nimport { openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResult.css';\n\nclass PollOptionResult extends React.Component {\n    onClick = () => {\n        const { userId } = this.props;\n        if (!userId) return;\n\n        openUser(userId, true);\n\n        setTimeout(() => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateClosePollResults'\n            });\n        }, 0);\n    };\n\n    render() {\n        const { index, userId } = this.props;\n\n        const content = userId ? (\n            <User userId={userId} showStatus={false} />\n        ) : (\n            <UserPlaceholder index={index} showStatus={false} />\n        );\n\n        return (\n            <ListItem button className='user-list-item' onClick={this.onClick}>\n                {content}\n            </ListItem>\n        );\n    }\n}\n\nPollOptionResult.propTypes = {\n    index: PropTypes.number.isRequired,\n    userId: PropTypes.number\n};\n\nexport default PollOptionResult;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport PollOptionResult from './PollOptionResult';\nimport { loadUsersContent } from '../../Utils/File';\nimport { POLL_RESULTS_FIRST_SLICE_LENGTH, POLL_RESULTS_LEAVE_LENGTH, POLL_RESULTS_SLICE_LENGTH } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResults.css';\n\nclass PollOptionResults extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.state = {\n            voters: [],\n            offset: 0,\n            count\n        };\n    }\n\n    async updateVoters(offset, count, loadMore) {\n        const { chatId, messageId, optionId, option } = this.props;\n        const { voters } = this.state;\n        if (count <= 0) return;\n\n        const limit = count - offset;\n        // console.log(`[poll] getPollVoters start option_id=${optionId} offset=${offset} limit=${limit}`);\n        const result = await TdLibController.send({\n            '@type': 'getPollVoters',\n            chat_id: chatId,\n            message_id: messageId,\n            option_id: optionId,\n            offset,\n            limit\n        });\n        // console.log(`[poll] getPollVoters end option_id=${optionId} offset=${offset} limit=${limit}`, result, result.user_ids.map(x => UserStore.get(x)));\n\n        if (this.props.option !== option) {\n            return;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, result.user_ids);\n\n        this.setState(\n            {\n                voters: [...voters, ...result.user_ids]\n            },\n            async () => {\n                if (result.user_ids.length < limit && loadMore) {\n                    const offset2 = offset + result.user_ids.length;\n\n                    this.updateVoters(offset2, count, false);\n                }\n            }\n        );\n    }\n\n    componentDidMount() {\n        const { offset, count } = this.state;\n\n        this.updateVoters(offset, count, true);\n    }\n\n    handleShowMore = () => {\n        const { option } = this.props;\n        const { count } = this.state;\n\n        const newOffset = count;\n        const newCount = Math.min(option.voter_count, count + POLL_RESULTS_SLICE_LENGTH);\n\n        this.setState(\n            {\n                offset: newOffset,\n                count: newCount\n            },\n            () => {\n                this.updateVoters(newOffset, newCount, true);\n            }\n        );\n    };\n\n    handleCollapse = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.setState({\n            voters: this.state.voters.slice(0, count),\n            offset: 0,\n            count\n        });\n    };\n\n    render() {\n        const { option, isQuiz, t } = this.props;\n        const { voters, count } = this.state;\n\n        const { text, voter_count, vote_percentage } = option;\n        if (voter_count === 0) {\n            return null;\n        }\n\n        const results = [];\n        for (let i = 0; i < count; i++) {\n            const userId = i < voters.length ? voters[i] : null;\n            results.push(<PollOptionResult key={`${i}_userId=${userId}`} index={i} userId={userId} />);\n        }\n\n        const voterCount = isQuiz\n            ? voter_count !== 1\n                ? `${voter_count} answers`\n                : `${voter_count} answer`\n            : voter_count !== 1\n            ? `${voter_count} votes`\n            : `${voter_count} vote`;\n\n        let showMoreButton = null;\n        const showMoreCount = voter_count - count;\n        if (showMoreCount > 0) {\n            const showMore = isQuiz\n                ? showMoreCount !== 1\n                    ? `${showMoreCount} answers`\n                    : `${showMoreCount} answer`\n                : showMoreCount !== 1\n                ? `${showMoreCount} votes`\n                : `${showMoreCount} vote`;\n\n            showMoreButton = (\n                <Button\n                    classes={{ root: 'poll-option-results-button' }}\n                    color='primary'\n                    fullWidth\n                    onClick={this.handleShowMore}>\n                    {t('ShowVotesOT').replace('%1$d', showMore)}\n                </Button>\n            );\n        }\n        const showCollapse =\n            count > POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH &&\n            voter_count > POLL_RESULTS_FIRST_SLICE_LENGTH;\n\n        return (\n            <>\n                <div className='poll-option-results-caption'>\n                    <div className='poll-option-results-answer'>{`${text} — ${vote_percentage}%`}</div>\n                    {showCollapse ? (\n                        <a onClick={this.handleCollapse}>{t('PollCollapse')}</a>\n                    ) : (\n                        <div className='poll-option-results-count'>{voterCount}</div>\n                    )}\n                </div>\n                {results}\n                {showMoreButton}\n            </>\n        );\n    }\n}\n\nPollOptionResults.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    optionId: PropTypes.number.isRequired,\n    option: PropTypes.object.isRequired,\n    isQuiz: PropTypes.bool.isRequired\n};\n\nexport default withTranslation()(PollOptionResults);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport PollOptionResults from './PollOptionResults';\nimport PollStore from '../../Stores/PollStore';\nimport './PollResultsDialog.css';\n\nclass PollResultsDialog extends React.Component {\n    componentDidMount() {\n        PollStore.on('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    onClientUpdateClosePollResults = update => {\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClose = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleContextMenu = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        if (!poll) return;\n\n        const { options, type, question } = poll;\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n\n        return (\n            <Dialog\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                transitionDuration={0}\n                open={true}\n                onClick={this.handleClick}\n                onContextMenu={this.handleContextMenu}\n                onClose={this.handleClose}\n                aria-labelledby='poll-results-title'>\n                <DialogTitle id='poll-results-title'>{isQuiz ? t('QuizAnswers') : t('PollResults')}</DialogTitle>\n                <DialogContent classes={{ root: 'poll-results-content' }}>\n                    <div className='poll-results-question'>{question}</div>\n                    {options.map((x, i) => (\n                        <PollOptionResults\n                            key={i}\n                            isQuiz={isQuiz}\n                            chatId={chatId}\n                            messageId={messageId}\n                            optionId={i}\n                            option={x}\n                        />\n                    ))}\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nPollResultsDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(PollResultsDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FireworksComponent from './FireworksControl';\nimport PollOption from './PollOption';\nimport UserTile from '../../Tile/UserTile';\nimport { setPollAnswer } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport TdLibController from './../../../Controllers/TdLibController';\nimport './Poll.css';\nimport PollResultsDialog from '../../Popup/PollResultsDialog';\n\nclass Poll extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.fireworksRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId, poll } = this.props;\n\n        if (poll && poll.type['@type'] === 'pollTypeQuiz') {\n            const { poll: prevPoll } = prevProps;\n            if (prevPoll.type.correct_option_id === -1 && poll.type.correct_option_id !== -1) {\n                const fireworks = this.fireworksRef.current;\n                if (!fireworks) return;\n\n                if (poll.options[poll.type.correct_option_id].is_chosen) {\n                    fireworks.start();\n                } else {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMessageShake',\n                        chatId,\n                        messageId\n                    });\n                }\n            }\n        }\n    }\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 answer';\n\n        return count + ' answers';\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (this.viewResults(poll)) {\n            return;\n        }\n\n        if (!type.allow_multiple_answers) {\n            return;\n        }\n\n        const optionIds = [];\n        poll.options.forEach((x, index) => {\n            if (x.isMultiChoosen) {\n                optionIds.push(index);\n            }\n        });\n\n        if (!optionIds.length) {\n            return;\n        }\n\n        setPollAnswer(chatId, messageId, optionIds);\n    };\n\n    handleVote = index => {\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (type['@type'] === 'pollTypeRegular' && type.allow_multiple_answers) {\n            poll.options[index].isMultiChoosen = !poll.options[index].isMultiChoosen;\n            this.forceUpdate();\n        } else {\n            setPollAnswer(chatId, messageId, [index]);\n        }\n    };\n\n    viewResults(poll) {\n        if (!poll) return false;\n\n        const { options, is_closed, is_anonymous } = poll;\n        if (is_anonymous) {\n            return false;\n        }\n\n        return is_closed || options.some(x => x.is_chosen);\n    }\n\n    getOptionType(index, poll) {\n        const types = ['regular', 'correct', 'incorrect'];\n        const defaultTypeId = 0;\n        const correctTypeId = 1;\n        const incorrectTypeId = 2;\n        if (!poll) return types[defaultTypeId];\n\n        const option = poll.options[index];\n        if (!option) return types[defaultTypeId];\n        if (!option.is_chosen) return types[defaultTypeId];\n\n        const { type } = poll;\n        if (!type) return types[defaultTypeId];\n        if (type['@type'] !== 'pollTypeQuiz') return types[defaultTypeId];\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return types[defaultTypeId];\n\n        return correct_option_id === index ? types[correctTypeId] : types[incorrectTypeId];\n    }\n\n    getOptionIsCorrect(index, poll) {\n        if (!poll) return false;\n\n        const option = poll.options[index];\n        if (!option) return false;\n\n        const { type } = poll;\n        if (!type) return false;\n        if (type['@type'] !== 'pollTypeQuiz') return false;\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return false;\n\n        return correct_option_id === index;\n    }\n\n    handleOpenResults = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { poll } = this.props;\n\n        this.setState({\n            viewResultsPoll: poll\n        });\n    };\n\n    handleCloseResults = () => {\n        this.setState({\n            viewResultsPoll: null\n        });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t, meta } = this.props;\n        const { viewResultsPoll } = this.state;\n        const { question, options, total_voter_count, type, is_closed, is_anonymous, recent_voter_user_ids } = poll;\n\n        let subtitle = t('FinalResults');\n        if (!is_closed) {\n            switch (type['@type']) {\n                case 'pollTypeRegular': {\n                    subtitle = is_anonymous ? t('AnonymousPoll') : t('PublicPoll');\n                    break;\n                }\n                case 'pollTypeQuiz': {\n                    subtitle = is_anonymous ? t('AnonymousQuizPoll') : t('QuizPoll');\n                    break;\n                }\n            }\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const isSelected = !is_closed && options.some(x => x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n        const showViewResults = this.viewResults(poll);\n        const showButton = (type.allow_multiple_answers && !isSelected) || showViewResults;\n        const buttonEnabled = showViewResults || options.some(x => x.isMultiChoosen);\n        let recentVoters = [];\n        if (recent_voter_user_ids) {\n            recentVoters = recent_voter_user_ids.map(id => <UserTile key={id} poll userId={id} />);\n        }\n\n        return (\n            <div className='poll'>\n                {isQuiz && <FireworksComponent ref={this.fireworksRef} />}\n                <div className='poll-question'>\n                    <div className='poll-question-title'>{question}</div>\n                    <div className='poll-question-subtitle'>\n                        <span style={{ marginRight: 6 }}>{subtitle}</span>\n                        {recentVoters}\n                    </div>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            type={this.getOptionType(index, poll)}\n                            isCorrect={this.getOptionIsCorrect(index, poll)}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                        />\n                    ))}\n                </div>\n                {showButton ? (\n                    <Button\n                        fullWidth\n                        color='primary'\n                        classes={{\n                            root: 'poll-button',\n                            textPrimary: 'message-control',\n                            disabled: 'message-control-disabled'\n                        }}\n                        TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                        disabled={!buttonEnabled}\n                        onClick={showViewResults ? this.handleOpenResults : this.handleSubmit}>\n                        {showViewResults ? t('PollViewResults') : t('PollSubmitVotes')}\n                    </Button>\n                ) : (\n                    <div className='poll-total-count'>\n                        {this.getTotalVoterCountString(total_voter_count, t)}\n                        {meta}\n                    </div>\n                )}\n                {Boolean(viewResultsPoll) && (\n                    <PollResultsDialog\n                        chatId={chatId}\n                        messageId={messageId}\n                        poll={viewResultsPoll}\n                        onClose={this.handleCloseResults}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fillRule='evenodd'>\n        <path d='M6,0 L33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,48 C54,51.3137085 51.3137085,54 48,54 L6,54 C2.6862915,54 4.05812251e-16,51.3137085 0,48 L0,6 C-4.05812251e-16,2.6862915 2.6862915,6.08718376e-16 6,0 Z' />\n        <path\n            d='M33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,22 C54,19.790861 52.209139,18 50,18 L40,18 C37.790861,18 36,16.209139 36,14 L36,4 C36,1.790861 34.209139,-3.88578059e-16 32,0 L33.5147186,0 Z'\n            fill='#000000'\n            style={{ mixBlendMode: 'normal' }}\n            opacity='0.15'\n        />\n    </g>,\n    'Document'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { meta } = this.props;\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n                {meta}\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport DocumentIcon from '../../../Assets/Icons/Document';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia, width, height, meta, title, caption } = this.props;\n        if (!document) return null;\n\n        const { minithumbnail, thumbnail, file_name } = document;\n        const file = document.document;\n\n        const style = width && height ? { width, height } : null;\n        const completeIconFunc = thumb =>\n            thumb ? null : (\n                <div className='document-tile-complete-icon'>\n                    <DocumentIcon className='document-tile-icon-fill' viewBox='0 0 54 54' />\n                    <div className='document-tile-file-ext'>{getExtension(file_name)}</div>\n                </div>\n            );\n\n        return (\n            <div className={classNames('document', { 'media-title': title })} style={style}>\n                <DocumentTile\n                    minithumbnail={minithumbnail}\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={completeIconFunc}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} meta={caption ? null : meta} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    width: PropTypes.number,\n    height: PropTypes.number\n};\n\nexport default Document;\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"db524e4eb064795d94a5.worker.js\");\n};","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { loaded } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size, t } = this.props;\n        const { loaded } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_4', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat, t);\n        const src = getSrc(photo ? photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport TdLibController from '../Controllers/TdLibController';\nimport ChatStore from '../Stores/ChatStore';\nimport { isChatMuted } from '../Utils/Chat';\nimport { MUTED_VALUE_MAX, MUTED_VALUE_MIN } from '../Constants';\n\nexport async function getChat(chatId) {\n    const chat = TdLibController.send({\n        '@type': 'getChat',\n        chat_id: chatId\n    });\n    ChatStore.set(chat);\n\n    return chat;\n}\n\nexport function setChatChatList(chatId, chatList) {\n    TdLibController.send({\n        '@type': 'setChatChatList',\n        chat_id: chatId,\n        chat_list: chatList\n    });\n}\n\nexport function toggleChatIsPinned(chatId, isPinned) {\n    TdLibController.send({\n        '@type': 'toggleChatIsPinned',\n        chat_id: chatId,\n        is_pinned: isPinned\n    });\n}\n\nexport function toggleChatIsMarkedAsUnread(chatId, isMarkedAsUnread) {\n    TdLibController.send({\n        '@type': 'toggleChatIsMarkedAsUnread',\n        chat_id: chatId,\n        is_marked_as_unread: isMarkedAsUnread\n    });\n}\n\nexport function toggleChatNotificationSettings(chatId, isMuted) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return;\n\n    const isMutedPrev = isChatMuted(chatId);\n    if (isMutedPrev === isMuted) {\n        return;\n    }\n\n    const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n    const newNotificationSettings = {\n        ...chat.notification_settings,\n        use_default_mute_for: false,\n        mute_for: muteFor\n    };\n\n    TdLibController.send({\n        '@type': 'setChatNotificationSettings',\n        chat_id: chatId,\n        notification_settings: newNotificationSettings\n    });\n}\n\nexport async function getChatCounters(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const promises = [];\n\n    const photoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterPhoto' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(photoCounter);\n\n    const videoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVideo' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(videoCounter);\n\n    const documentCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterDocument' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(documentCounter);\n\n    const audioCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterAudio' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(audioCounter);\n\n    const urlCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterUrl' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(urlCounter);\n\n    const voiceAndVideoNoteCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVoiceNote' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(voiceAndVideoNoteCounter);\n\n    return await Promise.all(promises);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './MoreListItem.css';\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className='list-item' onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className='list-item' onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className='list-item' onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport { copy } from '../../Utils/Text';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div\n                    className='shared-photo'\n                    style={style}\n                    onClick={openMedia}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    <div\n                        className='shared-photo-content'\n                        style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div\n                    className='shared-photo'\n                    style={style}\n                    onClick={openMedia}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            AppStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport { openArchive } from '../../Actions/Client';\nimport './Archive.css';\n\nclass Archive extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { title, theme } = this.props;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.title !== title) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openArchive();\n        }\n    };\n\n    render() {\n        const { t, title } = this.props;\n\n        return (\n            <div\n                ref={this.dialog}\n                className='dialog'\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}>\n                <div className='dialog-wrapper'>\n                    <div className='chat-tile'>\n                        <div className='archive-tile-background tile-photo'>\n                            <div className='tile-saved-messages'>\n                                <ArchiveIcon fontSize='default' />\n                            </div>\n                        </div>\n                    </div>\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>\n                                <span className='dialog-title-span'>{t('ArchivedChats')}</span>\n                            </div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>{title}</div>\n                            {/*{unread_count > 0 && (*/}\n                            {/*    <div className={classNames('dialog-badge-muted', 'dialog-badge')}>*/}\n                            {/*        <span className='dialog-badge-text'>{unread_count}</span>*/}\n                            {/*    </div>*/}\n                            {/*)}*/}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nArchive.propTypes = {\n    title: PropTypes.string\n};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatIsPinned', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_pinned, unread_count } = chat;\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {is_pinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canSetChatChatList,\n    isChatArchived,\n    isChatMuted,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    setChatChatList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const chat = ChatStore.get(chatId);\n            const { is_pinned } = chat;\n            const canTogglePin = (await this.canPinChats(chatId)) || is_pinned;\n            const canToggleArchive = canSetChatChatList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: isChatArchived(chatId) ? { '@type': 'chatListArchive' } : { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && chat.is_pinned ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const { is_pinned } = chat;\n\n        if (!is_pinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, !is_pinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canSetChatChatList(chatId)) return;\n\n        setChatChatList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        if (hidden) return null;\n\n        const chat = ChatStore.get(chatId);\n        const { is_pinned } = chat;\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {is_pinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={className}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Archive from '../Tile/Archive';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport { scrollTop } from '../../Utils/DOM';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (isAuthorizationReady(authorizationState)) {\n            await FileStore.initDB(() => this.onLoadNext(true));\n        }\n    };\n\n    saveCache = () => {\n        const { onSaveCache } = this.props;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatOrder = update => {\n        const { type } = this.props;\n        const { chats } = this.state;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id, order } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat || !chat.chat_list || chat.chat_list['@type'] !== type) {\n            return;\n        }\n\n        const newChatIds = [];\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            let chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                AppStore.changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (chats.length > 0) {\n                const existingChat = chats.find(x => x === chat_id);\n                if (!existingChat) {\n                    // const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\n                    // if (orderCompare(minChatOrder, chat.order) === 1) {\n                    //     console.log('[dl] onUpdate return 3', type);\n                    //     return;\n                    // }\n                    newChatIds.push(chat_id);\n                }\n            } else {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        // console.log('[dl] onUpdate reorderChats', type, chatIds, newChatIds);\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[update] GETCHATS start');\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': type },\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[update] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady' });\n            }\n        });\n        // TdLibController.send({\n        //     '@type': 'getChats',\n        //     offset_chat_id: offsetChatId,\n        //     offset_order: offsetOrder,\n        //     limit: CHAT_SLICE_LIMIT + 100\n        // });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { type, open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (type === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n            // <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n            //     {showArchive && offset === 0 && <Archive title={archiveTitle} />}\n            //     {dialogs}\n            // </div>\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport class KeyboardHandler {\n    constructor(onKeyDown) {\n        this.onKeyDown = onKeyDown;\n    }\n}\n\nclass KeyboardManager {\n    constructor() {\n        this.handlers = [];\n\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        const { handlers } = this;\n        if (!handlers.length) return;\n\n        const handler = handlers[handlers.length - 1];\n        if (handler) {\n            // event.preventDefault();\n            // event.stopPropagation();\n\n            const { onKeyDown } = handler;\n            if (onKeyDown) {\n                onKeyDown(event);\n            }\n        }\n    };\n\n    add(handler) {\n        // console.log('[sm] add', page);\n        this.handlers.push(handler);\n    }\n\n    remove(handler) {\n        // console.log('[sm] remove', page);\n        const index = this.handlers.indexOf(handler);\n        if (index === -1) return;\n\n        this.handlers.splice(index, 1);\n    }\n}\n\nconst manager = new KeyboardManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                event.stopPropagation();\n                event.target.blur();\n                onClose();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                <SearchIcon className='search-input-icon' />\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        event.target.blur();\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) onClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Chat from '../../Tile/Chat';\nimport SidebarPage from '../SidebarPage';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        // console.log('[un] render', hasError, usernameLabel);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            showTitle={false}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={null}\n                        />\n                    </div>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            You can choose a username on Telegram. If you do, other people will be able to find you by\n                            this username and contact you without knowing your phone number. You can use a-z, 0-9 and\n                            underscores. Minimum length is 5 characters.\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div\n                    className='shared-photo-content'\n                    style={{\n                        backgroundImage: `url(${thumbSrc || miniSrc})`,\n                        backgroundSize: 'cover',\n                        backgroundPosition: '50%'\n                    }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                {isSelected && (\n                    <>\n                        <div className='wallpaper-selected' />\n                        <div className='wallpaper-selected-inner' />\n                    </>\n                )}\n                {document && document.document && <FileProgress file={document.document} cancelButton={false} />}\n            </div>\n        );\n    }\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    {wallpapers.map(x => (\n                        <Wallpaper\n                            key={x.id}\n                            wallpaper={x}\n                            isSelected={x.id === selectedId}\n                            onClick={this.handleClick}\n                        />\n                    ))}\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            autoFocus={false}\n                            className='settings-list-item'\n                            button\n                            onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem\n                            autoFocus={false}\n                            className='settings-list-item'\n                            button\n                            onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n            '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {users.user_ids.map(x => (\n                                    <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock} />\n                                ))}\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveChatsInternal = debounce(this.saveChatsInternal, 2000);\n    }\n\n    reset = () => {\n        this.chatIds = [];\n        this.cache = null;\n        this.contacts = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        CacheManager.remove('contacts');\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async loadCache() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        const [cache, files] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n        // console.log('[cm] getChats result', this.cache);\n        if (!this.cache) return null;\n\n        this.parseCache(this.cache);\n\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        console.log('[cache] parseCache', cache);\n\n        (files || [])\n            .filter(x => Boolean(x))\n            .forEach(({ id, url }) => {\n                FileStore.setDataUrl(id, url);\n            });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).forEach(x => {\n            delete x.OutputTypingManager;\n\n            ChatStore.set(x);\n            if (x.photo) {\n                if (x.photo.small) FileStore.set(x.photo.small);\n                if (x.photo.big) FileStore.set(x.photo.big);\n            }\n            if (x.chat_list) {\n                ChatStore.updateChatChatList(x.id, x.chat_list);\n            }\n            if (x.last_message) {\n                MessageStore.set(x.last_message);\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n        chats.concat(archiveChats).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    saveChats(chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.saveChatsInternal();\n    }\n\n    async saveChatsInternal() {\n        // console.log('[cm] saveChatsInternal', this.chatIds, this.archiveChatIds);\n        const cache = this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files\n                .filter(x => Boolean(x))\n                .forEach(({ id, url }) => {\n                    FileStore.deleteDataUrl(id);\n                });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content'>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ChatStore from '../Stores/ChatStore';\nimport { orderCompare } from './Common';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                if (chat.order !== '0') chats.push(chat);\n                chatsOrder.push({ order: chat.order, id: chat.id, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(b.order, a.order));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings } = this.state;\n        if (!openSearch && !openContacts && !openSettings) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\nimport SidebarDialog from '../Popup/SidebarDialog';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n\n        ChatStore.on('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n\n        ChatStore.off('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch } = this.state;\n        if (openSettings || openContacts || openSearch) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.loadCache()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        CacheStore.saveChats(mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { chat_id } = update;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archive = ChatStore.chatList.get('chatListArchive');\n        if (archive && archive.has(chat_id)) {\n            this.setState({ archiveTitle: getArchiveTitle() });\n        }\n    };\n\n    onUpdateChatChatList = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <DialogsList\n                                type='chatListMain'\n                                ref={this.dialogListRef}\n                                cacheItems={mainCacheItems}\n                                items={mainItems}\n                                showArchive={showArchive}\n                                archiveTitle={archiveTitle}\n                                open={true}\n                                onSaveCache={this.handleSaveCache}\n                            />\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (AppStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => AppStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            const key = 'disallow_multiple_answers';\n            const message = t('PollQuizOneRightAnswer');\n            const action = null;\n\n            this.handleScheduledAction(key, message, action);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from './../../Utils/Url';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                };\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                };\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                          '@type': 'inputMessagePhoto',\n                          photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                          width,\n                          height,\n                          caption\n                      }\n                    : {\n                          '@type': 'inputMessageDocument',\n                          document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                          thumbnail: null,\n                          caption\n                      };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media = editMedia ? getMedia({ content: editMedia }) : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    {isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    {!isEditing && isPhoto && (\n                        <RadioGroup\n                            value={sendAsPhoto}\n                            onChange={this.handleSendAsPhoto}\n                            style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel\n                                value={true}\n                                control={<Radio color='primary' />}\n                                label={t('SendAsPhoto')}\n                            />\n                            <FormControlLabel\n                                value={false}\n                                control={<Radio color='primary' />}\n                                label={t('SendAsFile')}\n                            />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { PHOTO_SIZE } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\nimport { editMessage, replyMessage } from '../../Actions/Client';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n    }\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = () => {\n        const { chatId, editMessageId } = this.state;\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        editMessage(chatId, 0);\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile ? await getMediaPhotoFromFile(file) : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        };\n    }\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [newFile, ...rest] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [newFile, ...rest] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        // console.log('[k] handleKeyDown', altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey);\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleSubmit();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 27: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleCancel();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // arrow up\n            case 38: {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n\n        return (\n            <div className='inputbox-background'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className='inputbox-send-button'\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {editMessageId ? <DoneIcon /> : <SendIcon />}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : null;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : null;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        {t('Undo')}\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle,\n    isChannelChat,\n    isPrivateChat,\n    isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            AppStore.changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                {!isChannelChat(chatId) &&\n                                    (count === 1\n                                        ? 'This will delete it for everyone in this chat'\n                                        : 'This will delete them for everyone in this chat')}\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                checked={revoke}\n                                                onChange={this.handleRevokeChange}\n                                                color='primary'\n                                            />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all'\n                                        }\n                                    />\n                                )}\n                            </>\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message),\n            mimeType: this.getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, value } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) return;\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = message => {\n        const { chat_id, id } = message;\n\n        const { src: prevSrc } = this.state;\n\n        const src = this.getMediaSrc(message);\n        const mimeType = this.getMediaMimeType(message);\n        const playing = Boolean(src);\n        const { playlist } = PlayerStore;\n\n        this.setState(\n            {\n                message,\n                playlist,\n                playing,\n                src,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                }\n                player.currentTime = this.startTime;\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        chatId: chat_id,\n                        messageId: id\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(PlayerStore.message);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaMimeType = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    return audio.mime_type;\n                }\n\n                if (voice_note) {\n                    return voice_note.mime_type;\n                }\n\n                if (video_note) {\n                    return 'video/mp4';\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        return web_page.audio.mime_type;\n                    }\n\n                    if (web_page.voice_note) {\n                        return web_page.voice_note.mime_type;\n                    }\n\n                    if (web_page.video_note) {\n                        return 'video/mp4';\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src, mimeType } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        const source = src ? <source src={src} type={mimeType} /> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}>\n                    {source}\n                </video>\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport {\n    canMessageBeClosed,\n    canMessageBeDeleted,\n    canMessageBeEdited,\n    canMessageBeForwarded,\n    canMessageBeUnvoted,\n    isMessagePinned\n} from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport {\n    clearSelection,\n    deleteMessages,\n    editMessage,\n    forwardMessages,\n    replyMessage,\n    selectMessage\n} from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose } = this.props;\n        const { copyLink } = this.state;\n\n        onClose(event);\n\n        if (!copyLink) return;\n        copy(copyLink);\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = async event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { audio } = content;\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { id: file_id } = file;\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id,\n            priority: 1,\n            offset: 10 * 1024,\n            limit: 1024,\n            synchronous: true\n        });\n\n        const blob = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id,\n            offset: 10 * 1024,\n            count: 1024\n        });\n\n        console.log('[file] result', result, blob);\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, canCopyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId);\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>{t('Download')}</MenuItem>*/}\n                        {canCopyLink && <MenuItem onClick={this.handleCopyLink}>{t('CopyLink')}</MenuItem>}\n                        {canBeReplied && <MenuItem onClick={this.handleReply}>{t('Reply')}</MenuItem>}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>{isPinned ? t('Unpin') : t('Pin')}</MenuItem>\n                        )}\n                        {canBeSelected && <MenuItem onClick={this.handleSelect}>{t('Select')}</MenuItem>}\n                        {canBeForwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {canBeEdited && <MenuItem onClick={this.handleEdit}>{t('Edit')}</MenuItem>}\n                        {canBeDeleted && <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>}\n                        {canBeUnvoted && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                        {canBeClosed && <MenuItem onClick={this.handleConfirmStopPoll}>{t('StopPoll')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    canCopyLink: PropTypes.bool\n};\n\nexport default withTranslation()(MessageMenu);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { description, instant_view_version, site_name, title } = web_page;\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply, replyMessage, forwardMessages } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            canCopyLink: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const canCopyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                canCopyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const { emojiMatches, selected, highlighted, shook, canCopyLink, contextMenu, left, top } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'message-wrapper-shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    canCopyLink={canCopyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker } = this.state;\n\n        return stickerSet !== nextState.stickerSet || sticker !== nextState.sticker;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className='sticker-set-dialog'\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <Typography variant='h6' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className='sticker-set-dialog-share-button' />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.photo);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.object\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getSrc, getViewerFile, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Caption from '../InstantView/Blocks/Caption';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport SafeLink from '../Additional/SafeLink';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            let [width, height, file, mimeType] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnailWidth,\n            thumbnailHeight,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType} /> : null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            controls\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPlay'\n                                });\n                            }}\n                            onCanPlay={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    player.volume = PlayerStore.volume;\n                                }\n                            }}\n                            onPause={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPause'\n                                });\n                            }}\n                            onEnded={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerEnded'\n                                });\n                            }}\n                            onVolumeChange={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    TdLibController.clientUpdate({\n                                        '@type': 'clientUpdateMediaVolume',\n                                        volume: player.volume\n                                    });\n                                }\n                            }}>\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}>\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport {\n    cancelPreloadIVMediaViewerContent,\n    getViewerFile,\n    preloadIVMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState({\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(instantView.url)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', instantView.url, instantView.url === prevProps.instantView.url);\n\n        const hash = new URL(instantView.url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.instantView.url !== instantView.url) {\n                if (instantView.url.indexOf('#') === instantView.url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { media } = this.state;\n\n            if (media) {\n                setInstantViewViewerContent(null);\n                return;\n            }\n\n            this.handleClose();\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { classes, instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getAnimationData, getMediaFile, getMediaPreviewFile, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\n// const Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file, mimeType] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { src } = this.state;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const { file } = this.state;\n        const animationData = await getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file, mimeType] = getMediaFile(chatId, messageId, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file, mimeType] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        // const src = getSrc(file);\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType} /> : null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}>\n                        {source}\n                    </video>\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}>\n                        {source}\n                    </video>\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = null;\n            // content = (\n            //     <Lottie\n            //         ref={this.lottieRef}\n            //         speed={speed}\n            //         options={defaultOptions}\n            //         height='auto'\n            //         width={400}\n            //         isStopped={false}\n            //         isPaused={false}\n            //     />\n            // );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}